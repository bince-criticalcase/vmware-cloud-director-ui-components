var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionDisplayConfig.html",[0,0.177,1,2.319]],["body/interfaces/ActionDisplayConfig.html",[0,0.265,1,3.474,2,1.126,3,0.076,4,0.057,5,0.057,6,3.915,7,3.915,8,0.32,9,2.24,10,4.398,11,6.026,12,0.181,13,0.513,14,0.665,15,4.587,16,7.14,17,3.717,18,0.311,19,0.008,20,1.982,21,5.17,22,2.776,23,7.14,24,6.788,25,1.977,26,0.125,27,2.654,28,3.877,29,4.205,30,2.146,31,3.326,32,4.593,33,4.58,34,1.862,35,1.469,36,1.583,37,5.517,38,4.006,39,3.644,40,3.091,41,3.326,42,3.784,43,4.174,44,5.517,45,2.737,46,4.593,47,1.96,48,4.205,49,4.205,50,0.809,51,4.205,52,1.107,53,3.474,54,2.648,55,3.122,56,4.007,57,1.968,58,2.166,59,0.617,60,1.52,61,1.786,62,1.914,63,2.642,64,2.446,65,2.997,66,1.825,67,3.551,68,4.593,69,3.366,70,4.593,71,1.703,72,5.517,73,0.517,74,2.416,75,4.96,76,4.205,77,2.111,78,0.165,79,3.326,80,2.565,81,1.38,82,3.491,83,1.914,84,2.776,85,0.725,86,3.756,87,2.01,88,2.635,89,6.026,90,2.348,91,1.746,92,4.593,93,2.284,94,4.593,95,4.593,96,1.339,97,3.915,98,3.877,99,1.017,100,3.854,101,1.38,102,2.111,103,4.205,104,4.593,105,3.326,106,4.593,107,4.205,108,1.634,109,0.741,110,4.593,111,1.827,112,3.053,113,2.058,114,1.352,115,0.969,116,4.593,117,3.326,118,1.707,119,6.32,120,4.417,121,3.684,122,4.593,123,4.593,124,3.181,125,4.593,126,4.205,127,2.058,128,4.593,129,2.224,130,3.326,131,4.593,132,6.026,133,1.532,134,3.326,135,4.593,136,2.058,137,3.474,138,1.599,139,4.205,140,0.611,141,2.111,142,6.026,143,0.662,144,4.205,145,4.364,146,3.053,147,4.205,148,1.707,149,2.737,150,4.593,151,4.58,152,1.599,153,4.364,154,2.453,155,2.416,156,2.488,157,4.205,158,1.081,159,0.004,160,0.006,161,0.004]],["title/interfaces/ActionItem.html",[0,0.177,69,2.247]],["body/interfaces/ActionItem.html",[0,0.244,1,2.342,2,0.996,3,0.067,4,0.051,5,0.051,6,3.463,7,3.463,8,0.283,9,1.51,10,4.367,11,4.063,12,0.16,13,0.472,14,0.781,15,4.234,16,4.063,18,0.326,19,0.008,20,1.913,21,4.019,22,2.158,23,5.551,24,5.789,25,1.751,26,0.121,27,2.526,28,4.412,29,3.719,30,2.207,31,2.942,32,4.063,33,4.219,34,1.806,35,1.299,36,1.488,37,5.082,38,3.69,39,3.681,40,3.123,41,2.942,42,3.86,43,3.845,44,5.082,45,2.42,46,4.063,47,1.734,48,3.719,49,3.719,50,0.746,51,3.719,52,1.381,53,3.917,54,2.342,55,3.111,56,4.479,57,2.065,58,1.916,59,0.546,60,1.659,61,2.158,62,2.313,63,2.701,64,2.587,65,3.379,66,1.992,67,3.905,68,5.551,69,3.973,70,5.551,71,1.92,72,6.221,73,0.565,74,2.92,75,5.11,76,6.221,77,2.551,78,0.202,79,4.019,80,3.1,81,1.668,82,4.219,83,2.313,84,2.975,85,0.641,86,3.531,87,1.852,88,2.427,89,5.551,90,2.077,91,1.544,92,4.063,93,2.02,94,6.795,95,4.063,96,1.406,97,4.731,98,4.412,99,1.229,100,4.346,101,1.668,102,2.551,103,5.082,104,5.551,105,4.019,106,5.551,107,5.082,108,1.975,109,0.895,110,5.551,111,2.208,112,3.69,113,2.488,114,1.634,115,1.025,116,5.551,117,4.019,118,2.063,119,6.616,120,4.376,121,4.452,122,5.551,123,6.795,124,3.845,125,5.551,126,6.221,127,2.488,128,5.551,129,2.687,130,4.019,131,6.795,132,7.344,133,1.852,134,4.019,135,5.551,136,1.821,137,3.2,138,1.415,139,3.719,140,0.563,141,1.867,142,5.551,143,0.585,144,3.719,145,4.019,146,2.7,147,3.719,148,1.51,149,2.42,150,4.063,151,4.219,152,1.415,153,4.019,154,2.259,155,2.137,156,2.201,157,3.719,158,0.956,159,0.004,160,0.005,161,0.004]],["title/classes/ActionSearchProvider.html",[78,0.11,162,4.024]],["body/classes/ActionSearchProvider.html",[3,0.064,4,0.048,5,0.048,10,4.322,12,0.153,13,0.458,14,0.715,18,0.323,19,0.008,26,0.089,36,1.266,47,2.295,50,0.829,52,0.713,54,3.1,55,2.699,58,3.415,59,0.997,60,1.506,63,2.132,67,3.07,69,4.555,73,0.536,76,4.924,78,0.107,96,1.232,98,3.1,99,0.859,101,2.003,111,2.139,113,2.41,115,0.96,133,1.794,143,1.043,158,1.266,159,0.004,160,0.005,161,0.004,162,5.378,163,1.074,164,7.496,165,3.254,166,8.188,167,3.308,168,0.988,169,6.329,170,1.373,171,4.103,172,1.685,173,3.807,174,6.965,175,6.965,176,6.965,177,6.965,178,6.965,179,2.829,180,4.924,181,0.757,182,6.068,183,6.068,184,6.068,185,7.52,186,8.541,187,7.52,188,4.95,189,8.171,190,2.295,191,2.41,192,0.775,193,4.378,194,3.063,195,0.933,196,4.378,197,1.442,198,0.758,199,6.068,200,0.774,201,4.378,202,2.914,203,2.604,204,0.416,205,8.779,206,5.32,207,7.52,208,2.914,209,4.378,210,3.004,211,4.378,212,6.965,213,4.378,214,4.378,215,4.378,216,1.697,217,2.987,218,4.378,219,4.378,220,4.378,221,6.068,222,4.378,223,3.308,224,0.982,225,4.469,226,6.068,227,4.378,228,6.068,229,4.378,230,6.068,231,4.378,232,4.378,233,1.459,234,2.271,235,7.52,236,4.088,237,4.924,238,6.068,239,4.378,240,5.651,241,4.378,242,6.068,243,2.472,244,3.575,245,2.295,246,3.44,247,1.03,248,4.378,249,6.068,250,3.317,251,5.378,252,4.378,253,2.579,254,4.378,255,4.378,256,4.378,257,4.378,258,3.894,259,0.416,260,1.351,261,3.553,262,2.688,263,1.443,264,3.308,265,4.378,266,0.655,267,3.881,268,3.881,269,2.393,270,2.393,271,7.897,272,1.922,273,4.378,274,4.378,275,1.351,276,4.378,277,6.965,278,6.068,279,6.068,280,0.566,281,0.728,282,3.553,283,4.378,284,4.378,285,2.949,286,2.189,287,4.378,288,4.378,289,4.378,290,4.378,291,4.378,292,3.553,293,4.378,294,4.378,295,4.378,296,4.378,297,6.068,298,4.378,299,6.068,300,4.378,301,4.378,302,4.378,303,4.378,304,4.378,305,4.378,306,4.378,307,4.378,308,4.378,309,4.378,310,4.378,311,4.378,312,4.378]],["title/classes/ActivityPromiseResolver.html",[78,0.11,313,2.913]],["body/classes/ActivityPromiseResolver.html",[0,0.271,3,0.079,4,0.06,5,0.06,8,0.478,12,0.188,14,0.575,18,0.309,19,0.008,26,0.113,34,1.484,50,0.83,57,2.018,58,4.011,60,1.078,66,1.966,73,0.553,78,0.188,82,5.207,85,1.184,136,3.07,159,0.007,160,0.006,161,0.004,163,1.321,181,0.87,195,0.697,197,1.159,198,0.609,224,0.772,233,1.294,234,2.469,258,3.455,280,0.618,286,2.515,313,5.246,314,4.961,315,4.961,316,4.368,317,5.656,318,3.81,319,5.656,320,6.729,321,3.305,322,3.81,323,4.695,324,4.047,325,4.955,326,2.769,327,2.991,328,5.704,329,5.84,330,6.272,331,6.272,332,6.971,333,5.384,334,6.144,335,5.384,336,3.812,337,5.507,338,2.768,339,6.176,340,5.207,341,2.701,342,5.895,343,6.633,344,3.092,345,6.871,346,3.247,347,5.507,348,6.871,349,6.633,350,5.656,351,5.384,352,5.507,353,5.507,354,5.494,355,6.272,356,6.272,357,5.266,358,1.877,359,4.368,360,4.368,361,1.696,362,4.368,363,3.712,364,0.993,365,5.656,366,5.656,367,3.827,368,4.368]],["title/classes/ActivityReporter.html",[78,0.11,369,2.247]],["body/classes/ActivityReporter.html",[3,0.076,4,0.058,5,0.058,8,0.47,12,0.182,14,0.709,18,0.315,19,0.008,26,0.076,34,1.718,39,3.875,50,0.905,57,2.202,58,3.968,59,1.023,62,2.519,64,1.678,65,3.693,73,0.556,78,0.127,85,0.954,108,2.151,111,3.03,129,2.926,136,2.709,159,0.004,160,0.006,161,0.004,163,1.278,181,0.851,188,6.388,190,3.43,192,0.922,195,0.876,197,1.494,198,0.751,224,1.018,234,2.531,247,1.158,258,4.377,259,0.288,266,0.959,275,1.607,280,0.535,285,5.124,313,5.621,314,5.702,315,5.702,320,5.737,321,2.981,324,4.147,334,5.985,338,2.542,339,5.153,340,3.508,341,2.018,342,5.18,352,4.594,353,3.508,358,1.857,369,3.376,370,5.207,371,6.821,372,6.821,373,2.643,374,2.151,375,6.494,376,4.594,377,2.58,378,3.18,379,6.821,380,6.821,381,5.534,382,5.534,383,5.534,384,5.534,385,5.534,386,6.549,387,4.615,388,5.207,389,2.851,390,2.247,391,8.379,392,1.975,393,6.821,394,6.045,395,5.534,396,5.534,397,5.207,398,6.975,399,5.534,400,6.549,401,5.534,402,5.207,403,5.534,404,5.207,405,5.534,406,5.534,407,5.207,408,3.693,409,5.955,410,4.848,411,5.153,412,5.534,413,5.207,414,5.207,415,4.615,416,7.606,417,7.606,418,6.821,419,6.821,420,6.821,421,6.821,422,6.821,423,5.207,424,6.742,425,5.207,426,5.207,427,5.207,428,5.207,429,5.207,430,5.207]],["title/interfaces/ActivityResponse.html",[0,0.177,357,3.43]],["body/interfaces/ActivityResponse.html",[0,0.284,2,1.255,3,0.084,4,0.064,5,0.064,8,0.357,12,0.202,13,0.55,14,0.692,18,0.303,19,0.008,26,0.117,34,1.229,50,0.868,57,2.111,58,3.916,60,1.157,66,1.753,73,0.561,78,0.177,82,4.911,85,1.21,136,2.896,159,0.007,160,0.006,161,0.005,234,2.202,258,3.706,280,0.611,286,2.084,313,4.679,314,3.706,315,3.706,316,4.686,317,4.686,318,3.157,319,4.686,320,6.758,321,3.314,322,3.157,323,3.89,324,3.609,325,4.105,326,2.294,327,2.478,328,5.382,329,5.508,330,5.916,331,4.686,334,5.952,336,3.399,337,4.911,338,2.759,339,5.508,340,4.911,342,5.921,343,5.916,344,2.758,345,6.809,346,2.896,347,4.911,348,6.809,349,5.916,350,4.686,352,5.382,353,5.382,354,5.182,355,5.916,356,5.916,357,6.036,358,2.045,359,5.916,360,4.686,361,1.733,362,4.686,363,3.836,364,1.345,365,5.916,366,5.916,367,4.105,368,4.686,431,5.776]],["title/classes/AngularLocatorDriver.html",[78,0.11,432,3.43]],["body/classes/AngularLocatorDriver.html",[3,0.069,4,0.052,5,0.052,8,0.291,12,0.165,14,0.689,18,0.304,19,0.008,22,2.196,26,0.093,35,1.807,45,2.483,59,0.922,73,0.579,77,2.596,78,0.155,81,1.697,96,0.733,109,0.672,115,0.814,136,1.868,140,0.422,158,0.981,159,0.004,160,0.005,161,0.004,163,1.154,168,0.765,170,1.635,172,1.372,181,0.902,192,0.832,195,0.854,197,1.42,198,0.73,200,0.771,204,0.322,224,0.924,233,1.131,236,4.293,245,2.41,247,1.082,259,0.462,266,0.837,275,1.451,280,0.61,281,1.42,341,1.822,344,1.779,361,1.276,364,1.176,367,5.757,432,6.652,433,4.171,434,7.049,435,2.752,436,2.328,437,3.612,438,2.354,439,5.138,440,5.648,441,1.596,442,4.438,443,6.373,444,4.869,445,5.171,446,5.171,447,4.973,448,4.703,449,7.036,450,6.407,451,4.577,452,4.703,453,5.648,454,4.703,455,5.171,456,4.09,457,6.407,458,3.595,459,1.925,460,4.53,461,1.105,462,4.814,463,1.638,464,3.63,465,3.816,466,3.138,467,4.168,468,3.018,469,4.259,470,4.293,471,4.703,472,4.293,473,4.703,474,4.293,475,4.168,476,4.703,477,0.434,478,3.612,479,2.57,480,2.77,481,2.57,482,3.553,483,2.483,484,2.666,485,3.06,486,5.455,487,5.648,488,6.407,489,4.168,490,5.648,491,5.171,492,5.648,493,6.407,494,6.868,495,4.168,496,4.168,497,4.168,498,4.168,499,4.168,500,5.648,501,4.168,502,4.168,503,4.168,504,4.168,505,4.168,506,2.483,507,3.343,508,1.62,509,3.018,510,3.816,511,4.168,512,2.073,513,4.168,514,4.168,515,5.648,516,4.168,517,2.193,518,4.168,519,4.168,520,4.168,521,1.086,522,3.612,523,2.382,524,4.168,525,4.168,526,4.814,527,4.168,528,2.258,529,2.403,530,4.168,531,4.168,532,4.236,533,4.168,534,4.168,535,6.407,536,4.168,537,4.168,538,2.403,539,3.816,540,4.168,541,4.168,542,5.648,543,3.816,544,1.822,545,3.343,546,1.779,547,1.62,548,4.168,549,4.168,550,3.912,551,2.131,552,4.168,553,4.168,554,6.407,555,0.981,556,1.306,557,2.193,558,4.168]],["title/classes/AngularWidgetObjectFinder.html",[78,0.11,482,3.43]],["body/classes/AngularWidgetObjectFinder.html",[3,0.081,4,0.062,5,0.062,8,0.44,12,0.195,13,0.537,14,0.588,18,0.325,19,0.008,26,0.081,59,0.848,73,0.486,78,0.136,85,1.158,87,2.106,91,1.876,111,1.963,159,0.005,160,0.006,161,0.005,163,1.366,165,2.853,168,0.906,172,1.39,181,0.889,192,1.39,195,0.856,197,1.306,198,0.622,204,0.382,224,0.788,245,2.694,259,0.484,266,0.769,280,0.369,281,1.184,327,3.056,341,2.761,358,1.235,361,1.714,392,2.062,432,4.207,433,4.203,434,7.102,435,2.855,437,4.038,438,3.233,439,5.583,441,1.784,449,6.255,451,4.333,459,2.152,464,3.766,466,3.316,468,3.574,469,4.878,477,0.514,478,5.044,479,3.044,480,3.281,481,3.044,482,5.382,484,3.157,485,3.42,491,4.519,521,2.101,522,4.962,532,3.044,543,5.78,544,2.761,545,5.063,546,3.132,550,4.373,559,4.519,560,4.373,561,5.291,562,7.124,563,7.124,564,7.855,565,5.569,566,2.761,567,4.799,568,4.799,569,4.799,570,2.511,571,4.799,572,3.64,573,4.799,574,2.769,575,5.569,576,5.382,577,4.936,578,5.71,579,5.569,580,6.962,581,6.314,582,5.382,583,3.228,584,3.574,585,3.751,586,1.876,587,3.372,588,3.751,589,5.569,590,5.569,591,3.751,592,3.419,593,3.751,594,2.158,595,3.281,596,3.158,597,4.936,598,5.569,599,2.389,600,5.569,601,4.936,602,5.569]],["title/components/BannerActivityReporterComponent.html",[204,0.311,603,1.463]],["body/components/BannerActivityReporterComponent.html",[3,0.062,4,0.047,5,0.047,8,0.425,12,0.15,13,0.45,14,0.7,18,0.318,19,0.008,21,5.204,26,0.062,30,2.16,34,1.27,39,2.865,57,1.99,58,3.751,59,1.082,60,0.856,63,1.211,65,2.63,72,4.841,73,0.567,78,0.104,85,1.04,96,0.666,99,0.838,101,2.085,108,2.72,109,0.853,111,2.423,113,1.697,133,2.2,136,1.697,140,0.536,143,0.878,159,0.004,160,0.005,161,0.004,168,0.971,172,0.756,181,0.744,188,5.764,190,3.067,192,1.056,194,3.303,195,0.918,197,1.468,198,0.784,200,0.551,204,0.471,208,1.656,217,3.221,224,1.006,234,1.802,247,1.013,258,2.742,259,0.433,260,1.841,263,1.408,272,2.073,313,4.775,314,5.717,321,3.074,324,2.953,334,6.086,338,2.764,340,2.878,341,1.656,342,4.412,352,4.019,353,2.878,358,1.735,364,1.373,369,4.269,374,2.468,375,4.507,381,4.841,382,4.841,383,4.841,384,6.037,385,6.037,386,6.753,390,2.452,395,5.578,396,3.467,398,5.578,399,3.467,400,4.841,401,3.467,403,3.467,405,3.467,406,5.578,408,2.63,409,4.241,410,6.209,411,3.228,412,5.578,441,1.07,461,1.639,463,1.171,477,0.395,603,2.398,604,1.494,605,1.263,606,1.697,607,7.895,608,3.787,609,2.846,610,5.288,611,1.656,612,1.693,613,1.802,614,5.288,615,4.05,616,7.441,617,7.441,618,3.479,619,1.966,620,7.828,621,3.787,622,5.966,623,3.875,624,5.966,625,4.273,626,7.441,627,4.273,628,4.273,629,4.273,630,4.273,631,4.273,632,5.288,633,1.802,634,2.865,635,3.787,636,3.787,637,3.787,638,3.787,639,3.787,640,3.787,641,4.273,642,4.273,643,3.787,644,3.228,645,4.273,646,3.787,647,6.595,648,7.441,649,6.595,650,2.256,651,1.377,652,1.435,653,1.408,654,3.372,655,1.936,656,1.439,657,1.936,658,1.936,659,1.542,660,1.833,661,1.936,662,1.697,663,1.936,664,1.211,665,1.936,666,1.616,667,2.109,668,1.697,669,3.372,670,1.578,671,1.697,672,1.697,673,1.048,674,1.578,675,1.697,676,1.936,677,1.74,678,1.936,679,1.883,680,1.697,681,2.109,682,1.936,683,1.616,684,3.372,685,1.656,686,2.8,687,1.656,688,1.656,689,1.656,690,2.704,691,1.616,692,1.786,693,1.936,694,1.578,695,1.936,696,1.833,697,1.377,698,1.408,699,1.291,700,1.408,701,1.936,702,1.697,703,1.936,704,1.74,705,1.263,706,1.936,707,1.616,708,1.833,709,1.936]],["title/classes/BannerActivityReporterWidgetObject.html",[78,0.11,710,4.024]],["body/classes/BannerActivityReporterWidgetObject.html",[3,0.072,4,0.054,5,0.054,8,0.508,12,0.172,13,0.638,14,0.724,17,3.587,18,0.328,19,0.008,25,1.813,26,0.072,34,1.046,35,1.392,36,1.025,57,1.422,59,0.939,66,1.777,71,1.23,73,0.586,78,0.12,81,1.968,85,1.103,96,0.766,109,0.702,138,2.434,140,0.59,143,1.12,148,2.162,156,2.358,159,0.004,160,0.007,161,0.004,163,1.205,165,2.914,168,1.068,181,0.819,191,2.606,195,0.926,197,1.458,198,0.767,200,0.836,204,0.563,217,3.565,224,1.002,245,1.858,247,1.255,259,0.363,280,0.545,326,3.133,338,2.594,341,2.864,346,1.951,361,0.984,364,0.906,390,2.435,410,5.253,435,2.382,441,1.23,451,4.601,458,1.951,459,2.808,461,1.281,463,1.817,464,3.666,517,2.29,521,1.515,523,1.618,528,2.358,529,4.03,546,2.795,551,2.226,557,2.29,572,2.509,583,3.349,586,1.655,587,3.01,594,2.543,603,1.583,607,7.495,609,2.115,612,1.186,615,4.354,710,5.816,711,7.495,712,4.353,713,4.403,714,2.808,715,4.039,716,4.211,717,4.211,718,4.039,719,4.211,720,3.587,721,4.211,722,7.39,723,7.39,724,4.912,725,2.685,726,3.309,727,2.226,728,1.484,729,2.685,730,1.618,731,2.509,732,2.594,733,2.685,734,3.309,735,2.685,736,1.422,737,2.685,738,2.001,739,3.904,740,3.658,741,2.795,742,2.685,743,2.854,744,4.622,745,3.309,746,2.685,747,3.309,748,3.06,749,2.685,750,3.309,751,2.974,752,2.685,753,3.309,754,2.685,755,3.309,756,1.814,757,2.685,758,2.685,759,3.309,760,2.685,761,3.152,762,4.039,763,3.309,764,2.685,765,4.039,766,3.587,767,1.484,768,1.422,769,2.673,770,2.685,771,2.001,772,2.685,773,2.685,774,1.951,775,2.685,776,2.685,777,2.685,778,2.107,779,1.858,780,3.151,781,3.587,782,2.685,783,3.309,784,1.484,785,2.685,786,4.353,787,4.912,788,4.353,789,4.912,790,4.912,791,4.912,792,4.912,793,4.353,794,2.431,795,4.353,796,4.353,797,4.912,798,4.353,799,4.912]],["title/classes/BaseFormControl.html",[78,0.11,800,2.913]],["body/classes/BaseFormControl.html",[3,0.068,4,0.051,5,0.051,8,0.514,12,0.163,13,0.477,14,0.665,18,0.324,19,0.008,26,0.068,45,3.337,52,1.255,59,1.057,62,2.334,73,0.554,78,0.113,83,2.847,84,2.178,96,1.37,98,4.12,99,1.24,100,3.583,101,2.216,109,1.27,115,0.807,140,0.568,143,1.03,146,5.015,159,0.004,160,0.005,161,0.004,163,1.763,170,1.43,181,0.789,191,2.51,192,0.822,195,0.933,197,1.341,198,0.744,200,0.786,204,0.433,216,3.442,224,0.921,259,0.427,266,0.502,280,0.511,281,1.051,358,1.844,376,4.257,477,0.429,506,3.337,544,2.449,556,1.755,619,2.082,633,1.909,653,2.741,681,2.697,714,2.17,800,4.056,801,8.292,802,4.117,803,4.056,804,6.32,805,6.32,806,3.398,807,6.32,808,3.723,809,2.28,810,5.254,811,6.32,812,7.183,813,5.829,814,5.427,815,4.118,816,5.427,817,6.092,818,5.427,819,4.775,820,4.775,821,4.775,822,4.775,823,3.926,824,4.61,825,5.427,826,3.712,827,5.829,828,7.183,829,5.601,830,6.038,831,6.32,832,4.645,833,4.645,834,5.824,835,4.645,836,3.128,837,4.492,838,3.128,839,4.775,840,2.449,841,4.645,842,5.824,843,4.645,844,4.775,845,4.775,846,4.901,847,4.645,848,4.775,849,4.645,850,4.775,851,4.257,852,4.645,853,4.257,854,4.775,855,4.645,856,2.453,857,5.824,858,4.645,859,5.824,860,3.035,861,4.775,862,3.035,863,4.645,864,3.88,865,3.337,866,3.229,867,4.645,868,4.775,869,4.645,870,1.755,871,4.645,872,4.775,873,4.117,874,4.645,875,6.32,876,4.645,877,4.645,878,4.645,879,4.645,880,6.32,881,1.531,882,3.583,883,3.302,884,2.852,885,2.981,886,4.645,887,2.981,888,4.645,889,4.117,890,4.645,891,4.645,892,3.129,893,4.645,894,6.32,895,4.645,896,4.645,897,4.645,898,4.645,899,3.769,900,4.645,901,4.645,902,4.645,903,4.645,904,3.302]],["title/classes/BaseWidgetObject.html",[78,0.11,484,2.573]],["body/classes/BaseWidgetObject.html",[0,0.288,3,0.072,4,0.054,5,0.054,8,0.304,10,3.061,12,0.172,13,0.495,14,0.733,18,0.314,19,0.008,25,1.206,26,0.115,55,2.544,57,2.572,73,0.57,78,0.214,81,1.309,114,2.207,115,0.838,143,0.944,152,2.77,159,0.004,160,0.005,161,0.004,163,1.611,168,1.338,192,0.87,195,0.822,197,1.091,198,0.429,200,0.781,216,3.508,224,0.956,233,1.579,245,2.796,246,3.721,247,1.466,280,0.6,281,0.817,318,3.588,337,3.311,361,1.58,364,1.701,433,4.061,435,2.734,436,2.433,437,2.786,438,3.282,441,2.059,442,5.629,444,3.311,447,3.154,458,3.43,459,2.233,460,3.494,463,1.66,464,3.885,466,2.544,468,3.154,469,4.355,470,3.311,472,3.311,474,3.311,483,3.467,484,4.66,485,3.152,560,4.843,583,2.975,596,1.773,713,2.36,714,2.753,727,2.227,736,1.423,809,2.368,846,3.868,905,6.012,906,4.03,907,4.03,908,4.213,909,5.998,910,2.894,911,5.327,912,5.327,913,5.327,914,5.327,915,6.402,916,5.327,917,5.327,918,5.327,919,5.327,920,5.585,921,5.585,922,5.585,923,5.327,924,6.565,925,5.998,926,6.138,927,4.96,928,6.39,929,4.915,930,6.39,931,5.192,932,4.96,933,4.356,934,4.96,935,4.356,936,3.988,937,2.166,938,3.988,939,3.988,940,3.494,941,5.585,942,5.327,943,3.713,944,3.988,945,3.713,946,3.988,947,2.433,948,3.988,949,3.311]],["title/components/BoldTextRendererComponent.html",[204,0.311,659,1.638]],["body/components/BoldTextRendererComponent.html",[0,0.214,3,0.08,4,0.061,5,0.061,8,0.34,12,0.193,18,0.273,19,0.008,26,0.114,30,1.465,50,0.981,52,0.895,55,2.132,60,1.102,63,1.559,73,0.483,78,0.134,90,3.539,109,1.01,115,0.903,140,0.635,159,0.005,160,0.006,161,0.005,170,1.599,195,0.55,198,0.745,204,0.608,208,2.132,233,1.982,247,1.581,259,0.432,263,1.812,280,0.468,338,2.09,358,1.219,374,1.734,389,2.299,390,1.812,441,1.378,461,1.668,463,1.387,477,0.508,603,1.773,604,1.77,605,2.437,606,2.185,609,1.773,611,2.132,612,1.729,619,2.329,651,1.773,652,1.699,653,1.812,654,3.735,655,2.492,656,1.853,657,2.492,658,2.492,659,3.243,660,3.807,661,2.492,662,2.185,663,2.492,664,1.559,665,2.492,666,2.08,667,2.336,668,2.185,669,3.735,670,2.031,671,2.185,672,2.185,673,1.35,674,2.031,675,2.185,676,2.492,677,2.24,678,2.492,679,2.424,680,2.185,681,2.336,682,2.492,683,2.08,684,3.735,685,2.132,686,3.181,687,2.132,688,1.962,689,2.132,690,3.203,691,2.08,692,2.299,693,2.492,694,2.031,695,2.492,696,2.36,697,1.773,698,1.812,699,1.661,700,1.812,701,2.492,702,2.185,703,2.492,704,2.24,705,1.626,706,2.492,707,2.08,708,2.36,709,2.492,950,5.735,951,4.875,952,4.501,953,3.442,954,2.435,955,2.517,956,3.498,957,2.55,958,4.211,959,2.739,960,2.55,961,3.498,962,3.381,963,4.761,964,6.264,965,6.921,966,2.359,967,5.551,968,5.501,969,2.565,970,2.36,971,6.264,972,3.264,973,2.904,974,2.904,975,4.155,976,4.875,977,4.875,978,4.875,979,4.875,980,4.875,981,4.875]],["title/interfaces/BoldTextRendererConfig.html",[0,0.177,967,3.058]],["body/interfaces/BoldTextRendererConfig.html",[0,0.25,2,1.398,3,0.094,4,0.071,5,0.071,8,0.398,12,0.225,13,0.588,18,0.305,19,0.008,26,0.122,30,2.076,50,1.037,52,1.047,55,2.493,73,0.539,78,0.157,90,3.532,109,1.114,115,0.822,159,0.005,160,0.006,161,0.005,170,1.456,204,0.597,233,1.874,247,1.606,259,0.464,280,0.516,389,2.689,461,1.115,477,0.594,605,2.305,612,1.163,659,3.22,660,3.83,950,5.221,951,5.702,952,4.427,953,3.435,954,2.217,955,2.512,956,3.185,957,2.321,958,3.982,959,2.493,960,2.321,961,3.185,962,3.249,963,4.334,964,5.702,965,5.702,966,1.943,967,5.871,969,3,970,2.761,971,6.908,972,3.504,973,3.397,974,3.397,975,5.888,976,6.908,977,6.908,978,5.702,979,5.702,980,5.702,981,5.702]],["title/classes/BoldTextRendererWidgetObject.html",[78,0.11,982,4.024]],["body/classes/BoldTextRendererWidgetObject.html",[3,0.071,4,0.054,5,0.054,8,0.521,12,0.17,13,0.635,14,0.722,17,3.553,18,0.328,19,0.008,25,1.801,26,0.095,34,1.031,35,1.373,36,1.01,50,0.774,52,0.788,57,1.402,59,0.934,66,1.764,71,1.213,73,0.585,78,0.158,81,1.954,85,1.097,109,0.692,138,2.42,140,0.705,143,1.117,148,2.142,156,2.325,159,0.004,160,0.007,161,0.004,163,1.188,165,2.902,168,1.194,181,0.811,191,2.582,195,0.91,197,1.454,198,0.764,200,0.834,204,0.56,217,3.556,224,0.999,245,1.832,247,1.562,259,0.434,266,0.523,280,0.52,326,3.115,341,2.843,346,1.924,361,1.469,364,0.894,435,2.471,441,1.213,451,4.593,458,1.924,459,2.803,461,1.272,463,1.813,464,3.655,477,0.447,517,2.258,521,1.501,523,1.596,528,2.325,529,4.007,546,2.775,551,2.946,556,1.345,557,2.258,572,2.474,583,3.325,586,1.632,587,2.989,594,2.519,612,1.175,659,2.345,660,3.51,713,4.394,714,2.803,715,4.011,716,4.172,717,4.172,718,4.287,719,4.172,720,3.553,721,4.172,725,2.647,726,3.262,727,2.195,728,1.463,729,2.647,730,1.596,731,2.474,732,2.557,733,2.647,734,3.262,735,2.647,736,1.402,737,2.647,738,1.973,739,3.882,740,3.632,741,2.775,742,2.647,743,2.847,744,4.604,745,3.262,746,2.647,747,3.262,748,3.031,749,2.647,750,3.262,751,2.946,752,2.647,753,3.262,754,2.647,755,3.262,756,1.789,757,2.647,758,2.647,759,3.262,760,2.647,761,3.108,762,4.011,763,3.262,764,2.647,765,4.011,766,3.553,767,1.463,768,1.402,769,2.648,770,2.647,771,1.973,772,2.647,773,2.647,774,1.924,775,2.647,776,2.647,777,2.647,778,2.078,779,1.832,780,3.121,781,3.553,782,2.647,783,3.262,784,1.463,785,2.647,887,3.108,910,2.135,950,5.954,955,2.095,962,3.039,982,5.762,983,4.843,984,4.843,985,4.843,986,3.93,987,4.843,988,3.93,989,3.659,990,4.292,991,4.292,992,3.93,993,2.195,994,3.659,995,4.843,996,4.843,997,4.843,998,4.843,999,6.501,1000,4.843,1001,4.843,1002,4.843]],["title/interfaces/CanBeReadOnly.html",[0,0.177,813,3.684]],["body/interfaces/CanBeReadOnly.html",[0,0.324,2,1.561,3,0.105,4,0.08,5,0.08,8,0.444,12,0.252,13,0.627,18,0.252,19,0.008,26,0.105,60,1.667,96,1.37,99,1.633,159,0.006,160,0.007,161,0.006,604,1.8,728,2.514,806,3.168,813,6.752,824,5.799,887,4.612,1003,7.187,1004,7.187,1005,3.168,1006,3.672,1007,8.322,1008,5.341,1009,8.322,1010,6.287,1011,8.322,1012,6.287]],["title/interfaces/CliptextConfig.html",[0,0.177,1013,3.058]],["body/interfaces/CliptextConfig.html",[0,0.161,2,0.9,3,0.06,4,0.046,5,0.046,8,0.256,9,1.924,12,0.145,13,0.44,14,0.662,18,0.257,19,0.008,25,1.017,26,0.107,27,1.924,30,2.061,36,0.864,38,2.441,50,0.493,52,1.1,59,1.083,74,2.722,78,0.101,81,1.555,83,1.53,85,0.816,87,1.225,96,1.145,98,4.215,99,0.813,101,1.801,102,2.754,108,1.306,109,0.592,115,0.529,118,1.365,140,0.721,158,1.218,159,0.003,160,0.005,161,0.003,170,0.937,172,1.197,247,1.148,259,0.229,266,0.891,272,2.189,275,1.278,280,0.575,344,1.567,377,1.567,392,1.199,441,1.038,458,1.645,461,0.718,463,1.518,477,0.383,517,1.931,521,0.956,523,1.365,555,1.675,566,1.605,574,2.728,586,1.967,595,2.441,612,0.749,633,1.763,652,0.996,653,2.645,707,2.208,708,1.777,741,2.208,743,1.306,756,2.711,808,2.441,870,1.15,904,5.5,956,2.89,966,2.042,993,2.646,1013,4.554,1014,2.543,1015,2.792,1016,2.945,1017,5.707,1018,2.573,1019,2.012,1020,5.408,1021,3.277,1022,2.208,1023,3.832,1024,5.485,1025,4.15,1026,3.846,1027,6.226,1028,2.44,1029,1.69,1030,2.208,1031,4.554,1032,5.545,1033,2.666,1034,3.445,1035,5.846,1036,3.831,1037,5.846,1038,4.324,1039,5.846,1040,3.13,1041,3.361,1042,3.13,1043,3.361,1044,2.659,1045,3.361,1046,3.361,1047,3.361,1048,3.13,1049,3.361,1050,3.361,1051,1.645,1052,4.509,1053,3.361,1054,3.361,1055,1.731,1056,4.737,1057,3.361,1058,2.98,1059,5.485,1060,3.361,1061,3.933,1062,3.361,1063,3.361,1064,3.361,1065,2.791,1066,3.361,1067,3.13,1068,1.989,1069,6.279,1070,3.361,1071,4.737,1072,3.361,1073,3.361,1074,1.495,1075,5.485,1076,4.737,1077,3.361,1078,4.737,1079,3.361,1080,4.737,1081,2.659,1082,3.361,1083,2.117,1084,5.485,1085,3.361,1086,3.361,1087,3.361,1088,4.737,1089,4.737,1090,3.361,1091,3.361,1092,4.15,1093,3.361,1094,3.361,1095,3.361,1096,3.361,1097,3.361,1098,5.485,1099,3.361,1100,5.956,1101,3.361,1102,3.361,1103,5.956,1104,2.945,1105,4.737,1106,4.737,1107,3.361,1108,3.361,1109,3.361,1110,3.361,1111,3.361,1112,3.361,1113,2.803,1114,1.687,1115,3.361,1116,3.361,1117,4.737,1118,3.361,1119,4.737,1120,5.956,1121,4.737,1122,3.152,1123,4.737,1124,2.051,1125,4.737,1126,3.361,1127,2.659,1128,3.361,1129,2.659,1130,4.737,1131,3.361,1132,3.361,1133,3.361,1134,3.361,1135,2.264,1136,3.361,1137,2.945,1138,3.13,1139,3.361,1140,3.361,1141,3.361,1142,4.737,1143,5.485,1144,3.13,1145,3.361,1146,3.361,1147,2.337,1148,3.361,1149,2.803,1150,3.361,1151,4.737,1152,5.956,1153,2.945,1154,2.945,1155,2.945,1156,2.945,1157,6.279,1158,4.411,1159,4.15,1160,3.672,1161,6.506,1162,3.672,1163,3.672,1164,3.672,1165,3.672,1166,3.672,1167,3.672,1168,4.411,1169,2.791,1170,3.672,1171,3.361,1172,2.659,1173,3.672,1174,1.53,1175,3.672,1176,3.672,1177,3.672,1178,5.174,1179,3.672,1180,5.174,1181,5.992,1182,3.672,1183,5.174,1184,5.174,1185,3.672,1186,3.672,1187,3.672,1188,3.672,1189,3.672,1190,1.605,1191,3.672,1192,5.992,1193,3.672,1194,3.672,1195,5.174,1196,5.174,1197,2.348,1198,2.659,1199,5.174,1200,3.672,1201,3.672,1202,3.672,1203,3.672,1204,3.672,1205,3.672,1206,1.278,1207,3.13,1208,3.672,1209,3.672,1210,3.672,1211,3.672,1212,3.672,1213,5.174,1214,3.672,1215,3.672,1216,3.672,1217,3.361,1218,1.731,1219,3.672,1220,3.672,1221,3.361,1222,2.441,1223,1.777,1224,3.361,1225,3.361]],["title/interfaces/ColumnConfigInternal.html",[0,0.177,1226,2.482]],["body/interfaces/ColumnConfigInternal.html",[0,0.278,1,2.214,2,0.443,3,0.03,4,0.023,5,0.023,8,0.126,9,1.661,10,3.23,12,0.271,13,0.38,14,0.526,15,3.411,18,0.256,19,0.008,20,1.164,22,0.703,25,1.064,26,0.113,27,1.661,28,1.043,30,1.778,34,1.624,36,1.699,39,0.98,40,2.454,42,0.9,47,0.772,50,0.937,52,0.551,53,1.729,54,1.043,55,3.156,56,1.787,59,0.872,60,1.207,61,2.199,62,0.754,63,1.708,64,2.057,66,0.814,67,0.9,69,2.983,71,0.848,73,0.493,74,1.578,77,1.378,78,0.105,80,1.011,81,0.901,83,1.25,84,1.926,85,0.606,86,2.767,87,1.491,88,0.791,90,3.757,91,0.688,93,3.468,96,1.08,99,0.989,101,1.994,102,0.832,108,1.763,109,1.231,111,1.97,114,0.533,115,0.935,118,1.842,120,1.078,127,1.721,129,1.86,133,1.001,136,0.811,137,2.214,138,1.044,140,0.802,141,1.378,143,0.815,148,1.842,149,1.078,152,1.969,154,2.016,155,0.952,158,1.489,159,0.003,160,0.003,161,0.002,168,0.551,170,0.462,172,1.524,173,1.116,181,0.541,192,0.361,194,1.765,195,0.204,198,0.379,200,0.4,202,0.98,203,0.876,204,0.502,210,2.145,224,0.48,233,0.814,234,1.022,243,0.832,247,0.347,250,1.116,259,0.422,260,0.63,266,0.934,269,1.116,270,1.85,272,0.865,280,0.592,281,1.061,286,2.839,321,0.754,327,0.876,336,0.952,338,1.282,344,2.526,358,0.453,361,1.01,364,1.351,369,1.675,374,0.644,377,2.114,378,2.351,390,1.115,392,1.255,438,1.25,459,1.022,461,0.354,463,0.664,477,0.189,508,1.493,512,0.9,521,1.001,523,1.842,538,1.729,544,0.791,546,1.28,547,0.703,555,1.257,556,0.567,570,1.528,594,2.335,596,1.221,603,0.658,604,0.848,605,1.491,609,0.658,612,0.783,613,0.617,619,1.115,623,1.675,633,1.688,634,2.421,650,1.078,652,1.212,656,1.14,664,0.579,667,0.579,673,0.501,697,0.658,698,0.673,699,1.022,705,0.604,728,0.617,730,1.115,736,1.847,738,1.765,741,0.772,743,1.367,768,1.255,771,0.832,779,0.772,784,1.022,794,1.011,809,0.737,836,1.011,840,0.791,862,0.98,870,0.567,953,1.91,954,1.737,955,2.361,957,0.737,958,3.079,959,2.901,960,2.576,966,1.309,969,0.952,970,0.876,972,2.336,973,1.078,974,1.078,993,3.026,1005,2.222,1015,0.737,1018,0.9,1019,2.879,1021,2.836,1022,1.28,1026,2.021,1028,1.414,1029,0.98,1030,1.28,1033,2.199,1051,1.344,1055,0.853,1058,0.9,1068,0.98,1074,1.564,1113,0.98,1114,1.378,1122,0.952,1124,3.429,1174,0.754,1190,0.791,1206,0.63,1218,0.853,1223,1.452,1226,3.055,1227,1.078,1228,2.457,1229,1.91,1230,2.457,1231,2.667,1232,2.214,1233,2.464,1234,2.858,1235,2.662,1236,2.858,1237,2.684,1238,1.729,1239,2.214,1240,2.533,1241,1.157,1242,2.25,1243,1.918,1244,1.918,1245,0.811,1246,1.157,1247,1.85,1248,2.457,1249,1.918,1250,0.591,1251,1.918,1252,1.157,1253,1.414,1254,0.876,1255,1.078,1256,1.116,1257,1.043,1258,1.043,1259,0.737,1260,0.876,1261,0.925,1262,0.952,1263,1.25,1264,1.011,1265,0.63,1266,1.811,1267,2.336,1268,2.145,1269,2.369,1270,3.449,1271,3.284,1272,3.055,1273,1.116,1274,2.369,1275,1.116,1276,1.078,1277,0.876,1278,1.011,1279,0.952,1280,2.791,1281,1.85,1282,2.214,1283,1.116,1284,1.116,1285,1.116,1286,2.756,1287,1.078,1288,1.378,1289,4.406,1290,2.003,1291,1.85,1292,1.116,1293,3.437,1294,2.369,1295,1.787,1296,3.079,1297,1.492,1298,1.157,1299,1.675,1300,1.157,1301,1.787,1302,1.157,1303,2.421,1304,2.576,1305,2.421,1306,1.85,1307,1.157,1308,1.157,1309,1.918,1310,1.116,1311,2.756,1312,1.157,1313,2.081,1314,1.85,1315,1.918,1316,1.157,1317,1.918,1318,1.918,1319,2.756,1320,2.457,1321,1.011,1322,0.98,1323,1.116,1324,1.157,1325,1.157,1326,0.9,1327,1.811,1328,3.168,1329,1.625,1330,3.868,1331,2.457,1332,0.811,1333,1.157,1334,1.157,1335,4.46,1336,1.116,1337,2.277,1338,3.416,1339,3.926,1340,1.116,1341,1.157,1342,2.369,1343,1.043,1344,0.72,1345,1.157,1346,1.157,1347,1.043,1348,2.767,1349,0.952,1350,1.157,1351,0.98,1352,2.369,1353,0.853,1354,0.9,1355,1.157,1356,2.081,1357,1.157,1358,1.116,1359,1.918,1360,1.729,1361,1.157,1362,1.157,1363,1.625,1364,1.043,1365,1.157,1366,1.157,1367,0.791,1368,1.157,1369,1.85,1370,2.457,1371,1.157,1372,1.157,1373,1.116,1374,1.787,1375,1.078,1376,1.787,1377,1.078,1378,2.457,1379,1.157,1380,1.011,1381,1.078,1382,1.157,1383,1.918,1384,1.157,1385,1.157,1386,1.157,1387,1.157,1388,1.157,1389,1.157,1390,1.85,1391,1.157,1392,2.457,1393,1.157,1394,1.157,1395,1.116,1396,2.858,1397,2.214,1398,1.157,1399,1.116,1400,1.078,1401,1.116,1402,1.157,1403,1.157,1404,1.116,1405,1.918,1406,1.157,1407,1.157,1408,1.918,1409,1.157,1410,1.157,1411,0.952,1412,1.157,1413,1.157,1414,1.157,1415,1.157,1416,3.785,1417,1.918,1418,1.157,1419,1.157,1420,1.157,1421,1.918,1422,1.157,1423,1.918,1424,1.918,1425,1.157,1426,1.157,1427,1.157,1428,1.918,1429,1.157,1430,2.858,1431,1.918,1432,1.918,1433,1.157,1434,1.157,1435,1.043,1436,1.157,1437,1.157,1438,1.157,1439,1.157,1440,1.157,1441,1.157,1442,1.918,1443,1.918,1444,1.918,1445,1.918,1446,2.457,1447,1.157,1448,1.157,1449,1.157,1450,1.157,1451,1.918,1452,1.918,1453,2.858,1454,1.157,1455,1.157,1456,1.157,1457,1.157,1458,1.157,1459,2.533,1460,3.416,1461,3.168,1462,1.918,1463,1.157,1464,1.918,1465,2.457,1466,1.157,1467,2.457,1468,1.157,1469,2.858,1470,1.918,1471,1.157,1472,1.157,1473,1.157,1474,1.918,1475,1.116,1476,1.157,1477,1.011,1478,1.157,1479,1.157,1480,1.157,1481,1.157,1482,1.918,1483,2.351,1484,1.157,1485,1.157,1486,1.157,1487,1.157,1488,1.157,1489,1.492,1490,1.157,1491,1.157,1492,1.157,1493,2.457,1494,1.157,1495,1.157,1496,1.116,1497,1.729,1498,1.157,1499,1.157,1500,1.157,1501,1.157,1502,1.157,1503,1.157,1504,1.157,1505,1.452,1506,1.157,1507,1.157,1508,1.157,1509,1.157,1510,1.078,1511,1.157,1512,1.157,1513,1.918,1514,1.157,1515,1.157,1516,1.157,1517,1.157,1518,1.157,1519,0.98,1520,1.157,1521,1.011,1522,1.157,1523,1.157,1524,0.98,1525,1.157,1526,1.157,1527,1.157,1528,1.157,1529,1.157,1530,1.157,1531,1.157,1532,1.157,1533,1.157,1534,1.157,1535,1.157,1536,0.791,1537,1.157,1538,1.157,1539,1.85,1540,1.157,1541,1.157,1542,1.157,1543,1.157,1544,1.157,1545,1.157,1546,1.157,1547,1.157,1548,1.918,1549,1.918,1550,1.918,1551,1.157,1552,2.289,1553,2.858,1554,1.918,1555,1.157,1556,1.157,1557,1.157,1558,1.157,1559,1.157,1560,1.157,1561,1.078,1562,1.157,1563,1.157,1564,1.157,1565,1.157,1566,0.703,1567,1.157,1568,1.157,1569,1.918,1570,1.157,1571,2.457,1572,1.157,1573,1.157,1574,1.157,1575,1.918,1576,1.157,1577,1.157,1578,1.918,1579,1.918,1580,1.157,1581,1.157,1582,1.078,1583,1.116,1584,1.157,1585,1.157,1586,1.157,1587,1.918,1588,1.918,1589,1.157,1590,1.157,1591,1.918,1592,1.157,1593,1.157,1594,1.157,1595,1.157,1596,1.157,1597,1.157,1598,1.157,1599,1.116,1600,1.157,1601,1.157,1602,1.157,1603,1.157,1604,1.157,1605,1.918,1606,1.157,1607,1.157,1608,1.157,1609,1.157,1610,1.157,1611,1.157,1612,1.157,1613,1.157,1614,1.157,1615,1.918,1616,2.858,1617,2.457,1618,1.157,1619,1.157,1620,1.918,1621,1.157,1622,1.157,1623,1.157,1624,1.157,1625,1.157,1626,1.157,1627,1.157,1628,1.25,1629,1.918,1630,1.157,1631,1.157,1632,1.157,1633,1.116,1634,1.157,1635,1.157,1636,1.157,1637,1.157,1638,1.157,1639,1.157,1640,1.116,1641,1.157,1642,1.157,1643,1.157,1644,1.157,1645,1.157,1646,1.157,1647,2.858,1648,1.157,1649,1.157,1650,1.157,1651,1.157,1652,1.157,1653,1.157,1654,1.116,1655,1.157,1656,1.157,1657,1.918,1658,1.157,1659,1.918,1660,1.157,1661,1.157,1662,1.918,1663,1.157,1664,1.157,1665,1.157,1666,1.157,1667,1.157,1668,2.457,1669,1.157,1670,1.157,1671,1.157,1672,1.157,1673,1.157,1674,0.832,1675,1.157,1676,1.157,1677,1.157,1678,1.157,1679,1.157,1680,1.157,1681,1.157,1682,1.157,1683,0.98,1684,1.011,1685,1.116,1686,1.157,1687,1.157,1688,1.011,1689,1.157,1690,1.157,1691,1.918,1692,3.168,1693,0.925,1694,1.157,1695,1.157,1696,1.157,1697,1.157,1698,1.157,1699,1.157,1700,1.918,1701,1.157,1702,1.157,1703,1.729,1704,1.157,1705,1.157,1706,1.078,1707,1.157,1708,1.157,1709,1.078,1710,1.157,1711,1.157,1712,1.157]],["title/interfaces/ColumnRendererSpec.html",[0,0.177,972,1.897]],["body/interfaces/ColumnRendererSpec.html",[0,0.288,2,1.073,3,0.072,4,0.055,5,0.055,8,0.305,9,2.79,12,0.173,13,0.596,18,0.319,19,0.008,21,5.072,22,2.837,26,0.12,27,1.627,30,1.315,35,1.4,38,2.909,47,2.802,50,1.029,52,1.447,55,2.552,57,1.429,60,0.989,61,2.269,64,1.591,65,2.902,66,1.781,73,0.55,78,0.12,83,2.432,85,0.921,90,3.918,91,1.663,96,0.77,99,0.969,102,3.018,112,2.909,115,1.051,133,1.46,138,1.524,141,3.018,143,0.631,148,2.17,151,3.326,153,3.169,159,0.004,160,0.005,161,0.004,165,1.701,168,1.072,192,0.874,195,0.659,200,0.684,203,2.825,204,0.621,233,1.781,234,1.491,244,2.909,247,1.342,259,0.437,266,0.711,272,1.262,280,0.436,321,1.824,344,1.867,361,1.649,363,2.371,389,2.752,466,3.063,508,1.701,512,2.176,566,1.913,570,2.321,604,1.237,633,2.238,652,1.98,659,1.781,700,2.17,728,1.491,756,1.824,767,1.491,774,1.961,779,1.867,803,3.169,840,1.913,860,2.371,870,1.371,937,3.266,947,2.444,952,2.607,955,3.052,956,3.912,957,1.781,959,2.871,960,2.851,961,3.26,962,3.446,966,2.713,967,3.326,970,2.118,972,3.539,1005,2.176,1013,4.991,1015,1.781,1017,4.681,1018,2.902,1019,1.701,1020,3.326,1021,1.961,1033,1.701,1044,3.169,1074,1.781,1149,3.162,1174,2.736,1231,2.063,1232,2.522,1237,3.558,1257,2.522,1258,2.522,1261,2.237,1262,2.302,1264,2.444,1265,2.032,1266,2.752,1267,3.303,1268,3.26,1270,2.682,1280,3.096,1290,1.961,1327,2.063,1347,2.522,1349,2.302,1497,2.522,1505,3.709,1674,2.682,1683,1.906,1713,3.73,1714,3.73,1715,4.991,1716,2.237,1717,2.902,1718,4.852,1719,6.012,1720,5.597,1721,4.006,1722,3.509,1723,4.006,1724,6.012,1725,5.343,1726,5.343,1727,5.343,1728,4.006,1729,4.006,1730,4.006,1731,4.681,1732,2.522,1733,3.031,1734,2.799,1735,4.006,1736,3.73,1737,4.006,1738,4.006,1739,4.006,1740,2.909,1741,4.006,1742,3.509,1743,4.006,1744,2.444,1745,3.326,1746,4.006,1747,2.799,1748,4.006,1749,3.73,1750,4.006,1751,3.169,1752,5.343,1753,4.006,1754,3.031,1755,2.909,1756,4.006,1757,3.326,1758,2.522,1759,2.444,1760,2.607,1761,3.169,1762,3.326,1763,3.169,1764,3.326,1765,3.326,1766,2.699,1767,4.006]],["title/classes/CommonUtil.html",[78,0.11,264,3.43]],["body/classes/CommonUtil.html",[3,0.096,4,0.073,5,0.073,8,0.405,12,0.23,14,0.65,18,0.319,19,0.008,25,2.236,26,0.096,52,1.427,60,1.579,66,1.895,78,0.16,85,1.102,136,3.131,140,0.852,141,3.211,143,1.08,159,0.005,160,0.007,161,0.005,163,1.609,181,0.984,195,0.788,197,1.31,198,0.689,200,0.869,216,3.055,224,0.873,264,5.955,280,0.522,364,1.454,555,1.367,846,3.862,1147,2.649,1158,5.955,1628,2.421,1768,8.453,1769,5.81,1770,7.883,1771,7.883,1772,7.883,1773,6.556,1774,7.883,1775,7.883,1776,8.076,1777,6.556,1778,7.883,1779,7.883,1780,8.77,1781,7.883,1782,6.986,1783,6.986,1784,6.556]],["title/interfaces/ComponentRenderer.html",[0,0.177,952,2.397]],["body/interfaces/ComponentRenderer.html",[0,0.308,2,1.432,3,0.096,4,0.073,5,0.073,8,0.407,12,0.231,13,0.596,18,0.326,19,0.008,26,0.124,50,1.086,52,1.073,57,2.453,64,2.124,88,2.554,109,0.942,115,1.082,159,0.005,160,0.007,161,0.005,192,1.4,204,0.632,216,2.554,224,0.729,259,0.365,326,2.617,336,3.072,361,1.799,466,3.064,477,0.609,604,1.98,605,2.338,652,1.901,700,2.171,731,3.367,769,2.684,937,2.905,952,4.473,954,2.725,966,2.756,972,2.754,975,5.974,1266,3.305,1267,2.754,1290,2.617,1337,2.684,1505,3.769,1688,4.349,1706,3.48,1722,4.684,1755,3.882,1785,5.347,1786,5.347,1787,7.008,1788,5.918,1789,5.841,1790,4.978,1791,6.416,1792,5.841,1793,5.841,1794,4.045,1795,5.841]],["title/directives/ComponentRendererOutletDirective.html",[653,1.496,700,1.496]],["body/directives/ComponentRendererOutletDirective.html",[3,0.078,4,0.059,5,0.059,8,0.33,9,2.686,12,0.187,13,0.523,14,0.635,17,4.209,18,0.321,19,0.008,26,0.078,33,6.083,36,1.114,50,0.97,52,0.87,55,3.355,57,2.36,59,1.006,66,1.668,78,0.13,88,2.688,109,1.165,112,4.086,159,0.004,160,0.006,161,0.004,172,1.661,181,0.865,191,2.755,192,0.946,195,0.894,197,1.28,198,0.673,204,0.65,224,0.902,233,1.668,234,2.095,259,0.384,266,0.577,272,1.366,275,1.649,280,0.46,336,3.234,461,1.202,463,1.599,477,0.493,512,2.355,574,3.107,611,2.07,619,2.285,653,2.686,699,1.614,700,2.285,730,2.285,784,2.326,907,4.258,952,2.821,953,3.057,957,2.502,958,4.164,962,3.53,966,2.326,969,2.491,970,2.292,972,2.899,993,3.49,1051,2.755,1149,3.33,1266,3.218,1267,3.683,1337,3.678,1364,4.164,1369,4.455,1496,2.92,1505,2.976,1693,2.421,1796,9.03,1797,5.342,1798,6.936,1799,5.24,1800,6.936,1801,6.936,1802,6.936,1803,7.224,1804,4.086,1805,8.657,1806,8.934,1807,8.151,1808,6.936,1809,8.151,1810,8.151,1811,5.342,1812,8.657,1813,7.701,1814,8.151,1815,6.936,1816,6.936,1817,7.701,1818,5.818,1819,5.474,1820,6.936,1821,5.342,1822,5.342,1823,5.342,1824,5.342,1825,5.342,1826,5.342,1827,6.936,1828,6.936,1829,5.342,1830,5.342,1831,5.342,1832,8.151,1833,5.342,1834,5.342,1835,5.342,1836,5.342,1837,5.342,1838,5.342,1839,5.342,1840,5.342,1841,5.342,1842,5.342,1843,5.342]],["title/interfaces/ComponentRendererSpec.html",[0,0.177,1267,1.897]],["body/interfaces/ComponentRendererSpec.html",[0,0.302,2,1.389,3,0.093,4,0.071,5,0.071,8,0.396,12,0.224,13,0.586,18,0.333,19,0.008,26,0.122,50,1.078,52,1.264,57,1.852,64,2.503,88,3.01,109,1.11,115,0.992,159,0.005,160,0.006,161,0.005,192,1.54,204,0.634,216,2.479,224,0.86,259,0.354,326,3.085,336,3.621,361,1.836,466,3.37,477,0.591,604,1.602,605,1.891,652,1.538,700,2.559,731,3.968,769,3.163,937,3.423,952,4.416,954,2.204,966,2.769,972,3.246,975,6.571,1266,3.635,1267,3.246,1290,3.085,1337,3.163,1505,3.823,1688,3.844,1706,4.101,1722,4.546,1755,3.768,1785,5.19,1786,5.19,1787,5.669,1788,6.003,1789,5.669,1790,5.867,1791,7.057,1792,5.669,1793,6.883,1794,4.768,1795,5.669,1844,6.396]],["title/injectables/CsvExporterService.html",[1845,2.319,1846,3.43]],["body/injectables/CsvExporterService.html",[3,0.073,4,0.056,5,0.092,8,0.463,12,0.176,14,0.617,18,0.279,19,0.008,20,1.162,26,0.109,35,2.258,36,1.05,50,0.599,52,1.297,57,1.458,59,0.794,60,1.706,73,0.582,74,3.11,78,0.123,83,2.763,85,1.248,96,1.293,101,1.993,102,2.051,115,0.852,124,3.091,127,2,143,0.643,156,3.592,158,1.05,159,0.007,160,0.006,161,0.004,181,0.832,195,0.748,197,1.244,198,0.724,200,0.691,216,2.899,224,0.917,259,0.279,266,0.895,272,1.287,280,0.585,281,1.109,322,3.647,361,1.008,364,0.929,389,2.788,415,6.631,477,0.465,507,3.579,508,2.745,521,2.061,555,1.05,587,2.051,778,3.654,810,4.515,937,3.298,956,3.943,1018,2.219,1074,2.407,1270,3.469,1296,4.07,1628,1.86,1693,2.282,1732,2.573,1736,3.804,1845,3.408,1846,5.04,1847,3.231,1848,5.112,1849,7.06,1850,4.463,1851,6.672,1852,6.672,1853,6.672,1854,6.672,1855,7.244,1856,5.035,1857,7.482,1858,7.424,1859,7.966,1860,6.018,1861,7.06,1862,8.688,1863,7.482,1864,5.318,1865,8.822,1866,6.672,1867,6.91,1868,5.035,1869,3.93,1870,5.413,1871,5.413,1872,6.724,1873,6.672,1874,5.035,1875,7.482,1876,3.804,1877,5.035,1878,5.035,1879,3.091,1880,5.035,1881,2.854,1882,3.804,1883,6.672,1884,3.804,1885,5.035,1886,5.035,1887,6.672,1888,5.035,1889,5.035,1890,6.672,1891,5.035,1892,5.035,1893,5.035,1894,2.854,1895,4.086,1896,5.035,1897,5.035,1898,5.035,1899,5.035,1900,6.672,1901,5.035,1902,5.035,1903,5.035,1904,5.035,1905,5.035,1906,5.035,1907,5.035,1908,4.463,1909,4.086,1910,5.035,1911,5.035,1912,5.035,1913,5.035,1914,5.035,1915,5.035,1916,5.035,1917,5.035,1918,5.035,1919,8.822,1920,6.672,1921,6.672,1922,5.035,1923,7.482,1924,3.392,1925,4.463,1926,5.04,1927,5.035,1928,7.482,1929,5.035,1930,3.579,1931,5.035,1932,5.035,1933,5.035,1934,5.035,1935,5.035,1936,4.463,1937,5.035,1938,5.035,1939,5.035,1940,4.086,1941,5.035,1942,5.035,1943,5.035,1944,5.035,1945,5.035,1946,5.035]],["title/classes/CypressLocatorDriver.html",[78,0.11,1947,3.684]],["body/classes/CypressLocatorDriver.html",[3,0.078,4,0.059,5,0.059,8,0.33,12,0.187,14,0.696,18,0.313,19,0.008,26,0.078,57,2.636,60,1.387,73,0.583,78,0.13,96,1.2,101,2.169,113,2.751,152,2.862,159,0.004,160,0.006,161,0.004,163,1.308,168,0.868,170,1.567,172,1.494,181,0.864,192,0.944,195,0.881,197,1.438,198,0.738,200,0.752,216,3.498,224,0.958,259,0.383,266,0.911,275,1.645,280,0.584,281,1.354,323,4.665,324,3.428,341,3.156,361,1.387,373,2.066,408,3.053,409,4.923,433,4.288,435,2.787,436,2.639,437,3.926,438,3.008,441,1.735,442,4.723,444,5.182,445,5.62,446,5.62,447,5.552,464,3.681,465,4.326,466,3.271,468,3.421,469,4.798,470,4.665,472,4.665,474,4.665,475,4.725,483,2.815,484,3.022,485,3.326,486,5.686,523,2.282,544,2.684,587,3.134,596,2.938,768,2.005,910,3.053,1233,3.053,1242,2.442,1640,3.786,1742,4.923,1947,7.246,1948,7.246,1949,7.482,1950,6.926,1951,6.139,1952,6.139,1953,6.139,1954,6.139,1955,6.139,1956,6.139,1957,4.027,1958,8.145,1959,5.331,1960,7.694,1961,6.819,1962,5.331,1963,6.926,1964,5.331,1965,5.331,1966,4.725,1967,6.139,1968,6.926,1969,6.926,1970,5.331,1971,5.331,1972,4.326,1973,4.725,1974,4.326,1975,4.725,1976,4.326,1977,4.326,1978,4.725,1979,7.694,1980,5.331,1981,8.442,1982,6.926,1983,5.331,1984,5.331,1985,5.331,1986,6.926,1987,5.331,1988,5.331,1989,4.725]],["title/classes/CypressWidgetObjectFinder.html",[78,0.11,1972,3.684]],["body/classes/CypressWidgetObjectFinder.html",[3,0.088,4,0.066,5,0.066,8,0.462,12,0.21,14,0.496,18,0.298,19,0.008,26,0.088,29,6.064,57,2.534,60,1.497,66,1.797,73,0.552,77,3.044,78,0.146,81,1.99,85,1.137,87,2.21,99,1.179,113,2.968,159,0.005,160,0.006,161,0.005,163,1.474,165,3.118,168,0.978,181,0.932,192,1.323,195,0.601,197,1.242,198,0.525,224,0.665,245,2.827,259,0.45,266,0.964,280,0.398,281,1.242,323,5.034,341,2.896,361,1.704,373,2.328,392,2.163,408,3.294,433,3.588,435,2.833,437,4.236,438,3.233,441,1.872,447,4.796,459,2.257,464,3.822,466,3.392,468,3.856,469,5.014,484,3.406,485,3.588,521,1.878,559,4.875,560,4.588,577,5.325,578,5.618,580,7.209,581,6.623,582,5.646,583,3.857,587,2.447,596,2.696,597,5.325,601,5.325,815,4.213,882,4.236,884,3.688,885,3.856,892,4.047,1233,3.294,1242,2.634,1742,5.312,1947,4.875,1948,6.064,1949,7.759,1951,6.623,1952,6.623,1953,6.623,1954,6.623,1955,6.623,1956,6.623,1957,4.539,1961,6.623,1972,6.064,1973,5.325,1974,4.875,1975,5.325,1976,4.875,1977,4.875,1978,5.325,1989,6.623,1990,6.008,1991,5.325,1992,6.008,1993,6.008,1994,6.008,1995,6.008]],["title/interfaces/DataExportRequestEvent.html",[0,0.177,1996,3.684]],["body/interfaces/DataExportRequestEvent.html",[0,0.215,2,0.833,3,0.094,4,0.042,5,0.078,8,0.237,12,0.134,13,0.417,18,0.227,19,0.008,20,1.495,26,0.12,27,1.263,30,2.084,34,1.379,35,1.087,36,1.351,40,3.06,50,0.771,52,1.154,58,2.962,59,0.96,60,1.765,62,1.416,66,1.328,73,0.465,75,4.436,78,0.093,83,1.416,85,0.773,86,3.719,96,1.258,97,2.897,99,1.474,101,2.24,108,2.235,109,1.305,113,2.815,114,1.849,115,0.49,129,2.37,133,1.134,140,0.675,143,0.49,146,3.255,148,1.263,154,1.993,158,1.351,159,0.003,160,0.005,161,0.003,170,0.867,172,1.511,194,2.638,198,0.619,200,0.694,204,0.379,237,5.255,247,1.483,259,0.433,260,1.183,266,0.845,275,1.183,280,0.609,281,1.487,282,3.111,321,3.049,325,2.725,341,2.141,347,2.583,358,0.85,361,1.106,363,1.841,364,0.707,373,1.486,392,1.599,461,0.665,477,0.354,523,1.263,544,2.141,547,1.321,551,1.737,555,1.351,556,1.968,570,1.948,586,1.292,612,0.693,613,1.158,623,4.477,634,3.11,662,1.523,673,1.589,736,1.11,768,1.11,784,1.158,809,1.383,826,3.371,838,3.719,860,2.653,870,1.064,881,1.263,940,2.725,955,2.421,959,3.199,961,3.206,993,2.504,1008,2.461,1022,1.45,1029,1.599,1030,2.09,1055,2.707,1061,2.583,1190,1.486,1206,1.183,1235,3.743,1240,2.935,1242,2.283,1245,1.523,1250,1.11,1259,1.993,1260,1.645,1270,1.562,1279,1.788,1280,1.602,1290,2.573,1296,1.959,1367,1.486,1374,2.025,1375,2.025,1376,2.917,1377,2.025,1381,2.917,1435,1.959,1536,1.486,1552,2.025,1561,2.025,1744,1.898,1804,2.259,1846,4.893,1848,2.461,1855,4.483,1858,6.35,1860,5.354,1867,3.111,1870,4.483,1871,3.111,1872,3.111,1881,3.671,1909,4.483,1996,4.483,1997,2.583,1998,3.111,1999,4.483,2000,6.658,2001,6.936,2002,6.658,2003,4.897,2004,4.897,2005,4.174,2006,4.897,2007,7.087,2008,5.741,2009,5.664,2010,3.111,2011,3.212,2012,4.483,2013,3.398,2014,3.398,2015,3.111,2016,2.917,2017,3.398,2018,1.841,2019,3.111,2020,4.483,2021,4.483,2022,6.096,2023,3.111,2024,3.111,2025,3.398,2026,2.461,2027,3.398,2028,5.741,2029,3.398,2030,2.897,2031,3.111,2032,3.398,2033,3.398,2034,3.398,2035,3.398,2036,3.398,2037,3.398,2038,3.927,2039,5.741,2040,3.398,2041,3.398,2042,2.461,2043,3.398,2044,3.398,2045,3.398,2046,3.398,2047,3.398,2048,3.111,2049,3.398,2050,3.398,2051,3.398,2052,3.398,2053,3.398,2054,3.398,2055,3.398,2056,3.398,2057,3.398,2058,3.398,2059,3.398,2060,3.398,2061,5.255,2062,4.277,2063,3.398,2064,3.398,2065,3.398,2066,3.398,2067,3.546,2068,3.398,2069,3.398,2070,3.398,2071,3.398,2072,3.398,2073,3.398,2074,3.398,2075,3.398,2076,3.398,2077,3.398,2078,3.398,2079,3.398,2080,3.398,2081,3.398,2082,3.398,2083,3.927,2084,3.398,2085,3.927,2086,3.398,2087,4.897,2088,2.725,2089,2.725,2090,4.897,2091,3.398,2092,3.398,2093,3.398,2094,5.741,2095,3.398,2096,4.897,2097,3.398,2098,3.398,2099,2.897,2100,3.398,2101,3.398,2102,3.398,2103,6.282,2104,3.398,2105,3.398,2106,3.398,2107,3.398,2108,4.897,2109,3.398,2110,3.398,2111,3.398,2112,3.398,2113,3.398,2114,3.398,2115,3.398,2116,3.398,2117,3.398,2118,3.398,2119,3.398,2120,3.398,2121,3.398,2122,4.897,2123,3.398,2124,3.398,2125,3.398,2126,3.398,2127,3.398,2128,3.398,2129,3.398,2130,3.398,2131,3.398,2132,3.398,2133,3.398,2134,1.898,2135,3.398,2136,3.398,2137,3.398,2138,3.398,2139,3.398,2140,3.927,2141,3.398,2142,3.398,2143,3.398,2144,3.398,2145,3.398,2146,3.398,2147,3.398,2148,3.398,2149,3.398,2150,3.398,2151,3.398,2152,3.398,2153,3.398,2154,3.398,2155,3.398,2156,3.398,2157,3.398,2158,3.398,2159,3.398,2160,3.398,2161,3.398,2162,3.398,2163,3.398,2164,3.398,2165,3.398,2166,4.897,2167,3.398,2168,3.398,2169,3.398]],["title/classes/DataExporterWidgetObject.html",[78,0.11,2170,4.024]],["body/classes/DataExporterWidgetObject.html",[3,0.073,4,0.055,5,0.055,8,0.411,12,0.289,13,0.501,14,0.736,18,0.325,19,0.008,25,1.83,26,0.129,50,0.595,57,1.923,60,1.33,73,0.511,75,4.917,78,0.122,84,2.738,85,0.699,114,1.946,117,5.978,140,0.67,143,1.174,146,4.393,152,2.301,154,2.396,158,1.043,159,0.004,160,0.006,161,0.004,163,1.227,168,1.081,181,0.829,195,0.928,197,0.832,198,0.437,200,0.849,216,2.89,217,3.156,224,0.879,247,1.266,259,0.277,280,0.526,361,1.493,364,1.526,438,2.754,442,4.578,459,1.511,463,1.463,464,3.553,484,4.917,555,1.385,556,1.844,583,3.379,612,1.2,662,2.638,714,2.661,838,3.288,905,3.555,920,5.018,921,5.018,922,5.018,926,5.301,927,3.779,928,5.634,930,5.634,931,4.078,932,3.779,934,3.779,955,3.012,989,3.779,1018,3.287,1051,2.962,1114,2.706,1435,3.394,1848,5.866,1860,6.247,1997,6.157,2009,4.474,2031,5.39,2048,5.39,2061,5.39,2062,4.646,2170,5.887,2171,5.002,2172,3.631,2173,7.458,2174,7.458,2175,7.458,2176,7.458,2177,7.458,2178,7.458,2179,7.458,2180,7.458,2181,7.458,2182,6.642,2183,7.458,2184,5.002,2185,7.458,2186,5.002,2187,7.945,2188,4.474,2189,7.458,2190,5.002,2191,4.721,2192,7.458,2193,5.002,2194,4.721,2195,6.642,2196,7.458,2197,5.002,2198,7.458,2199,5.002,2200,7.458,2201,5.002,2202,5.726,2203,7.458,2204,5.002,2205,6.642,2206,7.458,2207,5.002,2208,5.002,2209,5.002,2210,5.002,2211,5.002,2212,5.002,2213,6.642,2214,5.002,2215,5.002,2216,5.002,2217,5.002,2218,5.002]],["title/classes/DatagridFilter.html",[78,0.11,1263,1.677]],["body/classes/DatagridFilter.html",[0,0.222,3,0.058,4,0.044,5,0.044,8,0.247,9,2.75,12,0.14,13,0.5,14,0.596,18,0.323,19,0.008,26,0.111,35,1.133,36,0.834,45,4.031,47,1.512,50,1.048,52,1.079,59,1.011,60,0.8,61,2.489,66,1.369,73,0.533,78,0.139,96,1.127,99,1.301,109,1.033,111,2.007,112,2.355,114,1.485,115,1.124,118,1.875,140,0.686,143,0.975,158,0.834,159,0.003,160,0.005,161,0.003,163,2.004,168,1.079,170,1.288,172,1.173,181,0.901,190,3.423,191,2.261,192,1.008,195,0.921,197,1.201,198,0.631,200,0.85,204,0.572,224,0.965,233,0.961,234,2.306,259,0.462,266,0.716,280,0.541,281,1.201,322,3.111,324,2.818,361,1.14,373,3.075,377,2.153,435,2.521,466,3.465,477,0.369,486,2.692,566,2.206,586,1.918,596,1.442,599,1.715,604,1.912,619,2.38,664,1.614,667,1.614,670,1.476,674,1.476,681,1.614,688,1.58,700,2.38,705,1.683,714,2.633,728,1.207,730,1.875,736,2.364,767,1.719,769,2.318,774,1.588,784,1.719,803,2.565,809,1.442,838,2.818,856,3.006,860,1.919,870,2.005,881,1.317,937,2.922,947,1.979,952,3.814,954,2.489,955,2.137,957,1.442,960,1.442,962,2.206,966,2.659,969,1.864,970,1.715,1022,2.153,1023,3.227,1029,1.919,1030,2.507,1147,1.207,1149,2.733,1174,2.102,1190,2.799,1197,2.266,1206,2.229,1229,2.509,1242,2.007,1250,1.157,1253,1.67,1254,1.715,1259,2.754,1260,1.715,1263,2.448,1265,2.866,1266,2.379,1267,2.77,1293,2.633,1321,1.979,1327,2.77,1349,1.864,1353,3.191,1354,2.922,1356,1.919,1489,2.509,1505,3.276,1536,2.206,1683,1.157,1715,2.692,1716,3.004,1717,3.184,1732,2.908,1754,2.454,1755,2.355,1757,2.692,1758,2.042,1759,4.204,1760,2.111,1761,2.565,1762,2.692,1763,2.565,1764,2.692,1765,2.692,1766,2.185,1788,3.834,1804,2.355,1869,3.905,1879,2.454,2011,3.782,2018,2.733,2219,4.276,2220,3.02,2221,4.619,2222,3.494,2223,4.619,2224,4.636,2225,6.439,2226,5.379,2227,4.254,2228,4.435,2229,3.691,2230,3.948,2231,3.921,2232,3.691,2233,4.046,2234,3.653,2235,3.691,2236,5.692,2237,2.185,2238,3.997,2239,3.494,2240,4.636,2241,3.997,2242,4.254,2243,3.997,2244,3.997,2245,3.653,2246,3.997,2247,3.494,2248,3.997,2249,3.653,2250,3.997,2251,3.111,2252,3.006,2253,3.997,2254,3.227,2255,3.653,2256,3.997,2257,3.997,2258,3.111,2259,3.997,2260,3.494,2261,3.353,2262,3.653,2263,4.636,2264,3.353,2265,3.997,2266,2.908,2267,5.692,2268,3.997,2269,3.997,2270,3.997,2271,3.997,2272,3.997,2273,3.243,2274,3.243,2275,3.243,2276,3.02,2277,3.02,2278,3.02,2279,4.3,2280,3.02,2281,3.243,2282,3.243,2283,3.243,2284,3.243,2285,3.243,2286,3.243,2287,5.379,2288,3.243,2289,3.243,2290,3.243,2291,3.243,2292,3.243,2293,3.243,2294,3.243,2295,3.243,2296,3.243,2297,2.185,2298,2.818,2299,4.619,2300,3.243,2301,2.841,2302,3.243,2303,3.243,2304,2.565,2305,3.243,2306,3.243]],["title/components/DatagridMultiSelectFilterComponent.html",[204,0.311,666,1.717]],["body/components/DatagridMultiSelectFilterComponent.html",[0,0.245,3,0.053,4,0.04,5,0.04,8,0.226,9,1.758,12,0.128,13,0.402,14,0.608,18,0.308,19,0.008,20,1.6,26,0.101,31,2.346,34,1.475,36,1.113,45,2.818,50,0.825,52,0.595,59,1.005,60,0.732,61,1.26,63,1.036,65,2.352,73,0.54,78,0.089,79,3.425,81,1.422,85,0.746,91,1.798,96,1.081,99,0.717,109,0.523,114,0.954,115,1.041,118,2.077,127,1.452,133,2.049,140,0.662,143,0.941,152,2.772,159,0.003,160,0.004,161,0.003,163,1.547,168,1.2,170,1.207,172,0.945,181,0.666,190,3.194,192,0.647,195,0.928,197,1.225,198,0.756,200,0.85,204,0.475,208,1.417,217,3.5,224,0.989,233,1.283,234,1.104,247,0.621,259,0.44,263,1.204,266,0.681,275,1.128,280,0.51,281,1.355,322,1.998,324,1.81,338,1.578,358,0.81,364,0.674,373,2.443,374,1.153,377,1.383,389,1.528,390,1.204,435,2.227,441,0.916,461,1.618,463,1.047,466,2.686,477,0.338,547,2.172,566,1.417,574,1.289,586,1.232,599,1.568,603,1.178,604,1.337,605,1.081,606,1.452,609,1.178,611,1.417,612,1.668,613,1.612,619,2.077,651,1.178,652,1.851,653,1.204,654,3.141,655,1.657,656,1.232,657,1.657,658,1.657,659,1.319,660,1.568,661,1.657,662,1.452,663,1.657,664,1.787,665,1.657,666,3.007,667,2.182,668,3.548,669,3.141,670,1.35,671,1.452,672,1.452,673,2.039,674,1.35,675,1.452,676,1.657,677,1.489,678,1.657,679,1.611,680,1.452,681,2.253,682,1.657,683,1.383,684,3.141,685,1.417,686,2.568,687,1.417,688,1.482,689,1.417,690,2.419,691,1.383,692,1.528,693,1.657,694,1.35,695,1.657,696,1.568,697,1.178,698,1.204,699,1.104,700,1.758,701,1.657,702,1.452,703,1.657,704,1.489,705,1.081,706,1.657,707,1.383,708,1.568,709,1.657,714,2.51,730,1.204,736,2.007,751,1.657,767,1.104,769,1.489,784,1.104,815,3.12,826,2.634,864,2.244,870,1.482,881,1.204,882,3.025,883,2.598,884,2.244,885,2.346,892,2.463,907,2.244,954,2.54,955,1.72,957,1.926,959,2.068,960,1.926,961,2.642,962,2.068,966,2.614,1008,4.448,1019,2.172,1022,1.383,1023,2.072,1029,1.825,1083,1.868,1149,1.755,1174,1.35,1190,2.443,1206,2.453,1223,1.568,1229,1.611,1242,1.289,1250,1.058,1259,2.274,1263,3.335,1265,2.772,1290,2.12,1293,2.12,1297,2.352,1327,1.528,1332,3.057,1337,2.174,1344,1.289,1353,2.231,1354,1.611,1489,1.611,1536,1.417,1566,1.26,1683,1.545,1684,1.81,1716,2.419,1717,3.249,1732,1.868,1734,3.025,1759,2.642,1869,2.154,2011,3.922,2018,1.755,2062,3.789,2134,1.81,2191,3.794,2219,3.937,2224,4.448,2227,3.425,2228,3.87,2229,4.061,2230,4.345,2231,3.912,2232,4.061,2233,4.927,2234,2.346,2235,3.541,2237,2.917,2239,2.244,2240,3.425,2242,3.425,2245,2.346,2247,2.244,2249,2.346,2251,1.998,2252,2.818,2254,2.072,2255,2.346,2258,3.446,2260,2.244,2261,2.154,2262,2.346,2263,3.425,2264,2.154,2266,1.868,2307,1.868,2308,3.789,2309,3.595,2310,4.032,2311,4.669,2312,4.032,2313,4.032,2314,3.025,2315,3.656,2316,2.762,2317,3.656,2318,3.656,2319,3.656,2320,3.656,2321,3.656,2322,4.927,2323,3.656,2324,4.032,2325,3.794,2326,3.595,2327,3.24,2328,2.762,2329,2.762,2330,2.762,2331,2.762,2332,2.762,2333,2.762,2334,2.762,2335,2.762,2336,2.762,2337,4.481,2338,3.656,2339,4.032,2340,2.762,2341,2.762,2342,2.762,2343,2.762,2344,3.12,2345,2.072,2346,1.868,2347,2.072,2348,1.998,2349,4.927,2350,2.762,2351,2.762,2352,3.794,2353,2.762,2354,2.463,2355,2.072,2356,2.598,2357,2.762,2358,2.762,2359,2.762,2360,2.762,2361,2.762,2362,2.762,2363,2.762,2364,4.032,2365,2.762,2366,2.762,2367,2.762,2368,2.762,2369,2.762,2370,2.762,2371,2.762,2372,2.762,2373,2.762,2374,2.762,2375,2.762,2376,2.762,2377,2.762,2378,2.762,2379,2.762,2380,4.331,2381,5.624,2382,3.425]],["title/interfaces/DatagridMultiSelectFilterConfig.html",[0,0.177,2322,3.227]],["body/interfaces/DatagridMultiSelectFilterConfig.html",[0,0.298,2,1.146,3,0.077,4,0.058,5,0.058,12,0.185,13,0.519,18,0.268,19,0.008,20,1.873,26,0.118,31,3.386,34,1.464,36,1.1,50,0.966,52,0.859,59,0.911,65,2.325,73,0.533,78,0.128,79,4.415,81,1.405,85,0.962,91,1.777,96,0.823,109,0.754,115,1.036,118,1.738,127,2.095,133,2.034,140,0.474,143,0.674,152,2.892,159,0.004,160,0.006,161,0.004,168,1.369,170,1.194,195,0.528,198,0.461,200,0.846,204,0.471,233,1.268,259,0.486,266,0.826,275,1.628,280,0.558,281,1.434,364,0.973,389,2.205,435,1.594,461,0.915,477,0.487,547,2.37,574,1.86,599,2.264,612,0.953,613,1.594,652,1.841,664,1.496,666,2.895,667,1.496,668,3.222,673,2.156,681,1.95,714,1.594,751,2.391,815,3.789,826,2.875,864,3.239,870,1.465,881,1.738,882,3.899,883,3.75,884,3.239,885,3.386,892,3.554,907,3.239,954,2.37,955,1.7,957,1.903,959,2.044,960,1.903,961,2.611,962,2.044,966,2.541,1008,4.912,1019,2.37,1029,1.992,1083,2.695,1206,1.628,1223,2.264,1250,1.527,1263,2.541,1265,2.75,1290,2.095,1293,2.095,1297,3.032,1332,3.342,1337,2.149,1344,1.86,1566,1.818,1683,1.527,1684,2.611,1716,3.469,1717,3.576,1734,2.991,2011,3.813,2062,4.184,2134,2.611,2191,3.75,2219,2.46,2229,2.695,2230,2.884,2231,2.533,2232,2.695,2235,3.515,2237,2.884,2258,2.884,2307,2.695,2308,4.184,2309,3.554,2310,3.986,2311,4.634,2312,3.986,2313,3.986,2314,2.991,2322,5.441,2324,3.986,2325,3.75,2326,3.554,2337,4.89,2339,3.986,2344,3.789,2345,2.991,2346,2.695,2347,2.991,2348,2.884,2349,6.132,2350,3.986,2351,3.986,2352,4.89,2353,3.986,2354,3.554,2355,2.991,2356,3.75,2357,3.986,2358,3.986,2359,3.986,2360,3.986,2361,3.986,2362,3.986,2363,3.986,2364,5.197,2365,3.986,2366,3.986,2367,3.986,2368,3.986,2369,3.986,2370,3.986,2371,3.986,2372,3.986,2373,3.986,2374,3.986,2375,3.986,2376,3.986,2377,3.986,2378,3.986,2379,3.986]],["title/components/DatagridNumericFilterComponent.html",[204,0.311,670,1.677]],["body/components/DatagridNumericFilterComponent.html",[0,0.14,3,0.052,4,0.04,5,0.04,9,2.058,12,0.126,13,0.471,14,0.652,18,0.319,19,0.008,26,0.1,27,1.185,36,1.1,40,2.544,45,2.785,50,0.628,52,0.585,59,1.046,60,0.72,61,1.239,63,1.02,73,0.473,78,0.088,85,0.873,87,1.064,96,1.073,99,0.706,101,0.958,109,1.16,114,0.939,115,0.674,118,1.185,140,0.795,143,0.977,152,1.927,154,1.298,159,0.003,160,0.004,161,0.003,163,1.532,168,1.016,170,1.193,172,1.436,181,0.658,190,3.182,191,2.095,192,0.637,195,0.94,197,1.315,198,0.754,200,0.817,204,0.471,208,1.394,217,3.49,224,0.997,234,1.086,247,0.611,259,0.438,263,1.185,266,0.674,275,1.11,280,0.565,281,1.272,322,1.966,324,1.781,338,1.56,358,0.797,364,0.664,373,2.665,374,1.134,377,1.361,389,1.503,390,1.185,435,2.078,441,0.901,461,1.616,463,1.035,466,2.665,477,0.332,555,0.75,566,1.394,574,1.268,586,1.212,603,1.159,604,1.321,605,1.064,606,1.429,609,1.159,611,1.394,612,1.669,613,1.593,619,2.058,651,1.159,652,1.268,653,1.185,654,3.117,655,1.63,656,1.212,657,1.63,658,1.63,659,1.298,660,1.543,661,1.63,662,1.429,663,1.63,664,1.02,665,1.63,666,1.361,667,2.17,668,1.429,669,3.117,670,2.705,671,3.709,672,1.429,673,1.688,674,1.329,675,1.429,676,1.63,677,1.465,678,1.63,679,1.585,680,1.429,681,2.299,682,1.63,683,1.361,684,3.117,685,1.394,686,2.544,687,1.394,688,2.593,689,1.394,690,2.39,691,1.361,692,1.503,693,1.63,694,2.827,695,1.63,696,1.543,697,1.159,698,1.185,699,1.086,700,1.738,701,1.63,702,1.429,703,1.63,704,1.465,705,1.847,706,1.63,707,1.361,708,1.543,709,1.63,714,2.5,730,1.185,736,1.991,767,1.086,769,1.465,784,1.086,810,2.039,826,1.503,840,1.394,856,3.867,870,0.999,881,1.185,910,2.325,954,1.239,966,2.312,1019,2.637,1022,1.361,1023,2.039,1029,1.808,1030,2.362,1033,1.239,1149,1.727,1174,1.329,1190,2.42,1198,2.308,1206,2.441,1229,1.585,1242,1.268,1245,1.429,1250,1.041,1259,2.253,1263,3.327,1265,2.632,1327,1.503,1343,1.838,1344,1.268,1353,2.204,1354,1.585,1367,2.044,1411,3.207,1489,1.585,1536,1.394,1628,3.107,1716,2.83,1717,2.753,1732,1.838,1759,2.611,1869,2.119,2011,3.676,2016,2.785,2018,1.727,2134,1.781,2219,4.238,2224,4.414,2227,3.385,2228,3.834,2229,4.041,2230,3.414,2231,3.895,2232,4.041,2233,4.889,2234,2.308,2235,3.514,2237,2.883,2239,2.208,2240,3.385,2242,3.385,2245,2.308,2247,2.208,2249,2.308,2251,1.966,2252,3.298,2254,2.039,2255,2.308,2258,3.414,2260,2.208,2261,2.119,2262,2.308,2263,3.385,2264,2.119,2266,1.838,2307,1.838,2308,2.883,2314,2.99,2316,2.717,2326,3.553,2327,3.188,2328,2.717,2329,2.717,2330,2.717,2331,2.717,2332,2.717,2333,2.717,2334,2.717,2335,2.717,2336,2.717,2340,2.717,2341,2.717,2342,2.717,2343,2.717,2346,2.695,2347,2.039,2348,1.966,2355,2.039,2383,5.535,2384,5.535,2385,4.718,2386,5.535,2387,5.535,2388,5.535,2389,5.575,2390,3.597,2391,4.675,2392,5.275,2393,3.597,2394,3.597,2395,3.597,2396,3.597,2397,5.533,2398,3.597,2399,5.942,2400,3.188,2401,3.597,2402,3.632,2403,3.188,2404,4.28,2405,4.675,2406,3.188,2407,5.535,2408,3.597,2409,4.675,2410,3.597,2411,3.597,2412,3.597,2413,3.597,2414,3.597,2415,3.597,2416,3.597,2417,2.208,2418,2.208,2419,2.919,2420,2.919,2421,3.188,2422,3.985,2423,5.535,2424,4.718,2425,3.985,2426,3.985,2427,3.188,2428,5.535,2429,3.188,2430,4.675,2431,3.188,2432,3.188,2433,3.188,2434,2.919,2435,3.188,2436,3.188,2437,2.919,2438,3.188,2439,3.188,2440,2.423,2441,4.675,2442,4.675,2443,3.188,2444,3.188,2445,3.188,2446,3.188,2447,3.188,2448,3.188,2449,4.28,2450,4.675,2451,3.597,2452,2.919]],["title/interfaces/DatagridNumericFilterConfig.html",[0,0.177,2397,3.43]],["body/interfaces/DatagridNumericFilterConfig.html",[0,0.206,2,1.15,3,0.077,4,0.059,5,0.059,8,0.327,9,2.272,12,0.185,13,0.612,14,0.67,18,0.295,19,0.008,26,0.118,27,1.744,36,1.438,40,2.808,50,0.821,52,0.862,59,0.967,73,0.327,78,0.129,85,1.072,87,2.039,96,0.826,101,1.41,109,1.235,140,0.828,143,0.676,152,2.128,154,1.91,159,0.004,160,0.006,161,0.004,168,1.248,170,1.198,172,1.22,200,0.797,204,0.472,259,0.487,266,0.828,275,1.634,280,0.603,281,1.35,364,0.977,373,2.672,389,2.212,435,2.083,461,0.918,477,0.489,574,1.866,612,0.957,613,1.599,667,1.501,670,2.546,671,3.493,673,1.692,681,1.501,688,2.655,694,2.832,714,1.599,826,2.212,840,2.052,856,4.049,881,1.744,910,2.333,966,2.083,1019,2.642,1029,1.996,1030,2.608,1206,1.634,1245,2.103,1250,1.533,1263,2.546,1265,2.599,1343,2.705,1344,1.866,1367,2.052,1411,2.468,1628,3.359,1716,3.817,1717,3.38,2011,3.474,2016,2.795,2134,2.621,2219,2.468,2229,2.705,2231,2.542,2232,2.705,2235,3.523,2237,2.894,2252,2.795,2258,2.894,2307,2.705,2308,3.769,2314,3.001,2326,3.566,2346,3.523,2347,3.001,2348,2.894,2355,3.001,2383,4.692,2384,4.692,2385,3.999,2386,4.692,2387,4.692,2388,4.692,2389,6.006,2397,6.136,2399,6.222,2402,3.641,2405,4.692,2407,4.692,2409,4.692,2417,3.25,2418,3.25,2419,4.296,2420,5.594,2421,4.692,2422,5.209,2423,6.796,2424,5.793,2425,5.209,2426,5.209,2427,4.692,2428,6.796,2429,4.692,2430,6.111,2431,4.692,2432,4.692,2433,4.692,2434,4.296,2435,4.692,2436,4.692,2437,4.296,2438,4.692,2439,4.692,2440,3.566,2441,6.111,2442,6.111,2443,4.692,2444,4.692,2445,4.692,2446,4.692,2447,4.692,2448,4.692]],["title/components/DatagridSelectFilterComponent.html",[204,0.311,672,1.803]],["body/components/DatagridSelectFilterComponent.html",[0,0.148,3,0.055,4,0.042,5,0.042,8,0.235,9,1.81,12,0.133,13,0.414,14,0.583,18,0.308,19,0.008,20,1.489,26,0.094,30,1.463,34,1.661,35,1.557,36,1.146,45,2.901,50,0.841,52,0.619,59,0.981,60,0.762,61,1.311,63,1.078,65,2.421,66,0.915,73,0.527,78,0.093,81,1.463,85,0.902,96,1.217,99,1.078,109,0.922,114,0.992,115,0.956,118,2.124,140,0.754,143,0.997,152,2.63,159,0.003,160,0.005,161,0.003,163,1.582,168,1.049,170,1.243,172,1.141,181,0.685,190,3.223,192,0.673,195,0.924,197,1.174,198,0.733,200,0.866,204,0.484,208,1.474,217,3.523,224,0.989,233,1.321,234,1.149,243,1.549,247,0.646,259,0.432,263,1.253,266,0.593,275,1.174,280,0.533,281,1.245,322,2.079,324,1.883,338,1.624,358,0.843,364,0.702,373,2.499,374,1.199,377,1.439,389,1.59,390,1.253,435,2.262,441,0.953,461,1.624,463,1.078,466,2.736,477,0.351,555,0.793,566,1.474,574,1.341,586,1.281,599,1.632,603,1.226,604,1.376,605,1.125,606,1.511,609,1.226,611,1.474,612,1.675,613,1.659,619,2.124,651,1.226,652,1.321,653,1.253,654,3.2,655,1.724,656,1.281,657,1.724,658,1.724,659,1.372,660,1.632,661,1.724,662,1.511,663,1.724,664,1.828,665,1.724,666,1.439,667,2.212,668,1.511,669,3.2,670,1.405,671,1.511,672,3.196,673,2.268,674,1.405,675,1.511,676,1.724,677,1.549,678,1.724,679,1.676,680,1.511,681,2.123,682,1.724,683,1.439,684,3.2,685,1.474,686,2.626,687,1.474,688,1.525,689,1.474,690,2.489,691,1.439,692,1.59,693,1.724,694,1.405,695,1.724,696,1.632,697,1.226,698,1.253,699,1.149,700,1.81,701,1.724,702,1.511,703,1.724,704,1.549,705,1.125,706,1.724,707,1.439,708,1.632,709,1.724,714,2.535,728,1.149,730,1.253,736,2.044,767,1.149,769,1.549,784,1.149,826,2.296,840,1.474,870,1.056,881,1.253,954,1.311,955,1.77,957,1.982,959,2.129,960,1.982,961,2.719,962,2.129,966,2.43,1019,2.222,1022,1.439,1023,2.156,1029,1.867,1030,2.439,1149,1.826,1174,1.405,1190,2.499,1206,2.483,1207,4.15,1229,1.676,1242,1.341,1250,1.101,1259,2.326,1263,3.352,1265,2.813,1293,2.182,1295,2.901,1327,1.59,1332,2.975,1337,2.237,1344,1.341,1353,2.695,1354,1.676,1489,1.676,1536,1.474,1716,2.489,1717,3.301,1732,1.943,1734,3.114,1751,3.525,1759,2.719,1869,2.241,2011,3.733,2018,1.826,2134,2.719,2202,2.562,2219,3.913,2224,4.532,2227,3.525,2228,3.958,2229,4.111,2230,4.398,2231,3.955,2232,4.111,2233,3.904,2234,2.441,2235,3.608,2237,3.003,2239,2.335,2240,3.525,2242,3.525,2245,2.441,2247,2.335,2249,2.441,2251,2.079,2252,2.008,2254,2.156,2255,2.441,2258,2.079,2260,2.335,2261,2.241,2262,2.441,2263,3.525,2264,3.799,2266,1.943,2307,1.943,2308,3.86,2314,3.114,2316,2.873,2328,2.873,2329,2.873,2330,2.873,2331,2.873,2332,2.873,2333,2.873,2334,2.873,2335,2.873,2336,2.873,2340,2.873,2341,2.873,2342,2.873,2343,2.873,2344,3.707,2345,2.156,2346,2.806,2347,2.156,2348,2.079,2355,2.156,2380,4.457,2381,5.73,2382,3.525,2391,3.371,2400,3.371,2417,4.335,2440,2.562,2453,5.335,2454,4.15,2455,4.869,2456,5.335,2457,4.869,2458,5.715,2459,4.583,2460,3.804,2461,3.371,2462,3.804,2463,3.804,2464,3.804,2465,3.804,2466,4.869,2467,3.086,2468,3.371,2469,4.869,2470,6.259,2471,5.715,2472,2.873,2473,3.371,2474,3.086,2475,3.371,2476,3.086,2477,2.873,2478,3.371,2479,5.715,2480,2.873,2481,3.086,2482,3.371,2483,5.493]],["title/interfaces/DatagridSelectFilterConfig.html",[0,0.177,2467,3.684]],["body/interfaces/DatagridSelectFilterConfig.html",[0,0.212,2,1.181,3,0.079,4,0.06,5,0.06,8,0.336,12,0.19,13,0.529,14,0.579,18,0.287,19,0.008,20,1.961,26,0.113,30,1.448,34,1.653,35,1.541,36,1.463,50,0.977,52,0.885,59,0.835,65,2.397,66,1.687,73,0.48,78,0.132,81,1.448,85,1.086,96,1.325,99,1.067,109,1.003,115,0.992,118,1.792,140,0.698,143,0.694,152,2.882,159,0.005,160,0.006,161,0.005,168,1.264,170,1.23,172,0.963,200,0.871,204,0.481,233,1.307,243,2.857,259,0.481,266,0.757,275,1.678,280,0.576,281,1.291,364,1.003,389,2.272,435,1.642,461,0.943,477,0.502,555,1.134,574,1.917,599,2.333,612,0.983,613,1.642,664,1.541,667,1.541,672,3.259,673,2.27,714,1.642,728,1.642,826,2.932,840,2.719,881,1.792,955,1.753,957,1.962,959,2.107,960,1.962,961,2.692,962,2.107,966,2.346,1019,2.417,1029,2.031,1030,2.654,1206,1.678,1207,4.108,1250,1.574,1263,2.591,1265,2.839,1293,2.16,1295,2.871,1332,3.085,1337,2.215,1344,1.917,1353,2.932,1716,3.519,1717,3.617,1734,3.082,1751,4.984,2011,3.519,2134,3.473,2202,4.726,2219,2.535,2229,2.778,2230,2.972,2231,2.611,2232,2.778,2235,3.584,2237,2.972,2264,3.203,2307,2.778,2308,4.245,2314,3.082,2344,4.305,2345,3.082,2346,3.584,2347,3.082,2348,2.972,2355,3.082,2417,4.307,2440,3.663,2453,5.3,2454,4.108,2455,4.819,2456,5.3,2457,4.819,2458,4.819,2459,3.865,2466,4.819,2467,5.692,2468,6.218,2469,6.218,2470,7.843,2471,6.884,2472,4.108,2473,4.819,2474,4.412,2475,4.819,2476,4.412,2477,4.108,2478,4.819,2479,6.884,2480,4.108,2481,4.412,2482,4.819]],["title/components/DatagridStringFilterComponent.html",[204,0.311,674,1.677]],["body/components/DatagridStringFilterComponent.html",[0,0.163,3,0.061,4,0.046,5,0.046,9,1.934,12,0.146,13,0.443,14,0.64,18,0.308,19,0.008,26,0.107,27,1.375,45,3.099,50,0.497,52,0.955,59,1.005,60,0.836,61,1.438,63,1.183,66,1.004,73,0.588,78,0.102,85,0.821,96,1.149,99,0.819,109,0.597,114,1.089,115,0.75,118,1.375,140,0.61,143,1.028,158,0.871,159,0.003,160,0.005,161,0.003,163,1.666,168,1.105,170,1.328,172,1.374,181,0.732,190,3.288,192,0.739,195,0.931,197,1.29,198,0.76,200,0.845,204,0.505,208,1.618,217,3.576,224,1.003,234,1.261,247,0.709,259,0.43,263,1.375,266,0.733,275,1.288,280,0.559,281,1.29,322,2.282,324,2.066,338,1.736,346,1.658,358,0.925,364,1.252,373,2.631,374,1.316,377,1.579,389,1.745,390,1.375,435,2.05,441,1.045,461,1.636,463,1.152,466,2.854,477,0.385,555,0.871,566,1.618,574,1.472,586,1.406,603,1.345,604,1.47,605,1.234,606,1.658,609,1.345,611,1.618,612,1.69,613,1.773,619,2.237,633,1.261,651,1.345,652,1.411,653,1.375,654,3.337,655,1.892,656,1.406,657,1.892,658,1.892,659,1.506,660,1.791,661,1.892,662,1.658,663,1.892,664,1.183,665,1.892,666,1.579,667,2.282,668,1.658,669,3.337,670,1.542,671,1.658,672,1.658,673,1.024,674,2.866,675,1.658,676,1.892,677,1.7,678,1.892,679,1.84,680,1.658,681,2.2,682,1.892,683,1.579,684,3.337,685,1.618,686,2.765,687,1.618,688,1.63,689,1.618,690,2.66,691,1.579,692,1.745,693,1.892,694,1.542,695,1.892,696,1.791,697,1.345,698,1.375,699,1.261,700,1.934,701,1.892,702,1.658,703,1.892,704,1.7,705,1.234,706,1.892,707,1.579,708,1.791,709,1.892,714,2.431,730,1.375,736,2.132,748,2.737,767,1.261,769,1.7,784,1.261,808,4.871,826,2.453,870,1.159,881,1.375,954,1.438,966,2.344,1019,2.339,1022,1.579,1023,2.366,1029,1.965,1147,1.261,1149,2.004,1174,1.542,1190,2.631,1206,2.551,1229,1.84,1242,2.393,1250,1.209,1259,2.449,1263,3.392,1265,2.683,1299,2.066,1327,1.745,1344,1.472,1353,3.078,1354,1.84,1489,1.84,1536,1.618,1716,2.66,1717,2.992,1732,2.133,1759,2.905,1869,2.459,2011,3.825,2018,2.004,2134,2.066,2219,3.935,2224,4.727,2227,3.767,2228,4.167,2229,4.224,2230,3.711,2231,4.053,2232,4.224,2233,4.172,2234,2.679,2235,3.763,2237,3.208,2239,2.563,2240,3.767,2242,3.767,2245,2.679,2247,2.563,2249,2.679,2251,2.282,2252,2.204,2254,2.366,2255,2.679,2258,2.282,2260,2.563,2261,2.459,2262,2.679,2263,3.767,2264,3.999,2266,2.133,2307,2.133,2308,3.208,2314,3.327,2316,3.154,2328,3.154,2329,3.154,2330,3.154,2331,3.154,2332,3.154,2333,3.154,2334,3.154,2335,3.154,2336,3.154,2340,3.154,2341,3.154,2342,3.154,2343,3.154,2346,2.999,2347,2.366,2348,2.282,2355,2.366,2403,3.7,2406,3.7,2417,2.563,2440,2.812,2461,3.7,2477,3.154,2480,3.154,2484,5.87,2485,4.175,2486,5.202,2487,6.702,2488,6.528,2489,4.175,2490,5.202,2491,6.017,2492,4.175,2493,4.175,2494,3.767,2495,3.154,2496,5.202,2497,4.763,2498,3.7,2499,3.387,2500,5.202,2501,5.202,2502,3.7,2503,5.202,2504,3.7,2505,5.202,2506,3.7,2507,2.967,2508,3.7,2509,5.202,2510,3.7,2511,3.7]],["title/interfaces/DatagridStringFilterConfig.html",[0,0.177,2499,3.684]],["body/interfaces/DatagridStringFilterConfig.html",[0,0.23,2,1.284,3,0.086,4,0.065,5,0.065,8,0.365,12,0.207,13,0.558,14,0.61,18,0.259,19,0.008,26,0.123,27,1.947,50,0.703,52,1.204,59,0.88,66,1.421,73,0.583,78,0.144,85,1.034,96,0.922,143,0.755,158,1.233,159,0.005,160,0.006,161,0.005,168,1.314,170,1.337,172,1.046,200,0.833,204,0.507,259,0.482,266,0.872,275,1.824,280,0.598,281,1.342,346,2.347,364,1.365,389,2.47,461,1.025,477,0.546,555,1.233,574,2.083,612,1.068,613,1.785,633,1.785,667,1.675,674,2.732,748,3.449,808,5.132,826,3.091,881,1.947,966,2.234,1019,2.549,1029,2.141,1147,1.785,1206,1.824,1242,2.846,1250,1.711,1263,2.732,1265,2.492,1299,2.925,1344,2.083,1353,3.374,1716,3.659,1717,3.559,2011,3.659,2134,2.925,2219,2.755,2229,3.019,2231,2.838,2232,3.019,2235,3.779,2237,3.23,2264,3.482,2307,3.019,2308,4.043,2314,3.35,2346,3.779,2347,3.35,2348,3.23,2355,3.35,2417,3.628,2440,3.981,2477,4.465,2480,4.465,2486,5.238,2487,7.146,2488,6.556,2490,5.238,2491,6.556,2494,4.747,2495,4.465,2496,6.556,2497,6.002,2498,6.556,2499,6.002,2500,6.556,2501,6.556,2502,5.238,2503,6.556,2504,5.238,2505,6.556,2506,5.238,2507,4.201,2508,5.238,2509,6.556,2510,5.238,2511,5.238]],["title/interfaces/DetailPane.html",[0,0.177,1342,2.482]],["body/interfaces/DetailPane.html",[0,0.278,1,2.218,2,0.444,3,0.03,4,0.023,5,0.023,8,0.127,9,1.844,10,3.232,12,0.272,13,0.381,14,0.169,15,3.414,18,0.25,19,0.008,20,1.165,22,0.705,25,1.065,26,0.113,27,1.663,28,1.045,30,1.78,34,1.625,36,1.7,39,0.982,40,2.457,42,0.902,47,0.774,50,0.937,52,0.822,53,1.732,54,1.045,55,3.158,56,1.79,59,0.873,60,1.208,61,2.201,62,0.756,63,1.71,64,2.059,66,0.815,67,0.902,69,2.986,71,0.849,73,0.48,74,2.024,77,1.381,78,0.106,80,1.013,81,1.156,83,1.252,84,1.928,85,0.607,86,2.77,87,1.493,88,0.793,90,3.759,91,0.689,93,3.47,96,1.081,99,0.991,101,1.995,102,0.833,108,1.765,109,1.231,111,1.973,114,0.534,115,0.957,118,1.844,120,1.08,127,1.724,129,1.454,133,1.002,136,0.813,137,2.218,138,1.046,140,0.803,141,1.381,143,0.816,148,1.844,149,1.08,152,1.971,154,2.019,155,0.954,158,1.49,159,0.003,160,0.003,161,0.002,168,0.333,170,0.463,172,1.525,173,1.118,181,0.542,192,0.362,194,1.768,195,0.205,198,0.379,200,0.401,202,0.982,203,0.878,204,0.532,210,2.149,224,0.48,233,0.815,234,1.024,243,0.833,247,0.347,250,1.118,259,0.423,260,0.631,266,0.935,269,1.118,270,1.853,272,0.867,280,0.592,281,1.062,286,2.84,321,0.756,327,0.878,336,0.954,338,1.283,344,2.528,358,0.454,361,1.011,364,1.352,369,1.678,374,0.645,377,2.117,378,2.354,390,1.117,392,1.257,438,1.252,459,1.024,461,0.355,463,0.665,477,0.189,508,1.496,512,0.902,521,1.002,523,1.844,538,1.732,544,0.793,546,1.282,547,0.705,555,1.258,556,0.568,570,1.53,594,2.337,596,1.223,603,0.659,604,0.849,605,1.283,609,0.659,612,0.784,613,0.618,619,1.117,623,1.678,633,1.69,634,2.424,650,1.08,652,1.044,656,1.142,664,0.58,667,0.58,673,0.502,697,0.659,698,0.674,699,1.024,705,0.605,728,0.618,730,1.117,736,1.849,738,1.768,741,0.774,743,1.369,768,1.257,771,0.833,779,0.774,784,1.024,794,1.013,809,0.738,836,1.013,840,0.793,862,0.982,870,0.568,953,1.913,954,1.496,955,2.363,957,0.738,958,3.082,959,2.903,960,2.501,966,1.311,969,0.954,970,0.878,972,1.814,973,1.08,974,1.08,993,3.028,1005,2.225,1015,0.738,1018,0.902,1019,2.9,1021,2.838,1022,1.282,1026,2.024,1028,1.417,1029,0.981,1030,1.282,1033,2.303,1051,1.347,1055,0.855,1058,0.902,1068,0.982,1074,1.821,1113,0.982,1114,1.381,1122,0.954,1124,3.432,1174,0.756,1190,0.793,1206,0.631,1218,0.855,1223,1.454,1226,2.759,1227,1.08,1228,1.922,1229,1.494,1230,1.922,1231,2.521,1232,1.732,1233,2.225,1234,1.16,1235,1.08,1236,1.16,1237,2.084,1238,1.732,1239,2.218,1240,2.536,1241,1.16,1242,2.252,1243,1.922,1244,1.922,1245,0.813,1246,1.16,1247,1.853,1248,2.46,1249,1.922,1250,0.592,1251,1.922,1252,1.16,1253,1.417,1254,0.878,1255,1.08,1256,1.118,1257,1.045,1258,1.045,1259,0.738,1260,0.878,1261,0.927,1262,0.954,1263,1.252,1264,1.013,1265,0.631,1266,2.339,1267,2.339,1268,2.149,1269,2.373,1270,3.451,1271,3.285,1272,3.059,1273,1.118,1274,2.373,1275,1.118,1276,1.08,1277,0.878,1278,1.013,1279,0.954,1280,3.131,1281,1.853,1282,2.218,1283,1.118,1284,1.118,1285,1.118,1286,2.759,1287,1.08,1288,1.381,1289,4.409,1290,2.005,1291,1.853,1292,1.118,1293,3.438,1294,2.373,1295,1.79,1296,3.082,1297,1.494,1298,1.16,1299,1.678,1300,1.16,1301,1.79,1302,1.16,1303,2.424,1304,2.579,1305,2.424,1306,1.853,1307,1.16,1308,1.16,1309,1.922,1310,1.118,1311,2.759,1312,1.16,1313,2.084,1314,1.853,1315,1.922,1316,1.16,1317,1.922,1318,1.922,1319,2.759,1320,2.46,1321,1.013,1322,0.982,1323,1.118,1324,1.16,1325,1.16,1326,0.902,1327,1.814,1328,3.172,1329,1.628,1330,3.871,1331,2.46,1332,0.813,1333,1.16,1334,1.16,1335,4.619,1336,1.118,1337,2.279,1338,3.419,1339,4.247,1340,1.118,1341,1.922,1342,2.759,1343,1.732,1344,1.195,1345,1.16,1346,1.16,1347,1.045,1348,2.77,1349,0.954,1350,1.16,1351,0.982,1352,2.373,1353,0.855,1354,0.902,1355,1.16,1356,2.084,1357,1.16,1358,1.118,1359,1.922,1360,1.732,1361,1.16,1362,1.16,1363,1.628,1364,1.045,1365,1.16,1366,1.16,1367,0.793,1368,1.16,1369,1.853,1370,2.46,1371,1.16,1372,1.16,1373,1.118,1374,1.79,1375,1.08,1376,1.79,1377,1.08,1378,2.46,1379,1.16,1380,1.013,1381,1.08,1382,1.16,1383,1.922,1384,1.16,1385,1.16,1386,1.16,1387,1.16,1388,1.16,1389,1.16,1390,1.853,1391,1.16,1392,2.46,1393,1.16,1394,1.16,1395,1.118,1396,2.862,1397,2.218,1398,1.16,1399,1.118,1400,1.08,1401,1.118,1402,1.16,1403,1.16,1404,1.118,1405,1.922,1406,1.16,1407,1.16,1408,1.922,1409,1.16,1410,1.16,1411,0.954,1412,1.16,1413,1.16,1414,1.16,1415,1.16,1416,3.788,1417,1.922,1418,1.16,1419,1.16,1420,1.16,1421,1.922,1422,1.16,1423,1.922,1424,1.922,1425,1.16,1426,1.16,1427,1.16,1428,1.922,1429,1.16,1430,2.862,1431,1.922,1432,1.922,1433,1.16,1434,1.16,1435,1.045,1436,1.16,1437,1.16,1438,1.16,1439,1.16,1440,1.16,1441,1.16,1442,1.922,1443,1.922,1444,1.922,1445,1.922,1446,2.46,1447,1.16,1448,1.16,1449,1.16,1450,1.16,1451,1.922,1452,1.922,1453,2.862,1454,1.16,1455,1.16,1456,1.16,1457,1.16,1458,1.16,1459,2.536,1460,3.419,1461,3.172,1462,1.922,1463,1.16,1464,1.922,1465,2.46,1466,1.16,1467,2.46,1468,1.16,1469,2.862,1470,1.922,1471,1.16,1472,1.16,1473,1.16,1474,1.922,1475,1.118,1476,1.16,1477,1.013,1478,1.16,1479,1.16,1480,1.16,1481,1.16,1482,1.922,1483,2.354,1484,1.16,1485,1.16,1486,1.16,1487,1.16,1488,1.16,1489,1.494,1490,1.16,1491,1.16,1492,1.16,1493,2.46,1494,1.16,1495,1.16,1496,1.118,1497,1.732,1498,1.16,1499,1.16,1500,1.16,1501,1.16,1502,1.16,1503,1.16,1504,1.16,1505,1.454,1506,1.16,1507,1.16,1508,1.16,1509,1.16,1510,1.08,1511,1.16,1512,1.16,1513,1.922,1514,1.16,1515,1.16,1516,1.16,1517,1.16,1518,1.16,1519,0.982,1520,1.16,1521,1.013,1522,1.16,1523,1.16,1524,0.982,1525,1.16,1526,1.16,1527,1.16,1528,1.16,1529,1.16,1530,1.16,1531,1.16,1532,1.16,1533,1.16,1534,1.16,1535,1.16,1536,0.793,1537,1.16,1538,1.16,1539,1.853,1540,1.16,1541,1.16,1542,1.16,1543,1.16,1544,1.16,1545,1.16,1546,1.16,1547,1.16,1548,1.922,1549,1.922,1550,1.922,1551,1.16,1552,2.292,1553,2.862,1554,1.922,1555,1.16,1556,1.16,1557,1.16,1558,1.16,1559,1.16,1560,1.16,1561,1.08,1562,1.16,1563,1.16,1564,1.16,1565,1.16,1566,0.705,1567,1.16,1568,1.16,1569,1.922,1570,1.16,1571,2.46,1572,1.16,1573,1.16,1574,1.16,1575,1.922,1576,1.16,1577,1.16,1578,1.922,1579,1.922,1580,1.16,1581,1.16,1582,1.08,1583,1.118,1584,1.16,1585,1.16,1586,1.16,1587,1.922,1588,1.922,1589,1.16,1590,1.16,1591,1.922,1592,1.16,1593,1.16,1594,1.16,1595,1.16,1596,1.16,1597,1.16,1598,1.16,1599,1.118,1600,1.16,1601,1.16,1602,1.16,1603,1.16,1604,1.16,1605,1.922,1606,1.16,1607,1.16,1608,1.16,1609,1.16,1610,1.16,1611,1.16,1612,1.16,1613,1.16,1614,1.16,1615,1.922,1616,2.862,1617,2.46,1618,1.16,1619,1.16,1620,1.922,1621,1.16,1622,1.16,1623,1.16,1624,1.16,1625,1.16,1626,1.16,1627,1.16,1628,1.252,1629,1.922,1630,1.16,1631,1.16,1632,1.16,1633,1.118,1634,1.16,1635,1.16,1636,1.16,1637,1.16,1638,1.16,1639,1.16,1640,1.118,1641,1.16,1642,1.16,1643,1.16,1644,1.16,1645,1.16,1646,1.16,1647,2.862,1648,1.16,1649,1.16,1650,1.16,1651,1.16,1652,1.16,1653,1.16,1654,1.118,1655,1.16,1656,1.16,1657,1.922,1658,1.16,1659,1.922,1660,1.16,1661,1.16,1662,1.922,1663,1.16,1664,1.16,1665,1.16,1666,1.16,1667,1.16,1668,2.46,1669,1.16,1670,1.16,1671,1.16,1672,1.16,1673,1.16,1674,0.833,1675,1.16,1676,1.16,1677,1.16,1678,1.16,1679,1.16,1680,1.16,1681,1.16,1682,1.16,1683,0.981,1684,1.013,1685,1.118,1686,1.16,1687,1.16,1688,1.013,1689,1.16,1690,1.16,1691,1.922,1692,3.172,1693,0.927,1694,1.16,1695,1.16,1696,1.16,1697,1.16,1698,1.16,1699,1.16,1700,1.922,1701,1.16,1702,1.16,1703,1.732,1704,1.16,1705,1.16,1706,1.08,1707,1.16,1708,1.16,1709,1.08,1710,1.16,1711,1.16,1712,1.16]],["title/interfaces/DetailPaneConfig.html",[0,0.177,1340,2.482]],["body/interfaces/DetailPaneConfig.html",[0,0.279,1,2.224,2,0.446,3,0.03,4,0.023,5,0.023,8,0.127,9,1.848,10,3.237,12,0.272,13,0.382,14,0.169,15,3.42,18,0.243,19,0.008,20,1.168,22,0.708,25,1.068,26,0.113,27,1.667,28,1.049,30,1.783,34,1.627,36,1.701,39,0.986,40,2.461,42,0.905,47,0.777,50,0.938,52,0.553,53,1.737,54,1.049,55,3.217,56,1.796,59,0.874,60,1.21,61,2.205,62,0.758,63,1.713,64,2.062,66,1.046,67,0.905,69,2.991,71,0.852,73,0.48,74,1.585,77,1.385,78,0.106,80,1.017,81,0.906,83,1.256,84,1.932,85,0.609,86,2.776,87,1.496,88,0.796,90,3.865,91,0.692,93,3.473,96,1.083,99,0.993,101,1.998,102,0.836,108,1.768,109,1.232,111,1.977,114,0.536,115,0.937,118,1.848,120,1.084,127,1.729,129,1.459,133,1.006,136,0.816,137,2.224,138,1.049,140,0.803,141,1.385,143,0.817,148,1.848,149,1.084,152,1.974,154,2.023,155,0.957,158,1.492,159,0.003,160,0.003,161,0.002,168,0.334,170,0.465,172,1.526,173,1.123,181,0.543,192,0.364,194,1.773,195,0.205,198,0.38,200,0.402,202,0.986,203,0.881,204,0.514,210,2.154,224,0.482,233,0.818,234,1.027,243,0.836,247,0.349,250,1.123,259,0.423,260,0.634,266,0.935,269,1.123,270,1.859,272,0.869,280,0.592,281,1.064,286,2.843,321,0.758,327,0.881,336,0.957,338,1.287,344,2.532,358,0.455,361,1.123,364,1.354,369,1.683,374,0.648,377,2.121,378,2.359,390,1.12,392,1.26,438,1.256,459,1.027,461,0.356,463,0.667,477,0.19,508,1.5,512,0.905,521,1.005,523,1.848,538,1.737,544,0.796,546,1.286,547,0.708,555,1.261,556,0.57,570,1.534,594,2.342,596,1.227,603,0.662,604,0.852,605,1.287,609,0.662,612,0.787,613,0.62,619,1.12,623,1.683,633,1.694,634,2.43,650,1.084,652,1.046,656,1.146,664,0.582,667,0.582,673,0.504,697,0.662,698,0.677,699,1.027,705,0.607,728,0.62,730,1.12,736,1.852,738,1.773,741,0.777,743,1.372,768,1.26,771,0.836,779,0.777,784,1.027,794,1.017,809,0.741,836,1.017,840,0.796,862,0.986,870,0.57,953,1.918,954,1.5,955,2.365,957,0.741,958,3.087,959,2.906,960,2.505,966,1.315,969,0.957,970,0.881,972,1.819,973,1.084,974,1.084,993,3.033,1005,2.23,1015,0.741,1018,0.905,1019,2.882,1021,2.842,1022,1.286,1026,2.029,1028,1.421,1029,0.984,1030,1.286,1033,2.205,1051,1.351,1055,0.858,1058,0.905,1068,0.986,1074,1.57,1113,0.986,1114,1.385,1122,0.957,1124,3.436,1174,0.758,1190,0.796,1206,0.634,1218,0.858,1223,1.459,1226,2.766,1227,1.084,1228,1.928,1229,1.499,1230,1.928,1231,2.526,1232,1.737,1233,2.23,1234,1.164,1235,1.084,1236,1.164,1237,2.09,1238,1.737,1239,2.224,1240,2.541,1241,1.164,1242,2.256,1243,1.928,1244,1.928,1245,0.816,1246,1.164,1247,1.859,1248,2.467,1249,1.928,1250,0.595,1251,1.928,1252,1.164,1253,1.421,1254,0.881,1255,1.084,1256,1.123,1257,1.049,1258,1.049,1259,0.741,1260,0.881,1261,0.931,1262,0.957,1263,1.256,1264,1.017,1265,0.634,1266,1.819,1267,2.343,1268,2.154,1269,2.379,1270,3.453,1271,3.288,1272,3.065,1273,1.123,1274,2.379,1275,1.123,1276,1.084,1277,0.881,1278,1.017,1279,0.957,1280,2.797,1281,1.859,1282,2.224,1283,1.123,1284,1.123,1285,1.123,1286,2.766,1287,1.084,1288,1.385,1289,4.413,1290,2.01,1291,1.859,1292,1.123,1293,3.44,1294,2.379,1295,1.796,1296,3.087,1297,1.499,1298,1.164,1299,1.683,1300,1.164,1301,1.796,1302,1.164,1303,2.43,1304,2.585,1305,2.43,1306,1.859,1307,1.164,1308,1.164,1309,1.928,1310,1.123,1311,2.766,1312,1.164,1313,2.09,1314,1.859,1315,1.928,1316,1.164,1317,1.928,1318,1.928,1319,2.766,1320,2.467,1321,1.017,1322,0.986,1323,1.123,1324,1.164,1325,1.164,1326,0.905,1327,1.819,1328,3.179,1329,1.633,1330,3.875,1331,2.467,1332,0.816,1333,1.164,1334,1.164,1335,4.576,1336,1.123,1337,2.461,1338,3.426,1339,4.16,1340,1.859,1341,1.164,1342,2.379,1343,1.049,1344,0.724,1345,1.164,1346,1.164,1347,1.049,1348,2.776,1349,0.957,1350,1.164,1351,0.986,1352,2.379,1353,0.858,1354,0.905,1355,1.164,1356,2.09,1357,1.164,1358,1.123,1359,1.928,1360,1.737,1361,1.164,1362,1.164,1363,1.633,1364,1.049,1365,1.164,1366,1.164,1367,0.796,1368,1.164,1369,1.859,1370,2.467,1371,1.164,1372,1.164,1373,1.123,1374,1.796,1375,1.084,1376,1.796,1377,1.084,1378,2.467,1379,1.164,1380,1.017,1381,1.084,1382,1.164,1383,1.928,1384,1.164,1385,1.164,1386,1.164,1387,1.164,1388,1.164,1389,1.164,1390,1.859,1391,1.164,1392,2.467,1393,1.164,1394,1.164,1395,1.123,1396,2.868,1397,2.224,1398,1.164,1399,1.123,1400,1.084,1401,1.123,1402,1.164,1403,1.164,1404,1.123,1405,1.928,1406,1.164,1407,1.164,1408,1.928,1409,1.164,1410,1.164,1411,0.957,1412,1.164,1413,1.164,1414,1.164,1415,1.164,1416,3.794,1417,1.928,1418,1.164,1419,1.164,1420,1.164,1421,1.928,1422,1.164,1423,1.928,1424,1.928,1425,1.164,1426,1.164,1427,1.164,1428,1.928,1429,1.164,1430,2.868,1431,1.928,1432,1.928,1433,1.164,1434,1.164,1435,1.049,1436,1.164,1437,1.164,1438,1.164,1439,1.164,1440,1.164,1441,1.164,1442,1.928,1443,1.928,1444,1.928,1445,1.928,1446,2.467,1447,1.164,1448,1.164,1449,1.164,1450,1.164,1451,1.928,1452,1.928,1453,2.868,1454,1.164,1455,1.164,1456,1.164,1457,1.164,1458,1.164,1459,2.541,1460,3.426,1461,3.179,1462,1.928,1463,1.164,1464,1.928,1465,2.467,1466,1.164,1467,2.467,1468,1.164,1469,2.868,1470,1.928,1471,1.164,1472,1.164,1473,1.164,1474,1.928,1475,1.123,1476,1.164,1477,1.017,1478,1.164,1479,1.164,1480,1.164,1481,1.164,1482,1.928,1483,2.359,1484,1.164,1485,1.164,1486,1.164,1487,1.164,1488,1.164,1489,1.499,1490,1.164,1491,1.164,1492,1.164,1493,2.467,1494,1.164,1495,1.164,1496,1.123,1497,1.737,1498,1.164,1499,1.164,1500,1.164,1501,1.164,1502,1.164,1503,1.164,1504,1.164,1505,1.459,1506,1.164,1507,1.164,1508,1.164,1509,1.164,1510,1.084,1511,1.164,1512,1.164,1513,1.928,1514,1.164,1515,1.164,1516,1.164,1517,1.164,1518,1.164,1519,0.986,1520,1.164,1521,1.017,1522,1.164,1523,1.164,1524,0.986,1525,1.164,1526,1.164,1527,1.164,1528,1.164,1529,1.164,1530,1.164,1531,1.164,1532,1.164,1533,1.164,1534,1.164,1535,1.164,1536,0.796,1537,1.164,1538,1.164,1539,1.859,1540,1.164,1541,1.164,1542,1.164,1543,1.164,1544,1.164,1545,1.164,1546,1.164,1547,1.164,1548,1.928,1549,1.928,1550,1.928,1551,1.164,1552,2.298,1553,2.868,1554,1.928,1555,1.164,1556,1.164,1557,1.164,1558,1.164,1559,1.164,1560,1.164,1561,1.084,1562,1.164,1563,1.164,1564,1.164,1565,1.164,1566,0.708,1567,1.164,1568,1.164,1569,1.928,1570,1.164,1571,2.467,1572,1.164,1573,1.164,1574,1.164,1575,1.928,1576,1.164,1577,1.164,1578,1.928,1579,1.928,1580,1.164,1581,1.164,1582,1.084,1583,1.123,1584,1.164,1585,1.164,1586,1.164,1587,1.928,1588,1.928,1589,1.164,1590,1.164,1591,1.928,1592,1.164,1593,1.164,1594,1.164,1595,1.164,1596,1.164,1597,1.164,1598,1.164,1599,1.123,1600,1.164,1601,1.164,1602,1.164,1603,1.164,1604,1.164,1605,1.928,1606,1.164,1607,1.164,1608,1.164,1609,1.164,1610,1.164,1611,1.164,1612,1.164,1613,1.164,1614,1.164,1615,1.928,1616,2.868,1617,2.467,1618,1.164,1619,1.164,1620,1.928,1621,1.164,1622,1.164,1623,1.164,1624,1.164,1625,1.164,1626,1.164,1627,1.164,1628,1.256,1629,1.928,1630,1.164,1631,1.164,1632,1.164,1633,1.123,1634,1.164,1635,1.164,1636,1.164,1637,1.164,1638,1.164,1639,1.164,1640,1.123,1641,1.164,1642,1.164,1643,1.164,1644,1.164,1645,1.164,1646,1.164,1647,2.868,1648,1.164,1649,1.164,1650,1.164,1651,1.164,1652,1.164,1653,1.164,1654,1.123,1655,1.164,1656,1.164,1657,1.928,1658,1.164,1659,1.928,1660,1.164,1661,1.164,1662,1.928,1663,1.164,1664,1.164,1665,1.164,1666,1.164,1667,1.164,1668,2.467,1669,1.164,1670,1.164,1671,1.164,1672,1.164,1673,1.164,1674,0.836,1675,1.164,1676,1.164,1677,1.164,1678,1.164,1679,1.164,1680,1.164,1681,1.164,1682,1.164,1683,0.984,1684,1.017,1685,1.123,1686,1.164,1687,1.164,1688,1.017,1689,1.164,1690,1.164,1691,1.928,1692,3.179,1693,0.931,1694,1.164,1695,1.164,1696,1.164,1697,1.164,1698,1.164,1699,1.164,1700,1.928,1701,1.164,1702,1.164,1703,1.737,1704,1.164,1705,1.164,1706,1.084,1707,1.164,1708,1.164,1709,1.084,1710,1.164,1711,1.164,1712,1.164]],["title/interfaces/DetailRowConfig.html",[0,0.177,1336,2.482]],["body/interfaces/DetailRowConfig.html",[0,0.278,1,2.214,2,0.443,3,0.03,4,0.023,5,0.023,8,0.126,9,1.842,10,3.23,12,0.285,13,0.38,14,0.168,15,3.411,18,0.256,19,0.008,20,1.164,22,0.703,25,1.064,26,0.113,27,1.661,28,1.043,30,1.778,34,1.624,36,1.699,39,0.98,40,2.454,42,0.9,47,0.772,50,0.937,52,0.551,53,1.729,54,1.043,55,3.213,56,1.787,59,0.872,60,1.207,61,2.199,62,0.754,63,1.708,64,2.057,66,1.042,67,0.9,69,2.983,71,0.848,73,0.48,74,1.578,77,1.378,78,0.105,80,1.011,81,0.901,83,1.25,84,1.926,85,0.606,86,2.767,87,1.491,88,0.791,90,3.861,91,0.688,93,3.468,96,1.08,99,0.989,101,1.994,102,0.832,108,1.763,109,1.231,111,1.97,114,0.533,115,0.935,118,1.842,120,1.078,127,1.721,129,1.452,133,1.001,136,0.811,137,2.214,138,1.044,140,0.812,141,1.378,143,0.815,148,1.842,149,1.078,152,1.969,154,2.016,155,0.952,158,1.489,159,0.003,160,0.003,161,0.002,168,0.332,170,0.462,172,1.524,173,1.116,181,0.541,192,0.361,194,1.765,195,0.204,198,0.379,200,0.4,202,0.98,203,0.876,204,0.513,210,2.145,224,0.48,233,0.814,234,1.022,243,0.832,247,0.347,250,1.116,259,0.422,260,0.63,266,0.934,269,1.116,270,1.85,272,0.865,280,0.592,281,1.061,286,2.839,321,0.754,327,0.876,336,0.952,338,1.282,344,2.526,358,0.453,361,1.119,364,1.351,369,1.675,374,0.644,377,2.114,378,2.351,390,1.115,392,1.255,438,1.25,459,1.022,461,0.354,463,0.664,477,0.189,508,1.493,512,0.9,521,1.001,523,1.842,538,1.729,544,0.791,546,1.28,547,0.703,555,1.257,556,0.567,570,1.528,594,2.335,596,1.221,603,0.658,604,0.848,605,1.282,609,0.658,612,0.783,613,0.617,619,1.115,623,1.675,633,1.688,634,2.421,650,1.078,652,1.042,656,1.14,664,0.579,667,0.579,673,0.501,697,0.658,698,0.673,699,1.022,705,0.604,728,0.617,730,1.115,736,1.847,738,1.765,741,0.772,743,1.367,768,1.255,771,0.832,779,0.772,784,1.022,794,1.011,809,0.737,836,1.011,840,0.791,862,0.98,870,0.567,953,1.91,954,1.493,955,2.361,957,0.737,958,3.079,959,2.901,960,2.499,966,1.309,969,0.952,970,0.876,972,1.811,973,1.078,974,1.078,993,3.026,1005,2.222,1015,0.737,1018,0.9,1019,2.918,1021,2.836,1022,1.28,1026,2.021,1028,1.414,1029,0.98,1030,1.28,1033,2.199,1051,1.344,1055,0.853,1058,0.9,1068,0.98,1074,1.564,1113,0.98,1114,1.378,1122,0.952,1124,3.429,1174,0.754,1190,0.791,1206,0.63,1218,0.853,1223,1.452,1226,2.756,1227,1.078,1228,1.918,1229,1.492,1230,1.918,1231,2.518,1232,1.729,1233,2.222,1234,1.157,1235,1.078,1236,1.157,1237,2.081,1238,1.729,1239,2.214,1240,2.533,1241,1.157,1242,2.25,1243,1.918,1244,1.918,1245,0.811,1246,1.157,1247,1.85,1248,2.457,1249,1.918,1250,0.591,1251,1.918,1252,1.157,1253,1.414,1254,0.876,1255,1.078,1256,1.116,1257,1.043,1258,1.043,1259,0.737,1260,0.876,1261,0.925,1262,0.952,1263,1.25,1264,1.011,1265,0.63,1266,1.811,1267,2.336,1268,2.145,1269,2.369,1270,3.507,1271,3.284,1272,3.055,1273,1.116,1274,2.369,1275,1.116,1276,1.078,1277,0.876,1278,1.011,1279,0.952,1280,2.791,1281,1.85,1282,2.214,1283,1.116,1284,1.116,1285,1.116,1286,2.756,1287,1.078,1288,1.378,1289,4.406,1290,2.003,1291,1.85,1292,1.116,1293,3.437,1294,2.369,1295,1.787,1296,3.26,1297,1.492,1298,1.157,1299,1.675,1300,1.157,1301,1.787,1302,1.157,1303,2.684,1304,2.576,1305,2.421,1306,1.85,1307,1.157,1308,1.157,1309,1.918,1310,1.116,1311,2.756,1312,1.157,1313,2.081,1314,1.85,1315,1.918,1316,1.157,1317,1.918,1318,1.918,1319,2.756,1320,2.457,1321,1.011,1322,0.98,1323,1.116,1324,1.157,1325,1.157,1326,0.9,1327,1.811,1328,3.168,1329,1.625,1330,3.868,1331,2.457,1332,0.811,1333,1.157,1334,1.157,1335,4.617,1336,1.85,1337,2.454,1338,3.926,1339,3.926,1340,1.116,1341,1.157,1342,2.369,1343,1.043,1344,0.72,1345,1.157,1346,1.157,1347,1.043,1348,2.767,1349,0.952,1350,1.157,1351,0.98,1352,2.369,1353,0.853,1354,0.9,1355,1.157,1356,2.081,1357,1.157,1358,1.116,1359,1.918,1360,1.729,1361,1.157,1362,1.157,1363,1.625,1364,1.043,1365,1.157,1366,1.157,1367,0.791,1368,1.157,1369,1.85,1370,2.457,1371,1.157,1372,1.157,1373,1.116,1374,1.787,1375,1.078,1376,1.787,1377,1.078,1378,2.457,1379,1.157,1380,1.011,1381,1.078,1382,1.157,1383,1.918,1384,1.157,1385,1.157,1386,1.157,1387,1.157,1388,1.157,1389,1.157,1390,1.85,1391,1.157,1392,2.457,1393,1.157,1394,1.157,1395,1.116,1396,2.858,1397,2.214,1398,1.157,1399,1.116,1400,1.078,1401,1.116,1402,1.157,1403,1.157,1404,1.116,1405,1.918,1406,1.157,1407,1.157,1408,1.918,1409,1.157,1410,1.157,1411,0.952,1412,1.157,1413,1.157,1414,1.157,1415,1.157,1416,3.785,1417,1.918,1418,1.157,1419,1.157,1420,1.157,1421,1.918,1422,1.157,1423,1.918,1424,1.918,1425,1.157,1426,1.157,1427,1.157,1428,1.918,1429,1.157,1430,2.858,1431,1.918,1432,1.918,1433,1.157,1434,1.157,1435,1.043,1436,1.157,1437,1.157,1438,1.157,1439,1.157,1440,1.157,1441,1.157,1442,1.918,1443,1.918,1444,1.918,1445,1.918,1446,2.457,1447,1.157,1448,1.157,1449,1.157,1450,1.157,1451,1.918,1452,1.918,1453,2.858,1454,1.157,1455,1.157,1456,1.157,1457,1.157,1458,1.157,1459,2.533,1460,3.416,1461,3.168,1462,1.918,1463,1.157,1464,1.918,1465,2.457,1466,1.157,1467,2.457,1468,1.157,1469,2.858,1470,1.918,1471,1.157,1472,1.157,1473,1.157,1474,1.918,1475,1.116,1476,1.157,1477,1.011,1478,1.157,1479,1.157,1480,1.157,1481,1.157,1482,1.918,1483,2.351,1484,1.157,1485,1.157,1486,1.157,1487,1.157,1488,1.157,1489,1.492,1490,1.157,1491,1.157,1492,1.157,1493,2.457,1494,1.157,1495,1.157,1496,1.116,1497,1.729,1498,1.157,1499,1.157,1500,1.157,1501,1.157,1502,1.157,1503,1.157,1504,1.157,1505,1.452,1506,1.157,1507,1.157,1508,1.157,1509,1.157,1510,1.078,1511,1.157,1512,1.157,1513,1.918,1514,1.157,1515,1.157,1516,1.157,1517,1.157,1518,1.157,1519,0.98,1520,1.157,1521,1.011,1522,1.157,1523,1.157,1524,0.98,1525,1.157,1526,1.157,1527,1.157,1528,1.157,1529,1.157,1530,1.157,1531,1.157,1532,1.157,1533,1.157,1534,1.157,1535,1.157,1536,0.791,1537,1.157,1538,1.157,1539,1.85,1540,1.157,1541,1.157,1542,1.157,1543,1.157,1544,1.157,1545,1.157,1546,1.157,1547,1.157,1548,1.918,1549,1.918,1550,1.918,1551,1.157,1552,2.289,1553,2.858,1554,1.918,1555,1.157,1556,1.157,1557,1.157,1558,1.157,1559,1.157,1560,1.157,1561,1.078,1562,1.157,1563,1.157,1564,1.157,1565,1.157,1566,0.703,1567,1.157,1568,1.157,1569,1.918,1570,1.157,1571,2.457,1572,1.157,1573,1.157,1574,1.157,1575,1.918,1576,1.157,1577,1.157,1578,1.918,1579,1.918,1580,1.157,1581,1.157,1582,1.078,1583,1.116,1584,1.157,1585,1.157,1586,1.157,1587,1.918,1588,1.918,1589,1.157,1590,1.157,1591,1.918,1592,1.157,1593,1.157,1594,1.157,1595,1.157,1596,1.157,1597,1.157,1598,1.157,1599,1.116,1600,1.157,1601,1.157,1602,1.157,1603,1.157,1604,1.157,1605,1.918,1606,1.157,1607,1.157,1608,1.157,1609,1.157,1610,1.157,1611,1.157,1612,1.157,1613,1.157,1614,1.157,1615,1.918,1616,2.858,1617,2.457,1618,1.157,1619,1.157,1620,1.918,1621,1.157,1622,1.157,1623,1.157,1624,1.157,1625,1.157,1626,1.157,1627,1.157,1628,1.25,1629,1.918,1630,1.157,1631,1.157,1632,1.157,1633,1.116,1634,1.157,1635,1.157,1636,1.157,1637,1.157,1638,1.157,1639,1.157,1640,1.116,1641,1.157,1642,1.157,1643,1.157,1644,1.157,1645,1.157,1646,1.157,1647,2.858,1648,1.157,1649,1.157,1650,1.157,1651,1.157,1652,1.157,1653,1.157,1654,1.116,1655,1.157,1656,1.157,1657,1.918,1658,1.157,1659,1.918,1660,1.157,1661,1.157,1662,1.918,1663,1.157,1664,1.157,1665,1.157,1666,1.157,1667,1.157,1668,2.457,1669,1.157,1670,1.157,1671,1.157,1672,1.157,1673,1.157,1674,0.832,1675,1.157,1676,1.157,1677,1.157,1678,1.157,1679,1.157,1680,1.157,1681,1.157,1682,1.157,1683,0.98,1684,1.011,1685,1.116,1686,1.157,1687,1.157,1688,1.011,1689,1.157,1690,1.157,1691,1.918,1692,3.168,1693,0.925,1694,1.157,1695,1.157,1696,1.157,1697,1.157,1698,1.157,1699,1.157,1700,1.918,1701,1.157,1702,1.157,1703,1.729,1704,1.157,1705,1.157,1706,1.078,1707,1.157,1708,1.157,1709,1.078,1710,1.157,1711,1.157,1712,1.157]],["title/classes/DomUtil.html",[78,0.11,2512,3.227]],["body/classes/DomUtil.html",[3,0.094,4,0.071,5,0.071,8,0.399,12,0.226,14,0.532,18,0.226,19,0.008,25,2.06,26,0.094,38,4.599,59,0.929,73,0.519,77,3.774,78,0.157,85,1.091,159,0.005,160,0.006,161,0.005,163,1.583,181,0.974,195,0.645,197,1.072,198,0.564,224,0.714,259,0.357,266,0.843,280,0.427,341,2.5,409,4.585,459,2.358,461,1.606,463,1.884,477,0.596,517,3.639,521,1.489,652,1.877,767,2.799,815,3.864,1028,3.645,1052,4.267,1168,6.858,1364,3.988,1769,5.717,2325,5.548,2512,5.548,2513,7.806,2514,7.806,2515,7.806,2516,8.932,2517,6.45,2518,7.806,2519,7.806,2520,8.046,2521,6.918,2522,4.792,2523,7.44,2524,7.806,2525,7.806,2526,7.806,2527,6.45,2528,6.45,2529,5.717,2530,6.45,2531,6.45]],["title/directives/DropdownFocusHandlerDirective.html",[653,1.496,702,1.803]],["body/directives/DropdownFocusHandlerDirective.html",[0,0.144,3,0.054,4,0.041,5,0.041,8,0.229,12,0.244,13,0.406,14,0.611,18,0.307,19,0.008,20,1.711,22,2.189,26,0.093,27,1.776,35,1.801,42,4.186,50,0.95,52,0.603,59,1.071,63,1.05,64,2.915,71,1.35,75,3.954,78,0.09,80,3.453,88,1.436,100,2.1,101,1.436,105,2.378,111,1.306,113,1.472,114,0.967,118,1.776,129,2.313,138,1.143,140,0.571,143,0.811,154,3.278,158,1.325,159,0.003,160,0.004,161,0.004,170,1.219,172,1.695,181,0.673,191,2.141,192,0.954,195,0.916,197,0.896,198,0.471,200,0.587,202,1.779,204,0.369,224,0.923,236,2.496,244,5.056,259,0.386,266,0.753,272,1.378,280,0.513,281,0.896,286,3.056,361,0.742,389,2.253,441,1.591,458,1.472,459,1.919,461,0.934,463,1.605,477,0.342,544,1.436,545,2.634,547,2.554,555,0.773,556,1.029,566,1.436,570,1.306,574,1.9,576,2.799,587,2.195,611,1.436,612,1.339,618,2.993,652,1.296,653,2.298,675,3.17,699,1.119,702,2.944,705,1.096,728,1.628,743,2.439,774,1.472,780,4.206,866,2.754,931,2.275,962,2.462,1029,1.839,1034,2.993,1036,3.951,1052,4.47,1055,1.549,1068,3.05,1104,2.634,1135,2.025,1206,2.153,1238,3.246,1259,2.674,1260,1.59,1265,1.663,1344,1.306,1411,1.728,1477,3.828,1536,2.089,1703,3.787,1718,4.282,1790,4.072,1881,2.1,2038,5.497,2089,2.634,2194,5.497,2251,2.025,2532,6.53,2533,6.295,2534,2.799,2535,5.155,2536,6.569,2537,6.275,2538,6.477,2539,5.674,2540,5.63,2541,4.777,2542,5.63,2543,5.63,2544,5.63,2545,5.63,2546,6.183,2547,6.569,2548,5.63,2549,5.63,2550,5.39,2551,6.014,2552,6.183,2553,6.183,2554,6.183,2555,6.183,2556,5.63,2557,5.63,2558,3.706,2559,5.63,2560,5.63,2561,5.63,2562,4.958,2563,3.706,2564,4.777,2565,4.777,2566,3.706,2567,3.706,2568,3.706,2569,3.706,2570,4.374,2571,3.631,2572,4.777,2573,6.183,2574,6.183,2575,4.777,2576,5.63,2577,4.777,2578,4.777,2579,3.631,2580,4.777,2581,3.706,2582,3.706,2583,6.672,2584,3.309,2585,4.777,2586,4.374,2587,3.706,2588,3.706,2589,3.706,2590,4.777,2591,3.706,2592,3.706,2593,3.706,2594,6.183,2595,3.706,2596,3.706,2597,5.63,2598,3.706,2599,3.706,2600,3.706,2601,3.706,2602,3.706,2603,3.706,2604,3.706,2605,3.706,2606,4.799,2607,3.284,2608,3.007,2609,1.337,2610,3.007,2611,4.374,2612,2.799,2613,3.007,2614,3.007,2615,3.284,2616,3.007,2617,3.007,2618,4.279,2619,3.284,2620,3.284,2621,3.284,2622,4.777,2623,3.284,2624,5.63,2625,3.284,2626,3.284,2627,3.284,2628,3.284,2629,4.777,2630,3.284,2631,4.777,2632,3.284,2633,2.183,2634,3.007,2635,5.63,2636,6.569,2637,3.284,2638,3.284,2639,3.284,2640,3.284,2641,3.284,2642,5.63,2643,3.284,2644,3.284,2645,3.007,2646,3.284,2647,3.007,2648,4.777,2649,3.284,2650,3.284,2651,3.284,2652,4.374,2653,3.284,2654,2.496,2655,3.284,2656,3.284,2657,3.284,2658,3.284,2659,3.284,2660,2.799,2661,3.284,2662,3.284,2663,3.284,2664,4.777,2665,3.284,2666,3.284,2667,3.284,2668,3.284,2669,3.284,2670,3.284,2671,3.284,2672,3.284,2673,5.63,2674,3.284,2675,4.777,2676,3.284,2677,3.284,2678,3.284,2679,3.284,2680,3.284,2681,3.284,2682,3.284,2683,3.284,2684,4.777,2685,3.284]],["title/injectables/DropdownFocusHandlerService.html",[1845,2.319,2539,3.227]],["body/injectables/DropdownFocusHandlerService.html",[3,0.071,4,0.054,5,0.054,8,0.3,12,0.17,13,0.49,14,0.647,18,0.295,19,0.008,26,0.071,35,1.844,42,4.118,50,0.774,52,0.789,59,1.024,64,2.856,66,1.564,71,2.11,78,0.118,81,1.732,88,3.04,91,1.633,96,1.223,99,1.605,101,2.244,111,1.708,113,1.925,115,0.831,117,3.11,118,2.143,143,0.619,154,3.156,159,0.004,160,0.005,161,0.004,170,1.096,181,0.811,192,0.858,195,0.875,197,1.304,198,0.685,200,0.448,224,0.981,234,1.964,244,5.274,259,0.36,275,1.496,280,0.558,361,1.302,364,1.2,377,2.46,441,1.629,459,1.964,463,1.653,477,0.448,587,3.647,652,2.025,675,2.583,730,2.143,743,2.758,751,2.947,767,1.964,780,2.327,860,2.327,866,2.476,870,1.806,954,2.241,962,2.52,1012,4.913,1029,1.883,1034,3.366,1036,4.26,1051,3.116,1052,4.012,1127,5.034,1135,4.893,1206,2.421,1229,2.867,1271,1.974,1373,3.555,1395,3.555,1411,3.032,1477,3.883,1745,4.381,1791,5.277,1803,5.764,1845,3.323,1847,3.11,1864,3.445,1869,4.622,1940,5.277,1967,5.764,2194,6.363,2202,3.264,2507,5.576,2532,6.298,2533,6.401,2539,4.623,2562,5.576,2570,3.932,2571,5.797,2583,6.364,2584,3.992,2586,6.365,2612,3.661,2645,5.956,2647,3.932,2660,4.913,2686,4.846,2687,6.504,2688,4.913,2689,6.504,2690,5.277,2691,7.252,2692,7.34,2693,7.34,2694,7.845,2695,6.504,2696,6.504,2697,6.504,2698,4.846,2699,6.504,2700,4.846,2701,5.764,2702,9.095,2703,6.504,2704,4.846,2705,6.504,2706,6.504,2707,4.623,2708,4.846,2709,6.504,2710,4.846,2711,6.504,2712,4.846,2713,4.846,2714,4.846,2715,4.295,2716,4.846,2717,4.846,2718,4.846,2719,4.846,2720,4.846,2721,4.846,2722,4.846,2723,4.846,2724,4.846,2725,6.504,2726,3.264,2727,4.846,2728,4.846,2729,4.846,2730,4.846,2731,5.926,2732,3.932,2733,4.295,2734,7.34,2735,7.34,2736,4.846,2737,4.846,2738,4.846,2739,4.846,2740,4.846,2741,6.504,2742,6.504,2743,6.504,2744,6.504]],["title/modules/DropdownModule.html",[2745,1.564,2746,3.058]],["body/modules/DropdownModule.html",[3,0.095,4,0.072,5,0.072,19,0.008,26,0.095,78,0.158,154,2.825,159,0.005,160,0.007,161,0.005,259,0.517,260,2.001,477,0.599,618,2.782,651,2.09,675,3.784,702,3.761,704,3.857,881,2.136,1015,2.339,1147,1.958,1250,1.877,1261,2.938,1566,2.234,1799,4.898,2533,4.367,2608,5.261,2609,2.339,2715,5.746,2745,2.234,2746,6.432,2747,2.938,2748,2.938,2749,3.922,2750,3.209,2751,2.575,2752,4.164,2753,5.746,2754,5.746,2755,5.746,2756,5.746,2757,5.746,2758,6.826,2759,5.579,2760,3.876,2761,6.483,2762,4.28,2763,3.209,2764,4.608,2765,3.113,2766,3.209,2767,3.209,2768,3.209,2769,3.209,2770,3.209,2771,4.438,2772,3.312,2773,4,2774,5.274,2775,4.613,2776,4.438,2777,4.898,2778,6.483]],["title/directives/DynamicDropdownPositionDirective.html",[653,1.496,704,1.849]],["body/directives/DynamicDropdownPositionDirective.html",[3,0.063,4,0.048,5,0.048,8,0.268,12,0.152,13,0.522,14,0.649,18,0.298,19,0.008,22,1.492,25,1.063,26,0.063,36,1.256,42,3.589,50,0.891,59,0.891,63,2.122,64,1.396,75,2.455,78,0.105,84,2.075,96,0.675,99,0.85,101,1.844,108,1.366,118,1.427,129,1.858,138,1.337,140,0.732,143,0.884,154,3.432,158,1.641,159,0.004,160,0.005,161,0.004,170,1.363,172,1.667,181,0.752,191,2.392,192,1.066,195,0.9,197,1.151,198,0.605,200,0.4,204,0.297,224,0.766,233,1.448,259,0.383,266,0.964,280,0.521,281,0.72,358,0.96,461,1.044,463,1.359,477,0.4,512,1.909,555,1.256,570,1.527,572,3.077,599,1.858,611,1.678,633,1.819,644,3.272,653,2.466,699,1.308,704,3.204,705,1.781,728,2.261,732,3.656,756,2.224,769,2.82,780,2.892,808,5.215,862,3.91,865,2.287,954,1.492,962,2.683,1015,2.7,1028,3.128,1033,2.711,1034,3.584,1036,3.428,1038,4.079,1052,4.729,1061,2.917,1081,2.779,1114,2.82,1144,5.231,1147,2.261,1149,2.08,1158,3.272,1218,1.81,1222,3.548,1250,1.254,1280,2.517,1282,2.213,1400,3.18,1411,2.019,1477,2.144,1582,2.287,1683,1.254,1685,2.367,1718,2.659,1740,2.552,1745,4.057,1760,2.287,1788,4.057,1799,4.55,1804,3.548,1864,3.078,1881,3.414,1936,5.338,2012,6.607,2038,3.078,2382,3.865,2507,3.078,2520,5.338,2522,2.659,2523,5.338,2562,5.32,2606,4.55,2618,5.738,2652,6.073,2732,3.514,2733,3.839,2772,2.213,2779,8.025,2780,3.839,2781,6.023,2782,6.607,2783,6.023,2784,6.023,2785,6.023,2786,6.924,2787,6.023,2788,6.023,2789,6.924,2790,6.924,2791,7.485,2792,6.924,2793,7.485,2794,6.924,2795,7.485,2796,6.023,2797,6.023,2798,6.924,2799,6.023,2800,6.924,2801,6.023,2802,4.331,2803,5.738,2804,6.924,2805,6.924,2806,4.331,2807,4.331,2808,4.331,2809,6.023,2810,3.514,2811,6.023,2812,4.331,2813,3.272,2814,4.331,2815,4.331,2816,4.331,2817,4.331,2818,3.514,2819,4.331,2820,4.331,2821,4.331,2822,7.485,2823,4.331,2824,4.331,2825,4.331,2826,4.331,2827,4.331,2828,4.331,2829,4.331,2830,4.331,2831,4.331,2832,4.331,2833,4.331,2834,4.331,2835,3.839,2836,5.338,2837,3.839,2838,6.634,2839,7.485,2840,4.331,2841,3.839,2842,3.839,2843,4.331,2844,4.331,2845,4.331,2846,4.331,2847,4.331,2848,4.331,2849,4.331,2850,4.331,2851,4.331,2852,4.331,2853,4.331,2854,6.023,2855,4.331,2856,6.023,2857,4.331,2858,6.023,2859,4.331,2860,4.331,2861,4.331,2862,4.331,2863,6.924,2864,4.331,2865,3.839,2866,4.331,2867,4.331,2868,4.331,2869,6.924,2870,4.331,2871,6.023,2872,4.331,2873,6.924,2874,4.331,2875,6.924,2876,7.485,2877,7.485,2878,4.331,2879,4.331,2880,4.331,2881,4.331,2882,4.331,2883,4.331,2884,6.023,2885,4.331,2886,6.023,2887,4.331,2888,4.331,2889,6.924,2890,4.331,2891,6.924,2892,4.331,2893,4.331,2894,3.272,2895,4.331,2896,4.331,2897,3.839,2898,4.331,2899,4.331,2900,4.331,2901,4.331,2902,4.331,2903,4.331,2904,6.023,2905,4.331,2906,4.331,2907,4.331,2908,4.331]],["title/components/ErrorBannerComponent.html",[204,0.311,677,1.849]],["body/components/ErrorBannerComponent.html",[3,0.108,4,0.054,5,0.054,8,0.304,12,0.172,13,0.495,14,0.542,18,0.317,19,0.008,26,0.072,30,1.749,36,1.026,59,0.88,60,0.985,63,1.394,66,1.579,73,0.534,78,0.12,96,1.282,99,1.548,100,3.723,108,2.071,109,1.128,140,0.59,143,1.008,159,0.004,160,0.005,161,0.004,172,1.309,181,0.82,191,2.609,195,0.889,197,1.092,198,0.755,200,0.729,204,0.563,208,1.906,224,0.727,247,0.835,259,0.272,263,1.62,280,0.326,281,1.092,321,3.241,338,1.942,342,4.215,346,2.609,358,2.086,374,1.551,390,1.62,394,5.821,411,6.782,441,1.232,461,1.656,463,1.289,477,0.454,538,3.356,555,1.37,603,1.585,604,1.645,605,1.454,606,1.953,609,2.784,611,1.906,612,1.714,613,1.984,619,2.164,651,1.585,652,1.579,653,1.62,654,3.576,655,2.229,656,1.657,657,2.229,658,2.229,659,1.774,660,2.11,661,2.229,662,1.953,663,2.229,664,1.394,665,2.229,666,1.86,667,2.237,668,1.953,669,3.576,670,1.816,671,1.953,672,1.953,673,1.207,674,1.816,675,1.953,676,2.229,677,3.214,678,2.229,679,2.168,680,1.953,681,2.237,682,2.229,683,1.86,684,3.576,685,1.906,686,3.012,687,1.906,688,1.823,689,1.906,690,2.976,691,1.86,692,2.055,693,2.229,694,1.816,695,2.229,696,2.11,697,1.585,698,1.62,699,1.486,700,1.62,701,2.229,702,1.953,703,2.229,704,2.003,705,2.501,706,2.229,707,1.86,708,2.11,709,2.229,743,2.071,784,2.384,856,3.905,1034,2.11,1036,2.434,1147,1.486,1171,5.329,1198,3.156,1240,3.726,1242,2.607,1363,3.154,1367,2.545,1489,3.478,1566,1.695,1804,3.869,1894,2.788,2449,3.991,2450,4.359,2452,5.329,2654,4.424,2701,7.498,2763,2.434,2765,2.361,2766,2.434,2767,2.434,2768,2.434,2769,2.434,2770,2.434,2909,7.284,2910,4.918,2911,9.052,2912,7.395,2913,6.568,2914,7.395,2915,6.568,2916,7.395,2917,7.395,2918,8.223,2919,7.395,2920,4.918,2921,6.568,2922,6.568,2923,7.892,2924,6.568,2925,4.918,2926,4.918,2927,4.424,2928,6.568,2929,5.329,2930,6.568,2931,4.918,2932,4.918,2933,6.568,2934,4.918,2935,4.918,2936,4.918,2937,4.918,2938,4.918,2939,7.395,2940,4.918,2941,4.918,2942,4.918,2943,4.918]],["title/classes/ErrorBannerWidgetObject.html",[78,0.11,2944,4.024]],["body/classes/ErrorBannerWidgetObject.html",[3,0.073,4,0.055,5,0.055,8,0.525,12,0.175,13,0.641,14,0.726,17,3.626,18,0.328,19,0.008,25,1.828,26,0.073,34,1.063,35,1.415,36,1.041,50,0.594,57,1.445,59,0.945,66,1.791,71,1.25,73,0.586,78,0.121,81,1.984,85,1.11,109,0.714,138,2.45,140,0.596,143,1.124,148,2.186,156,2.397,159,0.004,160,0.007,161,0.004,163,1.225,165,2.927,168,1.08,181,0.828,191,2.635,195,0.914,197,1.464,198,0.769,200,0.838,204,0.594,217,3.575,224,1.011,245,1.888,247,1.265,259,0.367,280,0.44,326,3.153,341,2.887,346,1.983,358,1.652,361,1.492,364,0.921,435,2.496,441,1.25,451,4.61,458,1.983,459,2.813,461,1.292,463,1.82,464,3.68,517,2.328,521,1.531,523,1.645,528,2.397,529,4.056,546,2.818,551,2.262,557,2.328,572,2.551,583,3.376,586,1.682,587,3.035,594,2.571,609,2.138,612,1.199,677,3.035,713,4.413,714,2.813,715,4.072,716,4.257,717,4.257,718,4.072,719,4.257,720,3.626,721,4.257,725,2.729,726,3.363,727,2.262,728,1.508,729,2.729,730,1.645,731,2.551,732,2.636,733,2.729,734,3.363,735,2.729,736,1.445,737,2.729,738,2.033,739,3.93,740,3.688,741,2.818,742,2.729,743,2.862,744,4.644,745,3.363,746,2.729,747,3.363,748,3.093,749,2.729,750,3.363,751,3.006,752,2.729,753,3.363,754,2.729,755,3.363,756,1.844,757,2.729,758,2.729,759,3.363,760,2.729,761,3.204,762,4.072,763,3.363,764,2.729,765,4.072,766,3.626,767,1.508,768,1.445,769,2.702,770,2.729,771,2.033,772,2.729,773,2.729,774,1.983,775,2.729,776,2.729,777,2.729,778,2.142,779,1.888,780,3.185,781,3.626,782,2.729,783,3.363,784,1.508,785,2.729,798,4.425,989,3.771,2172,3.626,2909,6.045,2944,5.879,2945,4.992,2946,7.45,2947,4.992,2948,4.992,2949,4.992,2950,6.634,2951,6.634,2952,4.425,2953,4.992]],["title/interfaces/ExportColumn.html",[0,0.177,2007,3.684]],["body/interfaces/ExportColumn.html",[0,0.216,2,0.838,3,0.095,4,0.043,5,0.079,8,0.238,12,0.135,13,0.418,14,0.458,18,0.194,19,0.008,20,1.64,26,0.121,27,1.27,30,2.088,34,1.383,35,1.093,36,1.355,40,2.894,50,0.773,58,2.97,59,0.962,60,1.733,62,1.424,66,0.927,73,0.521,75,4.444,78,0.094,83,1.424,85,0.776,86,3.517,96,1.26,97,2.913,99,1.477,101,2.243,108,2.241,109,1.305,113,2.203,114,1.695,115,0.492,129,2.38,133,1.14,140,0.676,143,0.708,146,3.268,148,1.27,154,2.001,158,1.355,159,0.003,160,0.005,161,0.003,170,0.872,172,1.513,194,2.646,198,0.658,200,0.695,204,0.38,237,4.501,247,1.484,259,0.434,260,1.19,266,0.847,275,1.19,280,0.61,281,1.478,282,3.128,321,3.053,325,2.74,341,2.15,347,2.597,358,0.855,361,1.111,363,2.663,364,0.711,373,1.494,392,1.606,461,0.668,477,0.356,523,1.27,544,2.15,547,1.911,551,1.747,555,1.355,556,1.973,570,1.955,586,1.299,612,0.697,613,1.165,623,4.48,634,2.663,662,1.531,673,1.744,736,1.116,768,1.116,784,1.165,809,1.391,826,3.376,838,3.881,860,2.663,870,1.07,881,1.27,940,2.74,955,2.527,959,3.204,961,3.999,993,1.747,1008,2.474,1022,1.458,1029,1.606,1030,2.098,1055,2.715,1061,2.597,1190,1.494,1206,1.19,1235,4.366,1240,2.944,1242,2.29,1245,1.531,1250,1.116,1259,2.001,1260,1.654,1270,1.57,1279,2.586,1280,1.611,1290,2.203,1296,1.97,1367,1.494,1374,2.036,1375,2.036,1376,2.929,1377,2.036,1381,2.036,1435,1.97,1536,1.494,1552,2.036,1561,2.036,1744,1.908,1804,2.271,1846,4.908,1848,2.474,1855,4.501,1858,6.109,1860,5.368,1867,3.128,1870,4.501,1871,3.128,1872,3.128,1881,3.683,1909,4.501,1996,3.128,1997,2.597,1998,3.128,1999,3.128,2000,4.916,2001,5.759,2002,4.916,2003,3.417,2004,3.417,2005,2.913,2006,3.417,2007,7.021,2008,4.916,2009,5.569,2010,3.128,2011,3.22,2012,4.501,2013,3.417,2014,4.916,2015,4.501,2016,3.431,2017,4.916,2018,2.663,2019,3.128,2020,4.501,2021,4.501,2022,6.109,2023,3.128,2024,3.128,2025,3.417,2026,2.474,2027,3.417,2028,5.759,2029,3.417,2030,2.913,2031,3.128,2032,3.417,2033,3.417,2034,3.417,2035,3.417,2036,3.417,2037,3.417,2038,3.943,2039,5.759,2040,3.417,2041,3.417,2042,2.474,2043,3.417,2044,3.417,2045,3.417,2046,3.417,2047,3.417,2048,3.128,2049,3.417,2050,3.417,2051,3.417,2052,3.417,2053,3.417,2054,3.417,2055,3.417,2056,3.417,2057,3.417,2058,3.417,2059,3.417,2060,3.417,2061,5.272,2062,4.285,2063,3.417,2064,3.417,2065,3.417,2066,3.417,2067,3.56,2068,3.417,2069,3.417,2070,3.417,2071,3.417,2072,3.417,2073,3.417,2074,3.417,2075,3.417,2076,3.417,2077,3.417,2078,3.417,2079,3.417,2080,3.417,2081,3.417,2082,3.417,2083,3.943,2084,3.417,2085,3.943,2086,3.417,2087,4.916,2088,2.74,2089,2.74,2090,4.916,2091,3.417,2092,3.417,2093,3.417,2094,5.759,2095,3.417,2096,4.916,2097,3.417,2098,3.417,2099,2.913,2100,3.417,2101,3.417,2102,3.417,2103,6.298,2104,3.417,2105,3.417,2106,3.417,2107,3.417,2108,4.916,2109,3.417,2110,3.417,2111,3.417,2112,3.417,2113,3.417,2114,3.417,2115,3.417,2116,3.417,2117,3.417,2118,3.417,2119,3.417,2120,3.417,2121,3.417,2122,4.916,2123,3.417,2124,3.417,2125,3.417,2126,3.417,2127,3.417,2128,3.417,2129,3.417,2130,3.417,2131,3.417,2132,3.417,2133,3.417,2134,1.908,2135,3.417,2136,3.417,2137,3.417,2138,3.417,2139,3.417,2140,3.943,2141,3.417,2142,3.417,2143,3.417,2144,3.417,2145,3.417,2146,3.417,2147,3.417,2148,3.417,2149,3.417,2150,3.417,2151,3.417,2152,3.417,2153,3.417,2154,3.417,2155,3.417,2156,3.417,2157,3.417,2158,3.417,2159,3.417,2160,3.417,2161,3.417,2162,3.417,2163,3.417,2164,3.417,2165,3.417,2166,4.916,2167,3.417,2168,3.417,2169,3.417]],["title/classes/FilterBuilder.html",[78,0.11,2346,2.319]],["body/classes/FilterBuilder.html",[3,0.048,4,0.037,5,0.037,8,0.205,12,0.116,13,0.375,14,0.726,18,0.315,19,0.008,26,0.087,35,1.876,59,0.592,61,1.714,71,0.832,73,0.556,78,0.081,82,3.35,96,0.518,115,0.635,129,2.134,139,6.432,140,0.8,143,0.424,159,0.006,160,0.004,161,0.003,163,0.815,172,1.576,181,0.621,192,0.588,195,0.91,197,1.462,198,0.778,200,0.858,224,1.036,246,5.048,266,0.926,272,1.524,280,0.593,281,1.1,347,3.35,459,2.14,521,2.191,539,5.369,586,1.675,596,2.683,727,4.202,767,1.502,768,1.44,774,1.975,856,1.754,870,1.837,957,1.794,1033,2.28,1074,1.794,1169,5.717,1218,3.108,1231,2.078,1265,2.862,1628,1.837,1683,1.916,1745,4.457,1754,3.053,1782,4.408,1930,6.032,2247,3.053,2252,1.754,2346,4.933,2348,3.617,2434,4.035,2437,4.035,2459,3.535,2476,6.697,2495,5.618,2927,3.35,2954,7.41,2955,2.696,2956,4.973,2957,4.973,2958,4.973,2959,7.436,2960,4.973,2961,4.973,2962,4.973,2963,4.973,2964,4.973,2965,4.973,2966,4.973,2967,4.973,2968,4.973,2969,5.96,2970,4.973,2971,6.617,2972,4.973,2973,6.617,2974,4.973,2975,4.973,2976,4.973,2977,4.973,2978,4.973,2979,4.973,2980,4.973,2981,3.323,2982,3.323,2983,4.973,2984,3.323,2985,9.186,2986,3.323,2987,3.323,2988,7.709,2989,8.487,2990,3.323,2991,3.323,2992,4.973,2993,3.323,2994,3.323,2995,4.973,2996,3.323,2997,4.973,2998,3.323,2999,4.035,3000,7.436,3001,4.973,3002,4.973,3003,3.323,3004,3.323,3005,4.973,3006,7.935,3007,8.379,3008,3.323,3009,4.973,3010,3.323,3011,3.323,3012,4.973,3013,4.973,3014,3.323,3015,4.973,3016,3.323,3017,4.973,3018,3.323,3019,4.973,3020,3.323,3021,4.973,3022,3.323,3023,4.973,3024,3.323,3025,3.323,3026,3.323,3027,4.973,3028,3.323,3029,2.945,3030,4.408,3031,4.408,3032,4.408,3033,4.408,3034,2.945,3035,2.945,3036,7.927,3037,3.323,3038,3.323,3039,3.323,3040,3.323,3041,6.617,3042,7.709,3043,7.709,3044,4.973,3045,6.617,3046,8.855,3047,4.973,3048,7.436,3049,6.617,3050,6.617,3051,6.617,3052,6.617,3053,3.323,3054,3.323,3055,3.323,3056,3.323,3057,3.323,3058,3.323,3059,3.323,3060,4.973,3061,3.323,3062,4.973,3063,3.323,3064,4.973,3065,3.323,3066,4.973,3067,3.323,3068,3.323,3069,3.323,3070,3.323,3071,3.323,3072,3.323,3073,3.323]],["title/interfaces/FilterConfig.html",[0,0.177,1716,2.057]],["body/interfaces/FilterConfig.html",[0,0.25,2,1.032,3,0.069,4,0.053,5,0.053,8,0.294,9,2.677,12,0.166,13,0.587,14,0.642,18,0.319,19,0.008,26,0.119,35,1.346,36,0.991,45,3.836,47,1.796,50,1.079,52,1.183,59,0.926,60,1.285,61,2.681,66,1.142,73,0.538,78,0.156,96,1.001,99,1.259,109,1.039,111,1.674,112,2.798,114,1.239,115,1.127,118,1.565,140,0.699,143,0.607,158,0.991,159,0.004,160,0.005,161,0.004,163,1.783,168,1.044,170,1.074,172,0.841,181,0.801,190,3.168,192,0.841,195,0.475,200,0.847,204,0.574,233,1.142,234,2.194,259,0.482,266,0.784,280,0.555,281,1.067,322,2.596,324,2.351,361,1.285,373,2.815,377,1.796,435,2.455,466,3.419,477,0.439,486,3.199,566,1.841,586,1.6,596,2.315,599,2.038,604,1.82,619,1.565,664,1.346,667,1.346,670,1.754,674,1.754,681,1.346,688,1.781,700,2.114,705,1.404,714,2.35,728,1.938,730,1.565,736,2.103,767,1.435,769,1.935,774,1.887,784,1.435,803,3.048,809,1.714,838,3.596,856,2.508,860,2.281,870,2.16,881,1.565,937,2.828,947,2.351,952,3.836,954,2.211,955,2.508,957,1.714,960,1.714,962,2.486,966,2.586,969,2.214,970,2.038,1022,1.796,1023,2.692,1029,1.857,1030,2.427,1147,1.435,1149,2.281,1174,1.754,1190,1.841,1197,2.692,1206,1.466,1229,2.093,1242,1.674,1250,1.375,1253,1.985,1254,2.038,1259,2.315,1260,2.038,1263,1.754,1265,2.816,1266,2.681,1267,3.036,1293,3.326,1321,3.176,1327,3.036,1349,2.214,1353,3.036,1354,2.828,1356,3.081,1489,2.093,1505,3.487,1536,1.841,1683,1.375,1715,3.199,1716,3.292,1717,3.429,1732,2.427,1754,2.916,1755,2.798,1757,3.199,1758,2.427,1759,4.238,1760,2.508,1761,3.048,1762,3.199,1763,3.048,1764,3.199,1765,3.199,1766,2.596,1788,3.199,1804,2.798,1869,4.28,1879,2.916,2011,3.526,2018,2.281,2219,2.214,2220,3.588,2221,3.854,2222,2.916,2223,3.854,2224,3.048,2225,6.795,2226,5.206,2227,3.048,2228,2.916,2229,2.427,2230,2.596,2231,3.489,2232,2.427,2234,3.048,2235,3.278,2239,2.916,2240,4.117,2242,3.048,2245,3.048,2247,2.916,2249,3.048,2251,2.596,2252,2.508,2254,2.692,2255,3.048,2258,2.596,2260,2.916,2261,2.798,2262,3.048,2263,4.117,2264,2.798,2266,2.427,2273,3.854,2274,3.854,2275,3.854,2276,3.588,2277,3.588,2278,3.588,2279,4.847,2280,3.588,2281,5.206,2282,5.206,2283,3.854,2284,3.854,2285,3.854,2286,3.854,2287,5.895,2288,3.854,2289,3.854,2290,3.854,2291,3.854,2292,3.854,2293,3.854,2294,3.854,2295,3.854,2296,3.854,2297,2.596,2298,3.176,2299,5.206,2300,3.854,2301,3.376,2302,3.854,2303,3.854,2304,3.048,2305,3.854,2306,3.854]],["title/interfaces/FilterRendererSpec.html",[0,0.177,1717,2.001]],["body/interfaces/FilterRendererSpec.html",[0,0.251,2,1.036,3,0.07,4,0.053,5,0.053,8,0.295,9,2.824,12,0.167,13,0.549,18,0.32,19,0.008,26,0.119,35,1.352,36,0.995,45,3.845,47,1.804,50,1.08,52,1.185,59,0.928,60,0.955,61,2.686,66,1.147,73,0.518,78,0.157,96,1.004,99,1.263,109,1.041,111,1.682,112,2.81,114,1.245,115,1.128,118,1.572,140,0.7,143,0.609,158,0.995,159,0.004,160,0.005,161,0.004,163,1.787,168,1.185,170,1.079,172,0.844,181,0.803,190,3.172,192,0.844,195,0.477,200,0.824,204,0.605,233,1.147,234,2.199,259,0.482,266,0.786,280,0.556,281,1.07,322,2.607,324,2.361,361,1.458,373,2.822,377,1.804,435,2.589,466,3.49,477,0.441,486,3.213,566,1.849,586,1.607,596,1.721,599,2.047,604,1.824,619,1.572,664,1.352,667,1.352,670,1.762,674,1.762,681,1.352,688,1.786,700,2.399,705,1.411,714,2.354,728,1.441,730,1.572,736,2.108,767,1.441,769,1.943,774,1.895,784,1.441,803,3.061,809,1.721,838,3.185,856,2.519,860,2.291,870,2.022,881,1.572,937,3.21,947,2.361,952,3.845,954,2.217,955,2.623,957,1.721,960,1.721,962,2.822,966,2.72,969,2.224,970,2.047,1022,1.804,1023,2.704,1029,1.863,1030,2.434,1147,1.441,1149,2.291,1174,1.762,1190,1.849,1197,2.704,1206,1.472,1229,2.103,1242,1.682,1250,1.381,1253,1.994,1254,2.047,1259,2.321,1260,2.047,1263,1.762,1265,2.846,1266,2.689,1267,3.257,1293,2.892,1321,2.361,1327,2.689,1349,2.224,1353,3.043,1354,2.836,1356,2.291,1489,2.103,1505,3.598,1536,1.849,1683,1.381,1715,4.335,1716,2.916,1717,3.587,1732,2.437,1754,2.928,1755,2.81,1757,3.213,1758,2.437,1759,4.029,1760,2.519,1761,3.061,1762,3.213,1763,3.061,1764,3.213,1765,3.213,1766,2.607,1788,3.213,1804,2.81,1869,3.791,1879,2.928,2011,3.532,2018,2.291,2219,2.224,2220,3.604,2221,3.871,2222,2.928,2223,3.871,2224,3.061,2225,5.908,2226,5.221,2227,3.061,2228,2.928,2229,2.437,2230,2.607,2231,3.496,2232,2.437,2234,3.061,2235,3.288,2239,2.928,2240,4.13,2242,3.061,2245,3.061,2247,2.928,2249,3.061,2251,2.607,2252,2.519,2254,2.704,2255,3.061,2258,2.607,2260,2.928,2261,2.81,2262,3.061,2263,4.13,2264,2.81,2266,2.437,2273,3.871,2274,3.871,2275,3.871,2276,3.604,2277,3.604,2278,3.604,2279,4.861,2280,3.604,2281,3.871,2282,3.871,2283,3.871,2284,3.871,2285,3.871,2286,3.871,2287,5.908,2288,3.871,2289,3.871,2290,3.871,2291,3.871,2292,3.871,2293,3.871,2294,3.871,2295,3.871,2296,3.871,2297,2.607,2298,3.185,2299,5.221,2300,3.871,2301,3.391,2302,3.871,2303,3.871,2304,3.061,2305,3.871,2306,3.871]],["title/components/FilterTestHostComponent.html",[204,0.311,679,2.001]],["body/components/FilterTestHostComponent.html",[3,0.068,4,0.051,5,0.051,8,0.287,9,1.527,12,0.162,13,0.476,14,0.382,18,0.316,19,0.008,25,1.977,26,0.105,47,2.714,50,0.751,52,1.254,58,1.937,59,0.854,60,1.264,63,1.314,73,0.444,78,0.113,85,0.882,87,2.277,114,1.646,115,0.984,127,2.506,140,0.567,143,0.916,158,0.967,159,0.004,160,0.005,161,0.004,181,0.787,188,3.294,194,2.57,195,0.77,197,1.049,198,0.726,200,0.768,204,0.552,208,1.796,224,0.698,233,1.114,247,0.787,259,0.479,260,1.43,263,1.527,266,0.832,280,0.418,281,1.193,285,3.121,286,2.276,338,1.866,358,1.027,361,0.928,364,1.164,374,1.461,389,3.219,390,1.527,408,2.781,435,1.4,441,1.161,461,1.644,463,1.238,466,3.355,477,0.428,479,2.533,483,4.688,510,5.12,570,1.634,574,2.224,584,2.974,586,2.126,603,1.494,604,1.58,605,2.277,606,1.841,609,1.494,611,1.796,612,1.699,651,1.494,652,1.852,653,1.527,654,3.49,655,2.1,656,1.561,657,2.1,658,2.1,659,1.672,660,1.988,661,2.1,662,1.841,663,2.1,664,1.314,665,2.1,666,1.753,667,2.183,668,1.841,669,3.49,670,1.711,671,1.841,672,1.841,673,1.137,674,2.33,675,1.841,676,2.1,677,1.888,678,2.1,679,3.816,680,1.841,681,2.183,682,2.1,683,1.753,684,3.49,685,1.796,686,2.922,687,1.796,688,2.138,689,1.796,690,2.859,691,1.753,692,1.937,693,2.1,694,1.711,695,2.1,696,1.988,697,1.494,698,1.527,699,1.4,700,1.527,701,2.1,702,1.841,703,2.1,704,1.888,705,1.37,706,2.1,707,1.753,708,1.988,709,2.1,727,2.1,751,2.1,784,1.4,809,2.276,815,3.123,860,3.03,882,3.577,884,2.845,885,2.974,954,2.472,955,2.962,960,2.588,961,3.123,962,2.445,963,3.121,966,2.651,988,3.76,992,3.76,1005,2.781,1019,1.597,1197,2.627,1263,2.65,1265,2.859,1293,3.302,1301,3.788,1353,2.637,1363,3.03,1583,3.449,1717,2.781,1734,4.713,1758,3.224,1759,2.294,2172,4.544,2298,3.812,2308,3.449,2354,3.121,2487,3.501,2497,3.76,2660,3.501,2745,2.174,2749,2.161,2751,1.841,2762,2.533,3074,8.058,3075,4.634,3076,6.31,3077,7.174,3078,7.174,3079,7.174,3080,4.634,3081,5.171,3082,4.634,3083,8.314,3084,7.174,3085,4.634,3086,6.31,3087,4.634,3088,4.634,3089,6.31,3090,4.25,3091,4.634,3092,7.174,3093,4.634,3094,4.634,3095,4.107,3096,4.634,3097,4.634,3098,4.107,3099,4.634,3100,2.974,3101,4.634,3102,4.634,3103,4.634,3104,4.634,3105,6.31,3106,4.634,3107,6.31,3108,6.31,3109,6.31,3110,6.31,3111,4.634,3112,4.634,3113,4.634]],["title/interfaces/FindParams.html",[0,0.177,3114,3.058]],["body/interfaces/FindParams.html",[0,0.288,2,0.802,3,0.054,4,0.041,5,0.041,8,0.228,12,0.129,13,0.601,14,0.637,18,0.306,19,0.008,20,0.852,22,1.272,25,0.906,26,0.113,34,0.786,35,1.046,36,1.121,41,2.369,50,0.992,52,0.601,57,2.412,59,0.881,66,1.674,71,1.346,73,0.562,77,2.189,78,0.169,81,2.254,85,1.292,87,1.589,91,2.346,99,0.724,109,0.528,113,1.466,114,0.963,115,0.81,133,1.091,134,2.369,138,2.149,140,0.332,148,2.788,156,1.772,158,0.77,159,0.003,160,0.006,161,0.003,165,2.815,168,0.601,172,0.653,179,1.721,181,0.461,190,1.396,192,1.31,198,0.554,200,0.643,203,1.584,204,0.571,216,1.43,224,0.595,245,2.634,247,1.076,259,0.351,266,0.945,272,0.944,280,0.561,281,0.894,326,2.766,327,2.72,346,2.135,358,0.818,361,1.547,364,0.992,392,1.835,408,1.627,433,1.772,435,2.556,436,1.827,438,2.572,441,1.587,451,4.453,456,2.369,458,1.466,459,2.743,461,1.207,463,1.782,464,3.537,477,0.341,478,3.593,479,2.018,480,2.175,481,2.018,483,2.838,485,3.044,506,1.949,509,2.369,521,1.708,522,4.722,523,1.216,528,1.772,529,2.746,532,2.938,546,2.033,550,2.266,551,1.673,555,0.77,556,1.025,557,2.506,561,2.486,566,1.43,567,2.486,568,2.486,569,3.621,570,2.235,571,2.486,572,3.238,573,2.486,574,2.455,578,4.957,583,2.436,584,2.369,585,2.486,586,1.811,587,3.595,588,2.486,591,2.486,592,2.266,593,2.486,594,3.089,595,4.102,596,2.67,599,2.306,606,2.518,713,2.581,714,2.556,715,2.018,718,2.018,720,2.018,725,2.018,727,3.155,728,1.915,729,2.018,730,1.216,731,2.746,732,1.949,733,2.018,735,2.018,736,1.069,737,2.018,738,1.503,739,3.447,740,3.138,741,2.398,742,2.018,743,2.76,744,4.222,746,2.018,748,2.506,749,2.018,751,2.436,752,2.018,754,2.018,756,1.363,757,2.018,758,2.018,760,2.018,762,3.465,764,2.018,765,3.806,766,3.465,767,2.333,768,1.069,769,2.189,770,2.938,771,2.189,772,2.018,773,2.018,774,2.518,775,2.018,776,2.018,777,2.018,778,2.987,779,1.396,780,2.581,781,2.938,782,2.018,784,1.115,785,2.018,806,1.627,809,1.332,865,1.949,906,2.266,947,1.827,953,1.627,1006,2.746,1051,2.135,1074,1.332,1271,1.503,1313,1.772,1322,1.772,1326,1.627,1524,3.553,1628,1.985,1683,1.069,1733,2.266,1744,1.827,1758,1.886,1760,1.949,1766,2.938,1794,2.266,1924,3.621,2026,2.369,2172,2.018,2188,3.621,2266,1.886,2298,1.827,2633,2.175,2726,2.486,2803,2.486,3081,4.749,3100,4.068,3114,5.203,3115,5.243,3116,5.49,3117,3.82,3118,2.624,3119,2.624,3120,2.624,3121,5.49,3122,2.624,3123,2.624,3124,3.82,3125,2.624,3126,2.624,3127,4.505,3128,2.624,3129,4.505,3130,2.486,3131,2.624,3132,4.505,3133,2.624,3134,2.486,3135,2.624,3136,2.486,3137,2.624,3138,2.624,3139,2.624,3140,2.624,3141,2.624,3142,3.82,3143,2.624,3144,2.486,3145,2.624,3146,2.369,3147,2.624,3148,2.624,3149,2.486,3150,2.624,3151,2.624,3152,2.486,3153,2.624,3154,2.624,3155,2.486,3156,2.624,3157,2.624,3158,3.82,3159,3.82,3160,2.624,3161,2.624,3162,4.505,3163,3.82,3164,4.505,3165,2.624,3166,4.505,3167,2.624,3168,2.624,3169,2.624,3170,2.624,3171,2.624,3172,2.624,3173,2.624,3174,2.624,3175,2.624,3176,2.624,3177,2.624,3178,2.486,3179,2.624,3180,2.624,3181,2.624,3182,2.624,3183,2.624,3184,2.624,3185,3.82,3186,2.369,3187,2.266,3188,2.624,3189,2.624,3190,2.624,3191,2.624,3192,2.624,3193,2.624,3194,2.624,3195,2.624,3196,2.624,3197,2.624,3198,2.624,3199,2.624,3200,2.624,3201,4.949,3202,2.624,3203,4.505,3204,2.624,3205,2.624,3206,2.624,3207,2.624,3208,2.624,3209,2.624,3210,2.624,3211,2.624,3212,2.624,3213,2.624,3214,2.624,3215,2.624,3216,4.505,3217,2.624,3218,2.624,3219,2.624,3220,2.624,3221,2.624,3222,2.624,3223,2.624,3224,2.624,3225,2.486]],["title/interfaces/FindableWidget.html",[0,0.177,485,2.18]],["body/interfaces/FindableWidget.html",[0,0.311,2,0.81,3,0.054,4,0.041,5,0.041,8,0.231,12,0.131,13,0.603,14,0.308,18,0.304,19,0.008,20,0.861,22,1.285,25,1.329,26,0.113,34,0.794,35,1.057,36,1.129,41,2.393,50,0.994,52,0.607,57,2.315,59,0.884,66,1.682,71,1.356,73,0.562,77,1.519,78,0.155,81,2.224,85,1.293,87,1.601,91,2.148,99,0.732,109,0.533,113,1.481,114,0.973,115,0.692,133,1.103,134,2.393,138,2.159,140,0.335,148,2.752,156,1.791,158,0.778,159,0.003,160,0.006,161,0.003,165,2.756,168,0.881,172,0.66,179,1.739,181,0.465,190,1.41,192,1.315,198,0.473,200,0.646,203,1.6,204,0.572,216,1.445,224,0.599,245,2.646,247,1.082,259,0.353,266,0.947,272,0.953,280,0.562,281,0.9,326,2.779,327,2.736,346,2.151,358,0.827,361,1.488,364,0.999,392,1.846,408,1.644,433,1.791,435,2.523,436,1.846,438,2.584,441,1.597,451,4.376,456,2.393,458,1.481,459,2.747,461,1.213,463,1.784,464,3.545,477,0.344,478,3.614,479,2.038,480,2.197,481,2.038,483,2.859,485,3.568,506,1.969,509,2.393,521,1.715,522,4.644,523,1.229,528,1.791,529,2.767,532,2.96,546,2.048,550,2.289,551,1.69,555,0.778,556,1.035,557,2.973,561,2.512,566,1.445,567,2.512,568,2.512,569,3.648,570,2.248,571,2.512,572,3.257,573,2.512,574,2.466,578,4.092,583,3.367,584,2.393,585,2.512,586,1.824,587,3.572,588,2.512,591,2.512,592,2.289,593,2.512,594,3.099,595,3.756,596,2.681,599,2.323,606,2.151,713,3.061,714,2.562,715,2.038,718,2.038,720,2.038,725,2.038,727,3.512,728,1.926,729,2.038,730,1.229,731,2.767,732,1.969,733,2.038,735,2.038,736,1.08,737,2.038,738,1.519,739,3.463,740,3.156,741,2.412,742,2.038,743,2.765,744,4.237,746,2.038,748,2.525,749,2.038,751,2.454,752,2.038,754,2.038,756,1.377,757,2.038,758,2.038,760,2.038,762,3.485,764,2.038,765,3.824,766,3.485,767,2.244,768,1.08,769,2.206,770,2.96,771,2.206,772,2.038,773,2.038,774,2.779,775,2.038,776,2.038,777,2.038,778,3.002,779,1.41,780,2.6,781,2.96,782,2.038,784,1.126,785,2.038,806,1.644,809,1.345,865,1.969,906,2.289,947,1.846,953,1.644,1006,3.257,1051,1.481,1074,1.345,1271,1.519,1313,1.791,1322,1.791,1326,1.644,1524,3.568,1628,2,1683,1.568,1733,2.289,1744,1.846,1758,1.905,1760,2.859,1766,2.038,1794,2.289,1924,2.512,2026,2.393,2172,2.038,2188,3.648,2266,1.905,2298,1.846,2633,2.197,2726,2.512,2803,2.512,3081,4.49,3100,4.092,3114,5.005,3115,4.769,3116,4.532,3117,2.651,3118,2.651,3119,2.651,3120,2.651,3121,5.509,3122,2.651,3123,2.651,3124,3.849,3125,2.651,3126,2.651,3127,4.973,3128,2.651,3129,4.973,3130,2.512,3131,2.651,3132,4.532,3133,2.651,3134,2.512,3135,2.651,3136,2.512,3137,2.651,3138,2.651,3139,2.651,3140,2.651,3141,2.651,3142,3.849,3143,2.651,3144,2.512,3145,2.651,3146,2.393,3147,2.651,3148,2.651,3149,2.512,3150,2.651,3151,2.651,3152,2.512,3153,2.651,3154,2.651,3155,2.512,3156,2.651,3157,2.651,3158,3.849,3159,3.849,3160,2.651,3161,2.651,3162,4.532,3163,3.849,3164,4.532,3165,2.651,3166,4.532,3167,2.651,3168,2.651,3169,2.651,3170,2.651,3171,2.651,3172,2.651,3173,2.651,3174,2.651,3175,2.651,3176,2.651,3177,2.651,3178,2.512,3179,2.651,3180,2.651,3181,2.651,3182,2.651,3183,2.651,3184,2.651,3185,3.849,3186,2.393,3187,2.289,3188,2.651,3189,2.651,3190,2.651,3191,2.651,3192,2.651,3193,3.849,3194,3.849,3195,2.651,3196,2.651,3197,2.651,3198,2.651,3199,2.651,3200,2.651,3201,4.973,3202,2.651,3203,4.532,3204,2.651,3205,2.651,3206,2.651,3207,2.651,3208,2.651,3209,2.651,3210,2.651,3211,2.651,3212,2.651,3213,2.651,3214,2.651,3215,2.651,3216,4.532,3217,2.651,3218,2.651,3219,2.651,3220,2.651,3221,2.651,3222,2.651,3223,2.651,3224,2.651,3225,2.512,3226,3.729]],["title/interfaces/FindableWidget-1.html",[0,0.147,158,0.788,485,1.814]],["body/interfaces/FindableWidget-1.html",[0,0.322,2,1.207,3,0.081,4,0.062,5,0.062,8,0.344,10,2.591,12,0.195,13,0.536,18,0.306,19,0.008,25,1.746,26,0.121,55,2.757,57,2.575,73,0.574,78,0.208,81,1.48,114,2.047,115,0.71,152,2.745,159,0.005,160,0.006,161,0.005,163,1.746,168,1.346,197,0.924,200,0.725,216,3.49,224,0.916,233,1.336,245,2.968,246,4.032,247,1.404,280,0.58,281,0.924,318,3.037,337,3.743,361,1.571,364,1.692,433,2.668,435,2.686,436,2.751,437,3.15,438,3.158,441,1.965,442,5.529,444,3.743,447,3.566,458,3.397,459,2.149,460,3.95,463,1.54,464,3.832,466,2.757,468,3.566,469,4.623,470,3.743,472,3.743,474,3.743,483,2.934,484,4.689,485,3.768,560,4.367,583,3.964,596,2.005,713,3.416,714,2.499,727,2.518,736,1.609,809,2.005,846,4.191,905,3.95,906,3.411,907,3.411,908,3.566,909,6.367,910,2.449,911,4.509,912,4.509,913,4.509,914,4.509,915,5.772,916,4.509,917,4.509,918,4.509,919,4.509,920,4.198,921,4.198,922,4.198,923,4.509,925,5.772,926,5.88,927,4.198,928,5.928,930,5.928,931,5.079,932,4.198,934,4.198,936,4.509,937,2.449,938,4.509,939,4.509,940,3.95,941,5.928,942,5.772,943,4.198,944,4.509,945,4.198,946,4.509,947,2.751,948,5.772,949,4.792]],["title/components/FormCheckboxComponent.html",[204,0.311,680,1.803]],["body/components/FormCheckboxComponent.html",[3,0.064,4,0.048,5,0.048,8,0.504,12,0.152,13,0.456,14,0.69,18,0.327,19,0.008,26,0.088,27,1.435,34,1.287,50,0.72,52,1.221,59,0.971,60,0.872,62,2.771,63,1.235,71,1.514,73,0.542,78,0.106,83,2.233,96,1.33,98,3.548,99,0.855,100,2.469,101,2.1,109,1.287,115,1.007,119,4.568,140,0.624,143,1.068,144,6.789,146,5.368,159,0.004,160,0.005,161,0.004,168,0.984,181,0.755,191,2.402,192,0.771,195,0.932,197,1.31,198,0.766,200,0.81,204,0.514,208,1.688,216,2.343,217,3.619,224,0.83,233,1.454,247,1.489,259,0.384,263,1.435,280,0.289,338,1.788,358,1.54,373,2.343,374,1.374,390,1.435,392,1.751,441,1.091,461,1.642,463,1.472,477,0.402,506,3.193,507,4.298,544,1.688,556,2.188,603,1.404,604,1.514,605,1.288,606,1.73,609,1.404,611,1.688,612,1.696,613,1.826,619,1.992,633,1.316,651,1.404,652,1.804,653,1.992,654,3.4,655,1.974,656,1.467,657,1.974,658,1.974,659,1.571,660,1.869,661,1.974,662,1.73,663,1.974,664,1.235,665,1.974,666,1.648,667,2.127,668,1.73,669,3.4,670,1.609,671,1.73,672,1.73,673,1.069,674,1.609,675,1.73,676,1.974,677,1.774,678,1.974,679,1.92,680,2.98,681,2.534,682,1.974,683,1.648,684,3.4,685,1.688,686,2.829,687,1.688,688,1.679,689,1.688,690,2.74,691,1.648,692,1.82,693,1.974,694,1.609,695,1.974,696,1.869,697,1.404,698,1.435,699,1.316,700,1.435,701,1.974,702,1.73,703,1.974,704,1.774,705,1.288,706,1.974,707,1.648,708,1.869,709,1.974,714,1.826,800,5.964,806,1.92,810,4.835,814,4.568,815,3.438,816,4.568,817,5.247,818,4.568,819,4.568,820,4.568,821,4.568,822,4.568,823,3.305,824,3.88,825,4.568,826,2.527,830,5.495,834,3.291,836,2.156,837,3.096,838,3.438,839,3.291,840,1.688,842,4.568,844,3.291,845,3.291,846,3.562,848,3.291,850,3.291,851,2.934,853,2.934,854,3.291,856,2.3,857,4.568,859,6.163,860,2.091,861,3.291,862,2.091,864,2.674,865,2.3,866,2.225,868,3.291,870,1.209,872,3.291,881,1.435,910,1.92,1030,1.648,1034,2.594,1036,3.714,1683,1.751,1718,4.839,2062,5.005,2202,5.31,2382,3.88,3227,6.321,3228,6.789,3229,3.861,3230,6.047,3231,6.945,3232,6.945,3233,6.945,3234,3.861,3235,4.356,3236,4.568,3237,4.356,3238,6.047,3239,4.356,3240,6.047,3241,6.156,3242,6.945,3243,4.356,3244,4.356,3245,3.534,3246,3.534,3247,3.534,3248,3.534,3249,3.534,3250,3.534,3251,3.534,3252,3.534,3253,3.534,3254,3.534,3255,3.534,3256,3.534,3257,3.534,3258,3.534,3259,3.534,3260,4.356,3261,4.356,3262,3.096,3263,3.861,3264,4.356,3265,3.534,3266,3.291,3267,4.568]],["title/components/FormInputComponent.html",[204,0.311,683,1.717]],["body/components/FormInputComponent.html",[3,0.049,4,0.037,5,0.037,8,0.478,12,0.117,13,0.377,14,0.656,18,0.327,19,0.008,25,1.228,26,0.087,34,1.275,35,0.95,50,0.596,52,1.294,57,0.97,59,1.012,60,0.671,61,1.155,62,1.849,63,0.95,71,1.868,73,0.551,78,0.082,83,1.849,96,1.164,98,3.061,99,1.176,100,1.9,101,1.596,108,1.579,109,1.346,111,1.765,114,0.875,115,0.428,140,0.805,143,1.086,146,4.682,158,1.25,159,0.003,160,0.004,161,0.003,168,0.815,170,1.132,179,2.334,181,0.625,192,0.593,195,0.93,197,1.24,198,0.734,200,0.863,204,0.544,208,1.299,216,1.94,217,3.474,224,0.856,233,1.204,247,1.017,259,0.332,263,1.104,266,0.647,272,1.907,280,0.44,281,1.105,338,1.48,344,1.268,358,1.328,364,1.105,373,1.94,374,1.057,390,1.104,435,1.512,441,0.839,461,1.612,463,1.517,477,0.31,481,2.736,544,1.299,555,1.044,556,0.931,574,1.182,576,2.532,596,1.806,603,1.08,604,1.254,605,0.991,606,1.331,609,1.08,611,1.299,612,1.662,613,1.512,619,1.649,633,1.012,651,1.08,652,1.71,653,1.649,654,3.011,655,1.519,656,1.129,657,1.519,658,1.519,659,1.209,660,1.438,661,1.519,662,1.331,663,1.519,664,0.95,665,1.519,666,1.268,667,1.884,668,1.331,669,3.011,670,1.238,671,1.331,672,1.331,673,0.822,674,1.238,675,1.331,676,1.519,677,1.365,678,1.519,679,1.477,680,1.331,681,2.541,682,1.519,683,2.514,684,3.011,685,1.299,686,2.44,687,1.299,688,1.39,689,1.299,690,2.268,691,1.268,692,1.401,693,1.519,694,1.238,695,1.519,696,1.438,697,1.08,698,1.104,699,1.012,700,1.104,701,1.519,702,1.331,703,1.519,704,1.365,705,1.48,706,1.519,707,1.268,708,1.438,709,1.519,714,1.512,728,1.512,743,2.096,756,2.213,778,2.148,800,5.723,806,1.477,810,4.505,814,3.782,815,2.966,816,3.782,817,4.526,818,3.782,819,3.782,820,3.782,821,3.782,822,5.84,823,2.736,824,3.213,825,3.782,826,2.092,830,5.025,834,2.532,836,1.659,837,2.382,838,4.094,839,2.532,840,1.94,842,3.782,844,2.532,845,2.532,846,2.949,848,2.532,850,2.532,851,2.258,853,2.258,854,2.532,856,1.77,857,3.782,859,3.782,860,1.609,861,2.532,862,1.609,864,2.058,865,1.77,866,1.712,868,2.532,870,0.931,872,2.532,881,1.104,910,1.477,931,3.678,937,2.206,954,1.725,1021,2.825,1022,1.268,1028,2.504,1033,2.29,1034,3.051,1038,2.949,1122,2.334,1135,2.736,1198,2.151,1217,4.062,1233,2.206,1238,3.061,1240,2.715,1242,2.112,1245,2.38,1265,1.545,1277,2.148,1278,3.29,1279,3.098,1326,1.477,1348,3.29,1363,2.404,1364,2.558,1367,1.94,1400,2.643,1483,2.793,1628,1.238,1703,3.395,1732,2.558,1861,4.437,1882,3.782,1884,3.782,1895,4.062,1930,3.558,1940,4.062,2018,1.609,2067,5.214,2239,3.073,2301,4.724,2382,3.213,2402,2.643,2404,2.72,2452,5.392,2634,2.72,3134,4.477,3227,6.656,3234,2.971,3236,3.782,3245,2.72,3246,2.72,3247,2.72,3248,2.72,3249,2.72,3250,2.72,3251,2.72,3252,2.72,3253,2.72,3254,2.72,3255,2.72,3256,2.72,3257,2.72,3258,2.72,3259,2.72,3262,2.382,3265,2.72,3266,2.532,3268,6.656,3269,2.258,3270,5.006,3271,6.646,3272,6.646,3273,2.971,3274,4.861,3275,4.062,3276,7.112,3277,6.646,3278,3.845,3279,4.861,3280,4.036,3281,4.79,3282,5.992,3283,5.992,3284,5.006,3285,3.352,3286,4.861,3287,2.971,3288,3.558,3289,3.352,3290,6.646,3291,2.971,3292,4.062,3293,4.08,3294,4.437,3295,3.352,3296,4.062,3297,3.352,3298,3.352,3299,2.971,3300,3.352,3301,6.646,3302,6.646,3303,5.006,3304,5.006,3305,3.352,3306,3.352,3307,4.062,3308,3.352,3309,4.437,3310,5.006,3311,5.006,3312,3.352,3313,4.437,3314,3.782,3315,2.971,3316,3.352,3317,3.352,3318,2.532,3319,4.062,3320,3.352,3321,3.352,3322,5.992,3323,5.006,3324,5.006,3325,3.352,3326,3.352,3327,5.006,3328,3.352,3329,3.352,3330,3.352,3331,3.352,3332,3.352,3333,3.352,3334,3.352,3335,3.352,3336,3.352,3337,3.352,3338,3.352,3339,3.352,3340,5.006,3341,2.971,3342,2.72,3343,2.971,3344,4.437,3345,2.971,3346,3.372,3347,5.992,3348,5.006,3349,5.31,3350,5.006,3351,2.971,3352,3.352,3353,3.352,3354,3.352]],["title/components/FormSelectComponent.html",[204,0.311,691,1.717]],["body/components/FormSelectComponent.html",[3,0.065,4,0.05,5,0.05,8,0.47,12,0.157,13,0.465,14,0.696,18,0.324,19,0.008,26,0.065,30,1.643,34,0.954,50,0.534,52,1.236,59,0.98,60,0.898,61,1.545,63,1.271,71,1.545,73,0.521,78,0.109,83,2.278,87,1.326,96,1.284,98,3.603,99,0.88,100,2.542,101,1.878,102,1.826,109,1.086,115,0.573,140,0.682,143,1.051,146,4.968,152,2.458,159,0.004,160,0.005,161,0.004,168,1.004,181,0.77,191,2.45,192,0.794,195,0.927,197,1.324,198,0.771,200,0.779,204,0.52,208,1.738,216,2.391,217,3.634,224,0.841,247,0.761,259,0.42,263,1.477,272,1.146,280,0.409,338,1.824,344,2.333,358,1.684,374,1.414,390,1.477,441,1.123,461,1.647,463,1.615,477,0.414,506,3.258,507,4.385,544,1.738,555,0.935,556,1.245,603,1.445,604,1.545,605,1.326,606,1.781,609,1.445,611,1.738,612,1.701,613,1.863,619,2.033,633,1.354,651,1.445,652,1.826,653,2.033,654,3.442,655,2.032,656,1.511,657,2.032,658,2.032,659,1.618,660,1.924,661,2.032,662,1.781,663,2.032,664,1.271,665,2.032,666,1.696,667,2.153,668,1.781,669,3.442,670,1.656,671,1.781,672,1.781,673,2.069,674,1.656,675,1.781,676,2.032,677,1.826,678,2.032,679,1.976,680,1.781,681,2.58,682,2.032,683,1.696,684,3.442,685,1.738,686,2.873,687,1.738,688,1.713,689,1.738,690,2.795,691,2.873,692,1.874,693,2.032,694,1.656,695,2.032,696,1.924,697,1.445,698,1.477,699,1.354,700,1.477,701,2.032,702,1.781,703,2.032,704,1.826,705,1.326,706,2.032,707,1.696,708,1.924,709,2.032,714,1.863,756,2.278,800,5.945,806,1.976,810,4.666,814,4.661,815,3.491,816,4.661,817,5.328,818,4.661,819,4.661,820,4.661,821,4.661,822,4.661,823,3.372,824,3.959,825,4.661,826,2.578,829,3.974,830,5.786,834,3.388,836,2.22,837,3.187,838,2.22,839,3.388,840,1.738,842,4.661,844,3.388,845,3.388,846,3.634,848,3.388,850,3.388,851,3.02,853,3.02,854,3.388,856,2.368,857,4.661,859,4.661,860,2.153,861,3.388,862,2.962,864,2.753,865,2.368,866,2.291,868,3.388,870,1.245,872,3.388,881,1.477,910,1.976,931,2.753,1034,2.647,1129,2.878,1198,2.878,1299,2.22,1332,1.781,1367,2.391,1763,2.878,2344,3.76,2345,2.542,2356,3.187,2380,5.006,2381,6.164,2382,5.282,2474,3.638,3227,5.739,3245,3.638,3246,3.638,3247,3.638,3248,3.638,3249,3.638,3250,3.638,3251,3.638,3252,3.638,3253,3.638,3254,3.638,3255,3.638,3256,3.638,3257,3.638,3258,3.638,3259,3.638,3262,3.187,3265,3.638,3267,5.328,3273,3.974,3313,5.468,3341,3.974,3342,3.638,3343,3.974,3344,5.468,3345,3.974,3351,5.468,3355,5.739,3356,3.974,3357,7.053,3358,6.169,3359,7.053,3360,6.169,3361,4.484,3362,4.484,3363,4.484,3364,6.169,3365,4.484,3366,4.484,3367,4.484,3368,6.169,3369,7.597,3370,4.484,3371,4.484,3372,4.484,3373,4.484]],["title/classes/FormValidators.html",[78,0.11,3374,3.43]],["body/classes/FormValidators.html",[3,0.091,4,0.069,5,0.069,8,0.473,12,0.219,14,0.632,18,0.268,19,0.008,25,2.211,26,0.091,34,1.63,52,1.441,59,0.744,71,1.918,73,0.473,78,0.152,81,2.039,85,0.874,115,0.978,140,0.828,143,0.798,159,0.005,160,0.006,161,0.005,163,1.533,181,0.955,195,0.901,197,1.273,198,0.669,200,0.843,216,2.422,224,0.848,259,0.346,266,0.894,272,1.597,280,0.572,358,1.697,462,5.785,506,4.043,615,4.511,671,3.041,681,2.171,810,4.693,826,3.2,846,4.511,870,2.126,881,2.059,1074,2.762,1288,3.119,1483,3.86,2228,4.701,3155,5.158,3280,5.158,3374,5.785,3375,6.249,3376,8.279,3377,7.657,3378,7.657,3379,7.657,3380,7.657,3381,6.249,3382,7.657,3383,8.629,3384,9.214,3385,6.786,3386,7.184,3387,7.657,3388,8.279,3389,6.249,3390,7.657,3391,6.786,3392,7.657,3393,7.657,3394,6.717,3395,6.249,3396,6.249,3397,5.071,3398,5.071,3399,6.249,3400,5.071,3401,6.213]],["title/components/FormlyInputComponent.html",[204,0.311,685,1.759]],["body/components/FormlyInputComponent.html",[3,0.081,4,0.061,5,0.061,12,0.194,18,0.274,19,0.008,26,0.081,50,1.058,60,1.11,63,1.571,73,0.55,78,0.135,109,1.015,140,0.785,159,0.005,160,0.006,161,0.005,168,1.156,181,0.886,191,2.82,195,0.889,198,0.746,204,0.537,208,2.147,224,0.984,247,1.205,259,0.393,263,1.825,280,0.589,338,2.099,358,1.228,374,1.747,390,1.825,441,1.388,461,1.668,463,1.393,477,0.512,603,1.786,604,1.778,605,2.099,606,2.201,609,1.786,611,2.147,612,1.73,651,1.786,652,1.707,653,1.825,654,3.745,655,2.511,656,1.867,657,2.511,658,2.511,659,1.999,660,2.377,661,2.511,662,2.201,663,2.511,664,1.571,665,2.511,666,2.096,667,2.343,668,2.201,669,3.745,670,2.046,671,2.201,672,2.201,673,1.36,674,2.046,675,2.201,676,2.511,677,2.257,678,2.511,679,2.442,680,2.201,681,2.343,682,2.511,683,2.096,684,3.745,685,3.202,686,3.48,687,2.147,688,1.971,689,2.147,690,3.217,691,2.096,692,2.315,693,2.511,694,2.046,695,2.511,696,2.377,697,1.786,698,1.825,699,1.673,700,1.825,701,2.511,702,2.201,703,2.511,704,2.257,705,1.638,706,2.511,707,2.096,708,2.377,709,2.511,823,4.283,1033,1.909,1034,2.377,1483,3.653,3269,3.732,3278,5.029,3280,5.278,3288,3.938,3291,4.91,3294,4.91,3402,9.001,3403,6.358,3404,6.705,3405,6.705,3406,7.1,3407,5.541,3408,7.1,3409,4.91,3410,5.541,3411,7.1,3412,4.91,3413,5.541,3414,7.1,3415,5.541,3416,5.541,3417,7.1,3418,4.91,3419,5.541,3420,7.1,3421,4.496,3422,5.541,3423,7.1,3424,3.556,3425,3.556,3426,4.91,3427,4.91,3428,5.541,3429,4.91,3430,4.496,3431,5.541,3432,5.541,3433,5.541,3434,5.541]],["title/components/FormlyNumberWithUnitInputComponent.html",[204,0.311,687,1.759]],["body/components/FormlyNumberWithUnitInputComponent.html",[3,0.079,4,0.06,5,0.06,12,0.19,19,0.008,26,0.079,50,1.036,60,1.09,63,1.543,73,0.525,78,0.132,96,1.212,99,1.068,109,1.003,140,0.847,159,0.005,160,0.006,161,0.005,168,1.142,191,2.788,195,0.87,198,0.742,204,0.532,208,2.109,224,0.963,247,0.924,259,0.43,263,1.793,280,0.587,338,2.075,358,1.206,374,1.716,390,1.793,441,1.363,461,1.666,463,1.377,477,0.502,603,1.754,604,1.758,605,2.075,606,2.161,609,1.754,611,2.109,612,1.727,651,1.754,652,1.688,653,1.793,654,3.719,655,2.466,656,1.833,657,2.466,658,2.466,659,1.963,660,2.335,661,2.466,662,2.161,663,2.466,664,1.543,665,2.466,666,2.058,667,2.327,668,2.161,669,3.719,670,2.01,671,2.161,672,2.161,673,1.335,674,2.01,675,2.161,676,2.466,677,2.216,678,2.466,679,2.398,680,2.161,681,2.409,682,2.466,683,2.058,684,3.719,685,2.109,686,3.461,687,3.181,688,2.636,689,2.109,690,3.18,691,2.058,692,2.274,693,2.466,694,2.01,695,2.466,696,2.335,697,1.754,698,1.793,699,1.644,700,1.793,701,2.466,702,2.161,703,2.466,704,2.216,705,1.609,706,2.466,707,2.058,708,2.335,709,2.466,823,4.247,1033,1.875,1034,2.335,1483,3.622,1628,2.01,3269,3.665,3278,4.986,3280,5.233,3287,4.823,3288,3.868,3299,4.823,3403,6.304,3409,4.823,3412,4.823,3418,4.823,3421,4.415,3424,3.492,3425,3.492,3426,4.823,3427,4.823,3429,4.823,3430,4.415,3435,8.851,3436,6.687,3437,5.522,3438,5.522,3439,5.442,3440,7.019,3441,5.442,3442,7.019,3443,5.442,3444,7.019,3445,7.019,3446,5.442,3447,5.442,3448,7.019,3449,5.442,3450,7.019,3451,5.869,3452,5.442,3453,3.665,3454,3.34,3455,7.019,3456,5.442]],["title/components/FormlySelectComponent.html",[204,0.311,689,1.759]],["body/components/FormlySelectComponent.html",[3,0.088,4,0.067,5,0.067,12,0.212,19,0.008,26,0.088,60,1.214,63,1.718,73,0.465,78,0.147,140,0.675,159,0.005,160,0.006,161,0.005,168,1.223,191,2.984,195,0.752,198,0.767,204,0.559,208,2.349,247,1.029,259,0.473,263,1.997,280,0.541,338,2.222,358,1.343,374,1.911,390,1.997,441,1.518,461,1.677,463,1.474,477,0.56,603,1.953,604,1.882,605,2.222,606,2.407,609,1.953,611,2.349,612,1.74,651,1.953,652,1.807,653,1.997,654,3.868,655,2.746,656,2.042,657,2.746,658,2.746,659,2.186,660,2.6,661,2.746,662,2.407,663,2.746,664,1.718,665,2.746,666,2.292,667,2.42,668,2.407,669,3.868,670,2.238,671,2.407,672,2.407,673,2.004,674,2.238,675,2.407,676,2.746,677,2.469,678,2.746,679,2.671,680,2.407,681,2.42,682,2.746,683,2.292,684,3.868,685,2.349,686,3.575,687,2.349,688,2.086,689,3.308,690,3.405,691,2.292,692,2.533,693,2.746,694,2.238,695,2.746,696,2.6,697,1.953,698,1.997,699,1.831,700,1.997,701,2.746,702,2.407,703,2.746,704,2.469,705,1.792,706,2.746,707,2.292,708,2.6,709,2.746,823,4.464,1253,3.413,1254,2.6,1332,2.407,1693,2.746,2344,3,2345,3.435,3356,5.371,3403,6.626,3421,4.917,3424,3.889,3425,3.889,3430,4.917,3457,8.166,3458,8.166,3459,6.061,3460,6.061,3461,6.061,3462,7.514,3463,6.061]],["title/interfaces/FunctionRenderer.html",[0,0.177,1237,2.18]],["body/interfaces/FunctionRenderer.html",[0,0.289,2,1.08,3,0.072,4,0.055,5,0.055,8,0.307,9,2.611,12,0.174,13,0.622,18,0.315,19,0.008,21,5.085,22,2.843,26,0.12,27,1.637,30,1.324,35,1.409,38,2.928,47,2.812,50,1.031,52,1.409,55,2.563,57,1.915,60,0.995,61,1.712,64,1.602,65,2.915,66,1.787,73,0.556,78,0.121,83,2.443,85,0.925,90,3.986,91,1.674,96,0.775,99,0.975,102,3.028,112,2.928,115,1.012,133,1.469,138,1.534,141,3.028,143,0.635,148,2.179,151,3.347,153,3.189,159,0.004,160,0.006,161,0.004,165,1.712,168,0.809,192,0.88,195,0.743,200,0.732,203,3.189,204,0.61,224,0.55,233,1.787,234,1.501,244,2.928,247,1.345,259,0.439,266,0.714,272,1.27,280,0.438,321,1.835,344,1.88,361,1.587,363,2.386,389,2.077,466,3.071,508,1.712,512,2.19,566,1.926,570,2.331,604,1.245,633,2.245,652,1.984,659,1.793,700,1.637,728,1.501,756,1.835,767,1.501,774,1.974,779,1.88,803,3.189,840,1.926,860,2.386,870,1.38,937,2.915,947,2.46,952,2.624,955,3.048,956,3.923,957,1.793,959,2.88,960,2.859,961,3.274,962,3.451,966,2.563,967,3.347,970,2.132,972,3.448,1005,2.19,1013,5.007,1015,1.793,1017,4.701,1018,2.915,1019,1.712,1020,3.347,1021,1.974,1033,1.712,1044,3.189,1074,1.793,1149,3.176,1174,2.745,1231,2.764,1232,2.539,1237,3.805,1257,2.539,1258,2.539,1261,2.252,1262,2.317,1264,2.46,1265,2.041,1266,2.764,1267,3.106,1268,3.274,1270,2.694,1280,3.106,1290,1.974,1327,2.077,1347,2.539,1349,2.317,1497,2.539,1505,3.54,1674,3.028,1683,2.152,1713,3.754,1714,3.754,1715,4.455,1716,2.252,1717,2.915,1718,4.865,1719,6.031,1720,5.616,1721,4.032,1722,3.532,1723,4.032,1724,6.031,1725,5.366,1726,5.366,1727,5.366,1728,4.032,1729,4.032,1730,4.032,1731,4.701,1732,2.539,1733,3.051,1734,2.817,1735,4.032,1736,3.754,1737,4.032,1738,4.032,1739,4.032,1740,2.928,1741,4.032,1742,3.532,1743,4.032,1744,2.46,1745,3.347,1746,4.032,1747,2.817,1748,4.032,1749,3.754,1750,4.032,1751,3.189,1752,5.366,1753,4.032,1754,3.051,1755,2.928,1756,4.032,1757,3.347,1758,2.539,1759,2.46,1760,2.624,1761,3.189,1762,3.347,1763,3.189,1764,3.347,1765,3.347,1766,2.716,1767,4.032,3464,4.404,3465,4.032]],["title/pipes/FunctionRendererPipe.html",[3466,3.43,3467,3.227]],["body/pipes/FunctionRendererPipe.html",[3,0.1,4,0.076,5,0.076,8,0.426,13,0.612,14,0.568,18,0.241,19,0.008,26,0.1,52,1.12,59,0.819,64,2.615,73,0.502,78,0.167,99,1.592,115,1.036,159,0.006,160,0.007,161,0.006,170,1.557,181,0.859,195,0.688,197,1.144,198,0.754,210,4.016,224,0.762,259,0.381,272,1.759,280,0.538,361,1.625,392,2.349,477,0.635,521,1.873,611,2.667,856,4.284,955,2.615,962,3.453,1018,3.576,1231,3.391,1237,3.896,2252,4.284,2614,6.583,2818,5.584,3098,7.898,3466,6.129,3467,5.767,3468,4.891,3469,8.114,3470,6.882,3471,7.191,3472,7.191,3473,6.882,3474,7.191,3475,6.882]],["title/interfaces/GridColumn.html",[0,0.177,960,1.638]],["body/interfaces/GridColumn.html",[0,0.27,2,0.945,3,0.063,4,0.048,5,0.048,8,0.269,9,2.686,12,0.152,13,0.594,14,0.747,18,0.325,19,0.008,21,5.232,22,2.882,26,0.115,27,1.433,30,1.158,35,1.233,38,2.562,47,2.98,50,0.995,52,1.327,55,2.34,57,1.259,60,1.209,61,1.498,64,1.947,65,3.305,66,1.894,73,0.576,78,0.147,83,2.769,85,0.844,90,3.789,91,2.035,96,1.082,99,1.185,102,2.826,112,2.562,115,1.041,133,1.786,138,1.864,141,3.054,143,0.771,148,2.47,151,2.929,153,3.876,159,0.004,160,0.005,161,0.004,165,2.081,168,0.708,192,0.77,195,0.694,200,0.692,203,2.591,204,0.593,233,1.803,234,1.313,244,3.558,247,1.42,259,0.415,266,0.749,272,1.544,280,0.4,321,2.231,344,2.284,361,1.578,363,2.088,389,1.817,466,2.905,508,2.081,512,2.662,566,2.34,570,2.643,604,1.089,633,2.379,652,2.108,659,1.569,700,1.433,728,1.313,756,2.231,767,1.824,774,1.727,779,2.284,803,2.791,840,2.34,860,2.088,870,1.677,937,3.059,947,2.152,952,2.296,955,3.07,956,3.435,957,1.569,959,3.16,960,3.017,961,4.036,962,3.511,966,2.463,967,2.929,970,1.866,972,3.563,1005,2.662,1013,5.743,1015,1.569,1017,5.329,1018,3.305,1019,2.081,1020,4.068,1021,2.399,1033,2.081,1044,3.876,1074,2.179,1149,3.332,1174,3.011,1231,1.817,1232,2.222,1237,3.915,1257,2.222,1258,2.222,1261,1.97,1262,2.027,1264,2.152,1265,2.431,1266,2.524,1267,2.9,1268,3.711,1270,2.826,1280,3.407,1290,2.399,1327,2.524,1347,3.086,1349,2.816,1497,2.222,1505,3.588,1674,2.826,1683,2.171,1713,3.285,1714,3.285,1715,4.068,1716,1.97,1717,3.305,1718,4.836,1719,5.63,1720,5.664,1721,3.528,1722,3.091,1723,4.9,1724,6.616,1725,6.083,1726,6.616,1727,6.083,1728,4.9,1729,4.9,1730,4.9,1731,5.329,1732,3.086,1733,3.708,1734,4.25,1735,4.9,1736,4.563,1737,4.9,1738,4.9,1739,4.9,1740,3.558,1741,4.9,1742,4.293,1743,6.083,1744,2.99,1745,4.068,1746,4.9,1747,3.423,1748,4.9,1749,4.563,1750,4.9,1751,3.876,1752,6.616,1753,6.083,1754,2.669,1755,2.562,1756,3.528,1757,2.929,1758,2.222,1759,2.152,1760,2.296,1761,2.791,1762,2.929,1763,2.791,1764,2.929,1765,2.929,1766,2.377,1767,3.528]],["title/interfaces/GridDataFetchResult.html",[0,0.177,1301,2.397]],["body/interfaces/GridDataFetchResult.html",[0,0.278,1,2.218,2,0.445,3,0.03,4,0.023,5,0.023,8,0.127,9,1.664,10,3.232,12,0.272,13,0.381,14,0.358,15,3.415,18,0.25,19,0.008,20,1.166,22,0.705,25,1.065,26,0.113,27,1.664,28,1.046,30,1.78,34,1.625,36,1.7,39,0.983,40,2.457,42,0.902,47,0.774,50,0.937,52,0.552,53,1.732,54,1.046,55,3.214,56,1.79,59,0.873,60,1.279,61,2.303,62,0.756,63,1.71,64,2.059,66,0.815,67,0.902,69,2.986,71,0.849,73,0.48,74,2.024,77,1.381,78,0.106,80,1.013,81,0.903,83,1.252,84,1.928,85,0.607,86,2.77,87,1.493,88,0.793,90,3.759,91,0.689,93,3.47,96,1.081,99,0.991,101,1.996,102,0.834,108,1.765,109,1.232,111,1.973,114,0.534,115,0.936,118,1.844,120,1.081,127,1.724,129,1.455,133,1.003,136,0.813,137,2.218,138,1.046,140,0.809,141,1.381,143,0.816,148,1.844,149,1.081,152,1.971,154,2.019,155,0.954,158,1.491,159,0.003,160,0.003,161,0.002,168,0.333,170,0.463,172,1.525,173,1.119,181,0.542,192,0.362,194,1.768,195,0.205,198,0.379,200,0.401,202,0.983,203,0.878,204,0.502,210,2.149,224,0.481,233,0.815,234,1.024,243,0.834,247,0.347,250,1.119,259,0.423,260,0.632,266,0.935,269,1.119,270,1.853,272,0.867,280,0.592,281,1.062,286,2.993,321,0.756,327,0.878,336,0.954,338,1.284,344,2.528,358,0.454,361,1.011,364,1.353,369,1.678,374,0.645,377,2.117,378,2.354,390,1.117,392,1.257,438,1.252,459,1.024,461,0.355,463,0.665,477,0.189,508,1.496,512,0.902,521,1.002,523,1.844,538,1.732,544,0.793,546,1.283,547,0.705,555,1.258,556,0.568,570,1.53,594,2.338,596,1.223,603,0.66,604,0.849,605,1.284,609,0.66,612,0.785,613,0.618,619,1.117,623,1.678,633,1.69,634,2.424,650,1.081,652,1.044,656,1.142,664,0.58,667,0.58,673,0.502,697,0.66,698,0.674,699,1.024,705,0.605,728,0.618,730,1.117,736,1.849,738,1.768,741,0.774,743,1.369,768,1.257,771,0.834,779,0.774,784,1.024,794,1.013,809,0.738,836,1.013,840,0.793,862,0.983,870,0.568,953,2.226,954,1.496,955,2.363,957,0.738,958,3.082,959,2.903,960,2.501,966,1.311,969,0.954,970,0.878,972,1.814,973,1.081,974,1.081,993,3.142,1005,2.226,1015,0.738,1018,1.495,1019,2.88,1021,2.839,1022,1.283,1026,2.024,1028,1.417,1029,0.982,1030,1.283,1033,2.201,1051,1.347,1055,0.855,1058,0.902,1068,0.983,1074,1.566,1113,0.983,1114,1.381,1122,0.954,1124,3.432,1174,0.756,1190,0.793,1206,0.632,1218,0.855,1223,1.455,1226,2.76,1227,1.081,1228,1.922,1229,1.495,1230,1.922,1231,2.521,1232,1.732,1233,2.226,1234,1.16,1235,1.081,1236,1.16,1237,2.085,1238,1.732,1239,2.218,1240,2.536,1241,1.16,1242,2.252,1243,1.922,1244,1.922,1245,0.813,1246,1.16,1247,1.853,1248,2.461,1249,1.922,1250,0.592,1251,1.922,1252,1.16,1253,1.417,1254,0.878,1255,1.081,1256,1.119,1257,1.046,1258,1.046,1259,0.738,1260,0.878,1261,0.927,1262,0.954,1263,1.252,1264,1.013,1265,0.632,1266,1.814,1267,2.339,1268,2.149,1269,2.373,1270,3.451,1271,3.285,1272,3.059,1273,1.119,1274,2.373,1275,1.119,1276,1.081,1277,0.878,1278,1.013,1279,0.954,1280,2.793,1281,1.853,1282,2.218,1283,1.119,1284,1.119,1285,1.119,1286,2.76,1287,1.081,1288,1.381,1289,4.454,1290,2.006,1291,1.853,1292,1.119,1293,3.453,1294,2.373,1295,1.79,1296,3.082,1297,1.495,1298,1.16,1299,1.678,1300,1.922,1301,2.292,1302,1.922,1303,2.687,1304,3.264,1305,2.424,1306,1.853,1307,1.16,1308,1.16,1309,1.922,1310,1.119,1311,2.76,1312,1.16,1313,2.085,1314,1.853,1315,1.922,1316,1.16,1317,1.922,1318,1.922,1319,2.76,1320,2.461,1321,1.013,1322,0.983,1323,1.119,1324,1.16,1325,1.16,1326,0.902,1327,1.814,1328,3.172,1329,1.628,1330,3.871,1331,2.461,1332,0.813,1333,1.16,1334,1.16,1335,4.463,1336,1.119,1337,2.28,1338,3.42,1339,3.93,1340,1.119,1341,1.16,1342,2.373,1343,1.046,1344,0.721,1345,1.16,1346,1.16,1347,1.046,1348,2.77,1349,0.954,1350,1.16,1351,0.983,1352,2.373,1353,0.855,1354,0.902,1355,1.16,1356,2.085,1357,1.16,1358,1.119,1359,1.922,1360,1.732,1361,1.16,1362,1.16,1363,1.628,1364,1.046,1365,1.16,1366,1.16,1367,0.793,1368,1.16,1369,1.853,1370,2.461,1371,1.16,1372,1.16,1373,1.119,1374,1.79,1375,1.081,1376,1.79,1377,1.081,1378,2.461,1379,1.16,1380,1.013,1381,1.081,1382,1.16,1383,1.922,1384,1.16,1385,1.16,1386,1.16,1387,1.16,1388,1.16,1389,1.16,1390,1.853,1391,1.16,1392,2.461,1393,1.16,1394,1.16,1395,1.119,1396,2.862,1397,2.218,1398,1.16,1399,1.119,1400,1.081,1401,1.119,1402,1.16,1403,1.16,1404,1.119,1405,1.922,1406,1.16,1407,1.16,1408,1.922,1409,1.16,1410,1.16,1411,0.954,1412,1.16,1413,1.16,1414,1.16,1415,1.16,1416,3.789,1417,1.922,1418,1.16,1419,1.16,1420,1.16,1421,1.922,1422,1.16,1423,1.922,1424,1.922,1425,1.16,1426,1.16,1427,1.16,1428,1.922,1429,1.16,1430,2.862,1431,1.922,1432,1.922,1433,1.16,1434,1.16,1435,1.046,1436,1.16,1437,1.16,1438,1.16,1439,1.16,1440,1.16,1441,1.16,1442,1.922,1443,1.922,1444,1.922,1445,1.922,1446,2.461,1447,1.16,1448,1.16,1449,1.16,1450,1.16,1451,1.922,1452,1.922,1453,2.862,1454,1.16,1455,1.16,1456,1.16,1457,1.16,1458,1.16,1459,2.536,1460,3.42,1461,3.172,1462,1.922,1463,1.16,1464,1.922,1465,2.461,1466,1.16,1467,2.461,1468,1.16,1469,2.862,1470,1.922,1471,1.16,1472,1.16,1473,1.16,1474,1.922,1475,1.119,1476,1.16,1477,1.013,1478,1.16,1479,1.16,1480,1.16,1481,1.16,1482,1.922,1483,2.354,1484,1.16,1485,1.16,1486,1.16,1487,1.16,1488,1.16,1489,1.495,1490,1.16,1491,1.16,1492,1.16,1493,2.461,1494,1.16,1495,1.16,1496,1.119,1497,1.732,1498,1.16,1499,1.16,1500,1.16,1501,1.16,1502,1.16,1503,1.16,1504,1.16,1505,1.455,1506,1.16,1507,1.16,1508,1.16,1509,1.16,1510,1.081,1511,1.16,1512,1.16,1513,1.922,1514,1.16,1515,1.16,1516,1.16,1517,1.16,1518,1.16,1519,0.983,1520,1.16,1521,1.013,1522,1.16,1523,1.16,1524,0.983,1525,1.16,1526,1.16,1527,1.16,1528,1.16,1529,1.16,1530,1.16,1531,1.16,1532,1.16,1533,1.16,1534,1.16,1535,1.16,1536,0.793,1537,1.16,1538,1.16,1539,1.853,1540,1.16,1541,1.16,1542,1.16,1543,1.16,1544,1.16,1545,1.16,1546,1.16,1547,1.16,1548,1.922,1549,1.922,1550,1.922,1551,1.16,1552,2.292,1553,2.862,1554,1.922,1555,1.16,1556,1.16,1557,1.16,1558,1.16,1559,1.16,1560,1.16,1561,1.081,1562,1.16,1563,1.16,1564,1.16,1565,1.16,1566,0.705,1567,1.16,1568,1.16,1569,1.922,1570,1.16,1571,2.461,1572,1.16,1573,1.16,1574,1.16,1575,1.922,1576,1.16,1577,1.16,1578,1.922,1579,1.922,1580,1.16,1581,1.16,1582,1.081,1583,1.119,1584,1.16,1585,1.16,1586,1.16,1587,1.922,1588,1.922,1589,1.16,1590,1.16,1591,1.922,1592,1.16,1593,1.16,1594,1.16,1595,1.16,1596,1.16,1597,1.16,1598,1.16,1599,1.119,1600,1.16,1601,1.16,1602,1.16,1603,1.16,1604,1.16,1605,1.922,1606,1.16,1607,1.16,1608,1.16,1609,1.16,1610,1.16,1611,1.16,1612,1.16,1613,1.16,1614,1.16,1615,1.922,1616,2.862,1617,2.461,1618,1.16,1619,1.16,1620,1.922,1621,1.16,1622,1.16,1623,1.16,1624,1.16,1625,1.16,1626,1.16,1627,1.16,1628,1.252,1629,1.922,1630,1.16,1631,1.16,1632,1.16,1633,1.119,1634,1.16,1635,1.16,1636,1.16,1637,1.16,1638,1.16,1639,1.16,1640,1.119,1641,1.16,1642,1.16,1643,1.16,1644,1.16,1645,1.16,1646,1.16,1647,2.862,1648,1.16,1649,1.16,1650,1.16,1651,1.16,1652,1.16,1653,1.16,1654,1.119,1655,1.16,1656,1.16,1657,1.922,1658,1.16,1659,1.922,1660,1.16,1661,1.16,1662,1.922,1663,1.16,1664,1.16,1665,1.16,1666,1.16,1667,1.16,1668,2.461,1669,1.16,1670,1.16,1671,1.16,1672,1.16,1673,1.16,1674,0.834,1675,1.16,1676,1.16,1677,1.16,1678,1.16,1679,1.16,1680,1.16,1681,1.16,1682,1.16,1683,0.982,1684,1.013,1685,1.119,1686,1.16,1687,1.16,1688,1.013,1689,1.16,1690,1.16,1691,1.922,1692,3.172,1693,0.927,1694,1.16,1695,1.16,1696,1.16,1697,1.16,1698,1.16,1699,1.16,1700,1.922,1701,1.16,1702,1.16,1703,1.732,1704,1.16,1705,1.16,1706,1.081,1707,1.16,1708,1.16,1709,1.081,1710,1.16,1711,1.16,1712,1.16]],["title/interfaces/GridState.html",[0,0.177,1352,2.482]],["body/interfaces/GridState.html",[0,0.277,1,2.206,2,0.441,3,0.03,4,0.022,5,0.022,8,0.126,9,1.656,10,3.223,12,0.271,13,0.379,14,0.525,15,3.404,18,0.256,19,0.008,20,1.287,22,0.7,25,1.06,26,0.113,27,1.656,28,1.038,30,1.775,34,1.622,36,1.697,39,0.975,40,2.448,42,0.895,47,0.768,50,0.935,52,0.548,53,1.722,54,1.038,55,3.153,56,1.779,59,0.871,60,1.204,61,2.194,62,0.75,63,1.704,64,2.052,66,0.81,67,1.485,69,2.975,71,0.844,73,0.492,74,1.571,77,1.373,78,0.105,80,1.005,81,0.898,83,1.245,84,1.921,85,0.604,86,2.759,87,1.486,88,0.787,90,3.753,91,0.684,93,3.464,96,1.078,99,0.986,101,1.991,102,0.827,108,1.758,109,1.23,111,1.965,114,0.53,115,0.955,118,1.836,120,1.073,127,1.715,129,1.446,133,1.277,136,0.807,137,2.206,138,1.04,140,0.802,141,1.373,143,0.813,148,1.836,149,1.073,152,1.965,154,2.011,155,0.947,158,1.487,159,0.003,160,0.003,161,0.002,168,0.331,170,0.46,172,1.523,173,1.11,181,0.539,192,0.36,194,1.759,195,0.203,198,0.377,200,0.399,202,0.975,203,0.871,204,0.501,210,2.138,224,0.478,233,0.81,234,1.018,243,0.827,247,0.345,250,1.11,259,0.422,260,0.627,266,0.933,269,1.11,270,1.842,272,0.861,280,0.591,281,1.058,286,2.835,321,0.75,327,0.871,336,0.947,338,1.277,344,2.52,358,0.45,361,1.204,364,1.349,369,1.668,374,0.641,377,2.273,378,2.343,390,1.11,392,1.25,438,1.245,459,1.018,461,0.352,463,0.661,477,0.188,508,1.488,512,0.895,521,0.997,523,1.836,538,1.722,544,0.787,546,1.275,547,0.7,555,1.254,556,0.564,570,1.522,594,2.329,596,1.558,603,0.655,604,0.844,605,1.277,609,0.655,612,0.78,613,0.614,619,1.11,623,1.668,633,1.815,634,2.413,650,1.073,652,1.038,656,1.135,664,0.576,667,0.576,673,0.498,697,0.655,698,0.669,699,1.018,705,0.601,728,0.614,730,1.11,736,1.843,738,1.759,741,0.768,743,1.585,768,1.455,771,0.827,779,0.768,784,1.018,794,1.005,809,0.733,836,1.005,840,0.787,862,0.975,870,0.564,953,1.903,954,1.488,955,2.409,957,0.733,958,3.071,959,2.897,960,2.494,966,1.304,969,0.947,970,0.871,972,1.805,973,1.073,974,1.073,993,3.133,1005,2.215,1015,0.733,1018,0.895,1019,2.915,1021,2.831,1022,1.275,1026,2.013,1028,1.408,1029,0.976,1030,1.275,1033,2.194,1051,1.338,1055,0.849,1058,0.895,1068,0.975,1074,1.558,1113,0.975,1114,1.373,1122,0.947,1124,3.422,1174,0.75,1190,0.787,1206,0.627,1218,0.849,1223,1.446,1226,2.747,1227,1.073,1228,1.91,1229,1.485,1230,1.91,1231,2.512,1232,1.722,1233,2.215,1234,1.151,1235,1.073,1236,1.151,1237,2.074,1238,1.722,1239,2.206,1240,2.526,1241,1.151,1242,2.245,1243,1.91,1244,1.91,1245,0.807,1246,1.151,1247,1.842,1248,2.448,1249,1.91,1250,0.588,1251,1.91,1252,1.151,1253,1.408,1254,0.871,1255,1.073,1256,1.11,1257,1.038,1258,1.038,1259,0.733,1260,0.871,1261,0.92,1262,0.947,1263,1.245,1264,1.005,1265,0.627,1266,1.805,1267,2.329,1268,2.138,1269,2.36,1270,3.446,1271,3.28,1272,3.047,1273,1.11,1274,2.36,1275,1.11,1276,1.073,1277,0.871,1278,1.005,1279,0.947,1280,2.785,1281,1.842,1282,2.206,1283,1.11,1284,1.11,1285,1.11,1286,2.747,1287,1.073,1288,1.373,1289,4.595,1290,1.996,1291,1.842,1292,1.11,1293,3.449,1294,2.36,1295,1.779,1296,3.071,1297,1.485,1298,1.151,1299,1.668,1300,1.151,1301,1.779,1302,1.151,1303,2.413,1304,2.568,1305,2.676,1306,2.747,1307,1.151,1308,1.151,1309,1.91,1310,1.11,1311,2.747,1312,1.151,1313,2.074,1314,2.747,1315,1.91,1316,1.151,1317,1.91,1318,1.91,1319,2.747,1320,2.448,1321,1.005,1322,0.975,1323,1.11,1324,1.151,1325,1.151,1326,0.895,1327,2.1,1328,3.159,1329,1.618,1330,3.862,1331,2.448,1332,0.807,1333,1.151,1334,1.151,1335,4.454,1336,1.11,1337,2.27,1338,3.407,1339,3.919,1340,1.11,1341,1.151,1342,2.36,1343,1.038,1344,0.716,1345,1.91,1346,1.91,1347,1.722,1348,2.975,1349,1.571,1350,1.91,1351,1.618,1352,2.747,1353,1.408,1354,1.485,1355,1.91,1356,3.057,1357,2.849,1358,1.11,1359,1.91,1360,1.722,1361,1.151,1362,1.151,1363,1.618,1364,1.038,1365,1.151,1366,1.151,1367,0.787,1368,1.151,1369,1.842,1370,2.448,1371,1.151,1372,1.151,1373,1.11,1374,1.779,1375,1.073,1376,1.779,1377,1.073,1378,2.448,1379,1.151,1380,1.005,1381,1.073,1382,1.151,1383,1.91,1384,1.151,1385,1.151,1386,1.151,1387,1.151,1388,1.151,1389,1.151,1390,1.842,1391,1.151,1392,2.448,1393,1.151,1394,1.151,1395,1.11,1396,2.849,1397,2.206,1398,1.151,1399,1.11,1400,1.073,1401,1.11,1402,1.151,1403,1.151,1404,1.11,1405,1.91,1406,1.151,1407,1.151,1408,1.91,1409,1.151,1410,1.151,1411,0.947,1412,1.151,1413,1.151,1414,1.151,1415,1.151,1416,3.777,1417,1.91,1418,1.151,1419,1.151,1420,1.151,1421,1.91,1422,1.151,1423,1.91,1424,1.91,1425,1.151,1426,1.151,1427,1.151,1428,1.91,1429,1.151,1430,2.849,1431,1.91,1432,1.91,1433,1.151,1434,1.151,1435,1.038,1436,1.151,1437,1.151,1438,1.151,1439,1.151,1440,1.151,1441,1.151,1442,1.91,1443,1.91,1444,1.91,1445,1.91,1446,2.448,1447,1.151,1448,1.151,1449,1.151,1450,1.151,1451,1.91,1452,1.91,1453,2.849,1454,1.151,1455,1.151,1456,1.151,1457,1.151,1458,1.151,1459,2.526,1460,3.407,1461,3.159,1462,1.91,1463,1.151,1464,1.91,1465,2.448,1466,1.151,1467,2.448,1468,1.151,1469,2.849,1470,1.91,1471,1.151,1472,1.151,1473,1.151,1474,1.91,1475,1.11,1476,1.151,1477,1.005,1478,1.151,1479,1.151,1480,1.151,1481,1.151,1482,1.91,1483,2.343,1484,1.151,1485,1.151,1486,1.151,1487,1.151,1488,1.151,1489,1.485,1490,1.151,1491,1.151,1492,1.151,1493,2.448,1494,1.151,1495,1.151,1496,1.11,1497,1.722,1498,1.151,1499,1.151,1500,1.151,1501,1.151,1502,1.151,1503,1.151,1504,1.151,1505,1.446,1506,1.151,1507,1.151,1508,1.151,1509,1.151,1510,1.073,1511,1.151,1512,1.151,1513,1.91,1514,1.151,1515,1.151,1516,1.151,1517,1.151,1518,1.151,1519,0.975,1520,1.151,1521,1.005,1522,1.151,1523,1.151,1524,0.975,1525,1.151,1526,1.151,1527,1.151,1528,1.151,1529,1.151,1530,1.151,1531,1.151,1532,1.151,1533,1.151,1534,1.151,1535,1.151,1536,0.787,1537,1.151,1538,1.151,1539,1.842,1540,1.151,1541,1.151,1542,1.151,1543,1.151,1544,1.151,1545,1.151,1546,1.151,1547,1.151,1548,1.91,1549,1.91,1550,1.91,1551,1.151,1552,2.28,1553,2.849,1554,1.91,1555,1.151,1556,1.151,1557,1.151,1558,1.151,1559,1.151,1560,1.151,1561,1.073,1562,1.151,1563,1.151,1564,1.151,1565,1.151,1566,0.7,1567,1.151,1568,1.151,1569,1.91,1570,1.151,1571,2.448,1572,1.151,1573,1.151,1574,1.151,1575,1.91,1576,1.151,1577,1.151,1578,1.91,1579,1.91,1580,1.151,1581,1.151,1582,1.073,1583,1.11,1584,1.151,1585,1.151,1586,1.151,1587,1.91,1588,1.91,1589,1.151,1590,1.151,1591,1.91,1592,1.151,1593,1.151,1594,1.151,1595,1.151,1596,1.151,1597,1.151,1598,1.151,1599,1.11,1600,1.151,1601,1.151,1602,1.151,1603,1.151,1604,1.151,1605,1.91,1606,1.151,1607,1.151,1608,1.151,1609,1.151,1610,1.151,1611,1.151,1612,1.151,1613,1.151,1614,1.151,1615,1.91,1616,2.849,1617,2.448,1618,1.151,1619,1.151,1620,1.91,1621,1.151,1622,1.151,1623,1.151,1624,1.151,1625,1.151,1626,1.151,1627,1.151,1628,1.245,1629,1.91,1630,1.151,1631,1.151,1632,1.151,1633,1.11,1634,1.151,1635,1.151,1636,1.151,1637,1.151,1638,1.151,1639,1.151,1640,1.11,1641,1.151,1642,1.151,1643,1.151,1644,1.151,1645,1.151,1646,1.151,1647,2.849,1648,1.151,1649,1.151,1650,1.151,1651,1.151,1652,1.151,1653,1.151,1654,1.11,1655,1.151,1656,1.151,1657,1.91,1658,1.151,1659,1.91,1660,1.151,1661,1.151,1662,1.91,1663,1.151,1664,1.151,1665,1.151,1666,1.151,1667,1.151,1668,2.448,1669,1.151,1670,1.151,1671,1.151,1672,1.151,1673,1.151,1674,0.827,1675,1.151,1676,1.151,1677,1.151,1678,1.151,1679,1.151,1680,1.151,1681,1.151,1682,1.151,1683,0.976,1684,1.005,1685,1.11,1686,1.151,1687,1.151,1688,1.005,1689,1.151,1690,1.151,1691,1.91,1692,3.159,1693,0.92,1694,1.151,1695,1.151,1696,1.151,1697,1.151,1698,1.151,1699,1.151,1700,1.91,1701,1.151,1702,1.151,1703,1.722,1704,1.151,1705,1.151,1706,1.073,1707,1.151,1708,1.151,1709,1.073,1710,1.151,1711,1.151,1712,1.151]],["title/interfaces/HasFinder.html",[0,0.177,3225,3.058]],["body/interfaces/HasFinder.html",[0,0.29,2,0.815,3,0.055,4,0.042,5,0.042,8,0.232,12,0.131,13,0.604,14,0.31,18,0.301,19,0.008,20,0.866,22,1.293,25,0.921,26,0.113,34,0.799,35,1.064,36,1.135,41,2.408,50,0.996,52,0.611,57,2.32,59,0.887,66,1.687,71,1.362,73,0.558,77,1.529,78,0.156,81,2.228,85,1.294,87,1.609,91,2.156,99,0.736,109,0.537,113,1.491,114,0.979,115,0.817,133,1.11,134,2.408,138,2.166,140,0.337,148,2.756,156,1.802,158,0.783,159,0.003,160,0.006,161,0.003,165,2.761,168,0.611,172,0.664,179,1.75,181,0.468,190,1.42,192,1.242,198,0.475,200,0.648,203,1.61,204,0.573,216,1.454,224,0.602,245,2.654,247,1.086,259,0.354,266,0.948,272,0.959,280,0.563,281,0.904,326,2.787,327,2.746,346,2.161,358,0.832,361,1.492,364,1.004,392,2.032,408,1.654,433,1.802,435,2.527,436,1.858,438,2.592,441,1.603,451,4.381,456,2.408,458,1.491,459,2.749,461,1.217,463,1.786,464,3.55,477,0.347,478,3.627,479,2.051,480,2.211,481,2.051,483,4.102,485,3.073,506,1.982,509,2.408,521,1.72,522,4.652,523,1.237,528,1.802,529,2.779,532,2.974,546,2.058,550,2.304,551,1.701,555,0.783,556,1.042,557,2.536,561,2.528,566,1.454,567,2.528,568,2.528,569,3.664,570,2.256,571,2.528,572,3.269,573,2.528,574,2.474,578,4.107,583,2.465,584,2.408,585,2.528,586,1.833,587,3.576,588,2.528,591,2.528,592,2.304,593,2.528,594,3.01,595,3.77,596,2.688,599,2.334,606,2.161,713,2.612,714,2.566,715,2.051,718,2.051,720,2.051,725,2.051,727,3.18,728,1.933,729,2.051,730,1.237,731,2.779,732,1.982,733,2.051,735,2.051,736,1.086,737,2.051,738,1.529,739,3.474,740,3.168,741,2.42,742,2.051,743,2.769,744,4.246,746,2.051,748,2.536,749,2.051,751,2.465,752,2.051,754,2.051,756,1.386,757,2.051,758,2.051,760,2.051,762,3.498,764,2.051,765,3.836,766,3.498,767,2.25,768,1.086,769,2.216,770,2.974,771,2.216,772,2.051,773,2.051,774,2.542,775,2.051,776,2.051,777,2.051,778,3.011,779,1.42,780,2.612,781,2.974,782,2.051,784,1.134,785,2.051,806,1.654,809,1.354,865,2.873,906,2.304,947,1.858,953,1.654,1006,2.779,1051,1.491,1074,1.354,1271,1.529,1313,1.802,1322,1.802,1326,1.654,1524,3.577,1628,2.009,1683,1.086,1733,2.304,1744,1.858,1758,1.917,1760,1.982,1766,2.051,1794,2.304,1924,2.528,2026,2.408,2172,2.051,2188,3.664,2266,1.917,2298,2.693,2633,2.211,2726,2.528,2803,2.528,3081,4.781,3100,4.107,3114,5.018,3115,4.781,3116,4.548,3117,2.668,3118,2.668,3119,2.668,3120,2.668,3121,5.522,3122,2.668,3123,2.668,3124,3.867,3125,2.668,3126,2.668,3127,4.548,3128,2.668,3129,4.548,3130,2.528,3131,2.668,3132,4.548,3133,2.668,3134,2.528,3135,2.668,3136,2.528,3137,2.668,3138,2.668,3139,2.668,3140,2.668,3141,2.668,3142,3.867,3143,2.668,3144,2.528,3145,2.668,3146,2.408,3147,2.668,3148,2.668,3149,2.528,3150,2.668,3151,2.668,3152,2.528,3153,2.668,3154,2.668,3155,2.528,3156,2.668,3157,2.668,3158,3.867,3159,3.867,3160,2.668,3161,2.668,3162,4.548,3163,3.867,3164,4.548,3165,2.668,3166,4.548,3167,2.668,3168,2.668,3169,2.668,3170,2.668,3171,2.668,3172,2.668,3173,2.668,3174,2.668,3175,2.668,3176,2.668,3177,2.668,3178,2.528,3179,2.668,3180,2.668,3181,2.668,3182,2.668,3183,2.668,3184,2.668,3185,3.867,3186,2.408,3187,2.304,3188,2.668,3189,2.668,3190,2.668,3191,2.668,3192,2.668,3193,2.668,3194,2.668,3195,2.668,3196,2.668,3197,2.668,3198,2.668,3199,2.668,3200,2.668,3201,4.988,3202,2.668,3203,4.548,3204,2.668,3205,2.668,3206,2.668,3207,2.668,3208,2.668,3209,2.668,3210,2.668,3211,2.668,3212,2.668,3213,2.668,3214,2.668,3215,2.668,3216,4.548,3217,2.668,3218,2.668,3219,2.668,3220,2.668,3221,3.867,3222,3.867,3223,3.867,3224,3.867,3225,3.664]],["title/interfaces/ISubscriptionTracker.html",[0,0.177,3476,3.684]],["body/interfaces/ISubscriptionTracker.html",[0,0.311,2,1.252,3,0.084,4,0.064,5,0.064,8,0.356,12,0.202,14,0.601,18,0.279,19,0.008,26,0.106,50,0.95,52,1.185,57,2.31,59,1.105,78,0.14,85,1.29,113,3.17,114,1.504,158,1.519,159,0.005,160,0.006,161,0.005,170,1.304,172,1.02,181,0.908,195,0.798,197,1.327,198,0.636,200,0.672,204,0.395,224,0.883,259,0.442,266,0.862,280,0.482,281,0.958,341,3.093,358,2.045,364,1.629,376,4.904,392,1.668,437,4.127,477,0.532,599,2.472,604,1.443,1012,4.353,1029,2.108,1253,3.855,1254,2.472,1259,2.079,1519,4.396,2584,4.469,2707,4.096,3476,6.476,3477,7.431,3478,5.107,3479,7.827,3480,7.431,3481,6.452,3482,7.827,3483,5.107,3484,7.827,3485,7.663,3486,5.763,3487,6.452,3488,6.452,3489,6.452,3490,8.442,3491,7.073,3492,5.763,3493,7.431,3494,5.763,3495,7.431,3496,6.452,3497,5.107,3498,5.107,3499,5.107,3500,4.676,3501,5.107,3502,4.353,3503,5.107,3504,5.107,3505,5.107,3506,6.452,3507,5.107,3508,5.107,3509,5.107,3510,5.107,3511,6.452,3512,6.452,3513,5.107,3514,5.107,3515,5.107,3516,5.107,3517,5.107,3518,5.107]],["title/classes/IdGenerator.html",[78,0.11,882,2.573]],["body/classes/IdGenerator.html",[3,0.1,4,0.076,5,0.076,8,0.424,12,0.24,13,0.611,14,0.566,18,0.284,19,0.008,25,2.115,26,0.1,50,0.817,73,0.575,78,0.167,79,5.531,140,0.617,143,0.876,159,0.006,160,0.007,161,0.006,163,1.684,172,1.526,181,1.011,192,1.215,195,0.862,197,1.141,198,0.6,200,0.634,224,0.954,275,2.118,280,0.455,328,5.997,354,4.878,363,3.89,555,1.69,815,4.01,882,4.886,884,5.466,1925,7.18,2352,4.878,3519,8.904,3520,6.863,3521,8.619,3522,6.863,3523,6.863,3524,8.101,3525,6.863,3526,6.863,3527,8.101,3528,6.863,3529,6.863,3530,6.863]],["title/components/LoadingIndicatorComponent.html",[204,0.311,692,1.897]],["body/components/LoadingIndicatorComponent.html",[3,0.067,4,0.051,5,0.051,8,0.283,12,0.249,13,0.471,14,0.377,18,0.297,19,0.008,26,0.104,27,1.506,30,1.665,34,1.33,36,1.486,47,2.896,59,0.544,60,0.915,61,2.639,63,1.296,73,0.44,78,0.111,81,1.665,96,1.111,99,1.226,109,1.146,115,0.798,140,0.562,143,1.171,153,4.011,158,0.953,159,0.004,160,0.005,161,0.004,172,1.465,191,2.482,195,0.863,197,0.76,198,0.723,200,0.783,204,0.488,208,1.771,224,0.692,247,1.209,259,0.253,263,1.506,272,1.598,280,0.303,286,1.649,338,1.848,358,1.013,374,2.905,390,1.506,441,1.145,461,1.647,463,1.226,477,0.422,521,1.644,523,2.059,555,1.597,556,1.735,574,2.203,603,1.473,604,1.565,605,1.351,606,1.815,609,1.473,611,1.771,612,1.704,613,1.888,619,2.059,633,1.888,634,4.203,651,1.473,652,1.503,653,1.506,654,3.47,655,2.071,656,1.54,657,2.071,658,2.071,659,1.649,660,1.961,661,2.071,662,1.815,663,2.071,664,1.296,665,2.071,666,1.729,667,2.171,668,1.815,669,3.47,670,1.688,671,1.815,672,1.815,673,1.121,674,1.688,675,1.815,676,2.071,677,1.861,678,2.071,679,2.014,680,1.815,681,2.171,682,2.071,683,1.729,684,3.47,685,1.771,686,2.901,687,1.771,688,1.735,689,1.771,690,2.832,691,1.729,692,3.2,693,2.071,694,1.688,695,2.071,696,1.961,697,1.473,698,2.969,699,1.38,700,1.506,701,2.071,702,1.815,703,2.071,704,1.861,705,1.351,706,2.071,707,1.729,708,1.961,709,2.071,756,1.688,767,2.151,784,2.151,806,3.14,808,3.682,945,3.453,991,4.05,1021,3.728,1033,1.575,1034,1.961,1036,2.262,1038,2.692,1040,4.722,1042,5.785,1044,4.011,1051,1.815,1081,2.933,1124,3.526,1135,2.498,1138,4.722,1172,4.571,1198,2.933,1270,1.861,1271,2.546,1282,3.912,1367,2.422,1521,3.526,1582,2.413,1628,1.688,1633,4.186,1654,2.498,2260,4.373,2297,4.186,2301,5.063,2382,4.011,2529,4.05,2838,7.338,2894,3.453,3342,6.718,3349,5.539,3531,6.612,3532,3.708,3533,6.25,3534,7.658,3535,7.123,3536,6.25,3537,7.123,3538,7.123,3539,8.019,3540,7.123,3541,4.57,3542,4.57,3543,4.57,3544,8.629,3545,7.757,3546,6.25,3547,7.123,3548,7.123,3549,4.57,3550,8.629,3551,6.25,3552,6.787,3553,6.25,3554,6.25,3555,6.25,3556,6.25,3557,6.25,3558,7.658,3559,6.25,3560,6.25,3561,6.25,3562,6.25,3563,4.57,3564,4.57,3565,4.57,3566,4.57,3567,4.57,3568,4.57,3569,7.123,3570,8.279,3571,4.57,3572,6.25,3573,5.539,3574,4.57,3575,6.25,3576,4.57,3577,4.442,3578,6.25,3579,4.57,3580,4.57,3581,4.57]],["title/interfaces/LocatorDriver.html",[0,0.177,442,2.787]],["body/interfaces/LocatorDriver.html",[0,0.292,2,1.097,3,0.074,4,0.056,5,0.056,8,0.312,10,2.355,12,0.177,14,0.658,18,0.32,19,0.008,25,1.24,26,0.116,55,2.591,57,2.611,73,0.583,78,0.202,81,1.781,114,1.955,115,0.645,152,2.841,159,0.004,160,0.006,161,0.004,163,1.24,168,1.298,181,0.834,195,0.83,197,1.417,198,0.697,200,0.803,216,3.585,224,0.998,233,1.215,245,3.224,246,4.521,247,1.408,280,0.565,281,0.84,318,2.761,337,4.504,341,3.091,361,1.661,364,1.721,433,4.093,435,2.725,436,2.501,437,3.79,438,3.148,441,1.998,442,5.619,444,5.048,445,5.425,446,5.425,447,5.119,458,3.506,459,2.264,460,4.752,463,1.47,464,3.922,465,4.099,466,3.215,468,4.291,469,4.699,470,4.504,472,4.504,474,4.504,483,2.668,484,4.248,485,3.21,560,4.104,583,3.03,596,2.412,713,2.426,714,2.409,727,3.03,736,1.463,809,1.823,846,3.939,905,6.059,906,3.101,907,3.101,908,3.242,909,5.425,910,2.227,911,4.099,912,4.099,913,4.099,914,4.099,915,5.425,916,4.099,917,4.099,918,4.099,919,4.099,920,3.816,921,3.816,922,3.816,923,4.099,925,5.425,926,5.669,927,3.816,928,5.662,930,5.662,931,5.233,932,3.816,934,3.816,936,4.099,937,2.947,938,5.425,939,5.425,940,4.752,941,5.662,942,5.425,943,3.816,944,4.099,945,3.816,946,4.099,947,2.501,948,4.099,949,3.403,3582,5.052,3583,5.052,3584,5.052,3585,5.052,3586,5.052]],["title/interfaces/MenuItem.html",[0,0.177,2583,3.43]],["body/interfaces/MenuItem.html",[0,0.168,2,0.94,3,0.063,4,0.048,5,0.048,8,0.268,12,0.262,13,0.454,14,0.742,18,0.298,19,0.008,20,1.598,22,2.805,26,0.101,27,1.983,35,1.706,42,4.193,50,0.969,52,0.98,59,1.029,63,1.226,64,2.949,71,1.083,75,4.241,78,0.105,80,2.979,88,1.676,100,2.452,101,1.152,105,2.776,111,1.525,113,2.39,114,1.57,118,1.425,129,1.856,138,1.335,140,0.541,154,3.315,158,1.443,159,0.004,160,0.005,161,0.005,170,0.979,172,1.653,192,0.766,202,2.077,204,0.296,236,2.914,244,4.92,259,0.414,266,0.808,272,1.538,280,0.539,281,0.719,286,3.013,361,1.205,389,1.808,441,1.507,458,2.39,459,2.09,461,0.75,463,1.718,477,0.399,544,1.676,545,3.075,547,2.578,555,0.902,556,1.201,566,1.676,570,1.525,574,2.122,576,3.268,587,1.762,612,1.251,618,1.856,652,1.799,653,2.28,675,2.749,702,2.39,705,1.279,728,1.307,743,2.359,774,1.718,780,4.205,866,3.075,931,2.656,962,1.676,1029,1.742,1034,3.583,1036,4.215,1052,4.565,1055,1.808,1068,3.323,1104,3.075,1135,2.365,1206,1.335,1238,3.075,1259,2.171,1260,1.856,1265,1.857,1344,1.525,1411,2.806,1477,3.703,1536,1.676,1703,3.075,1718,3.694,1790,3.268,1881,2.452,2038,5.317,2089,3.075,2194,5.317,2251,2.365,2532,3.075,2533,5.483,2534,3.268,2535,4.883,2536,6.63,2537,6.605,2538,6.776,2539,5.589,2540,5.334,2541,3.834,2542,3.834,2543,3.834,2544,3.834,2545,3.834,2546,5.334,2547,6.133,2548,3.834,2549,3.834,2551,4.883,2552,3.834,2553,3.834,2554,3.834,2555,3.834,2556,3.834,2557,3.834,2559,3.834,2560,3.834,2561,3.834,2562,4.278,2564,3.834,2565,3.834,2570,3.51,2571,2.914,2572,3.834,2573,5.334,2574,5.334,2575,3.834,2576,5.334,2577,3.834,2578,3.834,2579,2.914,2580,3.834,2583,7.016,2584,2.656,2585,3.834,2586,3.51,2590,3.834,2594,5.334,2597,6.133,2606,5.228,2607,3.834,2608,3.51,2609,1.561,2610,3.51,2611,4.883,2612,3.268,2613,3.51,2614,3.51,2615,3.834,2616,3.51,2617,3.51,2618,5.483,2619,5.334,2620,5.334,2621,5.334,2622,6.969,2623,3.834,2624,6.133,2625,3.834,2626,3.834,2627,3.834,2628,3.834,2629,5.334,2630,3.834,2631,5.334,2632,3.834,2633,2.549,2634,3.51,2635,6.133,2636,6.969,2637,3.834,2638,3.834,2639,3.834,2640,3.834,2641,3.834,2642,6.133,2643,3.834,2644,3.834,2645,3.51,2646,3.834,2647,3.51,2648,5.334,2649,3.834,2650,3.834,2651,3.834,2652,4.883,2653,3.834,2654,2.914,2655,3.834,2656,3.834,2657,3.834,2658,3.834,2659,3.834,2660,3.268,2661,3.834,2662,3.834,2663,3.834,2664,5.334,2665,3.834,2666,3.834,2667,3.834,2668,3.834,2669,3.834,2670,3.834,2671,3.834,2672,3.834,2673,6.133,2674,3.834,2675,5.334,2676,3.834,2677,3.834,2678,3.834,2679,3.834,2680,3.834,2681,3.834,2682,3.834,2683,3.834,2684,5.334,2685,3.834]],["title/interfaces/MockRecord.html",[0,0.177,963,3.058]],["body/interfaces/MockRecord.html",[0,0.266,2,1.487,3,0.1,4,0.076,5,0.076,12,0.24,13,0.61,17,4.421,18,0.325,19,0.008,26,0.118,73,0.585,133,2.721,140,0.773,158,1.428,159,0.006,160,0.007,161,0.006,198,0.804,266,0.739,963,5.799,1147,2.067,1818,6.952,2309,4.61,2311,4.61,2453,6.952,2454,5.171,2456,5.171,3587,6.066,3588,6.066,3589,8.156,3590,7.63,3591,6.066,3592,7.168,3593,6.066,3594,6.066,3595,6.066,3596,6.066,3597,6.066]],["title/interfaces/MultiSelectOption.html",[0,0.177,2349,3.227]],["body/interfaces/MultiSelectOption.html",[0,0.298,2,1.144,3,0.077,4,0.058,5,0.058,8,0.326,12,0.184,13,0.518,18,0.268,19,0.008,20,1.765,26,0.118,31,4.409,34,1.462,36,1.098,50,0.965,52,0.857,59,0.91,65,2.321,73,0.557,78,0.128,79,4.409,81,1.402,85,0.961,91,1.774,96,0.821,109,0.753,115,1.035,118,1.735,127,2.091,133,2.031,140,0.473,143,0.672,152,2.842,159,0.004,160,0.006,161,0.004,168,1.368,170,1.191,195,0.527,198,0.46,200,0.862,204,0.471,233,1.266,259,0.486,266,0.826,275,1.625,280,0.557,281,1.433,364,0.971,389,2.2,435,1.59,461,0.913,477,0.486,547,2.367,574,1.856,599,2.259,612,0.951,613,1.59,652,1.839,664,1.492,666,2.892,667,1.492,668,3.219,673,2.116,681,1.948,714,1.59,751,3.113,815,3.785,826,2.871,864,3.232,870,1.462,881,1.735,882,3.894,883,3.742,884,3.232,885,3.379,892,3.546,907,3.232,954,2.367,955,1.697,957,1.899,959,2.04,960,1.899,961,2.606,962,2.04,966,2.54,1008,4.908,1019,2.367,1029,1.989,1083,2.69,1206,1.625,1223,2.259,1250,1.524,1263,2.537,1265,2.748,1290,2.091,1293,2.091,1297,3.028,1332,3.34,1337,2.144,1344,1.856,1566,1.814,1683,1.524,1684,2.606,1716,3.113,1717,3.573,1734,2.984,2011,3.81,2062,4.18,2134,2.606,2191,3.742,2219,2.455,2229,2.69,2230,2.878,2231,2.528,2232,2.69,2235,3.51,2237,2.878,2258,2.878,2307,2.69,2308,4.18,2309,3.546,2310,3.977,2311,4.628,2312,3.977,2313,3.977,2314,2.984,2322,4.883,2324,3.977,2325,3.742,2326,3.546,2337,4.883,2339,3.977,2344,4.162,2345,2.984,2346,2.69,2347,2.984,2348,2.878,2349,5.976,2350,3.977,2351,3.977,2352,4.883,2353,3.977,2354,3.546,2355,2.984,2356,3.742,2357,3.977,2358,3.977,2359,3.977,2360,3.977,2361,3.977,2362,3.977,2363,3.977,2364,5.19,2365,3.977,2366,3.977,2367,3.977,2368,3.977,2369,3.977,2370,3.977,2371,3.977,2372,3.977,2373,3.977,2374,3.977,2375,3.977,2376,3.977,2377,3.977,2378,3.977,2379,3.977]],["title/interfaces/MultiSelectOptionInternal.html",[0,0.177,2337,3.227]],["body/interfaces/MultiSelectOptionInternal.html",[0,0.296,2,1.13,3,0.076,4,0.058,5,0.058,8,0.322,12,0.182,13,0.514,18,0.266,19,0.008,20,1.755,26,0.118,31,3.339,34,1.451,36,1.085,50,0.96,52,0.847,59,0.905,65,2.294,73,0.549,78,0.127,79,5.178,81,1.386,85,0.953,91,1.753,96,0.812,109,0.744,115,1.098,118,1.714,127,2.708,133,2.016,140,0.468,143,0.665,152,2.866,159,0.004,160,0.006,161,0.004,168,1.363,170,1.177,195,0.52,198,0.455,200,0.844,204,0.467,233,1.251,259,0.485,266,0.821,275,1.606,280,0.555,281,1.429,364,0.96,389,2.175,435,1.572,461,0.902,477,0.481,547,2.62,574,1.834,599,2.233,612,0.94,613,1.572,652,2.014,664,1.475,666,2.876,667,1.475,668,3.205,673,2.109,681,1.933,714,1.572,751,2.358,815,4.254,826,2.849,864,4.185,870,1.445,881,1.714,882,3.865,883,3.699,884,3.194,885,3.339,892,3.505,907,4.185,954,2.349,955,1.677,957,1.877,959,2.017,960,1.877,961,2.576,962,2.017,966,2.53,1008,4.88,1019,2.349,1029,1.974,1083,2.659,1206,1.606,1223,2.233,1250,1.506,1263,2.518,1265,2.773,1290,2.067,1293,2.067,1297,3.005,1332,3.414,1337,2.12,1344,1.834,1566,2.349,1683,1.506,1684,2.576,1716,3.089,1717,3.557,1734,2.95,2011,3.796,2062,4.579,2134,2.576,2191,3.699,2219,2.426,2229,2.659,2230,2.844,2231,2.499,2232,2.659,2235,3.483,2237,2.844,2258,2.844,2307,2.659,2308,4.156,2309,3.505,2310,3.931,2311,4.592,2312,3.931,2313,3.931,2314,2.95,2322,4.846,2324,3.931,2325,3.699,2326,3.505,2337,5.405,2339,3.931,2344,3.764,2345,2.95,2346,2.659,2347,2.95,2348,2.844,2349,5.954,2350,5.15,2351,5.15,2352,5.735,2353,5.15,2354,3.505,2355,2.95,2356,3.699,2357,3.931,2358,3.931,2359,3.931,2360,3.931,2361,3.931,2362,3.931,2363,3.931,2364,5.15,2365,3.931,2366,3.931,2367,3.931,2368,3.931,2369,3.931,2370,3.931,2371,3.931,2372,3.931,2373,3.931,2374,3.931,2375,3.931,2376,3.931,2377,3.931,2378,3.931,2379,3.931]],["title/pipes/NestedPropertyPipe.html",[3466,3.43,3598,3.227]],["body/pipes/NestedPropertyPipe.html",[3,0.088,4,0.067,5,0.067,8,0.374,14,0.498,18,0.263,19,0.008,26,0.088,52,0.983,57,1.749,64,2.628,73,0.553,78,0.147,96,0.942,99,1.471,115,0.958,140,0.543,158,1.26,159,0.005,160,0.006,161,0.005,170,1.367,172,1.069,181,0.754,195,0.604,197,1.247,198,0.712,200,0.852,216,2.341,224,0.669,233,1.803,234,1.825,244,4.418,259,0.415,266,0.965,272,2.316,280,0.592,281,1.247,344,2.836,361,1.633,424,7.92,462,4.564,466,3.463,477,0.558,521,1.731,605,2.217,611,2.341,644,4.564,1459,3.398,1628,2.231,1683,2.587,1693,2.738,1754,3.709,1930,5.33,2772,3.086,2818,4.902,3466,5.665,3468,4.294,3471,6.646,3472,6.646,3474,6.646,3598,5.33,3599,6.646,3600,5.354,3601,7.499,3602,8.527,3603,7.499,3604,8.527,3605,7.499,3606,7.499,3607,6.041,3608,6.041,3609,6.041,3610,6.041,3611,5.354,3612,5.354,3613,6.041,3614,6.041,3615,7.499,3616,6.041,3617,6.041,3618,6.041,3619,7.499,3620,6.041,3621,6.041,3622,6.041,3623,6.041,3624,6.041,3625,6.041,3626,6.041,3627,6.041]],["title/classes/NoUnit.html",[78,0.11,3628,4.024]],["body/classes/NoUnit.html",[3,0.042,4,0.032,5,0.032,8,0.339,12,0.102,13,0.338,14,0.582,18,0.258,19,0.008,20,1.425,22,1,25,1.515,26,0.08,30,1.195,34,1.314,35,0.823,36,1.717,40,2.514,50,0.948,52,0.472,59,0.948,61,1,62,2.28,65,1.279,71,1.546,73,0.509,78,0.109,84,2.299,85,0.406,87,1.327,88,2.392,93,2.418,96,0.856,98,1.483,99,1.443,101,2.122,108,1.415,109,1.289,113,1.153,115,0.788,124,1.782,127,1.153,133,0.858,138,1.385,140,0.826,141,1.182,143,0.788,152,0.896,154,2.227,158,1.472,159,0.002,160,0.004,161,0.002,163,0.712,168,0.73,170,0.657,172,1.521,181,0.56,190,2.668,192,0.794,194,2.234,195,0.834,197,1.109,198,0.539,200,0.875,202,1.394,204,0.483,210,1.437,217,3.098,224,0.923,233,1.319,246,1.645,259,0.449,260,0.896,261,2.355,266,0.928,272,2.073,275,0.896,280,0.597,281,0.912,318,1.586,321,1.657,346,1.782,358,0.643,364,0.828,376,4.157,377,1.697,378,2.557,392,0.84,408,1.978,458,1.153,461,0.503,463,1.211,477,0.268,508,2.618,521,1.839,526,2.193,555,1.144,556,1.246,557,1.353,586,0.978,587,1.182,612,0.525,613,0.877,618,1.245,633,0.877,673,1.101,681,2.436,683,1.697,688,2.657,691,1.697,694,1.072,727,2.033,739,1.437,756,1.072,767,1.657,768,0.84,778,1.925,800,2.88,806,3.11,810,3.109,823,2.453,826,1.213,827,2.355,830,3.022,838,2.221,840,1.739,851,1.955,853,3.022,865,1.533,870,0.806,881,0.956,899,2.355,904,3.899,910,2.418,994,3.39,1005,1.279,1021,1.782,1022,1.697,1029,1.299,1030,1.697,1033,1,1034,1.245,1058,1.978,1083,1.483,1114,2.234,1135,1.586,1147,0.877,1190,1.739,1197,1.645,1206,0.896,1218,1.213,1245,1.153,1259,1.047,1260,1.245,1270,1.182,1277,1.925,1278,2.715,1279,2.092,1288,2.234,1297,1.279,1326,1.279,1337,1.182,1367,1.125,1459,1.315,1483,2.557,1536,1.125,1674,2.514,1683,0.84,1709,1.533,1747,1.645,1751,1.863,1845,2.292,1864,2.063,1876,2.193,1882,2.193,1884,2.193,2005,2.193,2011,3.197,2016,3.259,2018,2.634,2062,3.648,2067,3.52,2099,4.144,2134,3.303,2222,1.782,2231,1.394,2252,1.533,2261,1.71,2297,1.586,2344,3.303,2385,2.193,2389,4.752,2402,4.118,2417,2.755,2418,2.755,2422,3.39,2424,4.663,2425,4.144,2426,3.39,2459,2.063,2472,3.39,2609,1.619,2618,1.955,2633,1.71,2782,2.355,2810,2.355,2894,2.193,2929,2.355,3146,1.863,3236,2.193,3262,3.189,3266,2.193,3267,2.193,3268,2.193,3269,1.955,3274,2.355,3275,2.355,3278,1.863,3279,2.355,3280,3.695,3281,3.022,3286,2.355,3288,3.189,3292,2.355,3293,1.782,3296,3.641,3307,2.355,3319,3.641,3346,1.955,3355,2.193,3374,2.193,3386,3.641,3394,2.355,3397,2.355,3398,3.641,3400,2.355,3401,2.355,3437,2.063,3438,2.063,3451,6.435,3453,4.495,3454,1.782,3502,2.193,3628,3.977,3629,5.041,3630,3.022,3631,3.022,3632,4.157,3633,4.752,3634,4.752,3635,3.022,3636,3.695,3637,2.88,3638,3.52,3639,2.902,3640,2.902,3641,2.063,3642,2.063,3643,3.022,3644,4.097,3645,2.902,3646,2.902,3647,2.902,3648,2.063,3649,4.516,3650,1.955,3651,1.955,3652,2.063,3653,2.063,3654,1.955,3655,3.52,3656,2.063,3657,2.063,3658,2.063,3659,1.863,3660,2.88,3661,3.52,3662,3.022,3663,1.955,3664,2.063,3665,1.955,3666,3.977,3667,3.977,3668,3.977,3669,3.977,3670,2.572,3671,4.495,3672,2.355,3673,1.955,3674,2.355,3675,2.572,3676,3.977,3677,2.063,3678,2.572,3679,1.955,3680,5.041,3681,2.572,3682,2.572,3683,3.977,3684,2.572,3685,2.572,3686,2.572,3687,2.572,3688,2.572,3689,2.572,3690,2.572,3691,2.572,3692,2.572,3693,2.572,3694,2.572,3695,2.572,3696,2.063,3697,2.572,3698,2.572,3699,2.572,3700,3.977,3701,2.572,3702,2.572,3703,2.572,3704,2.572,3705,2.572,3706,1.863,3707,2.572,3708,2.572,3709,2.572,3710,2.572,3711,2.572,3712,2.063,3713,2.572,3714,2.572,3715,2.572,3716,2.572,3717,2.572,3718,2.572,3719,2.572,3720,2.572,3721,2.572,3722,2.572,3723,3.977,3724,6.253,3725,7.392,3726,2.572,3727,2.572,3728,1.955,3729,2.572,3730,5.47,3731,4.862,3732,6.519,3733,3.977,3734,5.47,3735,3.189,3736,3.977,3737,5.47,3738,2.572,3739,3.977,3740,3.977,3741,2.572,3742,2.572,3743,3.977,3744,2.572,3745,5.47,3746,2.572,3747,2.572,3748,2.572,3749,4.862,3750,3.977,3751,2.572,3752,2.572,3753,2.572,3754,2.572,3755,2.572,3756,2.572,3757,2.572,3758,2.572,3759,2.572,3760,2.572,3761,2.572,3762,3.977,3763,3.977,3764,3.641,3765,2.572,3766,2.572,3767,2.572,3768,2.572,3769,2.572,3770,4.862,3771,2.572,3772,2.572,3773,6.253,3774,2.572,3775,2.572,3776,2.572,3777,2.572,3778,2.572,3779,2.572,3780,2.572,3781,2.572,3782,2.572,3783,2.572,3784,3.977,3785,2.572,3786,2.355,3787,3.977,3788,2.572,3789,3.977,3790,3.641,3791,3.641,3792,3.977,3793,3.977,3794,5.968,3795,2.572,3796,2.572,3797,2.572,3798,2.572,3799,2.572,3800,2.572,3801,2.572,3802,2.572,3803,2.572,3804,2.355,3805,2.572,3806,2.572,3807,2.572,3808,2.572,3809,4.451,3810,2.572,3811,4.862,3812,2.572,3813,2.572,3814,2.572,3815,4.862,3816,2.572,3817,2.572,3818,3.977,3819,2.572,3820,2.572,3821,2.572,3822,2.572,3823,2.572,3824,2.572,3825,2.572,3826,3.189,3827,3.977,3828,2.572,3829,2.572,3830,5.47,3831,2.063,3832,2.572,3833,2.572,3834,2.572,3835,2.572,3836,2.355,3837,2.572,3838,2.572]],["title/classes/NumberUnit.html",[78,0.11,3839,3.058]],["body/classes/NumberUnit.html",[3,0.068,4,0.052,5,0.052,8,0.5,12,0.164,13,0.479,14,0.638,18,0.298,19,0.008,20,1.465,26,0.068,34,1.645,62,2.855,71,1.936,73,0.544,78,0.154,84,2.989,85,1.23,109,1.105,115,1.064,130,4.073,140,0.849,143,0.597,159,0.004,160,0.005,161,0.004,163,1.147,168,1.033,172,1.509,179,2.179,181,0.792,190,3.48,195,0.905,197,1.285,198,0.706,200,0.885,217,3.493,224,1.027,233,1.124,245,2.4,266,0.685,275,1.442,280,0.512,364,1.426,373,2.995,508,2.663,521,2.088,547,1.61,555,0.975,556,1.298,688,2.695,714,1.917,768,1.837,806,3.674,866,2.388,910,3.176,956,3.826,1083,3.242,1147,1.917,1218,3.23,1277,2.723,1288,3.292,1305,3.047,1329,3.047,1351,2.244,1459,2.876,1674,2.585,2016,4.401,2402,4.58,2609,3.007,3630,4.854,3631,4.854,3632,5.207,3633,5.207,3634,5.207,3635,4.275,3636,5.207,3637,4.073,3638,4.96,3641,3.322,3642,3.322,3643,5.207,3644,5.509,3648,3.322,3649,5.459,3650,5.207,3651,4.275,3652,3.322,3653,3.322,3654,4.275,3655,5.349,3656,3.322,3657,3.322,3658,3.322,3659,5.186,3660,4.96,3661,4.96,3662,5.207,3663,4.275,3664,3.322,3665,4.275,3696,3.322,3706,4.073,3839,5.614,3840,3.322,3841,3.896,3842,5.494,3843,5.847,3844,5.847,3845,4.674,3846,4.511,3847,4.511,3848,4.511,3849,5.924,3850,4.674,3851,4.674,3852,3.792,3853,3.792,3854,3.322,3855,4.511,3856,4.511,3857,4.511,3858,3.322,3859,3.322,3860,4.511,3861,4.511,3862,4.511,3863,3.322]],["title/classes/NumberWithUnitFormInputWidgetObject.html",[78,0.11,3864,4.024]],["body/classes/NumberWithUnitFormInputWidgetObject.html",[3,0.058,4,0.044,5,0.044,8,0.491,12,0.14,13,0.598,14,0.719,17,3.109,18,0.323,19,0.008,25,1.626,26,0.058,34,0.85,35,1.132,36,0.833,43,3.492,57,1.156,59,1.048,66,1.593,71,1,73,0.586,78,0.097,81,1.765,85,1.01,87,1.682,96,0.623,109,1.091,138,2.228,140,0.75,143,1.066,148,1.874,152,1.232,156,1.917,159,0.003,160,0.006,161,0.003,163,0.98,165,2.733,168,0.926,181,0.71,191,2.259,195,0.935,197,1.449,198,0.761,200,0.805,204,0.559,217,3.421,224,1.025,245,1.51,247,1.226,259,0.4,266,0.431,280,0.583,326,2.868,341,2.567,346,3.031,361,0.8,364,0.737,435,2.305,436,1.976,441,1,451,4.479,458,1.586,459,2.733,461,1.149,463,1.784,464,3.549,467,3.539,506,3.003,517,1.862,521,1.313,523,1.316,528,1.917,529,3.689,532,3.109,546,2.506,551,1.809,556,1.109,557,1.862,572,2.04,583,3.002,586,1.345,587,2.699,594,2.204,612,1.305,652,1.368,681,2.626,688,2.667,694,1.475,713,4.262,714,2.733,715,3.621,716,3.65,717,3.65,718,3.621,719,3.65,720,3.109,721,3.65,725,2.183,726,2.69,727,1.809,728,1.206,729,2.183,730,1.316,731,2.04,732,2.108,733,2.183,734,2.69,735,2.183,736,1.156,737,2.183,738,1.626,739,3.574,740,3.28,741,2.506,742,2.183,743,2.748,744,4.336,745,2.69,746,2.183,747,2.69,748,2.652,749,2.183,750,2.69,751,2.577,752,2.183,753,2.69,754,2.183,755,2.69,756,1.475,757,2.183,758,2.183,759,2.69,760,2.183,761,2.562,762,3.621,763,2.69,764,2.183,765,3.621,766,3.109,767,1.206,768,1.156,769,2.317,770,2.183,771,1.626,772,2.183,773,2.183,774,1.586,775,2.183,776,2.183,777,2.183,778,1.713,779,1.51,780,2.731,781,3.109,782,2.183,783,2.69,784,1.206,785,2.183,806,3.182,826,2.769,873,3.539,881,1.316,935,3.539,989,3.016,994,3.016,1052,3.109,1332,1.586,1966,3.539,2010,6.192,2418,2.451,3100,3.65,3178,2.69,3453,6.126,3454,2.451,3629,6.87,3638,2.562,3764,3.24,3786,3.24,3790,3.24,3791,3.24,3794,5.376,3804,5.376,3864,5.041,3865,9.094,3866,5.688,3867,5.688,3868,5.688,3869,7.22,3870,7.22,3871,6.625,3872,6.625,3873,6.625,3874,6.625,3875,6.625,3876,6.625,3877,6.625,3878,3.993,3879,5.688,3880,5.688,3881,3.993,3882,5.688,3883,3.993,3884,3.993,3885,3.993,3886,3.993,3887,3.993,3888,3.993,3889,3.993,3890,5.688,3891,3.993,3892,3.993,3893,3.993,3894,3.993,3895,3.993,3896,3.993,3897,3.993,3898,3.993,3899,3.993,3900,3.993,3901,3.993,3902,3.993,3903,3.24,3904,3.993,3905,3.993,3906,3.993,3907,3.993,3908,3.993,3909,3.993,3910,3.993,3911,3.993,3912,5.688,3913,3.993,3914,6.625,3915,3.993,3916,3.993,3917,3.993,3918,3.993,3919,3.993,3920,3.993,3921,3.993,3922,3.993,3923,3.993]],["title/injectables/NumberWithUnitsFormValidatorsFactory.html",[1845,2.319,3836,3.684]],["body/injectables/NumberWithUnitsFormValidatorsFactory.html",[3,0.046,4,0.035,5,0.035,12,0.111,14,0.534,18,0.168,19,0.008,20,1.34,22,1.096,25,1.181,26,0.085,30,1.282,34,1.378,35,0.902,36,1.754,40,2.637,50,0.972,52,0.518,59,0.972,61,1.096,62,1.778,65,1.402,71,1.205,73,0.452,78,0.117,84,2.001,85,0.445,87,1.423,88,2.509,93,2.559,96,0.905,98,1.625,99,1.491,101,2.174,108,1.518,109,1.303,113,1.264,115,0.615,124,1.953,127,1.264,133,0.941,138,1.485,140,0.821,141,1.296,143,0.827,152,0.982,154,2.335,158,1.585,159,0.003,160,0.004,161,0.003,168,0.518,170,0.72,172,1.488,181,0.601,192,1.028,194,2.365,195,0.481,197,0.965,198,0.421,200,0.87,202,1.527,204,0.501,210,1.575,224,0.352,233,1.396,246,1.803,259,0.459,260,0.982,261,2.581,266,0.943,272,2.12,275,0.982,280,0.604,281,0.8,318,1.739,321,1.778,346,1.912,358,0.705,364,0.587,376,4.361,377,1.82,378,2.707,392,0.921,408,2.121,458,1.264,461,0.551,463,1.27,477,0.294,508,2.696,521,1.494,526,2.403,555,1.211,556,1.336,557,1.483,586,1.072,587,1.296,612,0.575,613,0.961,618,1.365,633,0.961,673,1.181,681,2.435,683,1.82,688,2.616,691,1.82,694,1.175,739,1.575,756,1.175,767,1.754,778,2.065,800,3.089,810,3.291,823,2.631,826,1.329,827,2.581,830,3.242,838,2.382,840,1.865,851,2.143,853,3.242,865,1.68,870,0.883,881,1.048,899,2.581,904,4.127,910,2.121,994,3.636,1005,1.402,1021,1.912,1022,1.82,1029,1.393,1030,1.82,1033,1.096,1034,1.365,1058,2.121,1114,2.365,1135,1.739,1190,1.865,1197,1.803,1206,0.982,1245,1.264,1259,1.148,1260,1.365,1270,1.296,1277,1.365,1278,2.874,1279,2.244,1288,1.296,1297,1.402,1326,1.402,1337,1.296,1367,1.233,1483,3.242,1536,1.233,1674,2.365,1683,0.921,1709,1.68,1747,1.803,1751,2.041,1845,2.459,1847,2.041,1864,2.261,1876,2.403,1882,2.403,1884,2.403,2005,2.403,2011,3.315,2016,2.541,2018,2.788,2062,3.801,2067,3.726,2099,4.386,2134,3.442,2222,1.953,2231,1.527,2252,1.68,2261,1.874,2297,1.739,2344,3.442,2385,2.403,2389,4.927,2402,4.011,2417,2.955,2418,2.955,2422,3.636,2424,4.89,2425,4.386,2426,3.636,2459,2.261,2472,3.636,2618,2.143,2633,1.874,2782,2.581,2810,2.581,2894,2.403,2929,2.581,3146,2.041,3236,2.403,3262,3.421,3266,2.403,3267,2.403,3268,2.403,3269,2.143,3274,2.581,3275,2.581,3278,2.041,3279,2.581,3280,4.361,3281,3.242,3286,2.581,3288,3.421,3292,2.581,3293,1.953,3296,3.905,3307,2.581,3319,3.905,3346,2.143,3355,2.403,3374,2.403,3386,4.711,3394,2.581,3397,2.581,3398,3.905,3400,2.581,3401,2.581,3437,2.261,3438,2.261,3451,6.643,3453,3.911,3454,1.953,3502,2.403,3629,4.386,3644,3.564,3649,3.974,3661,2.041,3666,4.266,3667,4.266,3668,4.266,3669,4.266,3670,2.819,3671,5.27,3672,2.581,3673,2.143,3674,2.581,3675,2.819,3676,4.266,3677,2.261,3678,2.819,3679,2.143,3680,5.253,3681,2.819,3682,2.819,3683,4.266,3684,2.819,3685,2.819,3686,2.819,3687,2.819,3688,2.819,3689,2.819,3690,2.819,3691,2.819,3692,2.819,3693,2.819,3694,2.819,3695,2.819,3696,2.261,3697,2.819,3698,2.819,3699,2.819,3700,4.266,3701,2.819,3702,2.819,3703,2.819,3704,2.819,3705,2.819,3706,2.041,3707,2.819,3708,2.819,3709,2.819,3710,2.819,3711,2.819,3712,2.261,3713,2.819,3714,2.819,3715,2.819,3716,2.819,3717,2.819,3718,2.819,3719,2.819,3720,2.819,3721,2.819,3722,2.819,3723,4.266,3724,6.483,3725,7.538,3726,2.819,3727,2.819,3728,2.143,3729,2.819,3730,5.737,3731,5.146,3732,6.733,3733,4.266,3734,5.737,3735,3.421,3736,4.266,3737,5.737,3738,2.819,3739,4.266,3740,4.266,3741,2.819,3742,2.819,3743,4.266,3744,2.819,3745,5.737,3746,2.819,3747,2.819,3748,2.819,3749,5.146,3750,4.266,3751,2.819,3752,2.819,3753,2.819,3754,2.819,3755,2.819,3756,2.819,3757,2.819,3758,2.819,3759,2.819,3760,2.819,3761,2.819,3762,4.266,3763,4.266,3764,3.905,3765,2.819,3766,2.819,3767,2.819,3768,2.819,3769,2.819,3770,5.146,3771,2.819,3772,2.819,3773,6.483,3774,2.819,3775,2.819,3776,2.819,3777,2.819,3778,2.819,3779,2.819,3780,2.819,3781,2.819,3782,2.819,3783,2.819,3784,4.266,3785,2.819,3786,2.581,3787,4.266,3788,2.819,3789,4.266,3790,3.905,3791,3.905,3792,4.266,3793,4.266,3794,6.164,3795,2.819,3796,2.819,3797,2.819,3798,2.819,3799,2.819,3800,2.819,3801,2.819,3802,2.819,3803,2.819,3804,2.581,3805,2.819,3806,2.819,3807,2.819,3808,2.819,3809,5.642,3810,2.819,3811,5.146,3812,2.819,3813,2.819,3814,2.819,3815,5.146,3816,2.819,3817,2.819,3818,4.266,3819,2.819,3820,2.819,3821,2.819,3822,2.819,3823,2.819,3824,2.819,3825,2.819,3826,3.421,3827,4.266,3828,2.819,3829,2.819,3830,5.737,3831,2.261,3832,2.819,3833,2.819,3834,2.819,3835,2.819,3836,3.905,3837,4.266,3838,2.819,3924,4.813,3925,3.181,3926,3.181,3927,3.181]],["title/interfaces/ObjectAndResponse.html",[0,0.177,329,3.43]],["body/interfaces/ObjectAndResponse.html",[0,0.284,2,1.258,3,0.085,4,0.064,5,0.064,8,0.358,12,0.203,13,0.551,14,0.603,18,0.303,19,0.008,26,0.117,34,1.233,50,0.87,57,2.432,58,3.918,60,1.463,66,1.756,73,0.519,78,0.178,82,4.92,85,1.211,136,2.901,159,0.007,160,0.006,161,0.005,234,2.206,258,3.718,280,0.612,286,2.09,313,4.688,314,3.718,315,3.718,316,4.701,317,4.701,318,3.167,319,4.701,320,6.785,321,3.199,322,3.167,323,3.902,324,3.616,325,4.118,326,2.301,327,2.486,328,5.389,329,6.044,330,5.927,331,4.701,334,5.956,336,3.406,337,4.92,338,2.76,339,5.518,340,4.92,342,5.761,343,5.927,344,2.763,345,6.492,346,2.901,347,4.92,348,6.492,349,5.927,350,4.701,352,5.389,353,5.389,354,5.192,355,5.927,356,5.927,357,6.346,358,1.92,359,4.701,360,5.927,361,1.849,362,5.927,363,4.158,364,1.348,365,5.927,366,5.927,367,4.118,368,4.701]],["title/interfaces/PaginationCallback.html",[0,0.177,1358,2.482]],["body/interfaces/PaginationCallback.html",[0,0.278,1,2.222,2,0.446,3,0.03,4,0.023,5,0.023,8,0.127,9,1.666,10,3.235,12,0.272,13,0.381,14,0.169,15,3.418,18,0.234,19,0.008,20,1.167,22,0.707,25,1.067,26,0.113,27,1.666,28,1.048,30,1.782,34,1.626,36,1.701,39,0.985,40,2.46,42,0.904,47,0.776,50,0.938,52,0.708,53,1.736,54,1.048,55,3.16,56,1.794,59,0.873,60,1.281,61,2.204,62,0.758,63,1.712,64,2.061,66,0.817,67,0.904,69,2.99,71,0.851,73,0.487,74,1.584,77,1.384,78,0.106,80,1.015,81,0.905,83,1.255,84,1.931,85,0.608,86,2.774,87,1.495,88,0.795,90,3.761,91,0.691,93,3.472,96,1.082,99,0.992,101,1.997,102,0.836,108,1.767,109,1.232,111,1.976,114,0.535,115,0.958,118,1.846,120,1.083,127,1.727,129,1.458,133,1.005,136,0.815,137,2.222,138,1.048,140,0.809,141,1.384,143,0.817,148,1.846,149,1.083,152,1.974,154,2.022,155,0.956,158,1.492,159,0.003,160,0.003,161,0.002,168,0.334,170,0.464,172,1.525,173,1.121,181,0.543,192,0.363,194,1.771,195,0.205,198,0.38,200,0.402,202,0.985,203,0.88,204,0.503,210,2.153,224,0.56,233,0.817,234,1.026,243,0.836,247,0.348,250,1.121,259,0.423,260,0.633,266,0.935,269,1.121,270,1.857,272,0.869,280,0.592,281,1.063,286,2.842,321,0.758,327,0.88,336,0.956,338,1.286,344,2.531,358,0.455,361,1.013,364,1.354,369,1.682,374,0.647,377,2.12,378,2.358,390,1.119,392,1.259,438,1.255,459,1.026,461,0.356,463,0.667,477,0.189,508,1.499,512,0.904,521,1.004,523,1.846,538,1.736,544,0.795,546,1.285,547,0.707,555,1.26,556,0.57,570,1.533,594,2.341,596,1.226,603,0.661,604,0.851,605,1.286,609,0.661,612,0.786,613,0.62,619,1.119,623,1.682,633,1.693,634,2.428,650,1.083,652,1.046,656,1.145,664,0.582,667,0.582,673,0.503,697,0.661,698,0.676,699,1.026,705,0.607,728,0.62,730,1.119,736,1.851,738,1.771,741,0.776,743,1.371,768,1.259,771,0.836,779,0.776,784,1.026,794,1.015,809,0.74,836,1.015,840,0.795,862,0.985,870,0.57,953,1.917,954,1.499,955,2.365,957,0.74,958,3.086,959,2.905,960,2.504,966,1.314,969,0.956,970,0.88,972,1.817,973,1.083,974,1.083,993,3.032,1005,2.229,1015,0.74,1018,0.904,1019,2.882,1021,2.841,1022,1.285,1026,2.028,1028,1.42,1029,0.984,1030,1.285,1033,2.204,1051,1.35,1055,0.857,1058,0.904,1068,0.985,1074,1.569,1113,0.985,1114,1.384,1122,0.956,1124,3.435,1174,0.758,1190,0.795,1206,0.633,1218,0.857,1223,1.458,1226,2.764,1227,1.083,1228,1.926,1229,1.498,1230,1.926,1231,2.524,1232,1.736,1233,2.229,1234,1.163,1235,1.083,1236,1.163,1237,2.088,1238,1.736,1239,2.222,1240,2.539,1241,1.163,1242,2.254,1243,1.926,1244,1.926,1245,0.815,1246,1.163,1247,1.857,1248,2.465,1249,1.926,1250,0.594,1251,1.926,1252,1.163,1253,1.817,1254,0.88,1255,1.083,1256,1.121,1257,1.048,1258,1.048,1259,0.74,1260,0.88,1261,0.93,1262,0.956,1263,1.255,1264,1.015,1265,0.633,1266,1.817,1267,2.342,1268,2.153,1269,2.377,1270,3.452,1271,3.287,1272,3.063,1273,1.121,1274,2.377,1275,1.121,1276,1.083,1277,0.88,1278,1.015,1279,0.956,1280,2.796,1281,1.857,1282,2.222,1283,1.121,1284,1.121,1285,1.121,1286,2.764,1287,1.083,1288,1.384,1289,4.457,1290,2.009,1291,1.857,1292,1.121,1293,3.455,1294,2.377,1295,1.794,1296,3.086,1297,1.498,1298,1.163,1299,1.682,1300,1.163,1301,1.794,1302,1.163,1303,2.428,1304,2.863,1305,2.428,1306,1.857,1307,1.163,1308,1.163,1309,1.926,1310,1.121,1311,2.764,1312,1.163,1313,2.088,1314,1.857,1315,1.926,1316,1.163,1317,1.926,1318,1.926,1319,2.764,1320,2.465,1321,1.015,1322,0.985,1323,1.121,1324,1.163,1325,1.163,1326,0.904,1327,1.817,1328,3.177,1329,1.631,1330,3.874,1331,2.465,1332,0.815,1333,1.163,1334,1.163,1335,4.466,1336,1.121,1337,2.46,1338,3.424,1339,3.934,1340,1.121,1341,1.163,1342,2.377,1343,1.048,1344,0.723,1345,1.163,1346,1.163,1347,1.048,1348,2.774,1349,0.956,1350,1.163,1351,0.985,1352,2.377,1353,0.857,1354,0.904,1355,1.163,1356,2.088,1357,1.163,1358,1.857,1359,2.465,1360,2.222,1361,1.163,1362,1.163,1363,1.631,1364,1.048,1365,1.163,1366,1.163,1367,0.795,1368,1.163,1369,1.857,1370,2.465,1371,1.163,1372,1.163,1373,1.121,1374,1.794,1375,1.083,1376,1.794,1377,1.083,1378,2.465,1379,1.163,1380,1.015,1381,1.083,1382,1.163,1383,1.926,1384,1.163,1385,1.163,1386,1.163,1387,1.163,1388,1.163,1389,1.163,1390,1.857,1391,1.163,1392,2.465,1393,1.163,1394,1.163,1395,1.121,1396,2.866,1397,2.222,1398,1.163,1399,1.121,1400,1.083,1401,1.121,1402,1.163,1403,1.163,1404,1.121,1405,1.926,1406,1.163,1407,1.163,1408,1.926,1409,1.163,1410,1.163,1411,0.956,1412,1.163,1413,1.163,1414,1.163,1415,1.163,1416,3.792,1417,1.926,1418,1.163,1419,1.163,1420,1.163,1421,1.926,1422,1.163,1423,1.926,1424,1.926,1425,1.163,1426,1.163,1427,1.163,1428,1.926,1429,1.163,1430,2.866,1431,1.926,1432,1.926,1433,1.163,1434,1.163,1435,1.048,1436,1.163,1437,1.163,1438,1.163,1439,1.163,1440,1.163,1441,1.163,1442,1.926,1443,1.926,1444,1.926,1445,1.926,1446,2.465,1447,1.163,1448,1.163,1449,1.163,1450,1.163,1451,1.926,1452,1.926,1453,2.866,1454,1.163,1455,1.163,1456,1.163,1457,1.163,1458,1.163,1459,2.539,1460,3.424,1461,3.177,1462,1.926,1463,1.163,1464,1.926,1465,2.465,1466,1.163,1467,2.465,1468,1.163,1469,2.866,1470,1.926,1471,1.163,1472,1.163,1473,1.163,1474,1.926,1475,1.121,1476,1.163,1477,1.015,1478,1.163,1479,1.163,1480,1.163,1481,1.163,1482,1.926,1483,2.358,1484,1.163,1485,1.163,1486,1.163,1487,1.163,1488,1.163,1489,1.498,1490,1.163,1491,1.163,1492,1.163,1493,2.465,1494,1.163,1495,1.163,1496,1.121,1497,1.736,1498,1.163,1499,1.163,1500,1.163,1501,1.163,1502,1.163,1503,1.163,1504,1.163,1505,1.458,1506,1.163,1507,1.163,1508,1.163,1509,1.163,1510,1.083,1511,1.163,1512,1.163,1513,1.926,1514,1.163,1515,1.163,1516,1.163,1517,1.163,1518,1.163,1519,0.985,1520,1.163,1521,1.015,1522,1.163,1523,1.163,1524,0.985,1525,1.163,1526,1.163,1527,1.163,1528,1.163,1529,1.163,1530,1.163,1531,1.163,1532,1.163,1533,1.163,1534,1.163,1535,1.163,1536,0.795,1537,1.163,1538,1.163,1539,1.857,1540,1.163,1541,1.163,1542,1.163,1543,1.163,1544,1.163,1545,1.163,1546,1.163,1547,1.163,1548,1.926,1549,1.926,1550,1.926,1551,1.163,1552,2.296,1553,2.866,1554,1.926,1555,1.163,1556,1.163,1557,1.163,1558,1.163,1559,1.163,1560,1.163,1561,1.083,1562,1.163,1563,1.163,1564,1.163,1565,1.163,1566,0.707,1567,1.163,1568,1.163,1569,1.926,1570,1.163,1571,2.465,1572,1.163,1573,1.163,1574,1.163,1575,1.926,1576,1.163,1577,1.163,1578,1.926,1579,1.926,1580,1.163,1581,1.163,1582,1.083,1583,1.121,1584,1.163,1585,1.163,1586,1.163,1587,1.926,1588,1.926,1589,1.163,1590,1.163,1591,1.926,1592,1.163,1593,1.163,1594,1.163,1595,1.163,1596,1.163,1597,1.163,1598,1.163,1599,1.121,1600,1.163,1601,1.163,1602,1.163,1603,1.163,1604,1.163,1605,1.926,1606,1.163,1607,1.163,1608,1.163,1609,1.163,1610,1.163,1611,1.163,1612,1.163,1613,1.163,1614,1.163,1615,1.926,1616,2.866,1617,2.465,1618,1.163,1619,1.163,1620,1.926,1621,1.163,1622,1.163,1623,1.163,1624,1.163,1625,1.163,1626,1.163,1627,1.163,1628,1.255,1629,1.926,1630,1.163,1631,1.163,1632,1.163,1633,1.121,1634,1.163,1635,1.163,1636,1.163,1637,1.163,1638,1.163,1639,1.163,1640,1.121,1641,1.163,1642,1.163,1643,1.163,1644,1.163,1645,1.163,1646,1.163,1647,2.866,1648,1.163,1649,1.163,1650,1.163,1651,1.163,1652,1.163,1653,1.163,1654,1.121,1655,1.163,1656,1.163,1657,1.926,1658,1.163,1659,1.926,1660,1.163,1661,1.163,1662,1.926,1663,1.163,1664,1.163,1665,1.163,1666,1.163,1667,1.163,1668,2.465,1669,1.163,1670,1.163,1671,1.163,1672,1.163,1673,1.163,1674,0.836,1675,1.163,1676,1.163,1677,1.163,1678,1.163,1679,1.163,1680,1.163,1681,1.163,1682,1.163,1683,1.259,1684,1.015,1685,1.121,1686,1.163,1687,1.163,1688,1.015,1689,1.163,1690,1.163,1691,1.926,1692,3.177,1693,0.93,1694,1.163,1695,1.163,1696,1.163,1697,1.163,1698,1.163,1699,1.163,1700,1.926,1701,1.163,1702,1.163,1703,1.736,1704,1.163,1705,1.163,1706,1.083,1707,1.163,1708,1.163,1709,1.083,1710,1.163,1711,1.163,1712,1.163,3464,1.818,3465,1.665]],["title/interfaces/PaginationConfiguration.html",[0,0.177,1319,2.482]],["body/interfaces/PaginationConfiguration.html",[0,0.276,1,2.183,2,0.435,3,0.029,4,0.022,5,0.022,8,0.124,9,1.641,10,3.205,12,0.27,13,0.375,14,0.567,15,3.384,18,0.266,19,0.008,20,1.15,22,0.69,25,1.049,26,0.113,27,1.641,28,1.022,30,1.831,34,1.615,36,1.722,39,0.961,40,2.43,42,0.882,47,0.757,50,0.932,52,0.542,53,1.701,54,1.022,55,3.142,56,1.758,59,0.866,60,1.195,61,2.179,62,0.739,63,1.691,64,2.038,66,0.8,67,0.882,69,2.953,71,0.834,73,0.477,74,1.552,77,1.356,78,0.104,80,0.991,81,0.887,83,1.229,84,2.179,85,0.598,86,2.737,87,1.472,88,1.29,90,3.742,91,0.674,93,3.45,96,1.183,99,0.977,101,2.054,102,0.815,108,1.882,109,1.233,111,1.949,114,0.522,115,0.929,118,1.822,120,1.057,127,1.697,129,1.428,133,0.984,136,0.795,137,2.183,138,1.027,140,0.818,141,2.028,143,0.846,148,2.084,149,1.057,152,2.121,154,2.282,155,0.933,158,1.479,159,0.004,160,0.003,161,0.002,168,0.326,170,0.453,172,1.519,173,1.094,181,0.533,192,0.354,194,1.741,195,0.333,198,0.373,200,0.395,202,0.961,203,0.859,204,0.499,210,2.115,224,0.473,233,0.8,234,1.005,243,0.815,247,0.34,250,1.094,259,0.42,260,0.618,266,0.931,269,1.094,270,1.819,272,0.851,280,0.592,281,1.051,286,2.895,321,0.739,327,0.859,336,0.933,338,1.264,344,2.505,358,0.444,361,0.997,364,1.343,369,1.648,374,0.631,377,2.091,378,2.578,390,1.097,392,1.442,438,1.229,459,1.005,461,0.347,463,0.653,477,0.185,508,1.472,512,0.882,521,0.987,523,1.966,538,1.701,544,0.776,546,1.259,547,0.69,555,1.245,556,0.556,570,1.506,594,2.312,596,1.201,603,0.645,604,0.834,605,1.264,609,0.645,612,0.772,613,0.604,619,1.097,623,1.648,633,1.802,634,2.391,650,1.057,652,1.027,656,1.121,664,0.567,667,0.567,673,0.491,697,0.645,698,0.659,699,1.005,705,0.592,728,0.604,730,1.097,736,1.831,738,1.741,741,0.757,743,1.348,768,1.237,771,0.815,779,1.259,784,1.005,794,0.991,809,0.722,836,1.648,840,0.776,862,0.961,870,0.556,953,1.884,954,1.472,955,2.346,957,0.722,958,3.048,959,2.884,960,2.48,966,1.291,969,0.933,970,0.859,972,1.786,973,1.057,974,1.057,993,3.115,1005,2.195,1015,0.722,1018,0.882,1019,2.888,1021,3.109,1022,1.259,1026,1.992,1028,1.391,1029,0.964,1030,1.259,1033,2.179,1051,1.697,1055,0.836,1058,1.467,1068,0.961,1074,1.542,1113,0.961,1114,1.741,1122,0.933,1124,3.602,1174,0.739,1190,0.776,1206,0.618,1218,0.836,1223,1.428,1226,2.722,1227,1.057,1228,1.887,1229,1.467,1230,1.887,1231,2.494,1232,1.701,1233,2.195,1234,1.134,1235,1.057,1236,1.134,1237,2.052,1238,1.701,1239,2.183,1240,2.505,1241,1.134,1242,2.23,1243,1.887,1244,1.887,1245,0.795,1246,1.134,1247,1.819,1248,2.422,1249,1.887,1250,0.579,1251,1.887,1252,1.134,1253,1.391,1254,0.859,1255,1.057,1256,1.094,1257,1.022,1258,1.022,1259,0.722,1260,0.859,1261,0.907,1262,0.933,1263,1.229,1264,0.991,1265,0.618,1266,1.786,1267,2.31,1268,2.115,1269,2.336,1270,3.458,1271,3.458,1272,3.022,1273,1.094,1274,2.336,1275,1.094,1276,1.057,1277,0.859,1278,0.991,1279,0.933,1280,2.768,1281,1.819,1282,2.183,1283,1.094,1284,1.094,1285,1.094,1286,3.022,1287,1.057,1288,1.356,1289,4.432,1290,1.978,1291,1.819,1292,1.094,1293,3.426,1294,2.336,1295,1.758,1296,3.048,1297,1.467,1298,1.134,1299,1.648,1300,1.134,1301,1.758,1302,1.134,1303,2.391,1304,2.544,1305,2.391,1306,1.819,1307,1.134,1308,1.134,1309,1.887,1310,1.094,1311,2.722,1312,1.134,1313,2.052,1314,1.819,1315,1.887,1316,1.134,1317,1.887,1318,2.422,1319,3.022,1320,3.382,1321,1.648,1322,1.598,1323,1.819,1324,1.887,1325,1.887,1326,1.467,1327,2.081,1328,3.754,1329,2.052,1330,4.073,1331,3.382,1332,1.322,1333,2.823,1334,2.823,1335,4.437,1336,1.094,1337,2.252,1338,3.382,1339,3.897,1340,1.094,1341,1.134,1342,2.336,1343,1.022,1344,0.706,1345,1.134,1346,1.134,1347,1.022,1348,2.737,1349,0.933,1350,1.134,1351,0.961,1352,2.336,1353,0.836,1354,0.882,1355,1.134,1356,2.052,1357,1.134,1358,1.094,1359,1.887,1360,1.701,1361,1.134,1362,1.134,1363,1.598,1364,1.022,1365,1.134,1366,1.134,1367,0.776,1368,1.134,1369,1.819,1370,2.422,1371,1.134,1372,1.134,1373,1.094,1374,1.758,1375,1.057,1376,1.758,1377,1.057,1378,2.422,1379,1.134,1380,0.991,1381,1.057,1382,1.134,1383,1.887,1384,1.134,1385,1.134,1386,1.134,1387,1.134,1388,1.134,1389,1.134,1390,1.819,1391,1.134,1392,2.422,1393,1.134,1394,1.134,1395,1.094,1396,2.823,1397,2.183,1398,1.134,1399,1.094,1400,1.057,1401,1.094,1402,1.134,1403,1.134,1404,1.094,1405,1.887,1406,1.134,1407,1.134,1408,1.887,1409,1.134,1410,1.134,1411,0.933,1412,1.134,1413,1.134,1414,1.134,1415,1.134,1416,3.754,1417,1.887,1418,1.134,1419,1.134,1420,1.134,1421,1.887,1422,1.134,1423,1.887,1424,1.887,1425,1.134,1426,1.134,1427,1.134,1428,1.887,1429,1.134,1430,2.823,1431,1.887,1432,1.887,1433,1.134,1434,1.134,1435,1.022,1436,1.134,1437,1.134,1438,1.134,1439,1.134,1440,1.134,1441,1.134,1442,1.887,1443,1.887,1444,1.887,1445,1.887,1446,2.422,1447,1.134,1448,1.134,1449,1.134,1450,1.134,1451,1.887,1452,1.887,1453,2.823,1454,1.134,1455,1.134,1456,1.134,1457,1.134,1458,1.134,1459,2.505,1460,3.382,1461,3.134,1462,1.887,1463,1.134,1464,1.887,1465,2.422,1466,1.134,1467,2.422,1468,1.134,1469,2.823,1470,1.887,1471,1.134,1472,1.134,1473,1.134,1474,1.887,1475,1.094,1476,1.134,1477,0.991,1478,1.134,1479,1.134,1480,1.134,1481,1.134,1482,1.887,1483,2.322,1484,1.134,1485,1.134,1486,1.134,1487,1.134,1488,1.134,1489,1.467,1490,1.134,1491,1.134,1492,1.134,1493,2.422,1494,1.134,1495,1.134,1496,1.094,1497,1.701,1498,1.134,1499,1.134,1500,1.134,1501,1.134,1502,1.134,1503,1.134,1504,1.134,1505,1.428,1506,1.134,1507,1.134,1508,1.134,1509,1.134,1510,1.057,1511,1.134,1512,1.134,1513,1.887,1514,1.134,1515,1.134,1516,1.134,1517,1.134,1518,1.134,1519,0.961,1520,1.134,1521,0.991,1522,1.134,1523,1.134,1524,0.961,1525,1.134,1526,1.134,1527,1.134,1528,1.134,1529,1.134,1530,1.134,1531,1.134,1532,1.134,1533,1.134,1534,1.134,1535,1.134,1536,0.776,1537,1.134,1538,1.134,1539,1.819,1540,1.134,1541,1.134,1542,1.134,1543,1.134,1544,1.134,1545,1.134,1546,1.134,1547,1.134,1548,1.887,1549,1.887,1550,1.887,1551,1.134,1552,2.256,1553,2.823,1554,1.887,1555,1.134,1556,1.134,1557,1.134,1558,1.134,1559,1.134,1560,1.134,1561,1.057,1562,1.134,1563,1.134,1564,1.134,1565,1.134,1566,0.69,1567,1.134,1568,1.134,1569,1.887,1570,1.134,1571,2.422,1572,1.134,1573,1.134,1574,1.134,1575,1.887,1576,1.134,1577,1.134,1578,1.887,1579,1.887,1580,1.134,1581,1.134,1582,1.057,1583,1.094,1584,1.134,1585,1.134,1586,1.134,1587,1.887,1588,1.887,1589,1.134,1590,1.134,1591,1.887,1592,1.134,1593,1.134,1594,1.134,1595,1.134,1596,1.134,1597,1.134,1598,1.134,1599,1.094,1600,1.134,1601,1.134,1602,1.134,1603,1.134,1604,1.134,1605,1.887,1606,1.134,1607,1.134,1608,1.134,1609,1.134,1610,1.134,1611,1.134,1612,1.134,1613,1.134,1614,1.134,1615,1.887,1616,2.823,1617,2.422,1618,1.134,1619,1.134,1620,1.887,1621,1.134,1622,1.134,1623,1.134,1624,1.134,1625,1.134,1626,1.134,1627,1.134,1628,1.229,1629,1.887,1630,1.134,1631,1.134,1632,1.134,1633,1.094,1634,1.134,1635,1.134,1636,1.134,1637,1.134,1638,1.134,1639,1.134,1640,1.094,1641,1.134,1642,1.134,1643,1.134,1644,1.134,1645,1.134,1646,1.134,1647,2.823,1648,1.134,1649,1.134,1650,1.134,1651,1.134,1652,1.134,1653,1.134,1654,1.094,1655,1.134,1656,1.134,1657,1.887,1658,1.134,1659,1.887,1660,1.134,1661,1.134,1662,1.887,1663,1.134,1664,1.134,1665,1.134,1666,1.134,1667,1.134,1668,2.422,1669,1.134,1670,1.134,1671,1.134,1672,1.134,1673,1.134,1674,0.815,1675,1.134,1676,1.134,1677,1.134,1678,1.134,1679,1.134,1680,1.134,1681,1.134,1682,1.134,1683,0.964,1684,0.991,1685,1.094,1686,1.134,1687,1.134,1688,0.991,1689,1.134,1690,1.134,1691,1.887,1692,3.134,1693,0.907,1694,1.134,1695,1.134,1696,1.134,1697,1.134,1698,1.134,1699,1.134,1700,1.887,1701,1.134,1702,1.134,1703,1.701,1704,1.134,1705,1.134,1706,1.057,1707,1.134,1708,1.134,1709,1.057,1710,1.134,1711,1.134,1712,1.134]],["title/interfaces/PagionationInformation.html",[0,0.177,1314,2.482]],["body/interfaces/PagionationInformation.html",[0,0.278,1,2.221,2,0.445,3,0.03,4,0.023,5,0.023,8,0.127,9,1.665,10,3.234,12,0.272,13,0.381,14,0.169,15,3.417,18,0.25,19,0.008,20,1.167,22,0.706,25,1.067,26,0.113,27,1.665,28,1.047,30,1.781,34,1.626,36,1.7,39,0.984,40,2.604,42,0.903,47,0.775,50,0.938,52,0.553,53,1.735,54,1.047,55,3.159,56,1.793,59,0.873,60,1.209,61,2.203,62,0.757,63,1.712,64,2.06,66,0.816,67,0.903,69,2.989,71,0.85,73,0.48,74,1.583,77,1.383,78,0.106,80,1.015,81,0.904,83,1.254,84,1.93,85,0.608,86,2.773,87,1.494,88,0.794,90,3.76,91,0.691,93,3.472,96,1.082,99,0.992,101,1.997,102,0.835,108,1.766,109,1.232,111,1.975,114,0.535,115,0.937,118,1.846,120,1.082,127,1.726,129,1.457,133,1.004,136,1.349,137,2.221,138,1.048,140,0.81,141,1.383,143,0.816,148,1.846,149,1.082,152,1.973,154,2.021,155,0.956,158,1.491,159,0.003,160,0.003,161,0.002,168,0.334,170,0.464,172,1.525,173,1.12,181,0.542,192,0.363,194,1.77,195,0.205,198,0.38,200,0.401,202,0.984,203,0.879,204,0.503,210,2.151,224,0.481,233,0.816,234,1.026,243,0.835,247,0.348,250,1.12,259,0.423,260,0.633,266,0.935,269,1.12,270,1.856,272,0.868,280,0.592,281,1.063,286,2.878,321,0.757,327,0.879,336,0.956,338,1.285,344,2.53,358,0.454,361,1.012,364,1.353,369,1.681,374,0.646,377,2.284,378,2.356,390,1.119,392,1.258,438,1.254,459,1.026,461,0.355,463,0.666,477,0.189,508,1.498,512,0.903,521,1.003,523,1.846,538,1.735,544,0.794,546,1.284,547,0.706,555,1.259,556,0.569,570,1.532,594,2.34,596,1.225,603,0.661,604,0.85,605,1.285,609,0.661,612,0.785,613,0.619,619,1.119,623,1.681,633,1.692,634,2.427,650,1.082,652,1.045,656,1.144,664,0.581,667,0.581,673,0.503,697,0.661,698,0.675,699,1.026,705,0.606,728,0.619,730,1.119,736,1.851,738,1.77,741,0.775,743,1.371,768,1.258,771,0.835,779,0.775,784,1.026,794,1.015,809,0.739,836,1.015,840,0.794,862,0.984,870,0.569,953,1.916,954,1.498,955,2.364,957,0.739,958,3.085,959,2.905,960,2.503,966,1.313,969,0.956,970,0.879,972,1.816,973,1.082,974,1.082,993,3.144,1005,2.228,1015,0.739,1018,0.903,1019,2.881,1021,2.84,1022,1.284,1026,2.026,1028,1.419,1029,0.983,1030,1.284,1033,2.203,1051,1.349,1055,0.857,1058,0.903,1068,0.984,1074,1.568,1113,0.984,1114,1.383,1122,0.956,1124,3.434,1174,0.757,1190,0.794,1206,0.633,1218,0.857,1223,1.457,1226,2.763,1227,1.082,1228,1.925,1229,1.497,1230,1.925,1231,2.523,1232,1.735,1233,2.228,1234,1.162,1235,1.082,1236,1.162,1237,2.087,1238,1.735,1239,2.221,1240,2.538,1241,1.162,1242,2.254,1243,1.925,1244,1.925,1245,0.814,1246,1.162,1247,1.856,1248,2.464,1249,1.925,1250,0.593,1251,1.925,1252,1.162,1253,1.419,1254,0.879,1255,1.082,1256,1.12,1257,1.047,1258,1.047,1259,0.739,1260,0.879,1261,0.929,1262,0.956,1263,1.254,1264,1.015,1265,0.633,1266,1.816,1267,2.341,1268,2.151,1269,2.376,1270,3.452,1271,3.351,1272,3.062,1273,1.12,1274,2.376,1275,1.12,1276,1.082,1277,0.879,1278,1.015,1279,0.956,1280,2.795,1281,1.856,1282,2.221,1283,1.12,1284,1.12,1285,1.12,1286,2.763,1287,1.082,1288,1.383,1289,4.411,1290,2.008,1291,1.856,1292,1.12,1293,3.439,1294,2.376,1295,1.793,1296,3.085,1297,1.497,1298,1.162,1299,1.681,1300,1.162,1301,1.793,1302,1.162,1303,2.427,1304,2.582,1305,2.427,1306,1.856,1307,1.162,1308,1.162,1309,1.925,1310,1.12,1311,2.763,1312,1.925,1313,2.427,1314,2.376,1315,3.175,1316,1.925,1317,3.175,1318,1.925,1319,2.763,1320,2.464,1321,1.015,1322,0.984,1323,1.12,1324,1.162,1325,1.162,1326,0.903,1327,1.816,1328,3.175,1329,1.63,1330,3.873,1331,2.464,1332,0.814,1333,1.162,1334,1.162,1335,4.465,1336,1.12,1337,2.282,1338,3.422,1339,3.932,1340,1.12,1341,1.162,1342,2.376,1343,1.047,1344,0.723,1345,1.162,1346,1.162,1347,1.047,1348,2.773,1349,0.956,1350,1.162,1351,0.984,1352,2.376,1353,0.857,1354,0.903,1355,1.162,1356,2.087,1357,1.162,1358,1.12,1359,1.925,1360,1.735,1361,1.162,1362,1.162,1363,1.63,1364,1.047,1365,1.162,1366,1.162,1367,0.794,1368,1.162,1369,1.856,1370,2.464,1371,1.162,1372,1.162,1373,1.12,1374,1.793,1375,1.082,1376,1.793,1377,1.082,1378,2.464,1379,1.162,1380,1.015,1381,1.082,1382,1.162,1383,1.925,1384,1.162,1385,1.162,1386,1.162,1387,1.162,1388,1.162,1389,1.162,1390,1.856,1391,1.162,1392,2.464,1393,1.162,1394,1.162,1395,1.12,1396,2.865,1397,2.221,1398,1.162,1399,1.12,1400,1.082,1401,1.12,1402,1.162,1403,1.162,1404,1.12,1405,1.925,1406,1.162,1407,1.162,1408,1.925,1409,1.162,1410,1.162,1411,0.956,1412,1.162,1413,1.162,1414,1.162,1415,1.162,1416,3.791,1417,1.925,1418,1.162,1419,1.162,1420,1.162,1421,1.925,1422,1.162,1423,1.925,1424,1.925,1425,1.162,1426,1.162,1427,1.162,1428,1.925,1429,1.162,1430,2.865,1431,1.925,1432,1.925,1433,1.162,1434,1.162,1435,1.047,1436,1.162,1437,1.162,1438,1.162,1439,1.162,1440,1.162,1441,1.162,1442,1.925,1443,1.925,1444,1.925,1445,1.925,1446,2.464,1447,1.162,1448,1.162,1449,1.162,1450,1.162,1451,1.925,1452,1.925,1453,2.865,1454,1.162,1455,1.162,1456,1.162,1457,1.162,1458,1.162,1459,2.538,1460,3.422,1461,3.175,1462,1.925,1463,1.162,1464,1.925,1465,2.464,1466,1.162,1467,2.464,1468,1.162,1469,2.865,1470,1.925,1471,1.162,1472,1.162,1473,1.162,1474,1.925,1475,1.12,1476,1.162,1477,1.015,1478,1.162,1479,1.162,1480,1.162,1481,1.162,1482,1.925,1483,2.356,1484,1.162,1485,1.162,1486,1.162,1487,1.162,1488,1.162,1489,1.497,1490,1.162,1491,1.162,1492,1.162,1493,2.464,1494,1.162,1495,1.162,1496,1.12,1497,1.735,1498,1.162,1499,1.162,1500,1.162,1501,1.162,1502,1.162,1503,1.162,1504,1.162,1505,1.457,1506,1.162,1507,1.162,1508,1.162,1509,1.162,1510,1.082,1511,1.162,1512,1.162,1513,1.925,1514,1.162,1515,1.162,1516,1.162,1517,1.162,1518,1.162,1519,0.984,1520,1.162,1521,1.015,1522,1.162,1523,1.162,1524,0.984,1525,1.162,1526,1.162,1527,1.162,1528,1.162,1529,1.162,1530,1.162,1531,1.162,1532,1.162,1533,1.162,1534,1.162,1535,1.162,1536,0.794,1537,1.162,1538,1.162,1539,1.856,1540,1.162,1541,1.162,1542,1.162,1543,1.162,1544,1.162,1545,1.162,1546,1.162,1547,1.162,1548,1.925,1549,1.925,1550,1.925,1551,1.162,1552,2.295,1553,2.865,1554,1.925,1555,1.162,1556,1.162,1557,1.162,1558,1.162,1559,1.162,1560,1.162,1561,1.082,1562,1.162,1563,1.162,1564,1.162,1565,1.162,1566,0.706,1567,1.162,1568,1.162,1569,1.925,1570,1.162,1571,2.464,1572,1.162,1573,1.162,1574,1.162,1575,1.925,1576,1.162,1577,1.162,1578,1.925,1579,1.925,1580,1.162,1581,1.162,1582,1.082,1583,1.12,1584,1.162,1585,1.162,1586,1.162,1587,1.925,1588,1.925,1589,1.162,1590,1.162,1591,1.925,1592,1.162,1593,1.162,1594,1.162,1595,1.162,1596,1.162,1597,1.162,1598,1.162,1599,1.12,1600,1.162,1601,1.162,1602,1.162,1603,1.162,1604,1.162,1605,1.925,1606,1.162,1607,1.162,1608,1.162,1609,1.162,1610,1.162,1611,1.162,1612,1.162,1613,1.162,1614,1.162,1615,1.925,1616,2.865,1617,2.464,1618,1.162,1619,1.162,1620,1.925,1621,1.162,1622,1.162,1623,1.162,1624,1.162,1625,1.162,1626,1.162,1627,1.162,1628,1.254,1629,1.925,1630,1.162,1631,1.162,1632,1.162,1633,1.12,1634,1.162,1635,1.162,1636,1.162,1637,1.162,1638,1.162,1639,1.162,1640,1.12,1641,1.162,1642,1.162,1643,1.162,1644,1.162,1645,1.162,1646,1.162,1647,2.865,1648,1.162,1649,1.162,1650,1.162,1651,1.162,1652,1.162,1653,1.162,1654,1.12,1655,1.162,1656,1.162,1657,1.925,1658,1.162,1659,1.925,1660,1.162,1661,1.162,1662,1.925,1663,1.162,1664,1.162,1665,1.162,1666,1.162,1667,1.162,1668,2.464,1669,1.162,1670,1.162,1671,1.162,1672,1.162,1673,1.162,1674,0.835,1675,1.162,1676,1.162,1677,1.162,1678,1.162,1679,1.162,1680,1.162,1681,1.162,1682,1.162,1683,0.983,1684,1.015,1685,1.12,1686,1.162,1687,1.162,1688,1.015,1689,1.162,1690,1.162,1691,1.925,1692,3.175,1693,0.929,1694,1.162,1695,1.162,1696,1.162,1697,1.162,1698,1.162,1699,1.162,1700,1.925,1701,1.162,1702,1.162,1703,1.735,1704,1.162,1705,1.162,1706,1.082,1707,1.162,1708,1.162,1709,1.082,1710,1.162,1711,1.162,1712,1.162]],["title/interfaces/PartialResult.html",[0,0.177,3928,3.43]],["body/interfaces/PartialResult.html",[0,0.318,2,0.865,3,0.058,4,0.044,5,0.044,8,0.246,12,0.139,13,0.428,18,0.199,19,0.008,20,1.527,25,0.977,26,0.083,30,1.921,33,2.683,35,2.044,36,1.184,40,1.622,43,5.284,50,0.971,58,2.373,59,0.993,60,1.325,64,2.807,67,2.502,73,0.504,78,0.097,84,2.28,85,0.794,87,1.679,88,1.543,91,1.342,93,2.502,96,1.272,99,1.415,101,2.031,105,4.246,108,1.256,109,1.031,114,1.481,121,2.831,124,3.485,133,1.956,140,0.773,143,0.509,145,2.556,155,3.084,159,0.008,160,0.006,161,0.007,165,3.255,171,3.898,172,1.524,179,3.362,192,0.705,194,2.695,200,0.368,204,0.571,206,4.858,208,2.564,223,3.009,225,4.628,233,0.958,234,1.203,243,1.622,246,3.218,253,2.346,259,0.439,260,1.229,262,4.427,263,2.923,266,0.856,272,1.691,280,0.553,281,1.1,285,2.683,286,3.062,318,2.177,346,2.255,361,0.798,363,2.726,374,2.499,378,2.647,392,1.153,408,3.36,461,0.69,477,0.368,508,1.956,517,1.857,521,1.665,547,1.372,555,1.184,556,1.106,560,2.445,605,1.178,612,1.196,613,1.203,615,2.346,633,1.203,673,1.945,681,1.129,740,1.971,743,2.274,767,1.715,768,2.088,887,2.556,908,2.556,937,2.916,1006,2.035,1010,3.009,1025,2.831,1028,3.014,1055,1.664,1058,2.502,1065,2.683,1114,2.312,1127,2.556,1129,3.643,1159,4.035,1169,4.858,1172,2.556,1174,1.471,1222,2.346,1239,3.38,1240,3.268,1242,2.332,1245,1.582,1303,2.726,1304,3.685,1344,1.404,1348,1.971,1360,3.685,1367,1.543,1380,1.971,1397,2.901,1519,1.912,1521,2.81,1683,1.644,1693,1.805,1740,2.346,1744,1.971,1747,2.257,1759,1.971,1879,2.445,1881,4.322,1926,3.009,2009,2.683,2042,3.643,2083,4.035,2085,2.831,2088,4.035,2140,2.831,2222,2.445,2254,3.218,2297,3.103,2304,2.556,2494,4.246,2512,2.831,2522,2.445,2571,2.683,2579,2.683,2584,3.485,2654,3.824,2688,4.289,2731,4.998,2751,2.864,2813,3.009,2927,3.824,3187,4.061,3281,3.824,3293,2.445,3314,3.009,3318,3.009,3346,2.683,3577,2.831,3679,2.683,3712,2.831,3728,2.683,3735,2.831,3826,2.831,3831,2.831,3841,2.445,3928,5.448,3929,2.177,3930,2.103,3931,3.231,3932,5.634,3933,4.289,3934,4.607,3935,3.231,3936,3.009,3937,2.831,3938,4.427,3939,3.009,3940,6.3,3941,4.68,3942,4.998,3943,4.607,3944,4.607,3945,4.607,3946,5.852,3947,3.231,3948,3.231,3949,3.231,3950,3.231,3951,3.231,3952,3.231,3953,3.231,3954,3.231,3955,3.231,3956,3.009,3957,3.231,3958,3.231,3959,3.231,3960,3.231,3961,2.556,3962,3.231,3963,3.009,3964,3.231,3965,6.618,3966,4.289,3967,3.231,3968,3.231,3969,3.231,3970,2.831,3971,2.831,3972,3.231,3973,3.231,3974,3.231,3975,4.607,3976,4.607,3977,3.231,3978,3.231,3979,3.231,3980,3.009,3981,3.231,3982,3.231,3983,4.607,3984,3.231,3985,4.607,3986,3.231,3987,3.231,3988,3.231,3989,5.368,3990,3.231,3991,3.009,3992,3.231,3993,3.231,3994,3.231,3995,3.231,3996,3.231,3997,3.231,3998,3.231,3999,3.231,4000,3.231,4001,3.231,4002,6.431,4003,3.231,4004,3.231,4005,4.607,4006,3.231,4007,3.231,4008,4.607,4009,3.231,4010,5.852,4011,4.607,4012,3.231,4013,3.231,4014,3.231,4015,3.231,4016,3.009,4017,3.231,4018,3.231,4019,3.231,4020,4.607,4021,3.231,4022,3.231,4023,3.231,4024,3.231,4025,3.231,4026,3.231,4027,3.231,4028,3.231,4029,4.607,4030,3.231,4031,3.231,4032,3.231,4033,3.231,4034,3.231,4035,3.231,4036,3.231,4037,3.231,4038,4.607,4039,3.231,4040,3.009,4041,3.231,4042,3.231,4043,3.231,4044,3.231,4045,3.231,4046,3.231,4047,3.231,4048,4.607,4049,4.607,4050,3.231,4051,3.231,4052,3.231,4053,3.231,4054,3.231,4055,3.231,4056,3.231,4057,3.231]],["title/classes/Percent.html",[78,0.11,3903,3.684]],["body/classes/Percent.html",[3,0.066,4,0.05,5,0.05,8,0.472,12,0.159,13,0.469,14,0.66,18,0.315,19,0.008,20,1.437,25,2.114,26,0.066,31,3.995,34,1.511,62,2.821,71,1.913,73,0.56,78,0.151,84,2.848,85,1.222,87,1.343,109,0.89,115,1.081,130,2.915,140,0.843,143,0.975,147,3.686,159,0.004,160,0.005,161,0.004,163,1.115,168,1.013,172,1.498,181,0.777,190,3.377,192,0.804,195,0.925,197,1.33,198,0.722,200,0.885,217,3.472,224,1.023,245,1.718,266,0.672,275,1.402,280,0.506,281,1.035,364,1.31,373,2.412,508,2.145,521,2.078,547,1.565,555,0.948,610,4.026,688,2.689,768,1.802,806,3.643,866,2.321,910,3.13,956,3.081,1083,3.18,1147,1.88,1218,2.968,1231,1.899,1276,3.749,1277,2.671,1288,3.259,1305,2.181,1329,2.181,1351,2.181,1459,2.821,1674,2.535,2016,4.225,2018,2.989,2402,4.468,2609,2.887,2927,3.06,3573,4.026,3630,4.783,3631,4.783,3632,5.145,3633,5.7,3634,5.7,3635,4.193,3636,5.145,3637,3.995,3638,4.902,3641,3.229,3642,3.229,3643,5.145,3644,5.29,3648,3.229,3649,5.366,3650,4.783,3651,4.193,3652,3.229,3653,3.229,3654,4.193,3655,5.303,3656,3.229,3657,3.229,3658,3.229,3659,5.431,3660,5.431,3661,4.902,3662,5.145,3663,4.193,3664,3.229,3665,4.193,3706,2.915,3839,4.193,3840,3.229,3841,2.789,3842,4.424,3846,3.229,3847,3.229,3848,3.229,3849,5.688,3854,3.229,3855,4.424,3856,4.424,3857,4.424,3858,3.229,3859,3.229,3860,4.424,3861,4.424,3862,4.424,3863,3.229,3903,6.705,4058,3.686,4059,4.543,4060,4.543,4061,6.225,4062,6.225,4063,8.264,4064,7.101,4065,6.225,4066,6.225,4067,4.026,4068,6.225,4069,4.543,4070,4.543,4071,4.543,4072,4.543,4073,4.543,4074,4.543,4075,4.543,4076,6.225,4077,4.543,4078,4.543,4079,4.543]],["title/modules/PipesModule.html",[2745,1.564,4080,3.227]],["body/modules/PipesModule.html",[3,0.101,4,0.076,5,0.076,19,0.008,26,0.101,78,0.168,159,0.006,160,0.007,161,0.006,244,4.061,259,0.45,266,0.744,477,0.637,618,2.958,651,2.222,680,3.612,683,3.44,691,3.44,694,3.359,1147,2.082,1566,2.375,2609,2.487,2745,2.375,2747,3.124,2748,3.124,2749,4.24,2750,3.412,2751,2.738,2752,4.274,2760,4.02,2763,3.412,2764,4.9,2765,3.31,2766,3.412,2767,3.412,2768,3.412,2769,3.412,2770,3.412,2773,4.15,3598,6.551,4080,6.733,4081,6.11,4082,6.11,4083,6.11,4084,6.11,4085,6.894]],["title/classes/PowerTwoUnit.html",[78,0.11,4086,4.024]],["body/classes/PowerTwoUnit.html",[3,0.06,4,0.046,5,0.046,8,0.52,12,0.144,13,0.438,14,0.679,18,0.31,19,0.008,20,1.554,26,0.06,34,1.557,62,2.958,71,2.006,73,0.552,78,0.141,84,2.986,85,1.195,109,1.046,115,1.074,130,3.727,140,0.851,143,0.525,159,0.003,160,0.005,161,0.003,163,1.009,168,0.945,172,1.551,179,1.917,181,0.725,190,3.504,195,0.929,197,1.369,198,0.735,200,0.887,217,3.68,224,1.042,233,0.989,245,2.196,266,0.627,275,1.269,280,0.485,364,1.424,373,2.835,508,2.521,521,2.132,547,1.417,555,0.858,556,1.141,688,2.696,714,1.754,768,1.949,806,3.82,866,2.101,910,3.224,956,3.621,1083,3.44,1147,2.034,1218,3.225,1277,2.889,1288,3.353,1305,2.788,1329,2.788,1351,1.974,1459,3.051,1674,2.742,2016,4.44,2402,4.576,2609,3.033,3630,5.198,3631,5.198,3632,5.395,3633,5.545,3634,5.545,3635,4.928,3636,5.545,3637,4.695,3638,5.283,3641,2.922,3642,2.922,3643,5.198,3644,5.476,3648,2.922,3649,5.476,3650,5.198,3651,4.535,3652,2.922,3653,2.922,3654,4.535,3655,5.487,3656,2.922,3657,2.922,3658,2.922,3659,5.14,3660,5.14,3661,5.14,3662,5.395,3663,4.535,3664,2.922,3665,4.535,3696,4.128,3706,3.727,3839,6.176,3840,2.922,3841,3.565,3842,4.785,3843,5.463,3844,6.499,3846,4.128,3847,4.128,3848,4.128,3849,5.693,3852,3.336,3853,3.336,3854,2.922,3855,4.128,3856,4.128,3857,4.128,3858,2.922,3859,2.922,3860,4.128,3861,4.128,3862,4.128,3863,2.922,4086,3.644,4087,3.644,4088,3.644,4089,4.111,4090,3.644,4091,3.644,4092,3.644,4093,3.644,4094,3.644,4095,3.644,4096,3.644,4097,3.644,4098,3.644,4099,3.644]],["title/modules/QuickSearchModule.html",[2745,1.564,4100,3.227]],["body/modules/QuickSearchModule.html",[3,0.1,4,0.076,5,0.076,19,0.008,26,0.1,78,0.167,159,0.006,160,0.007,161,0.006,208,3.694,259,0.51,260,2.118,263,2.261,477,0.634,618,2.945,651,2.212,881,2.261,1147,2.073,1250,1.987,1566,2.365,1894,3.89,2609,2.476,2745,2.365,2747,3.11,2748,3.11,2749,4.018,2750,3.397,2751,2.726,2752,4.266,2760,4.01,2762,3.751,2763,3.397,2765,3.295,2766,3.397,2767,3.397,2768,3.397,2769,3.397,2770,3.397,2771,4.592,2772,3.506,2773,4.139,2774,5.457,2775,4.772,2776,4.592,3929,3.751,3930,3.624,4100,6.609,4101,6.083,4102,6.083,4103,6.083,4104,6.863,4105,6.573,4106,6.863]],["title/interfaces/QuickSearchProvider.html",[0,0.177,171,2.675]],["body/interfaces/QuickSearchProvider.html",[0,0.32,2,1.335,3,0.09,4,0.068,5,0.068,8,0.469,12,0.215,13,0.571,14,0.507,18,0.3,19,0.008,20,1.749,26,0.111,30,2.018,43,5.508,50,0.731,58,3.167,60,1.764,65,3.34,73,0.572,78,0.149,84,2.611,85,0.859,108,2.389,115,0.968,117,4.863,140,0.738,158,1.714,159,0.006,160,0.006,161,0.007,165,3.273,167,4.641,169,4.641,170,1.39,171,4.84,179,4.366,180,7.149,181,0.945,190,2.866,195,0.614,197,1.021,198,0.537,204,0.519,206,5.778,216,3.324,224,0.909,240,6.667,253,5.053,259,0.34,263,2.903,286,2.734,326,3.407,392,2.194,508,2.956,582,5.724,767,2.289,949,5.104,1006,3.871,1280,3.167,1683,2.194,1819,5.386,2522,4.651,2751,3.407,2999,6.148,3929,4.142,3930,4.001,3938,4.651,3941,4.651,3961,4.863,4107,6.144,4108,6.716,4109,6.716,4110,6.716,4111,6.716,4112,6.716,4113,6.716,4114,6.716,4115,6.716,4116,6.148]],["title/classes/QuickSearchProviderDefaults.html",[78,0.11,169,3.43]],["body/classes/QuickSearchProviderDefaults.html",[0,0.301,3,0.093,4,0.07,5,0.07,12,0.223,13,0.583,14,0.525,18,0.304,19,0.008,20,1.468,26,0.113,30,1.694,43,5.121,50,0.757,58,2.657,60,1.738,65,2.803,73,0.566,78,0.155,84,2.191,85,0.889,108,2.005,115,0.812,117,4.081,140,0.571,143,0.988,158,1.811,159,0.006,160,0.006,161,0.006,163,1.56,165,3.208,167,4.804,169,5.846,170,1.751,171,4.914,179,4.27,180,7.043,181,0.966,190,3.283,195,0.868,197,1.057,198,0.556,200,0.715,204,0.436,206,5.619,216,3.233,224,0.857,240,6.769,253,5.114,259,0.352,263,2.748,286,2.294,326,3.074,392,1.841,508,2.667,582,4.804,767,1.921,949,4.283,1006,3.249,1280,2.657,1683,1.841,1819,4.52,2522,3.904,2751,3.074,2999,5.16,3929,4.863,3930,4.698,3938,3.904,3941,3.904,3961,4.081,4108,5.636,4109,5.636,4110,5.636,4111,5.636,4112,5.636,4113,5.636,4114,5.636,4115,5.636,4116,5.16,4117,6.359,4118,6.359,4119,6.359,4120,6.359]],["title/injectables/QuickSearchRegistrarService.html",[1845,2.319,4121,4.024]],["body/injectables/QuickSearchRegistrarService.html",[3,0.095,4,0.072,5,0.072,8,0.403,12,0.228,13,0.593,14,0.648,18,0.295,19,0.008,26,0.095,50,0.776,59,1.042,78,0.159,143,0.833,159,0.005,160,0.007,161,0.005,165,3.087,170,1.475,171,5.362,172,1.493,181,0.981,192,1.155,195,0.876,197,1.306,198,0.687,200,0.602,204,0.6,224,0.87,259,0.467,263,2.589,266,0.704,275,2.013,477,0.602,551,3.561,604,1.968,767,2.374,1029,2.275,1206,2.702,1845,4.015,1847,4.186,2522,4.824,2707,5.586,2751,3.559,3500,6.376,3929,4.897,3930,4.731,3937,4.636,3938,5.7,3939,4.927,3941,4.824,3961,5.619,4121,7.76,4122,6.522,4123,6.965,4124,6.522,4125,6.522,4126,6.522,4127,7.858,4128,6.522,4129,6.522,4130,6.522,4131,6.522,4132,6.522,4133,6.522]],["title/interfaces/QuickSearchResultItem.html",[0,0.177,225,2.913]],["body/interfaces/QuickSearchResultItem.html",[0,0.342,2,1.427,3,0.096,4,0.073,5,0.073,8,0.406,12,0.23,13,0.595,18,0.307,19,0.008,20,1.516,26,0.123,30,2.102,52,1.428,58,3.298,59,0.782,64,2.971,67,3.868,71,1.976,73,0.523,108,2.488,114,2.059,140,0.788,159,0.007,160,0.007,161,0.005,165,3.225,204,0.541,225,5.429,247,1.34,253,3.869,262,4.844,263,2.958,286,2.847,292,7.12,363,4.062,528,3.789,768,2.284,1006,4.031,1021,2.608,1271,3.446,1303,3.789,1330,3.468,1510,4.167,1747,4.473,2690,6.403,3293,4.844,3929,3.59,3930,3.468,3932,5.609,4058,6.403,4134,5.329]],["title/interfaces/QuickSearchResults.html",[0,0.177,262,2.787]],["body/interfaces/QuickSearchResults.html",[0,0.34,2,1.407,3,0.094,4,0.072,5,0.072,8,0.401,12,0.227,13,0.59,14,0.75,18,0.318,19,0.008,20,1.807,26,0.123,30,1.725,52,1.054,58,3.271,59,0.771,64,2.882,67,2.855,71,1.622,73,0.401,108,2.043,114,1.69,140,0.847,159,0.007,160,0.007,161,0.005,165,3.25,204,0.444,225,5.606,247,1.1,253,3.816,262,5.162,263,2.878,286,3.278,292,5.256,363,4.363,528,3.11,768,2.529,1006,3.31,1021,3.108,1271,3.777,1303,4.363,1330,4.612,1510,3.421,1747,3.672,2690,5.256,3293,3.977,3929,3.541,3930,3.421,3932,4.604,4058,5.256,4134,5.256]],["title/injectables/QuickSearchService.html",[1845,2.319,3938,2.787]],["body/injectables/QuickSearchService.html",[3,0.088,4,0.067,5,0.067,8,0.463,12,0.313,13,0.564,14,0.617,18,0.285,19,0.008,20,1.728,26,0.088,50,0.717,59,0.891,64,2.412,78,0.147,85,1.046,96,1.167,99,1.468,143,0.769,158,1.888,159,0.005,160,0.006,161,0.005,165,3.153,171,5.527,179,3.797,181,0.934,195,0.852,197,1.244,198,0.654,200,0.556,224,0.97,259,0.414,263,1.984,266,0.808,280,0.496,281,1.001,344,2.278,477,0.556,521,2.13,555,1.256,557,3.489,587,2.453,594,2.334,767,1.819,808,3.548,815,3.705,949,5.041,1029,1.743,1628,2.224,1794,4.594,1845,3.824,1847,3.865,1876,4.549,2751,2.973,3929,4.788,3930,4.626,3937,4.28,3938,4.594,3941,5.801,3961,4.803,3966,5.654,4123,6.633,4135,6.022,4136,8.143,4137,8.518,4138,7.484,4139,7.484,4140,6.022,4141,7.484,4142,6.022,4143,7.484,4144,6.022,4145,8.76,4146,7.484,4147,7.484,4148,6.022,4149,7.484,4150,7.484,4151,6.022,4152,6.022,4153,6.022,4154,6.022,4155,6.022,4156,6.022,4157,6.022,4158,6.022,4159,6.022,4160,6.022,4161,6.022]],["title/interfaces/ResultActivatedEvent.html",[0,0.177,3942,3.43]],["body/interfaces/ResultActivatedEvent.html",[0,0.318,2,0.865,3,0.058,4,0.044,5,0.044,8,0.246,12,0.139,13,0.428,18,0.232,19,0.008,20,1.527,25,0.977,26,0.083,30,1.921,33,2.683,35,2.044,36,1.184,40,1.622,43,5.284,50,0.971,58,2.373,59,0.993,60,1.325,64,2.807,67,2.916,73,0.539,78,0.097,84,2.28,85,0.794,87,1.679,88,1.543,91,1.342,93,2.502,96,1.272,99,1.415,101,2.031,105,4.246,108,1.256,109,1.031,114,1.726,121,2.831,124,3.485,133,1.956,140,0.648,143,0.509,145,2.556,155,3.084,159,0.008,160,0.006,161,0.007,165,3.245,171,3.898,172,1.524,179,3.362,192,0.705,194,2.695,200,0.368,204,0.571,206,4.456,208,2.564,223,3.009,225,4.628,233,0.958,234,1.203,243,1.622,246,2.257,253,2.346,259,0.439,260,1.229,262,4.427,263,2.923,266,0.856,272,1.691,280,0.553,281,1.1,285,2.683,286,2.943,318,2.177,346,2.255,361,0.798,363,2.726,374,2.499,378,2.647,392,1.153,408,3.36,461,0.69,477,0.368,508,1.956,517,1.857,521,1.665,547,1.372,555,1.184,556,1.106,560,2.445,605,1.178,612,1.196,613,1.203,615,2.346,633,1.203,673,1.945,681,1.129,740,1.971,743,2.499,767,1.715,768,2.088,887,2.556,908,2.556,937,2.916,1006,2.035,1010,3.009,1025,2.831,1028,3.014,1055,1.664,1058,1.755,1065,2.683,1114,2.312,1127,2.556,1129,3.643,1159,5.126,1169,4.456,1172,2.556,1174,1.471,1222,2.346,1239,3.38,1240,3.268,1242,2.332,1245,1.582,1303,1.912,1304,2.035,1344,1.404,1348,2.81,1360,2.035,1367,1.543,1380,1.971,1397,2.901,1519,1.912,1521,2.81,1683,1.644,1693,1.805,1740,2.346,1744,1.971,1747,2.257,1759,1.971,1879,2.445,1881,4.322,1926,3.009,2009,2.683,2042,3.643,2083,4.035,2085,2.831,2088,4.035,2140,2.831,2222,2.445,2254,3.75,2297,2.177,2304,2.556,2494,4.246,2512,2.831,2522,2.445,2571,2.683,2579,2.683,2584,3.485,2654,3.824,2688,4.289,2731,4.998,2751,2.864,2813,3.009,2927,3.824,3187,4.061,3281,3.824,3293,2.445,3314,3.009,3318,3.009,3346,2.683,3577,2.831,3679,2.683,3712,2.831,3728,2.683,3735,2.831,3826,2.831,3831,2.831,3841,2.445,3928,4.998,3929,2.177,3930,2.103,3931,3.231,3932,5.634,3933,3.009,3934,3.231,3935,3.231,3936,3.009,3937,2.831,3938,4.427,3939,3.009,3940,6.3,3941,4.68,3942,5.448,3943,6.186,3944,6.186,3945,6.186,3946,6.431,3947,3.231,3948,3.231,3949,3.231,3950,3.231,3951,3.231,3952,3.231,3953,3.231,3954,3.231,3955,3.231,3956,3.009,3957,3.231,3958,3.231,3959,3.231,3960,3.231,3961,2.556,3962,3.231,3963,3.009,3964,3.231,3965,6.618,3966,4.289,3967,3.231,3968,3.231,3969,3.231,3970,2.831,3971,2.831,3972,3.231,3973,3.231,3974,3.231,3975,4.607,3976,4.607,3977,3.231,3978,3.231,3979,3.231,3980,3.009,3981,3.231,3982,3.231,3983,4.607,3984,3.231,3985,4.607,3986,3.231,3987,3.231,3988,3.231,3989,5.368,3990,3.231,3991,3.009,3992,3.231,3993,3.231,3994,3.231,3995,3.231,3996,3.231,3997,3.231,3998,3.231,3999,3.231,4000,3.231,4001,3.231,4002,6.431,4003,3.231,4004,3.231,4005,4.607,4006,3.231,4007,3.231,4008,4.607,4009,3.231,4010,5.852,4011,4.607,4012,3.231,4013,3.231,4014,3.231,4015,3.231,4016,3.009,4017,3.231,4018,3.231,4019,3.231,4020,4.607,4021,3.231,4022,3.231,4023,3.231,4024,3.231,4025,3.231,4026,3.231,4027,3.231,4028,3.231,4029,4.607,4030,3.231,4031,3.231,4032,3.231,4033,3.231,4034,3.231,4035,3.231,4036,3.231,4037,3.231,4038,4.607,4039,3.231,4040,3.009,4041,3.231,4042,3.231,4043,3.231,4044,3.231,4045,3.231,4046,3.231,4047,3.231,4048,4.607,4049,4.607,4050,3.231,4051,3.231,4052,3.231,4053,3.231,4054,3.231,4055,3.231,4056,3.231,4057,3.231]],["title/interfaces/SearchSection.html",[0,0.177,3940,3.43]],["body/interfaces/SearchSection.html",[0,0.309,2,0.872,3,0.059,4,0.044,5,0.044,12,0.141,13,0.431,18,0.233,19,0.008,20,1.534,25,0.985,26,0.083,30,1.928,33,2.705,35,2.052,36,1.191,40,1.636,43,5.294,50,0.973,58,2.387,59,0.995,60,1.331,64,2.779,67,2.517,73,0.506,78,0.098,84,2.29,85,0.799,87,1.689,88,1.556,91,1.353,93,2.517,96,1.326,99,1.42,101,2.037,105,4.265,108,1.266,109,1.035,114,1.49,121,2.855,124,3.506,133,1.965,140,0.65,143,0.513,145,2.577,155,2.663,159,0.008,160,0.006,161,0.007,165,3.247,171,4.506,172,1.526,179,3.375,192,0.711,194,2.707,200,0.371,204,0.573,206,4.477,208,2.576,223,3.034,225,4.646,233,0.966,234,1.213,243,1.636,246,2.277,253,2.366,259,0.44,260,1.239,262,4.879,263,2.927,266,0.858,272,1.699,280,0.554,281,1.105,285,2.705,286,2.95,318,2.195,346,2.269,361,0.804,363,2.742,374,2.506,378,2.663,392,1.163,408,3.371,461,0.696,477,0.371,508,1.968,517,1.872,521,1.671,547,1.384,555,1.191,556,1.115,560,2.465,605,1.187,612,1.201,613,1.213,615,2.366,633,1.213,673,1.95,681,1.138,740,1.988,743,2.283,767,1.725,768,2.096,887,2.577,908,2.577,937,2.93,1006,2.052,1010,3.034,1025,2.855,1028,3.025,1055,1.678,1058,1.77,1065,2.705,1114,2.326,1127,2.577,1129,3.665,1159,4.06,1169,4.477,1172,2.577,1174,1.483,1222,2.366,1239,3.396,1240,3.28,1242,2.343,1245,1.595,1303,1.928,1304,2.052,1344,1.416,1348,1.988,1360,2.052,1367,1.556,1380,1.988,1397,2.918,1519,1.928,1521,3.786,1683,1.653,1693,1.82,1740,2.366,1744,1.988,1747,2.277,1759,1.988,1879,2.465,1881,4.335,1926,3.034,2009,2.705,2042,3.665,2083,4.06,2085,2.855,2088,4.06,2140,2.855,2222,2.465,2254,3.237,2297,2.195,2304,2.577,2494,4.265,2512,2.855,2522,2.465,2571,2.705,2579,2.705,2584,3.506,2654,3.847,2688,4.315,2731,5.021,2751,2.875,2813,3.034,2927,3.847,3187,4.08,3281,3.847,3293,2.465,3314,3.034,3318,3.034,3346,2.705,3577,2.855,3679,2.705,3712,2.855,3728,2.705,3735,2.855,3826,2.855,3831,2.855,3841,2.465,3928,5.021,3929,2.195,3930,2.121,3931,3.259,3932,5.436,3933,3.034,3934,3.259,3935,3.259,3936,3.034,3937,2.855,3938,4.444,3939,3.034,3940,6.424,3941,5.13,3942,5.021,3943,4.634,3944,4.634,3945,4.634,3946,5.874,3947,3.259,3948,3.259,3949,3.259,3950,3.259,3951,3.259,3952,3.259,3953,3.259,3954,3.259,3955,3.259,3956,3.034,3957,3.259,3958,3.259,3959,3.259,3960,3.259,3961,2.577,3962,3.259,3963,3.034,3964,3.259,3965,6.635,3966,4.315,3967,3.259,3968,3.259,3969,3.259,3970,2.855,3971,2.855,3972,3.259,3973,3.259,3974,3.259,3975,4.634,3976,4.634,3977,3.259,3978,3.259,3979,3.259,3980,3.034,3981,3.259,3982,3.259,3983,4.634,3984,3.259,3985,4.634,3986,3.259,3987,3.259,3988,3.259,3989,5.393,3990,3.259,3991,3.034,3992,3.259,3993,3.259,3994,3.259,3995,3.259,3996,3.259,3997,3.259,3998,3.259,3999,3.259,4000,3.259,4001,3.259,4002,6.449,4003,3.259,4004,3.259,4005,4.634,4006,3.259,4007,3.259,4008,4.634,4009,3.259,4010,5.874,4011,4.634,4012,3.259,4013,3.259,4014,3.259,4015,3.259,4016,3.034,4017,3.259,4018,3.259,4019,3.259,4020,4.634,4021,3.259,4022,3.259,4023,3.259,4024,3.259,4025,3.259,4026,3.259,4027,3.259,4028,3.259,4029,4.634,4030,3.259,4031,3.259,4032,3.259,4033,3.259,4034,3.259,4035,3.259,4036,3.259,4037,3.259,4038,4.634,4039,3.259,4040,3.034,4041,3.259,4042,3.259,4043,3.259,4044,3.259,4045,3.259,4046,3.259,4047,3.259,4048,4.634,4049,4.634,4050,3.259,4051,3.259,4052,3.259,4053,3.259,4054,3.259,4055,3.259,4056,3.259,4057,3.259]],["title/interfaces/SelectOption.html",[0,0.177,2344,2.247]],["body/interfaces/SelectOption.html",[0,0.271,2,1.514,3,0.102,4,0.077,5,0.077,8,0.431,12,0.244,13,0.616,14,0.674,18,0.304,19,0.008,20,1.609,26,0.102,30,1.856,34,1.905,50,0.83,73,0.571,96,1.353,109,0.996,115,1.044,126,7.26,140,0.779,141,3.33,152,2.151,159,0.006,160,0.007,161,0.006,200,0.853,247,1.519,673,1.71,1288,3.33,1332,3.623,2344,4.046,4162,6.97,4163,6.97,4164,8.175]],["title/directives/ShowClippedTextDirective.html",[653,1.496,707,1.717]],["body/directives/ShowClippedTextDirective.html",[0,0.145,3,0.055,4,0.041,5,0.041,8,0.231,9,1.231,12,0.131,13,0.409,14,0.447,18,0.297,19,0.008,25,1.566,26,0.102,27,1.787,30,1.865,36,0.779,38,2.201,50,0.445,52,1.039,59,1.091,74,2.976,78,0.091,81,0.995,83,1.38,85,0.758,87,1.105,96,1.092,98,3.799,99,1.064,101,1.865,102,2.6,108,1.178,109,0.534,115,0.477,118,1.787,140,0.697,143,1.022,158,1.131,159,0.003,160,0.005,161,0.003,170,1.227,172,1.479,181,0.677,191,2.154,192,0.661,195,0.891,197,0.901,198,0.474,200,0.739,224,0.859,247,1.084,259,0.207,266,0.864,272,2.136,275,1.153,280,0.562,344,1.413,377,1.413,392,1.082,441,0.936,458,2.154,461,0.94,463,1.57,477,0.345,517,1.742,521,1.474,523,1.231,555,1.669,566,1.448,574,2.821,586,1.827,595,2.201,611,1.448,612,0.675,619,1.787,633,1.638,652,1.304,653,2.637,699,1.129,707,2.414,708,3.005,741,2.051,743,1.178,756,2.586,808,2.201,870,1.037,904,5.286,956,1.85,966,2.343,993,1.693,1013,4.3,1014,5.501,1015,3.307,1016,2.656,1017,4.537,1018,1.647,1019,1.287,1020,5.009,1021,2.535,1022,1.413,1023,3.074,1024,4.4,1025,2.656,1026,3.731,1027,6.174,1028,2.927,1029,1.848,1030,2.414,1031,4.3,1032,5.29,1033,2.562,1034,3.328,1035,5.618,1036,3.681,1037,5.618,1038,4.126,1039,5.618,1040,2.823,1041,3.032,1042,2.823,1043,3.032,1044,2.398,1045,3.032,1046,3.032,1047,3.032,1048,2.823,1049,3.032,1050,3.032,1051,1.484,1052,4.481,1053,3.032,1054,3.032,1055,1.562,1056,4.4,1057,3.032,1058,2.813,1059,5.179,1060,3.032,1061,3.653,1062,3.032,1063,3.032,1064,3.032,1065,2.517,1066,3.032,1067,2.823,1068,1.794,1069,6.034,1070,3.032,1071,5.179,1072,3.032,1073,3.032,1074,1.348,1075,5.179,1076,4.4,1077,3.032,1078,4.4,1079,3.032,1080,4.4,1081,2.398,1082,3.032,1083,1.909,1084,5.179,1085,3.032,1086,3.032,1087,3.032,1088,4.4,1089,4.4,1090,3.032,1091,3.032,1092,4.537,1093,3.032,1094,3.032,1095,3.032,1096,3.032,1097,3.032,1098,5.682,1099,3.032,1100,6.034,1101,3.032,1102,3.032,1103,5.682,1104,2.656,1105,5.179,1106,4.4,1107,3.032,1108,3.032,1109,3.032,1110,3.032,1111,3.032,1112,3.032,1113,2.604,1114,1.522,1115,3.032,1116,3.032,1117,4.4,1118,3.032,1119,4.4,1120,5.682,1121,4.4,1122,2.976,1123,4.4,1124,1.85,1125,4.4,1126,3.032,1127,2.398,1128,3.032,1129,2.398,1130,4.4,1131,3.032,1132,3.032,1133,3.032,1134,3.032,1135,2.042,1136,3.032,1137,2.656,1138,2.823,1139,3.032,1140,3.032,1141,3.032,1142,4.4,1143,5.179,1144,2.823,1145,3.032,1146,3.032,1147,2.246,1148,3.032,1149,2.604,1150,3.032,1151,4.4,1152,5.682,1153,2.656,1154,2.656,1155,2.656,1156,2.656,1157,6.034,1158,4.822,1159,4.537,1160,3.312,1161,6.207,1162,3.312,1163,3.312,1164,3.312,1165,3.312,1166,3.312,1167,3.312,1168,4.097,1169,2.517,1170,3.312,1171,4.4,1172,3.48,1173,4.806,1174,2.003,1175,5.657,1176,3.312,1177,3.312,1178,4.806,1179,3.312,1180,4.806,1181,5.657,1182,3.312,1183,4.806,1184,4.806,1185,4.806,1186,5.657,1187,4.806,1188,5.657,1189,4.806,1190,2.714,1191,6.207,1192,5.657,1193,3.312,1194,3.312,1195,4.806,1196,4.806,1197,2.118,1198,2.398,1199,4.806,1200,3.312,1201,3.312,1202,3.312,1203,3.312,1204,3.312,1205,3.312,1206,2.161,1207,5.29,1208,3.312,1209,3.312,1210,5.657,1211,4.806,1212,4.806,1213,6.207,1214,5.657,1215,6.207,1216,3.312,1217,3.032,1218,1.562,1219,3.312,1220,3.312,1221,3.032,1222,2.201,1223,1.603,1224,3.032,1225,3.032,4165,3.736,4166,5.423,4167,5.423,4168,3.736,4169,3.736,4170,3.736,4171,3.736,4172,3.736,4173,3.736,4174,3.736,4175,3.736,4176,3.736,4177,3.736,4178,3.736,4179,3.736]],["title/modules/ShowClippedTextDirectiveModule.html",[2745,1.564,2759,2.787]],["body/modules/ShowClippedTextDirectiveModule.html",[3,0.103,4,0.078,5,0.078,19,0.008,26,0.103,78,0.171,159,0.006,160,0.007,161,0.006,259,0.455,477,0.649,618,3.015,633,2.123,651,2.265,707,3.616,1014,4.314,1015,2.963,1147,2.123,1262,3.276,1566,2.421,1894,3.983,2609,2.535,2745,2.421,2747,3.184,2748,3.184,2749,4.058,2750,3.479,2751,2.791,2752,4.309,2759,5.734,2760,4.066,2763,3.479,2765,3.374,2766,3.479,2767,3.479,2768,3.479,2769,3.479,2770,3.479,2773,4.197,4180,6.228,4181,6.228,4182,6.228,4183,7.028]],["title/classes/ShowClippedTextDirectiveTestHelper.html",[78,0.11,4184,3.684]],["body/classes/ShowClippedTextDirectiveTestHelper.html",[3,0.068,4,0.052,5,0.052,8,0.288,12,0.163,13,0.477,14,0.666,18,0.303,19,0.008,26,0.092,36,1.61,59,1.099,71,1.166,73,0.536,78,0.154,96,1.204,98,4.124,101,1.24,115,0.808,140,0.569,143,0.986,148,2.086,158,0.971,159,0.004,160,0.005,161,0.004,163,1.553,172,1.534,181,0.79,191,2.514,192,0.824,195,0.943,197,1.342,198,0.705,200,0.713,204,0.434,224,0.984,247,1.37,259,0.398,266,0.833,272,1.19,275,1.437,280,0.582,326,2.514,441,1.585,477,0.43,478,4.375,479,2.545,521,2.112,522,3.588,532,3.46,555,1.808,574,2.535,592,4.415,605,1.377,633,2.172,653,2.37,696,1.998,707,2.394,756,1.72,778,2.716,1014,5.796,1015,3.423,1026,3.353,1027,4.845,1028,3.006,1031,5.737,1033,2.478,1034,3.086,1036,3.56,1038,4.237,1052,4.551,1081,2.988,1092,5.486,1122,3.598,1137,5.737,1153,3.31,1154,3.31,1155,3.31,1156,3.31,1223,2.716,1245,1.85,1262,2.171,2172,3.46,2298,3.134,3115,4.063,4184,5.137,4185,8.368,4186,4.127,4187,5.611,4188,6.375,4189,6.375,4190,6.375,4191,6.84,4192,6.84,4193,6.84,4194,6.84,4195,6.84,4196,6.331,4197,6.331,4198,6.375,4199,6.375,4200,6.375,4201,6.375,4202,6.375,4203,4.127,4204,4.657,4205,4.657,4206,6.375,4207,4.657,4208,5.611,4209,4.657,4210,5.611,4211,4.657,4212,4.657,4213,4.657,4214,4.657,4215,4.657,4216,4.657,4217,4.657,4218,4.657,4219,4.657,4220,4.657,4221,4.657,4222,4.657,4223,4.657,4224,4.657,4225,4.657,4226,4.657,4227,4.657,4228,4.657,4229,4.657,4230,4.657,4231,4.657,4232,4.657,4233,4.657,4234,4.657,4235,4.657,4236,4.657,4237,4.657,4238,4.657,4239,4.657,4240,4.657,4241,4.657,4242,4.127,4243,4.127,4244,4.127,4245,4.127,4246,6.84,4247,4.127,4248,4.127,4249,4.127,4250,4.127,4251,4.127,4252,4.127,4253,5.611,4254,6.375,4255,4.127,4256,5.611,4257,5.611,4258,4.127,4259,5.611,4260,4.127,4261,4.127,4262,4.127,4263,4.127,4264,5.611,4265,4.127,4266,4.127,4267,4.127,4268,4.127,4269,4.127,4270,4.127,4271,5.611,4272,4.127,4273,4.127,4274,4.127,4275,4.127,4276,4.127,4277,5.611]],["title/components/ShowClippedTextDirectiveTestHostComponent.html",[204,0.311,696,1.948]],["body/components/ShowClippedTextDirectiveTestHostComponent.html",[3,0.07,4,0.053,5,0.053,12,0.167,13,0.485,18,0.294,19,0.008,26,0.094,36,1.626,59,0.998,60,0.955,63,1.352,71,1.195,73,0.53,78,0.157,96,1.136,98,3.982,101,1.714,115,0.609,140,0.7,143,0.93,148,2.12,158,0.995,159,0.004,160,0.005,161,0.004,163,1.171,172,1.38,195,0.839,198,0.711,200,0.672,204,0.499,208,1.849,247,1.499,259,0.403,263,1.572,266,0.842,272,1.219,275,1.472,280,0.585,326,1.895,338,1.903,358,1.058,374,1.504,390,1.572,441,1.612,461,1.648,463,1.263,477,0.441,478,3.648,479,2.607,521,2.119,522,2.704,532,3.517,555,1.818,574,1.682,592,2.928,603,1.537,604,1.612,605,1.903,606,1.895,609,1.537,611,1.849,612,1.703,633,2.199,651,1.537,652,1.547,653,2.681,654,3.532,655,2.162,656,1.607,657,2.162,658,2.162,659,1.721,660,2.047,661,2.162,662,1.895,663,2.162,664,1.352,665,2.162,666,1.804,667,2.21,668,1.895,669,3.532,670,1.762,671,1.895,672,1.895,673,1.171,674,1.762,675,1.895,676,2.162,677,1.943,678,2.162,679,2.103,680,1.895,681,2.21,682,2.162,683,1.804,684,3.532,685,1.849,686,2.966,687,1.849,688,1.786,689,1.849,690,2.916,691,1.804,692,1.994,693,2.162,694,1.762,695,2.162,696,3.344,697,1.537,698,1.572,699,1.441,700,1.572,701,2.162,702,1.895,703,2.162,704,1.943,705,1.411,706,2.162,707,2.948,708,2.047,709,2.162,756,1.762,778,2.047,1014,5.262,1015,3.22,1026,2.224,1027,3.213,1028,3.401,1031,5.482,1033,2.509,1034,3.124,1036,3.604,1038,4.29,1052,4.261,1081,3.061,1092,3.391,1122,2.224,1137,5.54,1153,3.391,1154,3.391,1155,3.391,1156,3.391,1223,2.047,1245,1.895,1262,2.224,2172,2.607,2298,2.361,2404,5.908,3115,4.13,4184,3.871,4185,7.596,4186,4.228,4187,4.228,4188,4.228,4189,4.228,4190,4.228,4191,4.228,4192,4.228,4193,4.228,4194,4.228,4195,4.228,4198,4.228,4199,4.228,4200,4.228,4201,4.228,4202,4.228,4206,4.228,4208,4.228,4210,4.228,4242,4.228,4243,4.228,4244,4.228,4245,4.228,4246,6.908,4247,4.228,4248,4.228,4249,4.228,4250,4.228,4251,4.228,4252,4.228,4253,5.703,4254,6.454,4255,4.228,4256,5.703,4257,5.703,4258,4.228,4259,5.703,4260,4.228,4261,4.228,4262,4.228,4263,4.228,4264,5.703,4265,4.228,4266,4.228,4267,4.228,4268,4.228,4269,4.228,4270,4.228,4271,7.432,4272,5.703,4273,5.703,4274,6.454,4275,5.703,4276,6.454,4277,6.908,4278,4.77,4279,4.77,4280,4.77,4281,4.77,4282,4.77,4283,4.77]],["title/interfaces/SortedColumn.html",[0,0.177,1306,2.482]],["body/interfaces/SortedColumn.html",[0,0.278,1,2.22,2,0.445,3,0.03,4,0.023,5,0.023,8,0.127,9,1.665,10,3.234,12,0.272,13,0.381,14,0.169,15,3.416,18,0.25,19,0.008,20,1.166,22,0.706,25,1.066,26,0.113,27,1.665,28,1.047,30,1.781,34,1.626,36,1.7,39,0.984,40,2.459,42,0.903,47,0.775,50,0.937,52,0.552,53,1.734,54,1.047,55,3.159,56,1.792,59,0.873,60,1.209,61,2.202,62,0.757,63,1.711,64,2.06,66,0.816,67,0.903,69,2.988,71,0.85,73,0.493,74,1.582,77,1.382,78,0.106,80,1.014,81,0.904,83,1.605,84,1.93,85,0.608,86,2.772,87,1.494,88,0.794,90,3.76,91,0.69,93,3.471,96,1.144,99,0.991,101,1.996,102,0.834,108,1.766,109,1.232,111,1.974,114,0.535,115,0.937,118,1.845,120,1.082,127,1.726,129,1.456,133,1.003,136,0.814,137,2.22,138,1.047,140,0.803,141,1.382,143,0.816,148,1.845,149,1.082,152,1.972,154,2.02,155,0.955,158,1.491,159,0.003,160,0.003,161,0.002,168,0.333,170,0.463,172,1.525,173,1.12,181,0.542,192,0.363,194,1.77,195,0.205,198,0.558,200,0.401,202,0.984,203,0.879,204,0.502,210,2.151,224,0.481,233,0.816,234,1.025,243,0.834,247,0.348,250,1.12,259,0.423,260,0.632,266,0.935,269,1.12,270,1.855,272,0.868,280,0.592,281,1.063,286,2.841,321,0.757,327,0.879,336,0.955,338,1.285,344,2.529,358,0.454,361,1.012,364,1.353,369,1.68,374,0.646,377,2.283,378,2.356,390,1.118,392,1.258,438,1.253,459,1.025,461,0.355,463,0.666,477,0.189,508,1.497,512,0.903,521,1.003,523,1.845,538,1.734,544,0.794,546,1.284,547,0.706,555,1.259,556,0.569,570,1.532,594,2.339,596,1.224,603,0.66,604,0.85,605,1.285,609,0.66,612,0.785,613,0.619,619,1.118,623,1.68,633,1.691,634,2.426,650,1.082,652,1.045,656,1.143,664,0.581,667,0.581,673,0.503,697,0.66,698,0.675,699,1.025,705,0.606,728,0.619,730,1.118,736,1.85,738,1.77,741,0.775,743,1.37,768,1.258,771,0.834,779,0.775,784,1.025,794,1.014,809,0.739,836,1.014,840,0.794,862,0.984,870,0.569,953,1.915,954,1.497,955,2.502,957,0.739,958,3.084,959,2.904,960,2.502,966,1.312,969,0.955,970,0.879,972,1.816,973,1.082,974,1.082,993,3.143,1005,2.227,1015,0.739,1018,0.903,1019,2.881,1021,2.84,1022,1.284,1026,2.026,1028,1.418,1029,0.983,1030,1.284,1033,2.202,1051,1.348,1055,0.856,1058,0.903,1068,0.984,1074,1.567,1113,0.984,1114,1.382,1122,0.955,1124,3.433,1174,0.757,1190,0.794,1206,0.632,1218,0.856,1223,1.456,1226,2.762,1227,1.082,1228,1.924,1229,1.496,1230,1.924,1231,2.523,1232,1.734,1233,2.227,1234,1.161,1235,1.082,1236,1.161,1237,2.086,1238,1.734,1239,2.22,1240,2.538,1241,1.161,1242,2.253,1243,1.924,1244,1.924,1245,0.814,1246,1.161,1247,1.855,1248,2.463,1249,1.924,1250,0.593,1251,1.924,1252,1.161,1253,1.418,1254,0.879,1255,1.082,1256,1.12,1257,1.047,1258,1.047,1259,0.739,1260,0.879,1261,0.928,1262,0.955,1263,1.253,1264,1.014,1265,0.632,1266,1.816,1267,2.34,1268,2.151,1269,2.375,1270,3.452,1271,3.286,1272,3.061,1273,1.12,1274,2.375,1275,1.12,1276,1.082,1277,0.879,1278,1.014,1279,0.955,1280,2.794,1281,1.855,1282,2.22,1283,1.12,1284,1.12,1285,1.12,1286,2.762,1287,1.082,1288,1.382,1289,4.41,1290,2.007,1291,1.855,1292,1.12,1293,3.438,1294,2.375,1295,1.792,1296,3.084,1297,1.496,1298,1.161,1299,1.68,1300,1.161,1301,1.792,1302,1.161,1303,2.426,1304,2.581,1305,3.069,1306,2.375,1307,1.924,1308,1.924,1309,3.174,1310,1.12,1311,2.762,1312,1.161,1313,2.086,1314,1.855,1315,1.924,1316,1.161,1317,1.924,1318,1.924,1319,2.762,1320,2.463,1321,1.014,1322,0.984,1323,1.12,1324,1.161,1325,1.161,1326,0.903,1327,1.816,1328,3.174,1329,1.63,1330,3.872,1331,2.463,1332,0.814,1333,1.161,1334,1.161,1335,4.464,1336,1.12,1337,2.281,1338,3.421,1339,3.932,1340,1.12,1341,1.161,1342,2.375,1343,1.047,1344,0.722,1345,1.161,1346,1.161,1347,1.047,1348,2.772,1349,0.955,1350,1.161,1351,0.984,1352,2.375,1353,0.856,1354,0.903,1355,1.161,1356,2.086,1357,1.161,1358,1.12,1359,1.924,1360,1.734,1361,1.161,1362,1.161,1363,1.63,1364,1.047,1365,1.161,1366,1.161,1367,0.794,1368,1.161,1369,1.855,1370,2.463,1371,1.161,1372,1.161,1373,1.12,1374,1.792,1375,1.082,1376,1.792,1377,1.082,1378,2.463,1379,1.161,1380,1.014,1381,1.082,1382,1.161,1383,1.924,1384,1.161,1385,1.161,1386,1.161,1387,1.161,1388,1.161,1389,1.161,1390,1.855,1391,1.161,1392,2.463,1393,1.161,1394,1.161,1395,1.12,1396,2.864,1397,2.22,1398,1.161,1399,1.12,1400,1.082,1401,1.12,1402,1.161,1403,1.161,1404,1.12,1405,1.924,1406,1.161,1407,1.161,1408,1.924,1409,1.161,1410,1.161,1411,0.955,1412,1.161,1413,1.161,1414,1.161,1415,1.161,1416,3.79,1417,1.924,1418,1.161,1419,1.161,1420,1.161,1421,1.924,1422,1.161,1423,1.924,1424,1.924,1425,1.161,1426,1.161,1427,1.161,1428,1.924,1429,1.161,1430,2.864,1431,1.924,1432,1.924,1433,1.161,1434,1.161,1435,1.047,1436,1.161,1437,1.161,1438,1.161,1439,1.161,1440,1.161,1441,1.161,1442,1.924,1443,1.924,1444,1.924,1445,1.924,1446,2.463,1447,1.161,1448,1.161,1449,1.161,1450,1.161,1451,1.924,1452,1.924,1453,2.864,1454,1.161,1455,1.161,1456,1.161,1457,1.161,1458,1.161,1459,2.538,1460,3.421,1461,3.174,1462,1.924,1463,1.161,1464,1.924,1465,2.463,1466,1.161,1467,2.463,1468,1.161,1469,2.864,1470,1.924,1471,1.161,1472,1.161,1473,1.161,1474,1.924,1475,1.12,1476,1.161,1477,1.014,1478,1.161,1479,1.161,1480,1.161,1481,1.161,1482,1.924,1483,2.356,1484,1.161,1485,1.161,1486,1.161,1487,1.161,1488,1.161,1489,1.496,1490,1.161,1491,1.161,1492,1.161,1493,2.463,1494,1.161,1495,1.161,1496,1.12,1497,1.734,1498,1.161,1499,1.161,1500,1.161,1501,1.161,1502,1.161,1503,1.161,1504,1.161,1505,1.456,1506,1.161,1507,1.161,1508,1.161,1509,1.161,1510,1.082,1511,1.161,1512,1.161,1513,1.924,1514,1.161,1515,1.161,1516,1.161,1517,1.161,1518,1.161,1519,0.984,1520,1.161,1521,1.014,1522,1.161,1523,1.161,1524,0.984,1525,1.161,1526,1.161,1527,1.161,1528,1.161,1529,1.161,1530,1.161,1531,1.161,1532,1.161,1533,1.161,1534,1.161,1535,1.161,1536,0.794,1537,1.161,1538,1.161,1539,1.855,1540,1.161,1541,1.161,1542,1.161,1543,1.161,1544,1.161,1545,1.161,1546,1.161,1547,1.161,1548,1.924,1549,1.924,1550,1.924,1551,1.161,1552,2.294,1553,2.864,1554,1.924,1555,1.161,1556,1.161,1557,1.161,1558,1.161,1559,1.161,1560,1.161,1561,1.082,1562,1.161,1563,1.161,1564,1.161,1565,1.161,1566,0.706,1567,1.161,1568,1.161,1569,1.924,1570,1.161,1571,2.463,1572,1.161,1573,1.161,1574,1.161,1575,1.924,1576,1.161,1577,1.161,1578,1.924,1579,1.924,1580,1.161,1581,1.161,1582,1.082,1583,1.12,1584,1.161,1585,1.161,1586,1.161,1587,1.924,1588,1.924,1589,1.161,1590,1.161,1591,1.924,1592,1.161,1593,1.161,1594,1.161,1595,1.161,1596,1.161,1597,1.161,1598,1.161,1599,1.12,1600,1.161,1601,1.161,1602,1.161,1603,1.161,1604,1.161,1605,1.924,1606,1.161,1607,1.161,1608,1.161,1609,1.161,1610,1.161,1611,1.161,1612,1.161,1613,1.161,1614,1.161,1615,1.924,1616,2.864,1617,2.463,1618,1.161,1619,1.161,1620,1.924,1621,1.161,1622,1.161,1623,1.161,1624,1.161,1625,1.161,1626,1.161,1627,1.161,1628,1.253,1629,1.924,1630,1.161,1631,1.161,1632,1.161,1633,1.12,1634,1.161,1635,1.161,1636,1.161,1637,1.161,1638,1.161,1639,1.161,1640,1.12,1641,1.161,1642,1.161,1643,1.161,1644,1.161,1645,1.161,1646,1.161,1647,2.864,1648,1.161,1649,1.161,1650,1.161,1651,1.161,1652,1.161,1653,1.161,1654,1.12,1655,1.161,1656,1.161,1657,1.924,1658,1.161,1659,1.924,1660,1.161,1661,1.161,1662,1.924,1663,1.161,1664,1.161,1665,1.161,1666,1.161,1667,1.161,1668,2.463,1669,1.161,1670,1.161,1671,1.161,1672,1.161,1673,1.161,1674,0.834,1675,1.161,1676,1.161,1677,1.161,1678,1.161,1679,1.161,1680,1.161,1681,1.161,1682,1.161,1683,0.983,1684,1.014,1685,1.12,1686,1.161,1687,1.161,1688,1.014,1689,1.161,1690,1.161,1691,1.924,1692,3.174,1693,0.928,1694,1.161,1695,1.161,1696,1.161,1697,1.161,1698,1.161,1699,1.161,1700,1.924,1701,1.161,1702,1.161,1703,1.734,1704,1.161,1705,1.161,1706,1.082,1707,1.161,1708,1.161,1709,1.082,1710,1.161,1711,1.161,1712,1.161]],["title/components/SpinnerActivityReporterComponent.html",[204,0.311,697,1.463]],["body/components/SpinnerActivityReporterComponent.html",[3,0.068,4,0.052,5,0.052,8,0.446,12,0.164,13,0.479,14,0.703,18,0.317,19,0.008,21,4.96,26,0.068,30,1.69,34,1.351,36,1.324,39,3.047,57,2.086,58,3.804,59,1.047,60,0.936,63,1.325,65,2.797,73,0.559,78,0.114,96,0.729,99,1.414,101,2.059,108,2.272,111,2.54,136,1.856,140,0.57,143,0.81,159,0.004,160,0.005,161,0.004,168,1.033,181,0.792,188,5.924,190,3.153,192,0.827,195,0.905,197,1.478,198,0.79,200,0.586,204,0.494,208,1.811,217,3.311,224,1.001,234,1.917,236,4.275,243,2.585,247,1.312,258,2.999,259,0.399,263,1.54,272,1.842,313,4.96,314,5.471,321,3.149,324,3.141,334,5.207,338,2.742,340,3.148,341,1.811,342,4.624,352,4.275,353,3.148,358,2.018,363,3.047,369,4.353,374,2.688,375,4.794,381,5.149,382,5.149,383,5.149,384,6.272,385,6.763,386,6.918,387,4.142,390,2.746,395,5.149,396,3.792,398,5.847,399,3.792,400,5.149,401,3.792,403,3.792,405,3.792,406,5.847,408,2.797,409,4.511,410,5.924,411,3.531,412,3.792,441,1.171,461,1.65,463,1.245,477,0.432,521,1.924,603,1.506,604,1.589,605,1.382,606,1.856,608,4.142,609,2.322,611,1.811,612,1.707,613,1.917,614,5.625,615,4.245,632,5.625,633,2.517,634,4.002,635,4.142,636,4.142,637,4.142,638,4.142,639,4.142,640,4.142,643,4.142,644,3.531,646,4.142,647,6.387,649,5.625,651,1.506,652,1.526,653,1.54,654,3.502,655,2.118,656,1.575,657,2.118,658,2.118,659,1.686,660,2.005,661,2.118,662,1.856,663,2.118,664,1.325,665,2.118,666,1.768,667,2.191,668,1.856,669,3.502,670,1.726,671,1.856,672,1.856,673,1.147,674,1.726,675,1.856,676,2.118,677,1.904,678,2.118,679,2.06,680,1.856,681,2.191,682,2.118,683,1.768,684,3.502,685,1.811,686,2.935,687,1.811,688,1.762,689,1.811,690,2.876,691,1.768,692,1.953,693,2.118,694,1.726,695,2.118,696,2.005,697,2.491,698,2.957,699,1.412,700,1.54,701,2.118,702,1.856,703,2.118,704,1.904,705,1.382,706,2.118,707,1.768,708,2.005,709,2.118,4284,7.556,4285,6.346,4286,4.674,4287,7.729,4288,4.674,4289,4.674,4290,4.674]],["title/classes/SpinnerActivityReporterWidgetObject.html",[78,0.11,4291,4.024]],["body/classes/SpinnerActivityReporterWidgetObject.html",[3,0.07,4,0.053,5,0.053,8,0.503,12,0.167,13,0.632,14,0.719,17,3.516,18,0.327,19,0.008,25,1.786,26,0.07,34,1.015,35,1.351,36,0.994,57,1.38,59,0.928,66,1.75,71,1.194,73,0.583,78,0.116,81,1.939,85,1.09,96,1.135,101,1.27,109,0.682,138,2.405,140,0.578,143,1.113,148,2.119,156,2.289,159,0.004,160,0.006,161,0.004,163,1.17,165,2.889,168,1.047,172,1.289,181,0.803,191,2.555,195,0.923,197,1.449,198,0.761,200,0.832,204,0.557,217,3.545,224,1.011,245,1.803,247,1.236,259,0.403,266,0.515,280,0.556,281,0.793,326,3.095,338,2.577,341,2.821,346,1.894,358,1.057,361,0.955,364,0.88,390,2.398,410,5.174,435,2.354,438,1.761,441,1.194,451,4.631,458,1.894,459,2.798,461,1.262,463,1.845,464,3.642,477,0.44,517,2.223,521,1.878,523,2.398,528,2.289,529,3.981,546,2.753,551,2.16,557,2.223,572,2.436,583,3.299,586,1.606,587,2.965,594,2.493,599,2.045,612,1.162,615,4.288,697,1.537,698,2.681,711,7.431,712,4.225,713,4.384,714,2.798,715,3.979,716,4.128,717,4.128,718,3.979,719,4.128,720,3.516,721,4.128,725,2.606,726,3.211,727,2.16,728,1.44,729,2.606,730,1.571,731,2.436,732,2.517,733,2.606,734,3.211,735,2.606,736,1.38,737,2.606,738,1.942,739,3.857,740,3.603,741,2.753,742,2.606,743,2.84,744,4.583,745,3.211,746,2.606,747,3.211,748,2.999,749,2.606,750,3.211,751,2.915,752,2.606,753,3.211,754,2.606,755,3.211,756,1.761,757,2.606,758,2.606,759,3.211,760,2.606,761,3.059,762,3.979,763,3.211,764,2.606,765,3.979,766,3.516,767,1.44,768,1.38,769,2.62,770,2.606,771,1.942,772,2.606,773,2.606,774,1.894,775,2.606,776,2.606,777,2.606,778,2.045,779,1.803,780,3.088,781,3.516,782,2.606,783,3.211,784,1.44,785,2.606,786,4.225,788,4.225,793,4.225,794,2.36,795,4.225,796,4.225,1740,2.809,2865,4.225,4284,7.431,4291,5.701,4292,7.793,4293,7.793,4294,4.767,4295,4.767,4296,4.767,4297,4.767,4298,4.767,4299,4.767,4300,4.767]],["title/classes/SubscriptionTracker.html",[78,0.11,1259,1.638]],["body/classes/SubscriptionTracker.html",[0,0.281,3,0.083,4,0.063,5,0.063,8,0.352,12,0.199,13,0.545,14,0.655,18,0.302,19,0.008,26,0.105,50,0.945,52,1.177,57,2.298,59,1.103,78,0.139,85,1.205,113,3.153,114,1.886,143,0.728,158,1.508,159,0.005,160,0.006,161,0.005,163,1.398,170,1.635,172,1.405,181,0.902,192,1.009,195,0.862,197,1.388,198,0.694,200,0.733,204,0.495,224,0.879,259,0.439,266,0.857,280,0.479,281,0.947,341,3.077,358,2.026,364,1.465,376,3.838,392,2.093,437,3.23,477,0.526,599,2.445,604,1.81,1012,5.461,1029,2.417,1253,3.819,1254,2.445,1259,2.608,1519,4.295,2584,3.498,2707,5.138,3476,6.442,3477,7.804,3478,5.05,3479,7.637,3480,7.037,3481,5.05,3482,7.928,3483,5.05,3484,7.637,3485,7.637,3487,5.05,3488,5.05,3489,5.05,3490,8.433,3491,7.037,3493,6.407,3495,7.804,3496,5.05,3497,5.05,3498,5.05,3499,5.05,3500,5.865,3501,6.407,3502,5.461,3503,6.407,3504,6.407,3505,5.05,3506,6.407,3507,5.05,3508,5.05,3509,5.05,3510,5.05,3511,6.407,3512,6.407,3513,5.05,3514,5.05,3515,5.05,3516,5.05,3517,5.05,3518,5.05,4301,7.228,4302,5.698,4303,5.698,4304,5.698,4305,5.698]],["title/classes/TestElement.html",[78,0.11,449,3.43]],["body/classes/TestElement.html",[3,0.066,4,0.05,5,0.05,8,0.28,12,0.159,13,0.469,14,0.374,18,0.267,19,0.008,22,1.562,26,0.091,35,2.163,45,3.281,59,1.025,73,0.547,77,1.846,78,0.151,81,2.032,96,0.969,109,0.888,115,0.975,136,2.468,140,0.558,158,0.945,159,0.004,160,0.005,161,0.004,163,1.112,168,0.738,170,1.604,172,1.1,181,0.952,192,0.802,195,0.906,197,0.753,198,0.396,200,0.795,204,0.426,224,0.978,233,1.494,236,3.053,245,1.714,247,1.402,259,0.457,266,0.863,275,1.399,280,0.607,281,1.406,344,1.714,361,1.245,364,0.836,367,6.283,432,6.04,433,4.376,434,7.395,435,2.801,436,2.243,437,2.569,438,1.674,439,4.417,440,4.017,441,1.135,442,3.815,444,3.053,447,2.908,449,7.069,450,4.017,451,4.454,453,4.017,455,3.677,456,2.908,457,6.286,458,3.717,459,1.369,460,3.221,461,0.786,462,3.424,463,1.714,464,2.597,466,2.408,469,3.661,470,3.053,472,3.053,474,3.053,477,0.419,478,4.532,479,2.477,480,2.67,481,2.477,482,3.424,483,2.393,484,2.569,485,2.984,486,5.386,487,5.508,488,6.286,489,4.017,490,5.508,491,5.042,492,5.508,493,6.286,494,6.763,495,4.017,496,4.017,497,4.017,498,4.017,499,4.017,500,5.508,501,4.017,502,4.017,503,4.017,504,4.017,505,4.017,506,3.281,507,4.417,508,2.141,509,3.988,510,5.042,511,5.508,512,2.739,513,5.508,514,5.508,515,6.763,516,5.508,517,2.897,518,5.508,519,5.508,520,4.017,521,1.846,522,4.794,523,2.721,524,4.017,525,4.017,526,6.239,527,4.017,528,2.984,529,3.899,530,4.017,531,4.017,532,4.171,533,5.508,534,6.763,535,6.286,536,4.017,537,4.017,538,3.175,539,6.192,540,4.017,541,6.763,542,5.508,543,5.042,544,2.408,545,4.417,546,2.886,547,2.141,548,6.763,549,4.017,550,3.815,551,2.816,552,4.017,553,5.508,554,6.286,555,0.945,556,1.258,557,2.113,558,4.017,4306,4.532,4307,4.532,4308,6.214,4309,4.532,4310,4.532,4311,4.532,4312,4.532,4313,4.532,4314,4.532,4315,4.532,4316,4.532,4317,4.532,4318,4.532]],["title/classes/ThousandsUnit.html",[78,0.11,4319,4.024]],["body/classes/ThousandsUnit.html",[3,0.06,4,0.046,5,0.046,8,0.52,12,0.144,13,0.438,14,0.679,18,0.31,19,0.008,20,1.554,26,0.06,34,1.557,62,2.958,71,2.006,73,0.552,78,0.141,84,2.986,85,1.195,109,1.046,115,1.074,130,3.727,140,0.851,143,0.525,159,0.003,160,0.005,161,0.003,163,1.009,168,0.945,172,1.551,179,1.917,181,0.725,190,3.504,195,0.929,197,1.369,198,0.735,200,0.887,217,3.68,224,1.042,233,0.989,245,2.196,266,0.627,275,1.269,280,0.485,364,1.424,373,2.835,508,2.521,521,2.132,547,1.417,555,0.858,556,1.141,688,2.696,714,1.754,768,1.949,806,3.82,866,2.101,910,3.224,956,3.621,1083,3.738,1147,2.034,1218,3.225,1277,2.889,1288,3.353,1305,2.788,1329,2.788,1351,1.974,1459,3.051,1674,2.742,2016,4.44,2402,4.576,2609,3.033,3630,5.198,3631,5.198,3632,5.395,3633,5.545,3634,5.545,3635,4.928,3636,5.545,3637,4.695,3638,5.283,3641,2.922,3642,2.922,3643,5.198,3644,5.476,3648,2.922,3649,5.476,3650,5.198,3651,4.535,3652,2.922,3653,2.922,3654,4.535,3655,5.487,3656,2.922,3657,2.922,3658,2.922,3659,5.14,3660,5.14,3661,5.14,3662,5.395,3663,4.535,3664,2.922,3665,4.535,3696,2.922,3706,3.727,3839,6.176,3840,2.922,3841,3.565,3842,4.785,3843,5.463,3844,6.499,3846,4.128,3847,4.128,3848,4.128,3849,5.693,3852,3.336,3853,3.336,3854,2.922,3855,4.128,3856,4.128,3857,4.128,3858,2.922,3859,2.922,3860,4.128,3861,4.128,3862,4.128,3863,2.922,4087,3.644,4088,3.644,4090,3.644,4091,3.644,4092,3.644,4093,3.644,4094,3.644,4095,3.644,4096,3.644,4097,3.644,4098,3.644,4099,3.644,4319,3.644,4320,4.111]],["title/classes/Unit.html",[78,0.11,688,1.26]],["body/classes/Unit.html",[3,0.072,4,0.054,5,0.054,8,0.508,12,0.172,13,0.495,14,0.651,18,0.307,19,0.008,20,1.516,26,0.072,34,1.397,62,2.914,71,1.976,73,0.56,78,0.16,84,2.914,85,1.242,109,0.939,115,1.121,130,3.154,140,0.845,159,0.004,160,0.005,161,0.004,163,1.206,168,0.8,172,1.529,181,0.819,190,3.424,192,0.87,195,0.898,197,1.312,198,0.739,200,0.885,224,1.015,245,1.859,266,0.709,275,1.517,280,0.523,364,1.364,373,2.544,508,2.262,521,2.104,547,2.262,551,2.227,555,1.025,688,2.688,768,1.901,806,3.728,866,3.354,910,3.477,956,3.25,1083,3.354,1147,1.983,1218,3.089,1231,2.054,1233,2.166,1277,2.817,1288,3.445,1305,2.36,1329,2.36,1351,3.152,1459,2.975,1674,2.674,2016,4.341,2030,3.713,2402,4.56,2609,2.966,3630,4.98,3631,4.98,3632,4.422,3633,5.314,3634,5.314,3635,4.422,3636,5.314,3637,4.213,3638,5.063,3643,4.98,3644,5.387,3649,5.387,3650,4.98,3651,4.422,3654,4.422,3655,5.428,3659,5.631,3660,5.063,3661,5.063,3662,5.314,3663,4.422,3665,4.422,3706,3.154,3839,4.422,3840,3.494,3841,3.017,3842,4.666,3846,3.494,3847,3.494,3848,3.494,3849,6.012,3854,4.666,3855,4.666,3856,4.666,3857,4.666,3858,3.494,3859,3.494,3860,4.666,3861,4.666,3862,4.666,3863,3.494,4067,4.356,4321,4.915,4322,4.915,4323,6.565,4324,4.915,4325,4.915,4326,4.915,4327,4.915,4328,4.915,4329,4.915,4330,4.915,4331,4.915]],["title/injectables/UnitFormatter.html",[1845,2.319,3671,3.058]],["body/injectables/UnitFormatter.html",[3,0.083,4,0.063,5,0.063,8,0.491,12,0.2,14,0.656,18,0.278,19,0.008,20,1.671,26,0.083,73,0.57,78,0.139,85,1.251,115,0.924,136,2.875,140,0.827,141,2.948,158,1.743,159,0.005,160,0.006,161,0.005,181,0.903,192,1.011,194,3.589,195,0.795,197,1.321,198,0.694,200,0.886,224,0.975,259,0.463,260,1.762,264,4.314,275,1.762,280,0.48,320,4.059,341,2.213,477,0.527,621,5.061,688,2.663,1147,2.186,1354,2.517,1674,2.948,1731,4.059,1776,6.416,1783,6.416,1819,4.059,1845,3.698,1847,3.665,2016,3.822,2018,4.348,2030,6.313,2402,3.822,2609,2.612,3637,3.665,3644,5.494,3649,5.13,3655,5.743,3659,4.645,3660,5.363,3671,5.629,3809,7.689,3936,4.314,4332,8.357,4333,5.711,4334,8.949,4335,7.239,4336,5.711,4337,7.239,4338,5.711,4339,8.357,4340,7.239,4341,8.357,4342,8.357,4343,8.357,4344,8.357,4345,7.239,4346,8.623,4347,5.711,4348,7.239,4349,4.634,4350,5.711,4351,5.711,4352,5.711,4353,5.711]],["title/modules/VcdActionMenuModule.html",[2745,1.564,4354,3.058]],["body/modules/VcdActionMenuModule.html",[3,0.098,4,0.074,5,0.074,19,0.008,26,0.098,63,1.904,78,0.163,159,0.006,160,0.007,161,0.006,164,5.451,259,0.513,260,2.073,477,0.62,618,2.882,651,2.165,656,3.204,1015,2.424,1147,2.029,1250,1.945,1255,3.547,1256,3.672,1261,3.044,1566,2.315,1894,3.808,2609,2.424,2745,2.315,2746,6.173,2747,3.044,2748,3.044,2749,3.982,2750,3.325,2751,3.177,2752,4.228,2759,5.625,2760,3.959,2762,4.372,2763,3.325,2765,3.225,2766,3.325,2767,3.325,2768,3.325,2769,3.325,2770,3.325,2771,4.534,2772,3.432,2773,4.087,2775,4.712,2776,4.534,2777,5.075,4354,6.384,4355,5.954,4356,5.954,4357,6.718,4358,5.954,4359,6.718,4360,5.954]],["title/modules/VcdActivityReporterModule.html",[2745,1.564,4361,3.058]],["body/modules/VcdActivityReporterModule.html",[3,0.096,4,0.073,5,0.073,19,0.008,26,0.096,78,0.16,159,0.005,160,0.007,161,0.005,259,0.514,260,2.023,314,4.207,315,4.207,338,2.331,477,0.605,603,3.074,609,2.113,618,2.813,651,2.113,697,3.074,698,2.16,1147,1.98,1250,1.898,1566,2.259,1894,3.716,2609,2.365,2745,2.259,2747,2.971,2748,2.971,2749,3.941,2750,3.245,2751,2.604,2752,4.184,2760,3.902,2762,4.309,2763,3.245,2765,3.148,2766,3.245,2767,3.245,2768,3.245,2769,3.245,2770,3.245,2771,4.468,2772,3.349,2773,4.027,2775,4.644,2776,4.468,4361,6.424,4362,5.81,4363,5.81,4364,5.81,4365,5.81,4366,6.138,4367,6.138,4368,6.556,4369,5.955,4370,6.556,4371,5.81,4372,6.556,4373,5.81,4374,7.883]],["title/modules/VcdComponentsModule.html",[2745,1.564,4375,3.43]],["body/modules/VcdComponentsModule.html",[3,0.093,4,0.07,5,0.07,19,0.008,26,0.093,60,1.272,63,1.801,78,0.155,159,0.005,160,0.006,161,0.005,259,0.521,263,2.093,315,4.077,477,0.587,618,2.726,651,2.048,794,3.145,1015,2.292,1147,1.919,1261,2.879,1566,2.189,1997,4.28,2609,2.292,2745,2.189,2746,6.168,2747,2.879,2748,2.879,2749,2.962,2750,3.145,2751,2.524,2752,4.128,2759,5.621,2760,3.829,2763,3.145,2764,4.516,2765,3.051,2766,3.145,2767,3.145,2768,3.145,2769,3.145,2770,3.145,2773,3.952,2777,4.8,3090,6.168,3930,3.355,4100,6.508,4354,6.168,4360,5.631,4361,6.168,4366,6.168,4367,6.168,4371,5.631,4373,5.631,4375,7.181,4376,5.631,4377,5.631,4378,6.508,4379,5.876,4380,6.354,4381,6.354,4382,5.631,4383,6.354,4384,6.354,4385,6.354,4386,6.354,4387,5.155,4388,6.354]],["title/modules/VcdDataExporterModule.html",[2745,1.564,4378,3.227]],["body/modules/VcdDataExporterModule.html",[3,0.1,4,0.076,5,0.076,19,0.008,26,0.1,60,1.377,78,0.167,159,0.006,160,0.007,161,0.006,259,0.51,260,2.122,477,0.635,618,2.95,651,2.216,662,3.787,881,2.265,1147,2.077,1250,1.99,1566,2.369,1848,4.412,1997,4.631,2609,2.48,2745,2.369,2747,3.115,2748,3.115,2749,4.021,2750,3.403,2751,2.731,2752,4.269,2760,4.014,2762,3.758,2763,3.403,2764,4.887,2765,3.301,2766,3.403,2767,3.403,2768,3.403,2769,3.403,2770,3.403,2771,4.597,2772,3.513,2773,4.143,2774,5.462,2775,4.777,2776,4.597,4378,6.612,4389,6.094,4390,6.094,4391,6.094,4392,6.875,4393,6.875]],["title/modules/VcdDatagridModule.html",[2745,1.564,3090,3.058]],["body/modules/VcdDatagridModule.html",[3,0.084,4,0.064,5,0.064,19,0.008,26,0.084,63,1.637,73,0.357,78,0.141,159,0.005,160,0.006,161,0.005,247,0.981,259,0.527,260,1.782,266,0.906,315,3.706,477,0.533,618,2.478,651,1.861,659,3.349,664,2.645,666,3.342,668,2.294,670,3.263,671,2.294,672,3.51,673,1.417,674,3.263,699,2.202,700,2.911,794,2.859,881,1.903,962,2.238,990,5.119,1015,2.084,1147,1.744,1250,1.672,1255,3.05,1261,2.617,1264,4.154,1356,4.029,1566,1.99,1688,4.283,2609,2.084,2745,1.99,2747,2.617,2748,2.617,2749,3.725,2750,2.859,2751,2.896,2752,3.955,2759,5.424,2760,3.609,2762,3.985,2763,2.859,2764,4.105,2765,2.773,2766,2.859,2767,2.859,2768,2.859,2769,2.859,2770,2.859,2771,4.133,2772,2.951,2773,3.725,2774,4.911,2775,4.295,2776,4.133,2777,4.363,3090,6.503,3467,6.28,3468,5.182,4080,5.182,4105,5.916,4354,5.952,4361,5.952,4369,5.508,4379,5.67,4382,5.119,4387,4.686,4394,5.119,4395,5.119,4396,5.119,4397,5.119,4398,5.119,4399,7.291,4400,5.119,4401,5.776,4402,5.776,4403,5.776,4404,5.776,4405,5.776,4406,8.391,4407,5.776,4408,5.776,4409,5.776]],["title/classes/VcdDatagridWidgetObject.html",[78,0.11,986,3.684]],["body/classes/VcdDatagridWidgetObject.html",[3,0.071,4,0.054,5,0.054,8,0.522,12,0.171,13,0.636,14,0.723,17,3.568,18,0.327,19,0.008,25,1.806,26,0.071,34,1.038,35,1.382,36,1.017,47,2.469,57,1.411,59,0.936,66,1.77,71,1.221,73,0.585,78,0.119,81,1.961,85,1.099,109,0.697,138,2.426,140,0.587,143,1.118,148,2.151,156,2.34,159,0.004,160,0.007,161,0.004,163,1.196,165,2.907,168,1.063,181,0.815,191,2.593,195,0.916,197,1.456,198,0.765,200,0.835,204,0.562,217,3.56,224,1.014,245,1.844,247,1.25,259,0.407,266,0.526,280,0.488,281,0.81,326,3.123,341,2.853,346,1.936,361,1.642,364,0.899,435,2.645,441,1.221,451,4.597,458,1.936,459,2.805,461,1.276,463,1.815,464,3.66,517,2.272,521,1.507,523,2.701,528,2.34,529,4.017,546,2.784,551,2.209,557,2.272,572,2.49,583,3.336,586,1.642,587,2.998,594,2.53,612,1.421,664,1.382,705,1.93,713,4.398,714,2.805,715,4.024,716,4.19,717,4.19,718,4.024,719,4.19,720,3.568,721,4.19,725,2.664,726,3.283,727,2.209,728,1.472,729,2.664,730,1.606,731,2.49,732,2.574,733,2.664,734,3.283,735,2.664,736,1.411,737,2.664,738,1.985,739,3.892,740,3.644,741,2.784,742,2.664,743,2.85,744,4.612,745,3.283,746,2.664,747,3.283,748,3.044,749,2.664,750,3.283,751,2.958,752,2.664,753,3.283,754,2.664,755,3.283,756,1.8,757,2.664,758,2.664,759,3.283,760,2.664,761,3.128,762,4.024,763,3.283,764,2.664,765,4.024,766,3.568,767,1.472,768,1.411,769,2.659,770,2.664,771,1.985,772,2.664,773,2.664,774,1.936,775,2.664,776,2.664,777,2.664,778,2.091,779,1.844,780,3.135,781,3.568,782,2.664,783,3.283,784,1.472,785,2.664,986,5.297,988,3.955,992,5.973,1019,2.907,1247,4.024,1280,2.728,1293,2.593,4410,7.863,4411,4.874,4412,7.362,4413,4.874,4414,4.874,4415,4.874,4416,4.874,4417,4.874,4418,4.874,4419,4.874,4420,6.529,4421,4.874,4422,4.874,4423,4.874]],["title/modules/VcdErrorBannerModule.html",[2745,1.564,4366,3.058]],["body/modules/VcdErrorBannerModule.html",[3,0.101,4,0.076,5,0.076,19,0.008,26,0.101,78,0.168,159,0.006,160,0.007,161,0.006,259,0.503,260,2.127,358,1.528,477,0.637,618,2.958,651,2.222,677,3.905,1147,2.082,1250,1.996,1566,2.375,1894,3.908,2609,2.487,2745,2.375,2747,3.124,2748,3.124,2749,4.026,2750,3.412,2751,2.738,2752,4.274,2760,4.02,2762,3.768,2763,3.412,2765,3.31,2766,3.412,2767,3.412,2768,3.412,2769,3.412,2770,3.412,2771,4.604,2772,3.522,2773,4.15,2775,4.785,2776,4.604,2909,5.594,2952,6.11,4366,6.269,4369,6.136,4424,6.11,4425,6.11,4426,6.11,4427,6.894]],["title/modules/VcdFormModule.html",[2745,1.564,4379,2.913]],["body/modules/VcdFormModule.html",[3,0.093,4,0.07,5,0.07,19,0.008,26,0.093,78,0.155,140,0.571,159,0.005,160,0.006,161,0.005,259,0.518,260,1.962,266,0.687,477,0.587,618,2.728,651,2.049,680,3.737,681,2.461,683,3.559,688,2.148,691,3.559,694,3.475,881,2.095,1147,1.921,1250,1.841,1566,2.191,1894,3.605,2418,3.904,2609,2.294,2745,2.191,2747,2.881,2748,2.881,2749,4.148,2750,3.148,2751,3.313,2752,4.129,2760,3.831,2762,3.476,2763,3.148,2765,3.053,2766,3.148,2767,3.148,2768,3.148,2769,3.148,2770,3.148,2771,4.387,2772,3.249,2773,3.954,2774,5.213,2775,4.559,2776,4.387,3228,5.16,3268,4.804,3355,4.804,3453,4.283,3454,4.751,3671,6.094,3672,5.16,3673,4.283,4105,6.279,4379,6.153,4428,5.636,4429,5.636,4430,6.359,4431,5.636,4432,5.636,4433,6.359]],["title/interfaces/VcdFormlyFieldConfig.html",[0,0.177,4434,3.684]],["body/interfaces/VcdFormlyFieldConfig.html",[0,0.292,2,1.312,3,0.088,4,0.067,5,0.067,8,0.374,9,2.471,12,0.211,13,0.565,14,0.737,18,0.325,19,0.008,26,0.124,27,1.99,50,1.078,66,1.453,73,0.504,96,1.17,109,1.072,115,1.041,140,0.674,152,2.314,159,0.005,160,0.006,161,0.005,168,1.327,198,0.712,204,0.559,243,2.461,259,0.501,266,0.652,326,3.239,604,1.513,612,1.541,619,2.471,652,1.453,673,1.84,681,2.126,685,3.16,686,2.461,687,3.16,688,2.434,689,3.16,823,3.302,824,3.877,838,3.712,1231,2.525,1233,2.663,1253,3.134,1254,2.592,1332,2.4,1363,2.901,2067,3.877,2344,3.712,2345,3.424,2389,4.069,2418,3.709,3278,3.877,3404,4.902,3405,4.902,3424,3.877,3425,3.877,3436,4.564,3437,4.294,3438,4.294,3454,4.603,3673,4.069,3677,4.294,3680,4.564,4434,7.114,4435,4.294,4436,4.564,4437,7.558,4438,7.771,4439,7.558,4440,7.558,4441,7.251,4442,7.251,4443,6.084,4444,6.646,4445,4.902,4446,4.902,4447,4.902,4448,5.354,4449,7.227,4450,6.084,4451,4.564,4452,4.902,4453,4.902,4454,4.902]],["title/modules/VcdFormlyModule.html",[2745,1.564,4455,3.43]],["body/modules/VcdFormlyModule.html",[3,0.09,4,0.068,5,0.068,8,0.382,9,2.832,14,0.51,18,0.216,19,0.008,25,1.866,26,0.09,50,0.735,78,0.15,85,0.864,99,1.212,107,6.169,115,0.971,140,0.555,143,0.971,159,0.005,160,0.006,161,0.005,181,0.771,195,0.618,197,1.027,198,0.54,224,0.684,259,0.519,260,1.907,266,0.667,280,0.409,408,2.723,477,0.571,612,1.117,618,2.651,651,1.991,685,3.482,686,3.097,687,3.482,688,2.111,689,3.482,881,2.036,1147,1.866,1297,2.723,1566,2.129,1894,3.502,2024,6.169,2420,6.169,2609,2.229,2745,2.129,2747,2.8,2748,2.8,2749,3.84,2750,3.058,2751,3.02,2752,3.764,2760,3.764,2762,4.156,2763,3.058,2765,2.967,2766,3.058,2767,3.058,2768,3.058,2769,3.058,2770,3.058,2771,4.31,2772,3.157,2773,4.208,2774,5.122,2776,4.31,3095,5.476,3424,4.88,3425,3.965,3436,4.668,3454,4.668,3673,4.162,4379,5.766,4387,5.013,4435,5.404,4443,7.386,4445,5.013,4446,5.013,4447,5.013,4451,6.223,4455,7.137,4456,5.476,4457,5.476,4458,6.178,4459,5.476,4460,6.178,4461,7.604,4462,6.178,4463,8.237,4464,6.178,4465,7.604,4466,7.604,4467,6.178,4468,6.178,4469,6.739,4470,6.178]],["title/interfaces/VcdFormlyTemplateOptions.html",[0,0.177,4441,3.684]],["body/interfaces/VcdFormlyTemplateOptions.html",[0,0.281,2,1.235,3,0.083,4,0.063,5,0.063,8,0.352,9,1.873,12,0.199,13,0.544,14,0.789,18,0.33,19,0.008,26,0.122,27,1.873,50,1.064,52,1.358,66,1.736,73,0.565,96,1.372,109,1.032,115,1.013,140,0.75,152,2.716,159,0.005,160,0.006,161,0.005,168,1.291,198,0.693,204,0.543,243,2.316,259,0.495,266,0.614,326,3.15,604,1.808,612,1.508,619,2.613,652,1.736,673,1.771,681,2.248,685,3.073,686,2.316,687,3.073,688,2.536,689,3.073,823,4.56,824,5.354,838,3.573,1231,2.376,1233,2.506,1253,3.487,1254,2.439,1332,2.258,1363,3.466,2067,5.354,2344,4.13,2345,3.223,2389,5.62,2418,3.49,3278,5.354,3404,6.769,3405,6.769,3424,3.648,3425,3.648,3436,4.295,3437,5.93,3438,5.93,3454,4.431,3673,3.83,3677,4.041,3680,6.303,4434,5.857,4435,4.041,4436,4.295,4437,6.397,4438,7.394,4439,5.039,4440,5.039,4441,6.769,4442,6.435,4443,5.857,4444,7.029,4445,4.613,4446,4.613,4447,4.613,4448,6.397,4449,7.029,4450,5.857,4451,4.295,4452,4.613,4453,4.613,4454,4.613]],["title/modules/VcdLoadingIndicatorModule.html",[2745,1.564,4367,3.058]],["body/modules/VcdLoadingIndicatorModule.html",[3,0.101,4,0.076,5,0.076,19,0.008,26,0.101,78,0.168,159,0.006,160,0.007,161,0.006,259,0.503,260,2.127,374,2.174,477,0.637,618,2.958,651,2.222,692,4.006,1147,2.082,1250,1.996,1566,2.375,1894,3.908,2609,2.487,2745,2.375,2747,3.124,2748,3.124,2749,4.026,2750,3.412,2751,2.738,2752,4.274,2760,4.02,2762,3.768,2763,3.412,2765,3.31,2766,3.412,2767,3.412,2768,3.412,2769,3.412,2770,3.412,2771,4.604,2772,3.522,2773,4.15,2775,4.785,2776,4.604,3531,5.208,4367,6.269,4369,6.136,4471,6.11,4472,6.11,4473,6.11,4474,6.894,4475,6.894]],["title/classes/WidgetFinder.html",[78,0.11,3081,2.913]],["body/classes/WidgetFinder.html",[0,0.283,3,0.051,4,0.039,5,0.039,8,0.321,12,0.123,13,0.592,14,0.562,18,0.319,19,0.008,20,1.199,22,1.214,25,0.865,26,0.111,34,0.75,35,0.999,36,1.084,41,2.261,50,0.98,52,0.574,57,2.512,59,0.904,66,1.638,71,1.301,73,0.552,77,1.435,78,0.15,81,2.23,85,1.285,87,1.825,91,2.079,99,0.691,109,0.504,113,1.4,114,0.919,115,0.663,133,1.042,134,2.261,138,2.102,140,0.317,148,2.712,156,1.692,158,0.735,159,0.003,160,0.006,161,0.003,163,0.865,165,2.707,168,0.574,172,1.092,179,1.643,181,0.77,190,1.333,192,1.285,195,0.76,197,1.207,198,0.634,200,0.629,203,1.512,204,0.574,216,1.366,224,0.804,245,2.972,247,1.048,259,0.342,266,0.937,272,0.901,280,0.555,281,0.864,326,2.705,327,2.922,341,1.366,346,2.451,358,0.781,361,1.522,364,1.139,392,1.787,408,1.553,433,3.773,435,2.529,436,1.744,438,2.806,441,1.545,451,4.396,456,2.261,458,1.4,459,2.749,461,1.181,463,1.771,464,3.499,466,2.013,477,0.325,478,3.861,479,1.926,480,2.076,481,1.926,483,2.743,485,3.27,506,1.861,509,2.261,521,2.004,522,4.919,523,1.161,528,1.692,529,2.654,532,2.84,546,2.747,550,2.163,551,1.597,555,0.735,556,0.978,557,2.422,561,4.157,566,2.013,567,3.5,568,3.5,569,4.588,570,2.401,571,3.5,572,3.48,573,3.5,574,2.77,578,3.96,583,2.354,584,2.261,585,3.5,586,2.079,587,3.566,588,3.5,591,2.374,592,2.163,593,2.374,594,2.944,595,4.012,596,2.62,599,2.229,606,2.064,713,2.495,714,2.529,715,1.926,718,1.926,720,1.926,725,1.926,727,3.086,728,1.864,729,1.926,730,1.161,731,3.153,732,1.861,733,1.926,735,1.926,736,1.02,737,1.926,738,1.435,739,3.371,740,3.055,741,2.334,742,1.926,743,2.737,744,4.153,746,1.926,748,2.422,749,1.926,751,2.354,752,1.926,754,1.926,756,1.301,757,1.926,758,1.926,760,1.926,762,3.373,764,1.926,765,3.723,766,3.373,767,2.193,768,1.02,769,2.116,770,2.84,771,2.116,772,1.926,773,1.926,774,2.451,775,1.926,776,1.926,777,1.926,778,2.922,779,1.333,780,2.495,781,2.84,782,1.926,784,1.064,785,1.926,806,1.553,809,1.271,865,1.861,906,2.163,947,1.744,953,1.553,1006,3.153,1051,1.4,1074,1.271,1271,1.435,1313,1.692,1322,1.692,1326,1.553,1524,3.773,1628,1.919,1683,1.02,1733,2.163,1744,1.744,1758,1.8,1760,1.861,1766,1.926,1794,2.163,1924,2.374,2026,3.334,2172,1.926,2188,3.5,2266,1.8,2298,1.744,2633,2.076,2726,2.374,2803,2.374,3081,4.371,3100,3.96,3114,5.545,3115,4.66,3116,4.386,3117,2.505,3118,2.505,3119,2.505,3120,2.505,3121,5.732,3122,2.505,3123,2.505,3124,3.693,3125,2.505,3126,2.505,3127,4.386,3128,2.505,3129,4.386,3130,2.374,3131,2.505,3132,4.386,3133,2.505,3134,2.374,3135,2.505,3136,2.374,3137,2.505,3138,2.505,3139,2.505,3140,2.505,3141,2.505,3142,3.693,3143,2.505,3144,2.374,3145,2.505,3146,2.261,3147,2.505,3148,2.505,3149,2.374,3150,2.505,3151,2.505,3152,2.374,3153,2.505,3154,2.505,3155,2.374,3156,2.505,3157,2.505,3158,3.693,3159,3.693,3160,2.505,3161,2.505,3162,4.386,3163,3.693,3164,4.386,3165,2.505,3166,4.386,3167,2.505,3168,2.505,3169,2.505,3170,2.505,3171,2.505,3172,2.505,3173,2.505,3174,2.505,3175,2.505,3176,2.505,3177,2.505,3178,2.374,3179,2.505,3180,2.505,3181,2.505,3182,2.505,3183,2.505,3184,2.505,3185,3.693,3186,2.261,3187,2.163,3188,2.505,3189,2.505,3190,2.505,3191,2.505,3192,2.505,3193,2.505,3194,2.505,3195,2.505,3196,2.505,3197,3.693,3198,2.505,3199,3.693,3200,4.386,3201,5.4,3202,2.505,3203,4.386,3204,2.505,3205,2.505,3206,2.505,3207,2.505,3208,2.505,3209,2.505,3210,2.505,3211,2.505,3212,2.505,3213,2.505,3214,2.505,3215,2.505,3216,4.386,3217,2.505,3218,2.505,3219,2.505,3220,2.505,3221,2.505,3222,2.505,3223,2.505,3224,2.505,3225,2.374,4476,5.195,4477,3.524,4478,3.524,4479,3.524,4480,3.524,4481,3.524,4482,3.524]],["title/classes/WidgetObject.html",[78,0.11,713,2.18]],["body/classes/WidgetObject.html",[0,0.263,3,0.043,4,0.033,5,0.033,8,0.459,12,0.104,13,0.616,14,0.662,17,2.503,18,0.32,19,0.008,20,0.688,22,1.027,25,0.731,26,0.104,34,0.975,35,1.298,36,1.163,41,2.939,50,0.936,52,0.485,57,2.398,59,0.936,66,1.786,71,1.397,73,0.575,77,1.214,78,0.136,81,2.234,85,1.276,87,1.354,91,2.109,99,0.585,109,0.655,113,1.819,114,1.195,115,0.585,133,1.354,134,2.939,138,2.365,140,0.501,143,0.948,148,2.69,156,2.678,158,0.622,159,0.002,160,0.006,161,0.002,163,0.731,165,2.891,168,0.485,172,0.528,179,1.39,181,0.781,190,1.127,192,1.262,195,0.817,197,1.307,198,0.713,200,0.783,203,1.965,204,0.607,216,1.155,224,0.929,245,2.555,247,1.211,259,0.309,266,0.906,272,0.762,280,0.541,281,0.761,326,3.044,327,2.393,341,2.161,346,2.215,358,0.661,361,1.487,364,1.029,392,1.812,408,2.019,433,3.978,435,2.586,436,1.475,438,2.634,441,1.692,451,4.562,456,1.913,458,1.819,459,2.8,461,1.287,463,1.819,464,3.66,477,0.275,478,3.829,479,1.629,480,1.756,481,1.629,483,2.418,485,2.678,506,2.418,509,2.939,517,1.39,521,1.714,522,4.549,523,1.509,528,2.199,529,3.643,532,2.503,546,2.555,550,1.83,551,2.075,555,0.622,556,0.828,557,2.601,561,2.008,566,1.155,567,2.008,568,2.008,569,3.085,570,2.207,571,2.008,572,3.643,573,2.008,574,2.381,578,3.579,583,2.075,584,1.913,585,2.008,586,1.879,587,3.588,588,2.008,591,2.008,592,1.83,593,2.008,594,2.97,595,3.286,596,2.573,599,1.965,606,2.215,713,2.678,714,2.741,715,3.421,716,2.939,717,2.939,718,3.421,719,2.939,720,3.049,721,2.939,725,2.503,727,3.365,728,2.243,729,3.049,730,1.838,731,3.198,732,2.945,733,2.503,735,2.503,736,1.326,737,2.503,738,1.866,739,3.794,740,3.53,741,2.697,742,2.503,743,2.842,744,4.528,746,2.503,748,2.918,749,2.503,751,2.836,752,2.503,754,2.503,756,1.692,757,2.503,758,2.503,760,2.503,761,1.913,762,3.898,764,2.503,765,4.059,766,3.692,767,2.154,768,1.326,769,2.55,770,3.049,771,2.272,772,2.503,773,2.503,774,2.683,775,2.503,776,2.503,777,2.503,778,3.288,779,1.732,780,3.005,781,3.421,782,2.503,784,1.383,785,2.503,806,1.314,809,1.075,865,1.574,906,2.812,933,2.642,947,1.475,953,1.314,1006,2.34,1051,1.184,1074,1.075,1271,1.866,1313,2.199,1322,2.199,1326,1.314,1524,3.243,1628,1.692,1683,0.863,1733,2.812,1744,1.475,1758,1.523,1760,1.574,1766,1.629,1794,2.812,1924,2.008,2026,1.913,2172,2.503,2188,3.085,2266,2.34,2298,1.475,2633,1.756,2726,3.085,2803,2.008,3081,3.579,3100,4.576,3114,4.55,3115,4.335,3116,3.965,3117,2.119,3118,3.255,3119,3.255,3120,3.255,3121,5.279,3122,3.255,3123,3.255,3124,4.449,3125,3.255,3126,3.255,3127,4.449,3128,3.255,3129,4.801,3130,3.085,3131,3.255,3132,5.069,3133,3.255,3134,3.085,3135,3.255,3136,3.085,3137,3.255,3138,3.255,3139,3.255,3140,3.255,3141,3.255,3142,4.449,3143,3.255,3144,3.085,3145,3.255,3146,2.939,3147,3.255,3148,3.255,3149,3.085,3150,3.255,3151,3.255,3152,3.085,3153,2.119,3154,2.119,3155,2.008,3156,2.119,3157,2.119,3158,3.255,3159,3.255,3160,2.119,3161,2.119,3162,3.965,3163,3.255,3164,3.965,3165,2.119,3166,3.965,3167,2.119,3168,2.119,3169,2.119,3170,2.119,3171,2.119,3172,2.119,3173,2.119,3174,2.119,3175,2.119,3176,2.119,3177,2.119,3178,2.008,3179,2.119,3180,2.119,3181,2.119,3182,2.119,3183,2.119,3184,2.119,3185,3.255,3186,1.913,3187,1.83,3188,2.119,3189,2.119,3190,2.119,3191,2.119,3192,2.119,3193,2.119,3194,2.119,3195,2.119,3196,2.119,3197,2.119,3198,2.119,3199,2.119,3200,2.119,3201,4.449,3202,2.119,3203,3.965,3204,2.119,3205,2.119,3206,2.119,3207,2.119,3208,2.119,3209,2.119,3210,2.119,3211,2.119,3212,2.119,3213,2.119,3214,2.119,3215,2.119,3216,3.965,3217,2.119,3218,2.119,3219,2.119,3220,2.119,3221,2.119,3222,2.119,3223,2.119,3224,2.119,3225,2.008,4203,2.642,4483,2.981,4484,2.981,4485,2.981,4486,2.981,4487,2.981,4488,2.981,4489,2.981,4490,2.981,4491,2.981,4492,2.981]],["title/contributing.html",[2251,2.066,4493,3.349,4494,3.349]],["body/contributing.html",[4,0.066,19,0.007,20,1.369,47,2.242,87,2.191,111,2.09,117,3.805,127,3.211,138,2.287,159,0.005,160,0.006,161,0.005,247,1.006,251,5.254,281,1.479,321,2.986,328,3.993,373,3.133,375,4.479,392,2.341,455,4.81,566,2.297,570,2.09,612,1.461,688,1.646,736,2.575,739,3.669,748,2.764,774,2.355,778,3.18,809,2.674,860,2.847,870,1.646,887,3.805,910,2.613,937,2.613,1036,2.935,1074,2.139,1113,2.847,1114,2.415,1168,4.479,1172,4.756,1197,3.361,1222,3.493,1271,2.415,1390,3.24,1399,4.051,1401,4.051,1599,3.24,1740,3.493,1744,2.935,1758,4.131,1819,4.214,1881,3.361,1957,5.599,1999,4.81,2018,3.559,2023,4.81,2042,5.189,2089,4.214,2172,3.24,2297,4.051,2298,3.669,2402,3.13,2481,4.81,2507,4.214,2521,5.254,2579,3.993,2609,2.139,3186,4.756,3391,5.254,3465,4.81,3577,5.268,3933,4.479,3956,4.479,4349,6.56,4494,5.254,4495,5.254,4496,5.928,4497,5.928,4498,7.411,4499,5.928,4500,5.928,4501,5.928,4502,8.471,4503,7.411,4504,5.928,4505,5.928,4506,5.928,4507,7.411,4508,5.928,4509,5.928,4510,5.928,4511,5.928,4512,5.928,4513,6.569,4514,7.507,4515,8.72,4516,5.928,4517,8.298,4518,7.411,4519,7.728,4520,5.928,4521,5.928,4522,7.997,4523,5.928,4524,5.928,4525,5.928,4526,5.928,4527,5.928,4528,5.928,4529,5.928,4530,8.085,4531,5.928,4532,5.928,4533,8.085,4534,5.254,4535,5.928,4536,5.928,4537,5.928,4538,5.928,4539,5.928,4540,8.471,4541,5.928,4542,6.569,4543,5.928,4544,7.411,4545,7.411,4546,5.928,4547,5.928,4548,7.411,4549,7.411,4550,5.928,4551,8.332,4552,5.928,4553,5.928,4554,7.411,4555,6.569,4556,8.085,4557,8.085,4558,5.928,4559,5.928,4560,5.254,4561,7.411,4562,5.254,4563,7.411,4564,6.569,4565,5.928,4566,5.928,4567,7.411,4568,5.928,4569,5.928,4570,5.928,4571,5.928,4572,5.928,4573,6.569,4574,5.928,4575,7.411,4576,5.928,4577,5.928,4578,5.928,4579,5.928,4580,5.928,4581,6.569,4582,5.928,4583,5.928]],["title/dependencies.html",[2748,2.477,4584,3.779]],["body/dependencies.html",[13,0.496,19,0.008,48,6.869,159,0.005,160,0.007,161,0.005,439,4.676,477,0.729,480,5.173,481,4.799,652,1.582,881,2.603,1250,2.287,1254,2.822,1799,5.967,2748,3.579,2772,4.036,3186,4.222,3424,4.222,3425,4.222,3970,5.615,3971,5.615,4400,7.001,4585,7.899,4586,9.299,4587,7.899,4588,8.781,4589,6.579,4590,7.899,4591,7.899,4592,6.579,4593,6.579,4594,6.579,4595,5.83,4596,6.579,4597,6.579,4598,6.579,4599,6.579,4600,6.579,4601,6.579,4602,6.579,4603,6.579,4604,6.579,4605,5.83,4606,6.579,4607,6.579,4608,6.579,4609,6.579,4610,6.579,4611,6.579,4612,5.83,4613,6.579,4614,6.579,4615,6.579,4616,6.579,4617,6.579,4618,6.579,4619,6.579,4620,6.579,4621,6.579,4622,6.579,4623,6.579,4624,6.579,4625,6.579,4626,6.579,4627,6.579,4628,6.579,4629,6.579,4630,6.579,4631,6.579,4632,6.579,4633,5.83,4634,9.299]],["title/miscellaneous/enumerations.html",[4635,2.545,4636,4.846]],["body/miscellaneous/enumerations.html",[6,4.238,7,6.272,12,0.196,15,4.027,18,0.276,19,0.008,20,1.652,22,2.466,24,5.807,25,1.756,27,2.358,28,3.657,30,1.494,34,1.678,37,5.807,42,3.155,44,5.807,49,4.552,63,2.029,64,2.307,73,0.443,75,4.468,87,2.116,93,2.473,100,3.18,102,2.915,109,1.023,111,1.978,119,4.238,137,2.866,138,1.731,141,2.915,145,3.6,151,4.821,152,1.731,153,4.593,154,2.844,155,3.337,156,2.694,157,4.552,158,1.17,159,0.005,160,0.006,161,0.005,200,0.897,243,2.285,247,0.952,338,1.659,555,1.17,566,2.174,609,1.808,612,1.293,619,1.848,671,2.843,673,1.756,681,1.59,686,2.285,698,1.848,748,2.615,774,2.228,866,3.657,1014,3.444,1015,2.844,1016,5.602,1026,3.337,1027,5.592,1031,4.821,1032,4.238,1033,2.955,1034,3.562,1035,4.238,1036,4.11,1037,4.238,1038,4.216,1039,4.238,1040,5.954,1041,4.552,1042,5.954,1043,4.552,1044,5.058,1045,4.552,1135,3.912,1147,1.694,1227,2.962,1231,3.294,1233,3.155,1265,1.731,1268,3.543,1269,3.912,1270,3.21,1293,2.843,1294,3.912,1297,3.155,1299,3.901,1310,3.066,1311,3.912,1344,1.978,1713,4.238,1714,5.407,1718,3.444,1720,5.407,1848,3.6,1997,3.779,1998,5.807,2019,5.807,2020,5.807,2021,5.807,2022,5.807,2062,3.912,2194,5.087,2202,3.779,2219,3.337,2307,4.242,2419,5.807,2487,5.407,2494,3.6,2495,4.238,2532,3.987,2533,5.592,2534,5.954,2535,4.552,2538,4.552,2551,4.552,2609,2.024,2610,4.552,2611,5.807,2612,4.238,2613,5.807,2616,4.552,2618,4.821,3227,4.238,3228,4.552,3229,6.343,3241,6.343,3263,4.972,3531,4.238,3532,5.807,3552,6.343,3677,3.987,4435,3.987,4436,5.407,4442,5.807,4450,5.807,4635,3.779,4636,4.972,4637,6.395,4638,6.343,4639,6.986,4640,5.61,4641,6.395,4642,4.972,4643,5.807,4644,5.61,4645,4.972,4646,5.61]],["title/index.html",[12,0.132,2251,2.066,4493,3.349]],["body/index.html",[4,0.078,5,0.078,19,0.006,35,1.544,47,2.656,84,1.876,111,2.894,118,1.794,127,2.163,140,0.631,159,0.005,160,0.006,161,0.005,198,0.613,204,0.582,243,2.218,260,1.68,281,0.905,323,5.235,328,5.235,354,3.871,373,3.512,392,2.25,439,6.185,512,2.4,544,2.11,556,2.158,586,1.835,604,2.217,612,1.405,615,4.137,688,1.949,736,2.377,748,2.539,778,3.335,837,3.871,908,3.495,937,2.4,993,2.468,1005,2.4,1048,4.114,1067,4.114,1074,2.533,1113,3.732,1197,4.654,1222,3.208,1288,2.218,1321,2.695,1323,2.976,1344,1.92,1380,3.476,1404,4.756,1475,2.976,1539,2.976,1761,4.506,1818,5.871,1879,5.04,1957,5.871,1976,7.06,1977,7.06,2015,4.418,2042,4.506,2297,4.756,2298,4.064,2304,4.506,2449,6.895,2494,5.269,2609,1.965,2707,3.871,2747,2.468,2748,2.468,2765,2.615,3144,3.668,3149,3.668,3152,3.668,3309,6.888,3315,4.826,3385,8.243,3679,3.668,3728,5.235,3963,4.114,3970,3.871,3971,3.871,3980,4.114,3991,4.114,4016,5.871,4040,4.114,4116,4.418,4349,5.698,4495,6.224,4513,6.224,4514,6.224,4517,4.826,4519,7.532,4522,6.224,4534,7.277,4542,4.826,4551,7.532,4555,4.826,4560,6.224,4562,4.826,4564,4.826,4573,4.826,4581,4.826,4595,4.826,4605,7.532,4612,4.826,4633,4.826,4647,7.772,4648,5.445,4649,5.445,4650,5.445,4651,5.445,4652,7.022,4653,5.445,4654,7.022,4655,7.022,4656,8.21,4657,8.498,4658,5.445,4659,5.445,4660,5.445,4661,5.445,4662,9.202,4663,5.445,4664,7.022,4665,5.445,4666,7.022,4667,5.445,4668,5.445,4669,5.445,4670,5.445,4671,7.022,4672,8.21,4673,5.445,4674,5.445,4675,5.445,4676,5.445,4677,5.445,4678,5.445,4679,5.445,4680,5.445,4681,7.772,4682,5.445,4683,5.445,4684,5.445,4685,5.445,4686,5.445,4687,5.445,4688,5.445,4689,8.21,4690,7.022,4691,5.445,4692,5.445,4693,5.445,4694,5.445,4695,5.445,4696,5.445,4697,5.445,4698,8.701,4699,5.445,4700,7.772,4701,7.022,4702,5.445,4703,5.445,4704,5.445,4705,5.445,4706,5.445,4707,5.445,4708,5.445,4709,5.445,4710,5.445,4711,5.445,4712,7.022,4713,7.022,4714,8.21,4715,7.022,4716,7.022,4717,7.022,4718,7.022,4719,7.022,4720,7.022,4721,7.022,4722,8.21,4723,5.445,4724,5.445,4725,5.445,4726,5.445,4727,7.022,4728,8.21,4729,7.022,4730,5.445,4731,5.445,4732,5.445,4733,5.445,4734,5.445,4735,5.445,4736,5.445,4737,5.445]],["title/modules.html",[2747,2.819]],["body/modules.html",[19,0.007,159,0.006,160,0.007,161,0.006,481,5.243,1732,4.901,2746,4.778,2747,3.214,2759,4.354,3090,4.778,4080,5.042,4100,5.042,4354,4.778,4361,4.778,4366,4.778,4367,4.778,4375,5.358,4378,5.042,4379,4.552,4455,5.358,4738,9.593,4739,9.593]],["title/overview.html",[4740,5.514]],["body/overview.html",[2,1.108,19,0.008,159,0.004,160,0.006,161,0.004,163,1.252,208,3.378,603,2.809,604,1.278,618,2.189,651,1.645,656,2.937,659,3.145,662,3.462,664,2.471,666,2.849,670,2.782,672,2.991,674,2.782,675,3.555,677,3.55,680,3.555,683,3.386,685,2.918,687,2.918,689,2.918,691,3.386,692,3.643,694,3.306,697,2.809,699,1.541,700,2.481,702,3.462,704,3.55,707,3.297,1147,1.541,1287,2.694,1847,3.275,2537,4.14,2609,1.841,2745,1.758,2746,6.328,2747,2.312,2748,2.312,2749,2.379,2750,2.526,2751,2.027,2752,2.526,2753,4.522,2754,4.522,2755,4.522,2756,4.522,2757,4.522,2758,6.111,2759,5.628,2760,3.332,3090,6.468,3467,5.353,3468,3.627,3598,5.353,3671,5.073,4080,6.288,4081,4.522,4082,4.522,4083,4.522,4100,6.362,4101,4.522,4102,4.522,4103,4.522,4180,4.522,4181,4.522,4182,4.522,4354,6.24,4355,4.522,4356,4.522,4358,4.522,4361,6.31,4362,4.522,4363,4.522,4364,4.522,4365,4.522,4366,6.087,4367,6.087,4375,6.926,4376,4.522,4377,4.522,4378,6.362,4379,6.083,4389,4.522,4390,4.522,4391,4.522,4394,4.522,4395,4.522,4396,4.522,4397,4.522,4424,4.522,4425,4.522,4426,4.522,4428,4.522,4429,4.522,4431,4.522,4455,6.827,4456,4.522,4457,4.522,4471,4.522,4472,4.522,4473,4.522,4740,4.522,4741,5.103,4742,5.103,4743,5.103,4744,5.103]],["title/miscellaneous/typealiases.html",[4635,2.545,4745,5.467]],["body/miscellaneous/typealiases.html",[6,5.106,7,6.065,12,0.237,18,0.321,19,0.008,51,5.485,52,1.442,53,4.102,55,2.619,58,3.579,73,0.496,78,0.164,96,1.054,113,2.685,115,0.863,140,0.769,159,0.007,160,0.007,161,0.006,165,2.951,200,0.624,253,4.73,260,2.086,262,4.149,263,2.227,280,0.448,433,3.246,436,4.385,469,4.73,623,4.239,671,3.189,736,1.957,905,4.804,926,5.706,941,6.065,943,5.106,972,2.825,1014,4.149,1015,2.896,1016,5.706,1157,6.514,1253,2.825,1266,3.355,1343,3.453,1755,3.982,1785,5.485,1786,6.514,2219,3.151,2307,4.102,2397,5.106,2399,6.514,2954,5.485,2955,6.514,3006,7.115,3136,4.553,3531,5.106,3532,6.514,3545,7.115,3929,3.695,3930,3.569,4134,6.514,4635,4.553,4637,5.485,4641,5.485,4642,5.991,4643,5.485,4746,6.759,4747,6.759,4748,8.564,4749,6.759,4750,5.991,4751,6.759,4752,6.759,4753,6.759,4754,6.759]],["title/miscellaneous/variables.html",[4635,2.545,4755,4.846]],["body/miscellaneous/variables.html",[5,0.04,12,0.126,14,0.297,17,1.968,18,0.329,19,0.008,30,1.664,38,2.121,42,1.587,50,0.429,59,0.966,71,1.322,73,0.543,74,1.679,75,3.542,83,1.33,85,0.738,87,1.561,101,1.406,102,2.15,103,2.921,108,1.135,109,0.515,113,2.096,115,0.798,133,1.561,140,0.766,143,1.212,145,2.311,154,2.986,158,1.528,159,0.003,160,0.004,161,0.003,164,2.921,165,1.241,166,3.191,167,3.987,198,0.64,200,0.874,204,0.428,234,1.088,247,0.611,266,0.791,267,4.678,268,3.191,272,2.116,280,0.538,281,1.218,286,1.904,361,1.057,364,0.664,373,1.395,377,1.362,392,1.042,408,1.587,433,2.534,435,2.213,436,2.613,441,0.902,463,1.438,517,1.679,523,1.186,555,1.435,559,5.07,566,1.395,570,1.861,574,1.861,586,1.778,595,2.121,612,0.954,633,1.594,650,1.901,653,2.059,659,1.299,666,1.362,667,1.951,668,2.482,670,1.33,672,1.43,674,1.33,680,1.43,681,2.077,683,1.362,685,2.045,687,2.045,688,1.735,689,2.045,691,1.362,694,1.33,699,1.594,700,1.186,705,2.448,707,1.362,741,1.996,743,2.17,756,2.541,801,3.191,802,4.678,808,2.121,810,2.041,815,3.093,870,1.465,882,4.34,889,3.191,955,1.701,956,1.782,963,2.425,1014,2.21,1015,2.762,1016,4.441,1019,1.819,1020,2.425,1021,2.096,1023,2.041,1024,2.921,1026,2.461,1027,5.812,1031,3.555,1032,4.721,1033,2.153,1034,2.952,1035,5.198,1036,3.093,1037,5.198,1038,3.109,1039,5.198,1046,2.921,1047,4.283,1048,2.72,1049,2.921,1050,2.921,1051,1.43,1052,3.415,1053,2.921,1054,2.921,1055,1.505,1056,4.283,1057,2.921,1058,2.754,1059,5.07,1060,2.921,1061,3.555,1062,2.921,1063,2.921,1064,2.921,1065,2.425,1066,2.921,1067,2.72,1068,1.729,1069,2.921,1070,2.921,1071,2.921,1072,2.921,1073,2.921,1074,1.299,1075,5.07,1076,4.283,1077,2.921,1078,4.283,1079,2.921,1080,4.283,1081,2.311,1082,2.921,1083,1.839,1084,5.07,1085,2.921,1086,2.921,1087,2.921,1088,4.283,1089,4.283,1090,2.921,1091,5.07,1092,2.559,1093,2.921,1094,2.921,1095,2.921,1096,2.921,1097,2.921,1098,4.283,1099,2.921,1100,5.07,1101,2.921,1102,2.921,1103,5.583,1104,2.559,1105,2.921,1106,4.283,1107,2.921,1108,2.921,1109,2.921,1110,2.921,1111,2.921,1112,2.921,1113,2.534,1114,1.467,1115,2.921,1116,2.921,1117,4.283,1118,2.921,1119,4.283,1120,5.583,1121,4.283,1122,2.461,1123,4.283,1124,1.782,1125,4.283,1126,2.921,1127,2.311,1128,2.921,1129,2.311,1130,2.921,1131,2.921,1132,2.921,1133,2.921,1134,2.921,1135,1.968,1136,2.921,1137,2.559,1138,2.72,1139,2.921,1140,2.921,1141,2.921,1142,4.283,1143,5.07,1144,3.987,1145,2.921,1146,2.921,1147,2.313,1148,2.921,1149,2.534,1150,2.921,1151,4.283,1152,5.583,1153,2.559,1154,2.559,1155,2.559,1156,2.559,1221,2.921,1222,2.121,1223,2.265,1224,2.921,1225,2.921,1227,1.901,1233,1.587,1253,1.505,1265,1.928,1270,2.15,1271,2.15,1272,3.415,1273,1.968,1274,2.885,1275,1.968,1276,1.901,1277,1.545,1278,1.782,1279,1.679,1280,1.505,1281,2.885,1282,2.697,1283,2.885,1284,1.968,1285,1.968,1286,2.885,1287,1.901,1288,2.15,1289,1.968,1290,1.43,1291,2.885,1292,1.968,1356,2.534,1688,2.613,1731,2.559,1749,2.72,1804,2.121,1818,3.987,1848,2.311,1849,3.191,1850,4.678,1895,2.921,1908,4.678,1930,2.559,1948,4.283,1974,5.583,1991,3.191,2219,2.461,2220,3.987,2266,1.839,2276,2.72,2277,2.72,2278,2.72,2279,3.987,2280,2.72,2298,1.782,2307,2.697,2309,2.425,2311,2.425,2346,1.839,2354,2.425,2453,3.987,2454,2.72,2456,2.72,2532,2.559,2533,3.555,2534,3.987,2539,3.752,2562,2.559,2606,2.72,2617,4.283,2691,3.191,2732,2.921,2749,3.208,2758,4.283,2779,3.191,2780,6.099,2835,4.678,2836,3.191,2837,4.678,2841,4.678,2842,3.191,2897,3.191,2954,2.921,2955,4.283,3029,4.678,3030,4.678,3031,4.678,3032,4.678,3033,4.678,3034,3.191,3035,3.191,3130,2.425,3269,3.555,3451,4.721,3453,2.425,3467,2.559,3468,3.752,3587,3.191,3588,4.678,3589,4.678,3590,4.678,3591,4.678,3592,4.678,3593,3.191,3594,3.191,3595,3.191,3596,3.191,3597,3.191,3598,2.559,3599,3.191,3600,5.538,3611,4.678,3612,4.678,3629,2.72,3674,2.921,3941,2.21,4084,3.191,4398,3.191,4432,3.191,4435,3.752,4436,3.987,4451,3.987,4452,2.921,4453,2.921,4454,2.921,4459,4.678,4469,4.678,4635,2.425,4637,2.921,4638,3.191,4639,6.493,4641,4.283,4643,4.283,4645,4.678,4750,3.191,4755,3.191,4756,5.278,4757,7.326,4758,5.278,4759,5.278,4760,6.249,4761,6.249,4762,5.278,4763,3.601,4764,3.601,4765,6.881,4766,6.881,4767,5.278,4768,5.278,4769,5.278,4770,3.601,4771,3.601,4772,3.601,4773,5.278,4774,5.278,4775,5.278,4776,3.601,4777,3.601,4778,5.278,4779,3.601,4780,3.601,4781,3.601,4782,3.601,4783,3.601,4784,3.601,4785,3.601,4786,3.601,4787,3.601]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":555,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0.0.2",{"_index":4599,"title":{},"body":{"dependencies.html":{}}}],["0.0.25",{"_index":4604,"title":{},"body":{"dependencies.html":{}}}],["0.0.8",{"_index":4596,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":4611,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":4632,"title":{},"body":{"dependencies.html":{}}}],["0.38.1",{"_index":4628,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3573,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"classes/Percent.html":{}}}],["0.6.2",{"_index":4607,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":158,"title":{"interfaces/FindableWidget-1.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["1.0.2",{"_index":4617,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":4625,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":4615,"title":{},"body":{"dependencies.html":{}}}],["1.1.20150312",{"_index":4609,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":4630,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":4622,"title":{},"body":{"dependencies.html":{}}}],["1.21.0",{"_index":4621,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":4594,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":4619,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2894,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["100",{"_index":1277,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1083,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":1041,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["1024",{"_index":3696,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["1024mb",{"_index":3697,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["115",{"_index":4787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":4741,"title":{},"body":{"overview.html":{}}}],["15",{"_index":1273,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["150",{"_index":2842,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["15px",{"_index":3353,"title":{},"body":{"components/FormInputComponent.html":{}}}],["16",{"_index":3292,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["18x18",{"_index":3556,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["1].down",{"_index":2685,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["1gb",{"_index":3698,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["1st",{"_index":2900,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["2",{"_index":1147,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"classes/DatagridFilter.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MockRecord.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":4601,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":4613,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1275,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":1043,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["2019",{"_index":2764,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{}}}],["2020",{"_index":1894,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/ErrorBannerComponent.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["23",{"_index":4742,"title":{},"body":{"overview.html":{}}}],["25",{"_index":3665,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["250",{"_index":3572,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["255",{"_index":3575,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["27",{"_index":1750,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["2d",{"_index":1859,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["2nd",{"_index":2895,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["3",{"_index":48,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"dependencies.html":{}}}],["3.1.3",{"_index":4588,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2454,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["300",{"_index":2280,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["36x36",{"_index":3560,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["37",{"_index":1287,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":2537,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"overview.html":{}}}],["40",{"_index":1284,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":4783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400px",{"_index":1045,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["49",{"_index":4744,"title":{},"body":{"overview.html":{}}}],["5.6.1",{"_index":4592,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1276,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1185,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["5px",{"_index":3345,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["6",{"_index":4743,"title":{},"body":{"overview.html":{}}}],["6.5.5",{"_index":4626,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2456,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":3579,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["6px",{"_index":3348,"title":{},"body":{"components/FormInputComponent.html":{}}}],["8",{"_index":1883,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["8.3.20",{"_index":4734,"title":{},"body":{"index.html":{}}}],["9",{"_index":4634,"title":{},"body":{"dependencies.html":{}}}],["9.1.9",{"_index":4586,"title":{},"body":{"dependencies.html":{}}}],["999",{"_index":4729,"title":{},"body":{"index.html":{}}}],["999].[0",{"_index":4728,"title":{},"body":{"index.html":{}}}],["_actions",{"_index":173,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_columns",{"_index":1374,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_config",{"_index":2227,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["_errormessage",{"_index":2914,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["_height",{"_index":1520,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_isrequestpending",{"_index":2095,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["_multiplier",{"_index":3630,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["_open",{"_index":2085,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["_pagination",{"_index":1518,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_progress",{"_index":2097,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["_searchcriteria",{"_index":3986,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["_selectedentities",{"_index":174,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["_selectiontype",{"_index":1512,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_size",{"_index":3537,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["_unit",{"_index":2384,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["_unitname",{"_index":3631,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["_unitoptions",{"_index":2385,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["a.b.c",{"_index":3605,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["abort",{"_index":4026,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["above",{"_index":47,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["absolute",{"_index":1081,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["absolutely",{"_index":2849,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["abstract",{"_index":190,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["abstractcontrol",{"_index":2010,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["abstraction",{"_index":3137,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["acc",{"_index":3826,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["accepts",{"_index":2228,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/FormValidators.html":{}}}],["access",{"_index":572,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["accessing",{"_index":513,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["accessors",{"_index":191,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["according",{"_index":4113,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["account",{"_index":3722,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["achieved",{"_index":4529,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":63,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"miscellaneous/enumerations.html":{}}}],["action.actiontype",{"_index":1430,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["action.availability",{"_index":307,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.availability(this._selectedentities",{"_index":308,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.disabled",{"_index":312,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.disabled(this._selectedentities",{"_index":311,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.handler(this._selectedentities",{"_index":294,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.handlerdata",{"_index":295,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.isseparator",{"_index":306,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.textkey",{"_index":293,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.textkey?.tolowercase().includes(searchcriteria",{"_index":290,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["actionbar",{"_index":1667,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actioncopy",{"_index":1421,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actioncopy.handler",{"_index":1423,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actiondisplayconfig",{"_index":1,"title":{"interfaces/ActionDisplayConfig.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandler",{"_index":1422,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandler(selectedentities",{"_index":1425,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandlerresponse",{"_index":1424,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandlertype",{"_index":53,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["actionitem",{"_index":69,"title":{"interfaces/ActionItem.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionitem.handler",{"_index":51,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/typealiases.html":{}}}],["actionitem.textkey",{"_index":125,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["actionmenu.contextualfeaturedactions",{"_index":1486,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenucomponent",{"_index":656,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["actionmenus",{"_index":1480,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenus.foreach((actionmenu",{"_index":1484,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenus.length",{"_index":1481,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenusinrow(actionmenus",{"_index":1479,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionreporter",{"_index":1531,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions",{"_index":10,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions(actions",{"_index":269,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions.map((action",{"_index":1420,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions.reduce((flatactionlist",{"_index":296,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["actionsearchprovider",{"_index":162,"title":{"classes/ActionSearchProvider.html":{}},"body":{"classes/ActionSearchProvider.html":{}}}],["actionstyling",{"_index":24,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype",{"_index":28,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.static",{"_index":1432,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actiontype.static_featured",{"_index":1431,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activatable",{"_index":2610,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["activatable/focusable",{"_index":2661,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["activatablemenuitemtype",{"_index":2613,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1191,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["activated",{"_index":2254,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["activating",{"_index":2615,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["active",{"_index":1355,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activites",{"_index":1529,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activity",{"_index":338,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"miscellaneous/enumerations.html":{}}}],["activityindicatortype",{"_index":1311,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["activitypromiseresolver",{"_index":313,"title":{"classes/ActivityPromiseResolver.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activitypromiseresolver.monitoractivities",{"_index":405,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activitypromiseresolver.monitoractivity",{"_index":400,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter",{"_index":369,"title":{"classes/ActivityReporter.html":{}},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:21",{"_index":640,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:27",{"_index":638,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:33",{"_index":639,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:38",{"_index":636,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:53",{"_index":637,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:73",{"_index":635,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresolutionpromise",{"_index":352,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresolutionpromises",{"_index":340,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresponse",{"_index":357,"title":{"interfaces/ActivityResponse.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["acts",{"_index":1798,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["actual_component",{"_index":709,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["add",{"_index":127,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"index.html":{}}}],["addcolumn",{"_index":1494,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["addcolumn(col",{"_index":1551,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["added",{"_index":80,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["adding",{"_index":1684,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["addition",{"_index":2420,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"modules/VcdFormlyModule.html":{}}}],["additional",{"_index":107,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"modules/VcdFormlyModule.html":{}}}],["additionaldata",{"_index":95,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["adds",{"_index":510,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/FilterTestHostComponent.html":{},"classes/TestElement.html":{}}}],["addwildcard",{"_index":2484,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["addwildcard(input",{"_index":2486,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["after(date",{"_index":2983,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["aftercontentchecked",{"_index":3666,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["aftercontentinit",{"_index":2786,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["afterviewinit",{"_index":1238,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["again",{"_index":2810,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["against",{"_index":1921,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["age",{"_index":2453,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["alert",{"_index":411,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["alert').nativeelement.getattribute('role",{"_index":2953,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["alert').nativeelement.textcontent",{"_index":799,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["alertclosable",{"_index":2916,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["alerttype",{"_index":2917,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["alias",{"_index":1961,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["aliases",{"_index":4746,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":3581,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["all(...conditions",{"_index":3053,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["all(conditions",{"_index":2986,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["allow",{"_index":1010,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["allowed",{"_index":1279,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":551,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["allresults",{"_index":4035,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["allresults.indexof(this.selecteditem",{"_index":4039,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["along",{"_index":2584,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SubscriptionTracker.html":{}}}],["alongside",{"_index":3974,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["alternatives",{"_index":4536,"title":{},"body":{"contributing.html":{}}}],["alto",{"_index":3594,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["always",{"_index":31,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/Percent.html":{}}}],["amend",{"_index":4567,"title":{},"body":{"contributing.html":{}}}],["analyzer",{"_index":4672,"title":{},"body":{"index.html":{}}}],["analyzes",{"_index":4676,"title":{},"body":{"index.html":{}}}],["ancestor",{"_index":578,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["ancestor).queryall(by.css(query",{"_index":3206,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["and().or",{"_index":2962,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["and(...conditions",{"_index":3040,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["and(conditions",{"_index":2990,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["angular",{"_index":439,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":4585,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2772,"title":{},"body":{"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"pipes/NestedPropertyPipe.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":4587,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":477,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["angular/core/testing",{"_index":479,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["angular/forms",{"_index":881,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"modules/DropdownModule.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/QuickSearchModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":480,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4400,"title":{},"body":{"modules/VcdDatagridModule.html":{},"dependencies.html":{}}}],["angularlocatordriver",{"_index":432,"title":{"classes/AngularLocatorDriver.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["angularlocatordriver(new",{"_index":491,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["angularwidgetobjectfinder",{"_index":482,"title":{"classes/AngularWidgetObjectFinder.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["angularwidgetobjectfinder(this.testelement.fixture).find(widget",{"_index":505,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["another",{"_index":1500,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any(...conditions",{"_index":3055,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["any(conditions",{"_index":2993,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["any).href",{"_index":1568,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any).organizer.resize",{"_index":1712,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any).popoverinstance.removescrolleventlisteners",{"_index":2864,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["anychoice",{"_index":2458,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["anychoice.display",{"_index":2483,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["api",{"_index":732,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["app",{"_index":3309,"title":{},"body":{"components/FormInputComponent.html":{},"index.html":{}}}],["appear",{"_index":3992,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["appears",{"_index":859,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["append",{"_index":582,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["application",{"_index":3991,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["application's",{"_index":4680,"title":{},"body":{"index.html":{}}}],["applied",{"_index":3120,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["approach",{"_index":773,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["approval",{"_index":4717,"title":{},"body":{"index.html":{}}}],["area",{"_index":2836,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["arg",{"_index":564,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["argarray",{"_index":2623,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["args",{"_index":846,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/CommonUtil.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/LocatorDriver.html":{}}}],["argument",{"_index":112,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["arguments",{"_index":1766,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["aria",{"_index":2950,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["ariarole",{"_index":2946,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["around",{"_index":507,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"injectables/CsvExporterService.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/TestElement.html":{}}}],["array",{"_index":508,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["array.from(classes",{"_index":4262,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["array.from(this.clrdropdownmenuel.children",{"_index":2665,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["arrow",{"_index":2194,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":4684,"title":{},"body":{"index.html":{}}}],["ascending",{"_index":3848,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["aside",{"_index":3347,"title":{},"body":{"components/FormInputComponent.html":{}}}],["assert",{"_index":3140,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["assertions",{"_index":3139,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["assign",{"_index":3317,"title":{},"body":{"components/FormInputComponent.html":{}}}],["assigned",{"_index":2239,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{}}}],["assigning",{"_index":2263,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["assignvalue",{"_index":1808,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["assignvalue(config",{"_index":1820,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["associated",{"_index":875,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["associating",{"_index":2353,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["assumed",{"_index":348,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["asterisk",{"_index":872,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["async",{"_index":188,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/FilterTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["asynchronously",{"_index":238,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["attached",{"_index":2576,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["attaches",{"_index":1803,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["attaching",{"_index":1831,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["attachrenderer",{"_index":1809,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["attempt",{"_index":908,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["attribute",{"_index":3290,"title":{},"body":{"components/FormInputComponent.html":{}}}],["auto",{"_index":836,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["automatically",{"_index":2707,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SubscriptionTracker.html":{},"index.html":{}}}],["autosquash",{"_index":4570,"title":{},"body":{"contributing.html":{}}}],["availability",{"_index":94,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["available",{"_index":84,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"index.html":{}}}],["availableheight",{"_index":1668,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["availableunits",{"_index":3644,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["avoid",{"_index":512,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"index.html":{}}}],["avoiding",{"_index":3125,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["await",{"_index":285,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/FilterTestHostComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["b",{"_index":1459,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["back",{"_index":2621,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["background",{"_index":3570,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["backing",{"_index":811,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["banner",{"_index":609,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{},"miscellaneous/enumerations.html":{}}}],["banner'},{'name",{"_index":678,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["banner.component",{"_index":2952,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{}}}],["banner.component.html",{"_index":2913,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.scss",{"_index":2912,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts",{"_index":2910,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:17",{"_index":2935,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:19",{"_index":2936,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:24",{"_index":2931,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:29",{"_index":2926,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:36",{"_index":2925,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:41",{"_index":2920,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:46",{"_index":2938,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:54",{"_index":2932,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:59",{"_index":2934,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.module",{"_index":4371,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{}}}],["banner.module.ts",{"_index":4427,"title":{},"body":{"modules/VcdErrorBannerModule.html":{}}}],["banner.wo.ts",{"_index":2945,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["banner.wo.ts:13",{"_index":2947,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["banner.wo.ts:18",{"_index":2949,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["banneractivityreportercomponent",{"_index":603,"title":{"components/BannerActivityReporterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["banneractivityreporterwidgetobject",{"_index":710,"title":{"classes/BannerActivityReporterWidgetObject.html":{}},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["bar",{"_index":1435,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["base",{"_index":910,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"contributing.html":{}}}],["based",{"_index":1114,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["baseformcontrol",{"_index":800,"title":{"classes/BaseFormControl.html":{}},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["baseformcontrol:105",{"_index":3250,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:109",{"_index":3251,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:113",{"_index":3252,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:117",{"_index":3253,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:21",{"_index":3256,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:26",{"_index":3258,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:31",{"_index":3259,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:36",{"_index":3254,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:41",{"_index":3249,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:46",{"_index":3248,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:52",{"_index":3245,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:57",{"_index":3247,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:62",{"_index":3246,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:67",{"_index":3255,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:72",{"_index":3257,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseunit",{"_index":4322,"title":{},"body":{"classes/Unit.html":{}}}],["basevalue",{"_index":3861,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["basewidgetobject",{"_index":484,"title":{"classes/BaseWidgetObject.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["basewidgetobject:30",{"_index":2209,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["basewidgetobject:38",{"_index":2210,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["basewidgetobject:45",{"_index":2211,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["basewidgetobject:52",{"_index":2212,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["basically",{"_index":3957,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["batch",{"_index":92,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["become",{"_index":1600,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["becomes",{"_index":2325,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/DomUtil.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["before",{"_index":870,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["before(date",{"_index":2995,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["before/aftereach",{"_index":3222,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["beforeeach",{"_index":3097,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["beforeeach(function(this",{"_index":3102,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["begin",{"_index":581,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["beginning",{"_index":4115,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["begins",{"_index":632,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["behavior",{"_index":409,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/DomUtil.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["being",{"_index":728,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["belong",{"_index":1316,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["belongs",{"_index":1476,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["below",{"_index":860,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"contributing.html":{}}}],["benefit",{"_index":4737,"title":{},"body":{"index.html":{}}}],["best",{"_index":3649,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["bestformat",{"_index":4335,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestformat(1000000",{"_index":4340,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestformat(value",{"_index":4337,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestunit",{"_index":3706,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["bestvalue",{"_index":3705,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["between",{"_index":129,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["betweennumbers",{"_index":2970,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["betweennumbers(values",{"_index":2997,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["binding",{"_index":3975,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["bl",{"_index":1039,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":1857,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["blob([csvfile",{"_index":1892,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["block",{"_index":2529,"title":{},"body":{"classes/DomUtil.html":{},"components/LoadingIndicatorComponent.html":{}}}],["blocking",{"_index":3533,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["blur",{"_index":534,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["blurs",{"_index":533,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["body",{"_index":1654,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["bold",{"_index":660,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["boldtextrenderer",{"_index":978,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["boldtextrenderercomponent",{"_index":659,"title":{"components/BoldTextRendererComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["boldtextrendererconfig",{"_index":967,"title":{"interfaces/BoldTextRendererConfig.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["boldtextrendererwidgetobject",{"_index":982,"title":{"classes/BoldTextRendererWidgetObject.html":{}},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["bom",{"_index":1878,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["boolean",{"_index":96,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":2750,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["boston",{"_index":3596,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":147,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/Percent.html":{}}}],["bottom",{"_index":1038,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":2928,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["box",{"_index":1719,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["br",{"_index":1037,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":4514,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["break",{"_index":1127,"title":{},"body":{"interfaces/CliptextConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":861,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["breaks",{"_index":1393,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["browse",{"_index":4739,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":481,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{},"modules.html":{}}}],["bsd",{"_index":2769,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["bubbles",{"_index":2188,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["buckets",{"_index":49,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["bug",{"_index":1390,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["bugs",{"_index":4582,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":3728,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["build:components",{"_index":4666,"title":{},"body":{"index.html":{}}}],["build:i18n",{"_index":4664,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2348,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["builder.is(\"created\").before(userinputdate",{"_index":2963,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.is(\"uptime\").greaterthan(user",{"_index":2964,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts",{"_index":2955,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:106",{"_index":2987,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:126",{"_index":3026,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:160",{"_index":2994,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:180",{"_index":3028,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:190",{"_index":3010,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:198",{"_index":3024,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:206",{"_index":3020,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:214",{"_index":3022,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:222",{"_index":3014,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:230",{"_index":3016,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:238",{"_index":2996,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:246",{"_index":2984,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:256",{"_index":2998,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:270",{"_index":3008,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:282",{"_index":3004,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:291",{"_index":3003,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:39",{"_index":2982,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:40",{"_index":2981,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:41",{"_index":2980,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:52",{"_index":3018,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:62",{"_index":3011,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:72",{"_index":2991,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builders",{"_index":3065,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builders.push(new",{"_index":3066,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["buildpartial",{"_index":2971,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builds",{"_index":4709,"title":{},"body":{"index.html":{}}}],["busy",{"_index":132,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["button",{"_index":75,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["buttoncontents",{"_index":150,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["buttons",{"_index":137,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["by.css(selector",{"_index":3158,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["by.directive(selector",{"_index":3159,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["byte",{"_index":3853,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["c",{"_index":466,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{}}}],["ca",{"_index":2309,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":1496,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculate",{"_index":210,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculated",{"_index":1674,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["calculatepagesize",{"_index":1655,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculateposition(rect",{"_index":1140,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["calculates",{"_index":1329,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["calculating",{"_index":1537,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["california",{"_index":2310,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["call",{"_index":113,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":842,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["called",{"_index":114,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["caller",{"_index":1290,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["callers",{"_index":3134,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["calling",{"_index":203,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["calls",{"_index":1967,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["canbereadonly",{"_index":813,"title":{"interfaces/CanBeReadOnly.html":{}},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{}}}],["cancel",{"_index":2048,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["canceltext",{"_index":2049,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["care",{"_index":567,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["case",{"_index":88,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["cases",{"_index":1951,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["catch",{"_index":2865,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["catch(error",{"_index":366,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["caused",{"_index":1059,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["causes",{"_index":1707,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["causing",{"_index":4539,"title":{},"body":{"contributing.html":{}}}],["cd",{"_index":4718,"title":{},"body":{"index.html":{}}}],["cell",{"_index":956,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/variables.html":{}}}],["cell's",{"_index":1918,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cell_tag",{"_index":4756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cellelement",{"_index":999,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["cells",{"_index":1018,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["cellvalue",{"_index":1919,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cellvalue.tolocalestring",{"_index":1931,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cellvalue.tostring",{"_index":1929,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["center",{"_index":1138,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["certificate",{"_index":4501,"title":{},"body":{"contributing.html":{}}}],["certifies",{"_index":4505,"title":{},"body":{"contributing.html":{}}}],["cfr",{"_index":1813,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["chain",{"_index":456,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["chainable",{"_index":1963,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["chainables",{"_index":1950,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["chance",{"_index":1070,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":544,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"index.html":{}}}],["changed",{"_index":1804,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["changedetectorref",{"_index":1239,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["changes",{"_index":736,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["changing",{"_index":1709,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["character",{"_index":1862,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["characters",{"_index":1884,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["check",{"_index":3152,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["checkbox",{"_index":2062,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox'},{'name",{"_index":682,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["checkbox.component",{"_index":4433,"title":{},"body":{"modules/VcdFormModule.html":{}}}],["checkbox.component.html",{"_index":3230,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":3229,"title":{},"body":{"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox.component.ts:34",{"_index":3244,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:39",{"_index":3243,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:44",{"_index":3239,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:49",{"_index":3237,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:51",{"_index":3261,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:53",{"_index":3235,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox/form",{"_index":3228,"title":{},"body":{"components/FormCheckboxComponent.html":{},"modules/VcdFormModule.html":{},"miscellaneous/enumerations.html":{}}}],["checkboxes",{"_index":2191,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["checkboxstyling",{"_index":3241,"title":{},"body":{"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checkboxstyling.checkbox",{"_index":3242,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checked",{"_index":3712,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["checkout",{"_index":4552,"title":{},"body":{"contributing.html":{}}}],["checkposition",{"_index":2509,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["checks",{"_index":462,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/FormValidators.html":{},"pipes/NestedPropertyPipe.html":{},"classes/TestElement.html":{}}}],["child",{"_index":931,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{}}}],["child.matches(activatablemenuitemtype.button",{"_index":2666,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["child.matches(activatablemenuitemtype.nested_vcd_dropdown",{"_index":2667,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["children",{"_index":123,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["chose",{"_index":1953,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["chrome",{"_index":1895,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"miscellaneous/variables.html":{}}}],["ci",{"_index":4560,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["ci/cd",{"_index":4699,"title":{},"body":{"index.html":{}}}],["city",{"_index":3589,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["clarity",{"_index":118,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["claritymodule",{"_index":2775,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["class",{"_index":78,"title":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"classes/FormValidators.html":{},"classes/IdGenerator.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{}}}],["classes",{"_index":163,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindableWidget-1.html":{},"classes/FormValidators.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"overview.html":{}}}],["classlist.js",{"_index":4608,"title":{},"body":{"dependencies.html":{}}}],["classname",{"_index":3115,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["classselector",{"_index":2516,"title":{},"body":{"classes/DomUtil.html":{}}}],["clause",{"_index":2770,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["clear",{"_index":539,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/FilterBuilder.html":{},"classes/TestElement.html":{}}}],["cleared",{"_index":2929,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["clearhidetimeout",{"_index":1108,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["clearing",{"_index":3741,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["clears",{"_index":538,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{}}}],["clearselectioninformation",{"_index":1614,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["cleartimeout(tip.hidetimeout",{"_index":1109,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["cli",{"_index":4605,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["click",{"_index":529,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["click(cssselector",{"_index":733,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["clicked",{"_index":105,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["clicks",{"_index":528,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["client",{"_index":322,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/ObjectAndResponse.html":{}}}],["clientheight",{"_index":1281,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["clientrect",{"_index":1141,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["clipped",{"_index":1015,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipping",{"_index":2840,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["cliptext",{"_index":1017,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{}}}],["cliptextconfig",{"_index":1013,"title":{"interfaces/CliptextConfig.html":{}},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{}}}],["clone",{"_index":4694,"title":{},"body":{"index.html":{}}}],["cloning",{"_index":4693,"title":{},"body":{"index.html":{}}}],["closable",{"_index":2922,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["close",{"_index":1411,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["closed",{"_index":2701,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{}}}],["closemenu",{"_index":2622,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["closer",{"_index":4114,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["closes",{"_index":626,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["closest",{"_index":938,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["closevcddropdown",{"_index":2542,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["closing",{"_index":3303,"title":{},"body":{"components/FormInputComponent.html":{}}}],["closure",{"_index":4013,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["closures",{"_index":3224,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["cloud",{"_index":1976,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"index.html":{}}}],["clr",{"_index":705,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["clr/angular",{"_index":1250,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/QuickSearchModule.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{}}}],["clr/angular/data/datagrid/enums/selection",{"_index":1252,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clr/angular/data/datagrid/interfaces/filter.interface",{"_index":2273,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["clr/core",{"_index":4589,"title":{},"body":{"dependencies.html":{}}}],["clr/icons",{"_index":4590,"title":{},"body":{"dependencies.html":{}}}],["clr/ui",{"_index":4591,"title":{},"body":{"dependencies.html":{}}}],["clrdatagrid",{"_index":1247,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["clrdatagridcssclass",{"_index":1514,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridfilter",{"_index":2235,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["clrdatagridfilterinterface",{"_index":2226,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["clrdatagridpagination",{"_index":1248,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridstateinterface",{"_index":1249,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridwidgetobject",{"_index":992,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["clrdatagridwidgetobject(this.fixture",{"_index":4422,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["clrdatarowcssclassgetter(row",{"_index":1584,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdgcolumnclassname",{"_index":1753,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["clrdropdown",{"_index":2012,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{}}}],["clrdropdownmenu",{"_index":2652,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{}}}],["clrdropdownmenuel",{"_index":2543,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["cluster_dropdownmodule",{"_index":2753,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":2754,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_dropdowncomponent_providers",{"_index":2755,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":2757,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_imports",{"_index":2756,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":4081,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":4082,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":4083,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule",{"_index":4101,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule_declarations",{"_index":4102,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule_exports",{"_index":4103,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule",{"_index":4180,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule_declarations",{"_index":4181,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule_exports",{"_index":4182,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule",{"_index":4355,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_declarations",{"_index":4356,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_exports",{"_index":4358,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_imports",{"_index":4357,"title":{},"body":{"modules/VcdActionMenuModule.html":{}}}],["cluster_vcdactivityreportermodule",{"_index":4362,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_declarations",{"_index":4363,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_exports",{"_index":4365,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_imports",{"_index":4364,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdcomponentsmodule",{"_index":4376,"title":{},"body":{"modules/VcdComponentsModule.html":{},"overview.html":{}}}],["cluster_vcdcomponentsmodule_exports",{"_index":4377,"title":{},"body":{"modules/VcdComponentsModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule",{"_index":4389,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule_declarations",{"_index":4390,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule_exports",{"_index":4391,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule",{"_index":4394,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_declarations",{"_index":4395,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_exports",{"_index":4397,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_imports",{"_index":4396,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule",{"_index":4424,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule_declarations",{"_index":4425,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule_exports",{"_index":4426,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule",{"_index":4456,"title":{},"body":{"modules/VcdFormlyModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule_declarations",{"_index":4457,"title":{},"body":{"modules/VcdFormlyModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule_imports",{"_index":4458,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["cluster_vcdformmodule",{"_index":4428,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdformmodule_declarations",{"_index":4429,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdformmodule_exports",{"_index":4430,"title":{},"body":{"modules/VcdFormModule.html":{}}}],["cluster_vcdformmodule_providers",{"_index":4431,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule",{"_index":4471,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule_declarations",{"_index":4472,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule_exports",{"_index":4473,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cmd+space",{"_index":3951,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["co",{"_index":3792,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["co.value",{"_index":3793,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["code",{"_index":778,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["codecov.io",{"_index":4610,"title":{},"body":{"dependencies.html":{}}}],["col",{"_index":1552,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["col.displayname",{"_index":1561,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["col.fieldname",{"_index":2166,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["colindex",{"_index":1553,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["collect",{"_index":110,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["color",{"_index":3342,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["cols",{"_index":1377,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column",{"_index":955,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["column.displayname",{"_index":1562,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.filter",{"_index":1701,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.filter.config.queryfield",{"_index":1702,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.hideable",{"_index":1635,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.interface",{"_index":974,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.interface.ts",{"_index":1714,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["column.queryfieldname",{"_index":1700,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.renderer",{"_index":1692,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column_css_selector",{"_index":4758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column_selector",{"_index":4759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columncomponentrendererspec",{"_index":971,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["columncomponentrendererspec(componentrendererspec",{"_index":1767,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["columncomponentrendererspec({type",{"_index":1756,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["columnconfig",{"_index":1691,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldcolumnrendererspec",{"_index":1696,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldname",{"_index":1697,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldrenderer",{"_index":1694,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfiginternal",{"_index":1226,"title":{"interfaces/ColumnConfigInternal.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columndropdown",{"_index":2036,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["columndropdown(columndropdown",{"_index":2035,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["columnrendererspec",{"_index":972,"title":{"interfaces/ColumnRendererSpec.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["columnrendererspec#type",{"_index":1789,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["columnrendererspec).config",{"_index":1695,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnrendererspec.config",{"_index":1802,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["columns",{"_index":959,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columns(cols",{"_index":1375,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columns.map((column",{"_index":1690,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnsconfig",{"_index":1370,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnsupdated",{"_index":1493,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["combination",{"_index":360,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["combooption",{"_index":3688,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combooptions",{"_index":3702,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combooptionunitmap",{"_index":3704,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combounitoptions",{"_index":3733,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["commands",{"_index":4723,"title":{},"body":{"index.html":{}}}],["commas",{"_index":1914,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["comment",{"_index":4572,"title":{},"body":{"contributing.html":{}}}],["comments",{"_index":3832,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["commit",{"_index":4517,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commits",{"_index":4515,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":4349,"title":{},"body":{"injectables/UnitFormatter.html":{},"contributing.html":{},"index.html":{}}}],["common/activity",{"_index":794,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["common/error/error",{"_index":4383,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["common/interfaces",{"_index":261,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["common/interfaces/action",{"_index":1257,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["common/interfaces/select",{"_index":2345,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["common/loading/loading",{"_index":4384,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["common/pipes/pipes.module",{"_index":4402,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["common/subscription",{"_index":1260,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["commonmodule",{"_index":2771,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["commonutil",{"_index":264,"title":{"classes/CommonUtil.html":{}},"body":{"classes/ActionSearchProvider.html":{},"classes/CommonUtil.html":{},"injectables/UnitFormatter.html":{}}}],["commonutil.isfunction(action.disabled",{"_index":310,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["commonutil.roundto(inputunit.getoutputvalue(value",{"_index":4351,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["community",{"_index":4499,"title":{},"body":{"contributing.html":{}}}],["compared",{"_index":4060,"title":{},"body":{"classes/Percent.html":{}}}],["comparison",{"_index":3842,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["compatibility",{"_index":3499,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["compilecomponents",{"_index":3096,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["complete",{"_index":1519,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{}}}],["completed",{"_index":4025,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["complex",{"_index":2958,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["comply",{"_index":4108,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["compodoc",{"_index":4624,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":204,"title":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component's",{"_index":731,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["component({@link",{"_index":3099,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["component_template",{"_index":655,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["componentconstructor",{"_index":585,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfactory",{"_index":1837,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":1814,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentfixture",{"_index":478,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfixture#detectchanges",{"_index":3153,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfixture).componentref",{"_index":589,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["componentinstance",{"_index":4188,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["componentref",{"_index":1806,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentrenderer",{"_index":952,"title":{"interfaces/ComponentRenderer.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["componentrenderer#config",{"_index":1722,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["componentrenderer.config",{"_index":975,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["componentrendererconstructor",{"_index":1266,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["componentrendereroutletdirective",{"_index":700,"title":{"directives/ComponentRendererOutletDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["componentrendereroutletdirective#assignvalue",{"_index":2284,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["componentrendererspec",{"_index":1267,"title":{"interfaces/ComponentRendererSpec.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["componentroots",{"_index":3205,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentroots.map",{"_index":3207,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["components",{"_index":604,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"index.html":{},"overview.html":{}}}],["components.git",{"_index":4732,"title":{},"body":{"index.html":{}}}],["components/master",{"_index":4716,"title":{},"body":{"index.html":{}}}],["components/pull/248",{"_index":1978,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["componenttype",{"_index":1807,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["compound",{"_index":4019,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["computebestunitandvalue(value",{"_index":3779,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["concat",{"_index":495,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["concat(...elements.map((element",{"_index":489,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["concurrent",{"_index":379,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["condition",{"_index":82,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/FilterBuilder.html":{},"interfaces/ObjectAndResponse.html":{}}}],["condition(operator",{"_index":3005,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["condition.buildpartial",{"_index":3052,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["condition.clear",{"_index":3057,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions",{"_index":2989,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.foreach(condition",{"_index":3051,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.length",{"_index":3041,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.shift",{"_index":3049,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["config",{"_index":966,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["config(config",{"_index":1177,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config(context",{"_index":1842,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["config(record",{"_index":980,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["config(val",{"_index":2285,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["config.disabled",{"_index":1182,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.mouseoutdelay",{"_index":1178,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.options.foreach(option",{"_index":2360,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["config.options.map(option",{"_index":2357,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["config.size",{"_index":1180,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.text",{"_index":965,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["config.unit",{"_index":2433,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["config.unitoptions",{"_index":2432,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["configoption",{"_index":4443,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["configurable",{"_index":3677,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["configuration",{"_index":9,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["configurationcomponentrenderer",{"_index":1844,"title":{},"body":{"interfaces/ComponentRendererSpec.html":{}}}],["configuration{@link",{"_index":1792,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["configured",{"_index":3968,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["configures",{"_index":2498,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["configuretestingmodule",{"_index":3092,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["conjunct",{"_index":2992,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["consider",{"_index":3678,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["considered",{"_index":4537,"title":{},"body":{"contributing.html":{}}}],["considering",{"_index":3729,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["consists",{"_index":3958,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["console.error('clarity",{"_index":2866,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["const",{"_index":266,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["constelement",{"_index":4420,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["constelement.componentinstance",{"_index":4423,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["construct",{"_index":1351,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["constructed",{"_index":3701,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["constructor",{"_index":192,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["constructor(@inject(activitypromiseresolver",{"_index":4290,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["constructor(@inject(locale_id",{"_index":3613,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["constructor(@self",{"_index":3265,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["constructor(arg",{"_index":562,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["constructor(chainable",{"_index":1959,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["constructor(componentconstructor",{"_index":3197,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["constructor(controldirective",{"_index":3234,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{}}}],["constructor(destroyable",{"_index":3504,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["constructor(driver",{"_index":923,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["constructor(elements",{"_index":4306,"title":{},"body":{"classes/TestElement.html":{}}}],["constructor(elref",{"_index":2802,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["constructor(filtercontainer",{"_index":2234,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["constructor(fixture",{"_index":4203,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/WidgetObject.html":{}}}],["constructor(host",{"_index":4165,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["constructor(multiplier",{"_index":4067,"title":{},"body":{"classes/Percent.html":{},"classes/Unit.html":{}}}],["constructor(ngcontrol",{"_index":829,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormSelectComponent.html":{}}}],["constructor(parent",{"_index":2979,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["constructor(parentvcddropdown",{"_index":2558,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["constructor(prefix",{"_index":3522,"title":{},"body":{"classes/IdGenerator.html":{}}}],["constructor(private",{"_index":275,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["constructor(promiseresolver",{"_index":387,"title":{},"body":{"classes/ActivityReporter.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["constructor(public",{"_index":520,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["constructor(quicksearchservice",{"_index":4124,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["constructor(renderer",{"_index":2698,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["constructor(testelement",{"_index":448,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["constructor(translationservice",{"_index":621,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"injectables/UnitFormatter.html":{}}}],["constructor(ts",{"_index":193,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["constructor(unitformatter",{"_index":3925,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["constructor(viewcontainerref",{"_index":1811,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["constructors",{"_index":1800,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["constructs",{"_index":3501,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["contain",{"_index":3933,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["contained",{"_index":367,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ObjectAndResponse.html":{},"classes/TestElement.html":{}}}],["container",{"_index":1051,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["container').unwrap",{"_index":919,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["contains",{"_index":937,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["content",{"_index":756,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["content/dimensions",{"_index":1115,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["content_area_selector",{"_index":2835,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["contentareaelement",{"_index":2789,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect",{"_index":2881,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.bottom",{"_index":2908,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.left",{"_index":2890,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.right",{"_index":2887,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.top",{"_index":2883,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentchild",{"_index":2833,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentchild(clrdropdownmenu",{"_index":2850,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contents",{"_index":74,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":33,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["context(.modal",{"_index":3576,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["context(.modal):not(.adjust",{"_index":3352,"title":{},"body":{"components/FormInputComponent.html":{}}}],["contextual",{"_index":15,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["contextual_featured",{"_index":44,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["contextualactionposition",{"_index":1269,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["contextualactionposition.row",{"_index":1473,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualactionposition.top",{"_index":1470,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualactions",{"_index":1418,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualfeaturedactions",{"_index":1485,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["continue",{"_index":4030,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["contract",{"_index":372,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["contributing",{"_index":4494,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contribution",{"_index":4507,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":4498,"title":{},"body":{"contributing.html":{}}}],["contributor's",{"_index":4511,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":810,"title":{},"body":{"classes/BaseFormControl.html":{},"injectables/CsvExporterService.html":{},"components/DatagridNumericFilterComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["control's",{"_index":3383,"title":{},"body":{"classes/FormValidators.html":{}}}],["control.ts",{"_index":802,"title":{},"body":{"classes/BaseFormControl.html":{},"miscellaneous/variables.html":{}}}],["control.ts:105",{"_index":847,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:109",{"_index":849,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:113",{"_index":852,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:117",{"_index":855,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:21",{"_index":835,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:26",{"_index":841,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:31",{"_index":843,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:36",{"_index":832,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:41",{"_index":871,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:46",{"_index":869,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:52",{"_index":858,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:57",{"_index":867,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:62",{"_index":863,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:67",{"_index":833,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:72",{"_index":831,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:85",{"_index":874,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:91",{"_index":877,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:98",{"_index":879,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.value",{"_index":3401,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["controldirective",{"_index":3236,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["controlling",{"_index":3976,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["controls",{"_index":1008,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["controlvalueaccessor",{"_index":812,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["convenience",{"_index":511,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["conventions",{"_index":4575,"title":{},"body":{"contributing.html":{}}}],["conversion",{"_index":2468,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["convert",{"_index":3854,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["converted",{"_index":2016,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["convertgenericonly",{"_index":941,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"miscellaneous/typealiases.html":{}}}],["converts",{"_index":2030,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["copy/paste",{"_index":1072,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["copyright",{"_index":2763,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["correct",{"_index":1640,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["correctly",{"_index":3209,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["correctreturntypes",{"_index":469,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"miscellaneous/typealiases.html":{}}}],["corresponding",{"_index":1728,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["correspondingformctrl",{"_index":2364,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["correspondingformctrl.setvalue(true",{"_index":2369,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["costs",{"_index":514,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["count",{"_index":1338,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["counter",{"_index":554,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["cover",{"_index":2899,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["coverage",{"_index":3186,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"dependencies.html":{}}}],["covering",{"_index":3626,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["cr",{"_index":942,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["create",{"_index":1074,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createcsv",{"_index":1851,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["createcsv(rows",{"_index":1854,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["created",{"_index":586,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createdatagridfiltertesthelper",{"_index":3105,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["createdatagridfiltertesthelperwithfinder",{"_index":3111,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["createformgroup",{"_index":2229,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["createnullsafevalidator",{"_index":3378,"title":{},"body":{"classes/FormValidators.html":{}}}],["createnullsafevalidator(validator",{"_index":3380,"title":{},"body":{"classes/FormValidators.html":{}}}],["creates",{"_index":389,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["creating",{"_index":774,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["creation",{"_index":2004,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["criteria",{"_index":206,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["css",{"_index":77,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["cssselector",{"_index":464,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["csv",{"_index":1858,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["csvexporterservice",{"_index":1846,"title":{"injectables/CsvExporterService.html":{}},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["csvfile",{"_index":1871,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["cur",{"_index":3827,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["current",{"_index":768,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["currentaction",{"_index":297,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction.istranslatable",{"_index":302,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction.textkey",{"_index":303,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction?.children?.length",{"_index":298,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentdetailrowconfig",{"_index":1543,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentdetailrowrenderspec",{"_index":1544,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentdirective",{"_index":1060,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["currentfocuseditem",{"_index":2692,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["currenthost",{"_index":1063,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":377,"title":{},"body":{"classes/ActivityReporter.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["currentoperator",{"_index":2969,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["currentpanespec",{"_index":1542,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentpanespecrecord",{"_index":1541,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentselection.map((selected",{"_index":1608,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentvalue",{"_index":2131,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["custom",{"_index":65,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["customfiql",{"_index":2470,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["cy",{"_index":1974,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"miscellaneous/variables.html":{}}}],["cy.get",{"_index":1989,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cy.get(ancestor).find(tagname",{"_index":1992,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cy.get(tagname",{"_index":1993,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cycle",{"_index":576,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/MenuItem.html":{}}}],["cypress",{"_index":1949,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cypress.chainable",{"_index":1952,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cypresslocatordriver",{"_index":1947,"title":{"classes/CypressLocatorDriver.html":{}},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cypresslocatordriver(root",{"_index":1995,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cypresslocatordriver(root.contains(cssselector",{"_index":1984,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresslocatordriver(root.find(cssselector",{"_index":1980,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresslocatordriver(root.parents(cssselector",{"_index":1985,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresswidgetobjectfinder",{"_index":1972,"title":{"classes/CypressWidgetObjectFinder.html":{}},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cypresswidgetobjectfinder().find(widget",{"_index":1987,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["danger",{"_index":2923,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["data",{"_index":60,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{}}}],["data.ts",{"_index":3588,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["dataexportercomponent",{"_index":662,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["dataexporterwidgetobject",{"_index":2170,"title":{"classes/DataExporterWidgetObject.html":{}},"body":{"classes/DataExporterWidgetObject.html":{}}}],["dataexportrequest",{"_index":2090,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dataexportrequestevent",{"_index":1996,"title":{"interfaces/DataExportRequestEvent.html":{}},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dataexportrequestevent.exportdata",{"_index":2091,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["datagrid",{"_index":1019,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["datagrid'},{'name",{"_index":665,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["datagrid.component",{"_index":4403,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["datagrid.component.html",{"_index":1366,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagrid.component.scss",{"_index":1368,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagrid.wo",{"_index":988,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts",{"_index":4411,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:14",{"_index":4413,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:19",{"_index":4415,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:26",{"_index":4417,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid/datagrid.component",{"_index":4418,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid/datagrid.module",{"_index":4386,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["datagrid/mock",{"_index":3091,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["datagridcomponent",{"_index":664,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"overview.html":{}}}],["datagridcomponent.gridrefresh",{"_index":1350,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridfilter",{"_index":1263,"title":{"classes/DatagridFilter.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridfilter#config",{"_index":2296,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["datagridfilter.queryfield",{"_index":1699,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridfilter:107",{"_index":2335,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:112",{"_index":2329,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:117",{"_index":2336,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:122",{"_index":2331,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:127",{"_index":2332,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:132",{"_index":2333,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:137",{"_index":2328,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:59",{"_index":2342,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:60",{"_index":2343,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:71",{"_index":2340,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:72",{"_index":2316,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:87",{"_index":2341,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:89",{"_index":2334,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:99",{"_index":2330,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridmultiselectfilter",{"_index":2379,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["datagridmultiselectfiltercomponent",{"_index":666,"title":{"components/DatagridMultiSelectFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridmultiselectfiltercomponent.options",{"_index":2351,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["datagridmultiselectfilterconfig",{"_index":2322,"title":{"interfaces/DatagridMultiSelectFilterConfig.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["datagridnumericfilter",{"_index":2448,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["datagridnumericfiltercomponent",{"_index":670,"title":{"components/DatagridNumericFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridnumericfiltercomponent.close",{"_index":3304,"title":{},"body":{"components/FormInputComponent.html":{}}}],["datagridnumericfilterconfig",{"_index":2397,"title":{"interfaces/DatagridNumericFilterConfig.html":{}},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["datagridnumericfiltervalue",{"_index":2399,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["datagridselectfilter",{"_index":2482,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["datagridselectfiltercomponent",{"_index":672,"title":{"components/DatagridSelectFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridselectfiltercomponent#getvalue",{"_index":2469,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["datagridselectfilterconfig",{"_index":2467,"title":{"interfaces/DatagridSelectFilterConfig.html":{}},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["datagridselection",{"_index":1458,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridselection(selection",{"_index":1463,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridselectionchange",{"_index":1490,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridstringfilter",{"_index":2511,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["datagridstringfiltercomponent",{"_index":674,"title":{"components/DatagridStringFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridstringfilterconfig",{"_index":2499,"title":{"interfaces/DatagridStringFilterConfig.html":{}},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["datarow",{"_index":1581,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["date",{"_index":1930,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/FilterBuilder.html":{},"components/FormInputComponent.html":{},"pipes/NestedPropertyPipe.html":{},"miscellaneous/variables.html":{}}}],["date(getformatteddatevalue(value)).toisostring",{"_index":3330,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date(value",{"_index":3332,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date.getfullyear",{"_index":3333,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date.toisostring",{"_index":3064,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["date_object_class",{"_index":3612,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"miscellaneous/variables.html":{}}}],["datepipe",{"_index":3608,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["datepipe(this.localeid).transform(returnvalue",{"_index":3625,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["datetime",{"_index":3271,"title":{},"body":{"components/FormInputComponent.html":{}}}],["deactivate",{"_index":1207,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["debounce_time_for_grid_filter_changes",{"_index":2279,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["debouncetime",{"_index":2274,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["debug",{"_index":457,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelement",{"_index":451,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["debugelement.nativeelement.matches(cssselector",{"_index":502,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelement.parent",{"_index":503,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelements",{"_index":509,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["decimal",{"_index":1783,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/UnitFormatter.html":{}}}],["decimalpipe",{"_index":3609,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["decimalpipe(this.localeid).transform(returnvalue",{"_index":3624,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["decisions",{"_index":805,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["declarations",{"_index":2749,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":1973,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["decorators",{"_index":2404,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/FormInputComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["deep",{"_index":2450,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{}}}],["default",{"_index":143,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["default_action_search_section_header_prefix",{"_index":267,"title":{},"body":{"classes/ActionSearchProvider.html":{},"miscellaneous/variables.html":{}}}],["default_pagination_translation_key",{"_index":1291,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["default_size",{"_index":1272,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["default_size_options",{"_index":1274,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":148,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["defaultspinnersize",{"_index":3538,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["define",{"_index":4321,"title":{},"body":{"classes/Unit.html":{}}}],["defined",{"_index":195,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["defines",{"_index":1682,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["definition",{"_index":1583,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["delay",{"_index":1023,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["delayed",{"_index":2277,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":2748,"title":{"dependencies.html":{}},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependent",{"_index":46,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["depends",{"_index":1475,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["deprecated",{"_index":771,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["deps",{"_index":4782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derived",{"_index":2261,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["described",{"_index":2521,"title":{},"body":{"classes/DomUtil.html":{},"contributing.html":{}}}],["describes",{"_index":155,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["descriptive",{"_index":4532,"title":{},"body":{"contributing.html":{}}}],["deselect",{"_index":2040,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["designed",{"_index":4111,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["desired",{"_index":1447,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["destroy",{"_index":1092,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["destroyable",{"_index":4302,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["destroyable.ngondestroy",{"_index":3506,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["destroyed",{"_index":3500,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SubscriptionTracker.html":{}}}],["detaching",{"_index":1830,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["detachrenderer",{"_index":1810,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["detail",{"_index":1335,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["detailcomponent",{"_index":1506,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["detailpane",{"_index":1342,"title":{"interfaces/DetailPane.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["detailpaneconfig",{"_index":1340,"title":{"interfaces/DetailPaneConfig.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["detailrowconfig",{"_index":1336,"title":{"interfaces/DetailRowConfig.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["details",{"_index":1818,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/MockRecord.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["detectchanges",{"_index":546,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["detection",{"_index":545,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"classes/TestElement.html":{}}}],["detects",{"_index":735,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["determine",{"_index":4151,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["determined",{"_index":2879,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["determines",{"_index":4053,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["determining",{"_index":116,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["dev",{"_index":4667,"title":{},"body":{"index.html":{}}}],["developer",{"_index":3956,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["developers",{"_index":4655,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1362,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["development",{"_index":4707,"title":{},"body":{"index.html":{}}}],["dg",{"_index":667,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["di",{"_index":2847,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dialog",{"_index":2028,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dialogheader",{"_index":2045,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dialogs",{"_index":3534,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["didn't",{"_index":2155,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["different",{"_index":1231,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"interfaces/SortedColumn.html":{},"classes/Unit.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["differentiate",{"_index":1230,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["differentiating",{"_index":1686,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["differently",{"_index":4059,"title":{},"body":{"classes/Percent.html":{}}}],["digits",{"_index":1776,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/UnitFormatter.html":{}}}],["dimensions",{"_index":1139,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":571,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["direction",{"_index":1135,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["direction.down",{"_index":2717,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.left",{"_index":2719,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.right",{"_index":2723,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.up",{"_index":2721,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["directions",{"_index":2538,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["directive",{"_index":653,"title":{"directives/ComponentRendererOutletDirective.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["directives",{"_index":699,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directives/component",{"_index":4404,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":4683,"title":{},"body":{"index.html":{}}}],["directly",{"_index":3132,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["director",{"_index":1977,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"index.html":{}}}],["directory",{"_index":4686,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":3747,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["disable",{"_index":1751,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["disabled",{"_index":98,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["disabled(disabled",{"_index":4248,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["disables",{"_index":1298,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["disjunct",{"_index":3027,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["dismissed",{"_index":2918,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["dismisses",{"_index":2930,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["dispatched",{"_index":3979,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["display",{"_index":34,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["displaycombounit",{"_index":3814,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["displayed",{"_index":30,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["displaying",{"_index":62,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["displayname",{"_index":961,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["displays",{"_index":1171,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/ErrorBannerComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["displaytext",{"_index":292,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["displayunit",{"_index":3815,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["displayvalue",{"_index":3804,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["dist",{"_index":4685,"title":{},"body":{"index.html":{}}}],["div",{"_index":4274,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["div2",{"_index":4276,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["dividing",{"_index":1672,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["docs",{"_index":3971,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"dependencies.html":{},"index.html":{}}}],["document",{"_index":2803,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["document.body.appendchild(link",{"_index":1905,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.body.appendchild(tip.container",{"_index":1086,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.body.removechild(link",{"_index":1907,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.body.removechild(tip.container",{"_index":1093,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.createelement('a",{"_index":1899,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.createelement('div",{"_index":1076,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.queryselector('.tooltip.vcd",{"_index":4270,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["document.queryselectorall('.tooltip.vcd",{"_index":4265,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["documentation",{"_index":4706,"title":{},"body":{"index.html":{}}}],["documented",{"_index":4526,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":441,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["domrect",{"_index":2822,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["domutil",{"_index":2512,"title":{"classes/DomUtil.html":{}},"body":{"classes/DomUtil.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["don't",{"_index":566,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":557,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["dosearch",{"_index":4004,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["dot",{"_index":1735,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["double",{"_index":1933,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["doubled",{"_index":1934,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["down",{"_index":2618,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/enumerations.html":{}}}],["download",{"_index":1870,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloadcsvfile",{"_index":1852,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["downloadcsvfile(csvfile",{"_index":1866,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["downloaddata(data",{"_index":2149,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloaded",{"_index":1872,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloading",{"_index":2076,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloadingmessage",{"_index":2077,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downs",{"_index":2848,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dr",{"_index":1285,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["driver",{"_index":925,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["drop",{"_index":2782,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["dropdown",{"_index":154,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dropdown'},{'name",{"_index":676,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown.component",{"_index":2608,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{}}}],["dropdown.menu",{"_index":2630,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdown/dropdown.module",{"_index":4360,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{}}}],["dropdown[vcddropdownfocushandler",{"_index":2541,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdown[vcddropdownfocushandler]'},{'name",{"_index":703,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown[vcddynamicdropdown",{"_index":2788,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdown[vcddynamicdropdown]'},{'name",{"_index":706,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown_focus_handler_provider",{"_index":2758,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dropdown_item_selector",{"_index":4767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdownbtn",{"_index":2804,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowncomponent",{"_index":675,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"overview.html":{}}}],["dropdownfocushandlerdirective",{"_index":702,"title":{"directives/DropdownFocusHandlerDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"overview.html":{}}}],["dropdownfocushandlerdirective.ngafterviewinit",{"_index":2706,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["dropdownfocushandlerservice",{"_index":2539,"title":{"injectables/DropdownFocusHandlerService.html":{}},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["dropdownfocushandlerservicefactory",{"_index":4781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":2799,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenu(dropdown",{"_index":2851,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenuelement",{"_index":2790,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenuheight",{"_index":2876,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect",{"_index":2791,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.bottom",{"_index":2877,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.height",{"_index":2886,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.top",{"_index":2878,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.width",{"_index":2889,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmodule",{"_index":2746,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["dropdowntriggerel",{"_index":2544,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdowntriggerelement",{"_index":2792,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerheight",{"_index":2873,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect",{"_index":2793,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.bottom",{"_index":2874,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.left",{"_index":2888,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.top",{"_index":2875,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["due",{"_index":1388,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["duplicate",{"_index":3136,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{}}}],["duplication",{"_index":3126,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["during",{"_index":1522,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["dynamic",{"_index":1799,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"dependencies.html":{}}}],["dynamically",{"_index":1788,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["dynamicdropdownpositiondirective",{"_index":704,"title":{"directives/DynamicDropdownPositionDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"overview.html":{}}}],["e",{"_index":1158,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{}}}],["e.g",{"_index":2255,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["e2e",{"_index":4691,"title":{},"body":{"index.html":{}}}],["each",{"_index":547,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["earlier",{"_index":251,"title":{},"body":{"classes/ActionSearchProvider.html":{},"contributing.html":{}}}],["edit",{"_index":1009,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["edited",{"_index":1863,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["editing",{"_index":1011,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["el",{"_index":517,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["el.addeventlistener('mouseenter",{"_index":1162,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.addeventlistener('mouseleave",{"_index":1163,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.getboundingclientrect",{"_index":1118,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["el.innerhtml",{"_index":1134,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["el.nativeelement.dispatchevent(new",{"_index":536,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.nativeelement.textcontent.includes(value",{"_index":498,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.nativeelement.textcontent.trim",{"_index":3190,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["el.nativeelement.value",{"_index":540,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.parent",{"_index":501,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.queryselector(classselector",{"_index":2527,"title":{},"body":{"classes/DomUtil.html":{}}}],["el.removeeventlistener('mouseenter",{"_index":1165,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.removeeventlistener('mouseleave",{"_index":1166,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["element",{"_index":463,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["element's",{"_index":1217,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/FormInputComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["element.innerhtml",{"_index":3923,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["element.nativeelement.click",{"_index":531,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["element.queryall(by.css(cssselector",{"_index":490,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["elementlocator",{"_index":926,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"miscellaneous/typealiases.html":{}}}],["elementref",{"_index":1028,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["elements",{"_index":458,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["elements.map((element",{"_index":496,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["elementtoscroll",{"_index":2526,"title":{},"body":{"classes/DomUtil.html":{}}}],["elementtoscroll.scrollintoview",{"_index":2528,"title":{},"body":{"classes/DomUtil.html":{}}}],["ellipsis",{"_index":1199,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["elref",{"_index":2523,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["elref.nativeelement",{"_index":2525,"title":{},"body":{"classes/DomUtil.html":{}}}],["emission",{"_index":2249,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["emit",{"_index":3771,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["emitevent",{"_index":3773,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["emits",{"_index":1489,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["emitted",{"_index":1348,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["emitting",{"_index":2278,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":346,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["emptycolumnplaceholder",{"_index":1743,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["emptygridplaceholder",{"_index":1517,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["enabled",{"_index":526,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/TestElement.html":{}}}],["encoded",{"_index":1920,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodes",{"_index":1877,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodevalue(cell",{"_index":1916,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodevalue(cellvalue",{"_index":1927,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encourage",{"_index":3133,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["end",{"_index":2494,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["enforce",{"_index":803,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["enough",{"_index":2783,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["ensure",{"_index":4024,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ensurefirstsectionisloaded",{"_index":4020,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["enter",{"_index":3293,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["enterclicked",{"_index":3282,"title":{},"body":{"components/FormInputComponent.html":{}}}],["entered",{"_index":207,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["entire",{"_index":740,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["entities",{"_index":258,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["entity",{"_index":39,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["entrycomponents",{"_index":4369,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["enum",{"_index":27,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":4636,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":4785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":3034,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":2476,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["equals",{"_index":3791,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["equalto",{"_index":2972,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["equalto(value",{"_index":3009,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["equivalent",{"_index":3627,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["error",{"_index":358,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"modules/VcdErrorBannerModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error('clarity",{"_index":2867,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["error('could",{"_index":4299,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["error('query",{"_index":2300,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["error('the",{"_index":2475,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["error('unsubscribing",{"_index":3514,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["error(`a",{"_index":2366,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["error(`could",{"_index":600,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["error(`did",{"_index":3217,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error(`expected",{"_index":3218,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error/error",{"_index":4370,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["errorbannercomponent",{"_index":677,"title":{"components/ErrorBannerComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["errorbannerwidgetobject",{"_index":2944,"title":{"classes/ErrorBannerWidgetObject.html":{}},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["errorkeys",{"_index":828,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["errorlabels",{"_index":823,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["errormessage",{"_index":2911,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errormessage(val",{"_index":2940,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errormessagechange",{"_index":2919,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errorobjectvalue",{"_index":3830,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["errors",{"_index":376,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/BaseFormControl.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{}}}],["errortext",{"_index":410,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["escape",{"_index":1940,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormInputComponent.html":{}}}],["escapeclicked",{"_index":3283,"title":{},"body":{"components/FormInputComponent.html":{}}}],["escapepressed",{"_index":2694,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["etc",{"_index":779,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["evaluator",{"_index":4603,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":2633,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["event",{"_index":743,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["event('blur",{"_index":537,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["event('input",{"_index":3177,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["event.preventdefault",{"_index":2731,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["event.stoppropagation",{"_index":2645,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["eventemitter",{"_index":1240,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["eventemitter(false",{"_index":3314,"title":{},"body":{"components/FormInputComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["eventhandler",{"_index":1157,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/typealiases.html":{}}}],["eventproperties",{"_index":762,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["eventproperties[key",{"_index":3170,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["events",{"_index":394,"title":{},"body":{"classes/ActivityReporter.html":{},"components/ErrorBannerComponent.html":{}}}],["eventsource",{"_index":3945,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["eventtype",{"_index":766,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["everywhere",{"_index":3952,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ex",{"_index":3660,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["examine",{"_index":4028,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["example",{"_index":233,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{}}}],["examples",{"_index":2304,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["excel",{"_index":1880,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["except",{"_index":2705,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["excluding",{"_index":1604,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["execute",{"_index":4689,"title":{},"body":{"index.html":{}}}],["executed",{"_index":104,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["executing",{"_index":2614,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/MenuItem.html":{}}}],["exist",{"_index":2368,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["existing",{"_index":1599,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["expand",{"_index":1511,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expanded",{"_index":1508,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expect(el.enabled()).tobetruthy",{"_index":518,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["experience",{"_index":2813,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["explain",{"_index":4530,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["export.csv",{"_index":2044,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportalltext",{"_index":2051,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportcolumn",{"_index":2007,"title":{"interfaces/ExportColumn.html":{}},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportdata",{"_index":2000,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportdata(records",{"_index":2139,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exported",{"_index":1909,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter",{"_index":2031,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["exporter'},{'name",{"_index":663,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["exporter.component",{"_index":4393,"title":{},"body":{"modules/VcdDataExporterModule.html":{}}}],["exporter.component.html",{"_index":2032,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.component.scss",{"_index":2033,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.component.ts",{"_index":1998,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["exporter.module",{"_index":4385,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["exporter.module.ts",{"_index":4392,"title":{},"body":{"modules/VcdDataExporterModule.html":{}}}],["exporter.service",{"_index":2013,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.service.ts",{"_index":1850,"title":{},"body":{"injectables/CsvExporterService.html":{},"miscellaneous/variables.html":{}}}],["exporter.service.ts:21",{"_index":1856,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.service.ts:30",{"_index":1874,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.service.ts:39",{"_index":1868,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.title",{"_index":2047,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.wo.ts",{"_index":2171,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:12",{"_index":2208,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:17",{"_index":2186,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:22",{"_index":2190,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:27",{"_index":2184,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:32",{"_index":2197,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:37",{"_index":2193,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:42",{"_index":2207,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:47",{"_index":2204,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:52",{"_index":2201,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:57",{"_index":2199,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:63",{"_index":2214,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter/csv",{"_index":1849,"title":{},"body":{"injectables/CsvExporterService.html":{},"miscellaneous/variables.html":{}}}],["exporter/data",{"_index":1997,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"miscellaneous/enumerations.html":{}}}],["exports",{"_index":2752,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["exportstage",{"_index":2100,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporttext",{"_index":2055,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["expose",{"_index":3130,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["exposed",{"_index":1313,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["expresses",{"_index":371,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["expression",{"_index":2985,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":1708,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expressions",{"_index":2959,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["extend",{"_index":909,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["extended",{"_index":2221,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["extends",{"_index":168,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["extension",{"_index":134,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["extra",{"_index":1685,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["extract",{"_index":3703,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["extracting",{"_index":3601,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["extremely",{"_index":4696,"title":{},"body":{"index.html":{}}}],["fa",{"_index":4726,"title":{},"body":{"index.html":{}}}],["fails",{"_index":4559,"title":{},"body":{"contributing.html":{}}}],["failure",{"_index":356,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["false",{"_index":101,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":2466,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["fast",{"_index":4544,"title":{},"body":{"contributing.html":{}}}],["fb",{"_index":2459,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/FilterBuilder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["fb.result",{"_index":3038,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["feature",{"_index":4553,"title":{},"body":{"contributing.html":{}}}],["featurebe",{"_index":4571,"title":{},"body":{"contributing.html":{}}}],["featured",{"_index":120,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["featuredcount",{"_index":142,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["featureif",{"_index":4568,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":1346,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["featureupdating",{"_index":4558,"title":{},"body":{"contributing.html":{}}}],["female",{"_index":3597,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1999,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"contributing.html":{}}}],["fetched",{"_index":237,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fetching",{"_index":1381,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["field",{"_index":838,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["field:after",{"_index":3341,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["fieldcolumnrendererspec",{"_index":1234,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fieldgroup",{"_index":4439,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["fieldname",{"_index":1235,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fieldnamemap",{"_index":2098,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fieldrenderer",{"_index":1236,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fields",{"_index":1861,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{}}}],["fieldtype",{"_index":3403,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["filed",{"_index":1698,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filename",{"_index":1867,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["files",{"_index":3144,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["fills",{"_index":1449,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filter",{"_index":1265,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["filter'},{'name",{"_index":669,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["filter((action",{"_index":289,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["filter(formcontrol",{"_index":2372,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filter.component",{"_index":4406,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["filter.component.html",{"_index":2314,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filter.component.scss",{"_index":2383,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filter.component.ts",{"_index":2307,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filter.component.ts:101",{"_index":2318,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:102",{"_index":2463,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:105",{"_index":2327,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:115",{"_index":2319,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:120",{"_index":2395,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:122",{"_index":2320,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:128",{"_index":2393,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:129",{"_index":2321,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:132",{"_index":2396,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":2492,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":2485,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2408,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:42",{"_index":2406,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:43",{"_index":2410,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:48",{"_index":2403,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:49",{"_index":2392,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:55",{"_index":2412,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:57",{"_index":2493,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:58",{"_index":2465,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:62",{"_index":2401,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":2391,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":2489,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":2460,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:69",{"_index":2315,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:70",{"_index":2415,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:73",{"_index":2394,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:76",{"_index":2461,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:77",{"_index":2338,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:78",{"_index":2390,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:79",{"_index":2317,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:80",{"_index":2464,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:84",{"_index":2398,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:87",{"_index":2323,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:89",{"_index":2400,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:98",{"_index":2462,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.getvalue",{"_index":1626,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filter.ts",{"_index":2220,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["filter.ts:107",{"_index":2259,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:112",{"_index":2246,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:117",{"_index":2265,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:122",{"_index":2250,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:127",{"_index":2253,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:132",{"_index":2256,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:137",{"_index":2244,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:147",{"_index":2272,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:59",{"_index":2243,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:60",{"_index":2236,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:71",{"_index":2238,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:72",{"_index":2267,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:80",{"_index":2269,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:87",{"_index":2241,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:89",{"_index":2257,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:99",{"_index":2248,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter_selector",{"_index":4768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterable/sortable",{"_index":1730,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["filterbuilder",{"_index":2346,"title":{"classes/FilterBuilder.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["filterbuilder().any(...selectedfilters).getstring",{"_index":2376,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filterbuilder().is('').and(...builders",{"_index":3069,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder().is(this.queryfield",{"_index":2440,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filterbuilder().is(this.queryfield).equalto(selectedoption",{"_index":2375,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filterbuilder().is(this.result).condition(operators.ge",{"_index":3067,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder().is(this.result).condition(operators.le",{"_index":3068,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder(this",{"_index":3037,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder.betweennumbers([from",{"_index":2445,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filterbuilder.equalto(value).getstring",{"_index":2480,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filterbuilder.greaterthan(from).getstring",{"_index":2443,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filterbuilder.lessthan(to).getstring",{"_index":2444,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filtercolumn",{"_index":3077,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["filtercomponentrendererspec",{"_index":2308,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filtercomponentrendererspec(componentrendererspec",{"_index":2306,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtercomponentrendererspec({type",{"_index":2303,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filterconfig",{"_index":1716,"title":{"interfaces/FilterConfig.html":{}},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filtercontainer",{"_index":2237,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filtercontainer.setfilter(this",{"_index":2283,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtered",{"_index":2281,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtering",{"_index":1327,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filtering/sorting/paging",{"_index":1523,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filterrendererspec",{"_index":1717,"title":{"interfaces/FilterRendererSpec.html":{}},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filters",{"_index":1356,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{},"miscellaneous/variables.html":{}}}],["filters/datagrid",{"_index":1264,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{}}}],["filterselect",{"_index":2471,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["filtertesthostcomponent",{"_index":679,"title":{"components/FilterTestHostComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["filtertesthostcomponent.filtercolumn",{"_index":3084,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["filtertext",{"_index":2500,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filtertype",{"_index":3083,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["find",{"_index":438,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["find((item",{"_index":3915,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["find(params",{"_index":4479,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["find(widgetconstructor",{"_index":577,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["find>(params",{"_index":3212,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findablewidget",{"_index":485,"title":{"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findbestunit",{"_index":3632,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["findbestunit(value",{"_index":3643,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["findcolumnindex(col",{"_index":1559,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["findelement",{"_index":715,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findelement(selector",{"_index":746,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findelements",{"_index":716,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["findelements(selector",{"_index":749,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["finder",{"_index":483,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["finder.detectchanges",{"_index":3113,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.find(clrdatagridwidgetobject",{"_index":3108,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.hostcomponent.setfilter(filtertype",{"_index":3109,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.ts",{"_index":559,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"miscellaneous/variables.html":{}}}],["finder.ts:21",{"_index":565,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:26",{"_index":563,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:32",{"_index":1990,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["finder.ts:47",{"_index":579,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:72",{"_index":575,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finding",{"_index":3695,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["findparams",{"_index":3114,"title":{"interfaces/FindParams.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findparams).woconstructor",{"_index":3220,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findparent",{"_index":443,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["findparent(cssselector",{"_index":453,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["findrow.item",{"_index":1409,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["finds",{"_index":245,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findwidget",{"_index":444,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["findwidget(widget",{"_index":465,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{}}}],["findwidgets",{"_index":3200,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findwidgets(params",{"_index":4481,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["finished",{"_index":2006,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fiql",{"_index":1353,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fired",{"_index":103,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/variables.html":{}}}],["fires",{"_index":2087,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["firetiptransitionendfortests",{"_index":4769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":35,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["first.buildpartial",{"_index":3050,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["first.clear",{"_index":3056,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["firstitem",{"_index":1359,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fix",{"_index":1400,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fixes",{"_index":4538,"title":{},"body":{"contributing.html":{}}}],["fixture",{"_index":522,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture's",{"_index":3117,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture.componentinstance",{"_index":725,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture.debugelement",{"_index":3157,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixup",{"_index":4569,"title":{},"body":{"contributing.html":{}}}],["flag",{"_index":4006,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["flat",{"_index":4034,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["flatactionlist",{"_index":299,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatactionlist.concat(this.getflatlistofavailableactions(currentaction.children",{"_index":300,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatactionlist.push",{"_index":305,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatlistofavailableactions",{"_index":175,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flex",{"_index":3349,"title":{},"body":{"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["float",{"_index":1781,"title":{},"body":{"classes/CommonUtil.html":{}}}],["floating",{"_index":1779,"title":{},"body":{"classes/CommonUtil.html":{}}}],["flow",{"_index":4508,"title":{},"body":{"contributing.html":{}}}],["focus",{"_index":2533,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["focusable",{"_index":2597,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["focused",{"_index":2691,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"miscellaneous/variables.html":{}}}],["focushandlerservice",{"_index":2561,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["folder",{"_index":4697,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1401,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["followed",{"_index":4665,"title":{},"body":{"index.html":{}}}],["following",{"_index":1197,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"contributing.html":{},"index.html":{}}}],["font",{"_index":977,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["footer",{"_index":1318,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["footer').offsetheight",{"_index":1664,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["footerheight",{"_index":1662,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["force",{"_index":4556,"title":{},"body":{"contributing.html":{}}}],["forcedropdownopen",{"_index":2086,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fork",{"_index":4520,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":681,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["form.scss",{"_index":3313,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["form.scss,./form",{"_index":3273,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["form/form.module",{"_index":4387,"title":{},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormlyModule.html":{}}}],["form/number",{"_index":3452,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["form/validators",{"_index":3670,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["format",{"_index":2018,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["format(1000",{"_index":4348,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["format(value",{"_index":4345,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formats",{"_index":4062,"title":{},"body":{"classes/Percent.html":{}}}],["formatted",{"_index":1354,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{}}}],["formatter",{"_index":3672,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{}}}],["formatter.ts",{"_index":4333,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatter.ts:15",{"_index":4336,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatter.ts:29",{"_index":4347,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatter.ts:46",{"_index":4338,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatting",{"_index":2481,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"contributing.html":{}}}],["formbuilder",{"_index":2417,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcheckboxcomponent",{"_index":680,"title":{"components/FormCheckboxComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":826,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcontrol(false",{"_index":2362,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["formcontrol(null",{"_index":2430,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formcontrol(true",{"_index":2103,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["formcontrol.value",{"_index":3267,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcontrol.value:min.tostring():max",{"_index":3340,"title":{},"body":{"components/FormInputComponent.html":{}}}],["formcontrolname",{"_index":834,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["formcontrolnamedirective",{"_index":814,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["formfields",{"_index":2419,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"miscellaneous/enumerations.html":{}}}],["formfields.from",{"_index":2429,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formfields.to",{"_index":2431,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formgroup",{"_index":2011,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formgroup(controls",{"_index":2135,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["forminputcomponent",{"_index":683,"title":{"components/FormInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["forminputcomponent.enterclicked",{"_index":3406,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.errorlabels",{"_index":3423,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.escapeclicked",{"_index":3408,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.hintposition",{"_index":3420,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.max",{"_index":3414,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.min",{"_index":3411,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.type",{"_index":3417,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["formly",{"_index":686,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["formly.config",{"_index":4468,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly.config.ts",{"_index":4436,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["formly.module.ts",{"_index":4459,"title":{},"body":{"modules/VcdFormlyModule.html":{},"miscellaneous/variables.html":{}}}],["formly.module.ts:37",{"_index":4462,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly/core",{"_index":3425,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["formly/core/select",{"_index":4467,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly_config",{"_index":4465,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlyfieldconfig",{"_index":4438,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formlyform.fields",{"_index":4437,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formlyinputcomponent",{"_index":685,"title":{"components/FormlyInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlymodule",{"_index":4464,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlymodule.forchild(vcd_formly_config",{"_index":4470,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlynumberwithunitinputcomponent",{"_index":687,"title":{"components/FormlyNumberWithUnitInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlyselectcomponent",{"_index":689,"title":{"components/FormlySelectComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlyselectmodule",{"_index":4466,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlytemplateoptions",{"_index":4444,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formselectcomponent",{"_index":691,"title":{"components/FormSelectComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":4105,"title":{},"body":{"modules/QuickSearchModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{}}}],["formvalidators",{"_index":3374,"title":{"classes/FormValidators.html":{}},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formvalidators.createnullsafevalidator((control",{"_index":3397,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["forroot",{"_index":4460,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["forroot(configoption",{"_index":4461,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["forward",{"_index":4545,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":594,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["four",{"_index":4649,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":2061,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["friendlyfieldscontrol",{"_index":2118,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynames",{"_index":2021,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["friendlynamescheckboxlabel",{"_index":2063,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynameshint",{"_index":2068,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynamesinfomessage",{"_index":2065,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["frmctrl",{"_index":2367,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["frominput",{"_index":2386,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["full",{"_index":1172,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"contributing.html":{}}}],["function",{"_index":52,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":250,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["functionrenderer",{"_index":1237,"title":{"interfaces/FunctionRenderer.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["functionrendererpipe",{"_index":3467,"title":{"pipes/FunctionRendererPipe.html":{}},"body":{"pipes/FunctionRendererPipe.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":3098,"title":{},"body":{"components/FilterTestHostComponent.html":{},"pipes/FunctionRendererPipe.html":{}}}],["functions/getters",{"_index":943,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":4657,"title":{},"body":{"index.html":{}}}],["furthur",{"_index":2896,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["gave",{"_index":362,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["gb",{"_index":4344,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["ge",{"_index":3031,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["gender",{"_index":3590,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":328,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"contributing.html":{},"index.html":{}}}],["generated",{"_index":837,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"index.html":{}}}],["generates",{"_index":354,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"index.html":{}}}],["generator",{"_index":885,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["generator.ts",{"_index":3520,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator.ts:10",{"_index":3525,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator.ts:15",{"_index":3526,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator.ts:17",{"_index":3523,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator/id",{"_index":884,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["generic",{"_index":1954,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["generics",{"_index":1765,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["get(cssselector",{"_index":470,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["getactions",{"_index":182,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getactions(searchcriteria",{"_index":221,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getallunittypes",{"_index":3843,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["getariarole",{"_index":2948,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["getbase",{"_index":1958,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["getbasevalue",{"_index":3635,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getbasevalue(value",{"_index":3651,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getboldtext(row",{"_index":998,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["getbytext",{"_index":445,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{}}}],["getbytext(cssselector",{"_index":472,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["getcancelbutton",{"_index":2173,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getclrdatagrid",{"_index":4416,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["getcolumnbubbles",{"_index":2174,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckbox",{"_index":2182,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckbox(index",{"_index":2213,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckboxes",{"_index":2175,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumndropdown",{"_index":2176,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumnsconfig(columns",{"_index":1689,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getconfig",{"_index":2268,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["getcontextualactions",{"_index":1545,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdebouncetimems",{"_index":2230,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["getdetailpanerenderspec(record",{"_index":1577,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdetailrowrenderspec",{"_index":1570,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdisplaynameforcolumn(col",{"_index":2165,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["getdisplaynameforfield(fieldname",{"_index":2161,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["getdisplayvalue",{"_index":3886,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getdropdownitemelement",{"_index":2550,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getdropdownitemelement(item",{"_index":2565,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["geterrorkeys",{"_index":878,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["geterrorlabels",{"_index":3421,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["geterrortext",{"_index":788,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["geterrortranslationparams(errorobjectvalue",{"_index":3829,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getexportbutton",{"_index":2177,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getflatlistofavailableactions",{"_index":183,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getflatlistofavailableactions(actions",{"_index":226,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getformatteddatevalue(value",{"_index":3323,"title":{},"body":{"components/FormInputComponent.html":{}}}],["getformcontrol",{"_index":873,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getgridheader",{"_index":4414,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["gethintposition",{"_index":3418,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getischeckbox",{"_index":3260,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["getistooltipvisible",{"_index":4228,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["getisunitdropdowndisplayed",{"_index":3899,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getloadingtext",{"_index":792,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["getmax",{"_index":3412,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getmin",{"_index":3409,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getmultiplier",{"_index":3636,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getnativeelement",{"_index":3866,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getnativeelement(cssselector",{"_index":3879,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getnestedmenutrigger",{"_index":2604,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getnodetext",{"_index":717,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["getnodetext(el",{"_index":752,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["getokbutton",{"_index":914,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getokbuttoncontainer",{"_index":917,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getoutputvalue",{"_index":3637,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["getoutputvalue(value",{"_index":3654,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getpagesize",{"_index":1646,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpagesizeoptions",{"_index":1649,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpaginationtranslation(paginationdata",{"_index":1641,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpositionleft",{"_index":2831,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["getpositiontop",{"_index":2829,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["getprogress",{"_index":2178,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getqueryfield",{"_index":2271,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["getreadonlytext",{"_index":3888,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getregisteredproviders",{"_index":4137,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["getrootmenutrigger",{"_index":2602,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getrunning",{"_index":786,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["gets",{"_index":117,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/DataExporterWidgetObject.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"contributing.html":{}}}],["getselectedoption",{"_index":3361,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["getselectedunit",{"_index":3786,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getselectedunitdisplayvalue",{"_index":3897,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getselectoptions",{"_index":3460,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["getshowerrors",{"_index":876,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["getshowunlimitedoption",{"_index":3446,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getsingleunitdisplaytext",{"_index":3901,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getsize",{"_index":3564,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["getspinner",{"_index":4292,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["getstring",{"_index":2973,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["getsucesstext",{"_index":790,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["getter",{"_index":3527,"title":{},"body":{"classes/IdGenerator.html":{}}}],["gettext",{"_index":718,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["gettext(cssselector",{"_index":754,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["gettexts",{"_index":719,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["gettexts(cssselector",{"_index":758,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["getting",{"_index":2251,"title":{"contributing.html":{},"index.html":{}},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MenuItem.html":{}}}],["gettogglefriendlynames",{"_index":2179,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettogglesanitize",{"_index":2180,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettoggleselectall",{"_index":2181,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettooltip",{"_index":4240,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipcontent",{"_index":4238,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipcount",{"_index":4234,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipposition",{"_index":4232,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipsize",{"_index":4226,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltiptext",{"_index":4230,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipvisibility",{"_index":4236,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettype",{"_index":3415,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["getunit",{"_index":2414,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["getunitformcontrol",{"_index":3895,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getunitmultiplier",{"_index":3844,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["getunitname",{"_index":3638,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getunitnametranslationkey",{"_index":3633,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getunitoptions",{"_index":2411,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["getunlimitedformcontrol",{"_index":3891,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getunlimitedvalue",{"_index":3449,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getusernamefield",{"_index":912,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getvalue",{"_index":2231,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getvalueformcontrol",{"_index":3893,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getvaluewithunittranslationkey",{"_index":3634,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getwrapcharacter(inputposition",{"_index":2508,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["getwrapcharacter(position",{"_index":2505,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["gfm",{"_index":4578,"title":{},"body":{"contributing.html":{}}}],["ghpages",{"_index":4606,"title":{},"body":{"dependencies.html":{}}}],["ghz",{"_index":3662,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["git",{"_index":4551,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["git@github.com:vmware/vmware",{"_index":4731,"title":{},"body":{"index.html":{}}}],["github",{"_index":4573,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["given",{"_index":364,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["gives",{"_index":523,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":29,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["go",{"_index":1344,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["goes",{"_index":1343,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["going",{"_index":1747,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["good",{"_index":2812,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["greater",{"_index":3000,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthan",{"_index":2974,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthan(value",{"_index":3013,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthanorequalto",{"_index":2975,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthanorequalto(value",{"_index":3015,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["grid",{"_index":1293,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["grid's",{"_index":3101,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["grid.getfilter(filtertype",{"_index":3110,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["grid.parentnode.clientheight",{"_index":1658,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('.datagrid",{"_index":1660,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('.vcd",{"_index":1669,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('clr",{"_index":1663,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridcolumn",{"_index":960,"title":{"interfaces/GridColumn.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridcolumn.filter",{"_index":2223,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["gridcolumn.filterrendererspec",{"_index":2305,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["gridcolumn.renderer",{"_index":1232,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridcolumnhideable",{"_index":1268,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["gridcolumnhideable.never",{"_index":1636,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["griddata",{"_index":3078,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["griddata(result",{"_index":1382,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["griddatafetchresult",{"_index":1301,"title":{"interfaces/GridDataFetchResult.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridheader",{"_index":4412,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["gridheight",{"_index":1657,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridrefresh",{"_index":1525,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grids",{"_index":1746,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["gridselectiontype",{"_index":1294,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["gridselectiontype.multi",{"_index":1467,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridselectiontype.none",{"_index":1513,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridselectiontype.single",{"_index":1465,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridstate",{"_index":1352,"title":{"interfaces/GridState.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridstatechanged(state",{"_index":1618,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["group",{"_index":3346,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["group.hide",{"_index":3351,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["grouped",{"_index":121,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["groups",{"_index":130,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["grow",{"_index":3350,"title":{},"body":{"components/FormInputComponent.html":{}}}],["gt",{"_index":3030,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["guidelines",{"_index":4736,"title":{},"body":{"index.html":{}}}],["h",{"_index":569,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["handle",{"_index":3302,"title":{},"body":{"components/FormInputComponent.html":{}}}],["handled",{"_index":4058,"title":{},"body":{"classes/Percent.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["handleitem(item",{"_index":4044,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["handler",{"_index":67,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["handler.directive",{"_index":2715,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{}}}],["handler.directive.ts",{"_index":2534,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["handler.directive.ts:118",{"_index":2569,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:129",{"_index":2589,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:137",{"_index":2587,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:143",{"_index":2588,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:150",{"_index":2581,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:164",{"_index":2566,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:171",{"_index":2567,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:193",{"_index":2591,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:197",{"_index":2603,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:204",{"_index":2605,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:212",{"_index":2568,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:66",{"_index":2563,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:78",{"_index":2596,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:82",{"_index":2598,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:83",{"_index":2593,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:84",{"_index":2592,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:85",{"_index":2595,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:86",{"_index":2600,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:87",{"_index":2599,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:88",{"_index":2601,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:94",{"_index":2582,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.service",{"_index":2607,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["handler.service.ts",{"_index":2686,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:106",{"_index":2700,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:16",{"_index":2714,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:17",{"_index":2699,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:21",{"_index":2713,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:28",{"_index":2710,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:51",{"_index":2712,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:72",{"_index":2704,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handlerdata",{"_index":56,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["handlers",{"_index":2575,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["happen",{"_index":3489,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["happens",{"_index":3980,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["hasdgstringfilter",{"_index":3103,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["hasfinder",{"_index":3225,"title":{"interfaces/HasFinder.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["haspartialresult(searchsection",{"_index":4054,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["haspotentialinjection",{"_index":1853,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["haspotentialinjection(row",{"_index":1910,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["haspotentialinjection(rows",{"_index":1873,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["hasstaticactions",{"_index":1419,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["head",{"_index":4724,"title":{},"body":{"index.html":{}}}],["header",{"_index":1280,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["header').offsetheight",{"_index":1661,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["header.offsetheight",{"_index":1670,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["headerheight",{"_index":1659,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["heading",{"_index":1724,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["headless",{"_index":4784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1124,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["height(height",{"_index":1450,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["heightcssvalue",{"_index":1452,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["help",{"_index":1879,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["helper.ts",{"_index":4186,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:102",{"_index":4237,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:106",{"_index":4212,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:110",{"_index":4239,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:114",{"_index":4241,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:126",{"_index":4278,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:127",{"_index":4280,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:128",{"_index":4281,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:13",{"_index":4204,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:130",{"_index":4282,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:131",{"_index":4283,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:132",{"_index":4279,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:16",{"_index":4205,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:18",{"_index":4207,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:20",{"_index":4209,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:22",{"_index":4211,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:24",{"_index":4219,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:28",{"_index":4221,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:44",{"_index":4223,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:49",{"_index":4225,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:54",{"_index":4227,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:58",{"_index":4215,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:62",{"_index":4216,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:66",{"_index":4217,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:70",{"_index":4213,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:74",{"_index":4214,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:78",{"_index":4229,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:82",{"_index":4231,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:86",{"_index":4233,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:98",{"_index":4235,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helps",{"_index":1497,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hence",{"_index":3967,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["here",{"_index":1326,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["here;(created=lt=datetime,uptime=gt=3600000",{"_index":2968,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["hidden",{"_index":102,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["hide",{"_index":1025,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["hideable",{"_index":1726,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["hidedelay",{"_index":4189,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hides",{"_index":4287,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["hidetimeout",{"_index":1057,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hidetooltip(delay",{"_index":1102,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hiding",{"_index":1056,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hint",{"_index":2067,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["hintposition",{"_index":3278,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["hook",{"_index":2634,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/MenuItem.html":{}}}],["host",{"_index":574,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["host(.site",{"_index":3373,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["hostbinding",{"_index":1241,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hostbinding('class.fill",{"_index":1456,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hostcomponent",{"_index":561,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["hostelement",{"_index":1188,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["hostlistener",{"_index":2834,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["hostlisteners",{"_index":2797,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["hostposition",{"_index":4196,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["hostposition(quadrant",{"_index":4244,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hosttext",{"_index":4197,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["hosttext(text",{"_index":4250,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hostvcddropdown",{"_index":2560,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["hover",{"_index":1071,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["href",{"_index":1567,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["html",{"_index":652,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["htmlbaseelement",{"_index":3163,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmlelement",{"_index":1052,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["htmlelements",{"_index":3131,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmlinputelement",{"_index":3172,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmltextareaelement",{"_index":3173,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["http://localhost:4200",{"_index":4669,"title":{},"body":{"index.html":{}}}],["https://github.com/vmware/clarity/issues/2265",{"_index":1391,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["https://github.com/vmware/clarity/issues/4806",{"_index":1402,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["https://github.com/vmware/vmware",{"_index":4695,"title":{},"body":{"index.html":{}}}],["https://jira.eng.vmware.com/browse/vducc",{"_index":1749,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/variables.html":{}}}],["https://stackoverflow.com/questions/59055154/typescript",{"_index":1764,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["i.e",{"_index":3932,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["i18n",{"_index":70,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["i18nmodule",{"_index":2776,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["icon",{"_index":119,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["icon_and_text",{"_index":4646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["iconshape",{"_index":3231,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["id",{"_index":815,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/DomUtil.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"injectables/QuickSearchService.html":{},"miscellaneous/variables.html":{}}}],["idcounter",{"_index":3521,"title":{},"body":{"classes/IdGenerator.html":{}}}],["identifier",{"_index":1566,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["identifiers",{"_index":2014,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["identify",{"_index":1737,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["identifying",{"_index":4449,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["idgenerator",{"_index":882,"title":{"classes/IdGenerator.html":{}},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["idgenerator#id",{"_index":3530,"title":{},"body":{"classes/IdGenerator.html":{}}}],["idgenerator('base",{"_index":889,"title":{},"body":{"classes/BaseFormControl.html":{},"miscellaneous/variables.html":{}}}],["idgenerator('cy",{"_index":1991,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{},"miscellaneous/variables.html":{}}}],["idgenerator('vcd",{"_index":2354,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["idgenerator.generate",{"_index":892,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["idgenerator.idcounter",{"_index":3529,"title":{},"body":{"classes/IdGenerator.html":{}}}],["ids",{"_index":2352,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["ie",{"_index":1896,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["ignore",{"_index":3185,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["ignored",{"_index":2245,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["ime",{"_index":3310,"title":{},"body":{"components/FormInputComponent.html":{}}}],["immediately",{"_index":737,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implement",{"_index":1006,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implementation",{"_index":3118,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implementations",{"_index":3145,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implemented",{"_index":1787,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["implements",{"_index":170,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{}}}],["implies",{"_index":1007,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["import",{"_index":259,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["imports",{"_index":2762,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["impossible",{"_index":3821,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["inc",{"_index":2766,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["include",{"_index":3577,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["included",{"_index":3002,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["including",{"_index":4678,"title":{},"body":{"index.html":{}}}],["indeterminate",{"_index":2025,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexofsubscription",{"_index":3512,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["indicate",{"_index":2008,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["indicates",{"_index":97,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["indicating",{"_index":2023,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"contributing.html":{}}}],["indicator",{"_index":634,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["indicator'},{'name",{"_index":693,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["indicator.component",{"_index":4475,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{}}}],["indicator.component.html",{"_index":3536,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.scss",{"_index":3535,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":3532,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indicator.component.ts:27",{"_index":3563,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:38",{"_index":3549,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":3541,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:49",{"_index":3543,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:55",{"_index":3542,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:62",{"_index":3546,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:73",{"_index":3565,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.module",{"_index":4373,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{}}}],["indicator.module.ts",{"_index":4474,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{}}}],["indicators",{"_index":1310,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortype",{"_index":1503,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["infer",{"_index":947,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["inference",{"_index":1762,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["information",{"_index":993,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["inheritdoc",{"_index":486,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/TestElement.html":{}}}],["inherited",{"_index":217,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["initial",{"_index":840,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initialize",{"_index":2247,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["initialized",{"_index":202,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initializing",{"_index":1793,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["initially",{"_index":2282,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["initialselection",{"_index":1488,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initialvalue",{"_index":816,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["initialvalueunit",{"_index":3699,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["initiate",{"_index":2003,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["inject",{"_index":644,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"pipes/NestedPropertyPipe.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["inject(activitypromiseresolver",{"_index":645,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["inject(document",{"_index":2868,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["injectable",{"_index":1845,"title":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{}},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{}}}],["injectables",{"_index":1847,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{},"overview.html":{}}}],["injection",{"_index":1865,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["injector",{"_index":2687,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["inline",{"_index":153,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inner",{"_index":1053,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["innerheight",{"_index":1143,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["innervalue",{"_index":1928,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["innervalue.replace(/\"/g",{"_index":1935,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["innerwidth",{"_index":1142,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":109,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["input'},{'name",{"_index":684,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["input('vcdshowclippedtext",{"_index":1176,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["input.component",{"_index":3454,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["input.component.html",{"_index":3275,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.scss",{"_index":3274,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts",{"_index":3269,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["input.component.ts:104",{"_index":3308,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:121",{"_index":3306,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:127",{"_index":3305,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:37",{"_index":3410,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:39",{"_index":3439,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:40",{"_index":3297,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:43",{"_index":3413,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:45",{"_index":3441,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:46",{"_index":3295,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:460",{"_index":3926,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts:463",{"_index":3927,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts:49",{"_index":3416,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:490",{"_index":3640,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:491",{"_index":3645,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:495",{"_index":3646,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:499",{"_index":3647,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:51",{"_index":3443,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:52",{"_index":3289,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:55",{"_index":3419,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:57",{"_index":3299,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:61",{"_index":3422,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:62",{"_index":3298,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:63",{"_index":3447,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:67",{"_index":3291,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{}}}],["input.component.ts:72",{"_index":3287,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:75",{"_index":3407,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:77",{"_index":3285,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:82",{"_index":3312,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:88",{"_index":3300,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:93",{"_index":3284,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.setvalue(null",{"_index":3743,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.setvalue(this.bestvalue",{"_index":3763,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.setvalue(this.lastrealvalue",{"_index":3744,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.value",{"_index":3742,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.widget",{"_index":3865,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["input/form",{"_index":3268,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{}}}],["input/formly",{"_index":3436,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["input/number",{"_index":3453,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"miscellaneous/variables.html":{}}}],["input`).unwrap",{"_index":2218,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["inputchanged",{"_index":3277,"title":{},"body":{"components/FormInputComponent.html":{}}}],["inputposition",{"_index":2510,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["inputs",{"_index":619,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["inputs/input/formly",{"_index":4445,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputs/number",{"_index":4446,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputs/select/formly",{"_index":4447,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputunit",{"_index":3809,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/UnitFormatter.html":{}}}],["inputunit.findbestunit(value",{"_index":4353,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["inputvalueunit",{"_index":3680,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["insert",{"_index":4154,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["insertindex",{"_index":4150,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["inside",{"_index":954,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["inspect",{"_index":516,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["inspired",{"_index":3947,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["install",{"_index":4663,"title":{},"body":{"index.html":{}}}],["installed",{"_index":4679,"title":{},"body":{"index.html":{}}}],["instance",{"_index":727,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instancecount",{"_index":1175,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["instanceof",{"_index":1693,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["instances",{"_index":595,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"directives/ShowClippedTextDirective.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["instancetype",{"_index":3201,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instantiate",{"_index":2339,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["instantiated",{"_index":907,"title":{},"body":{"classes/BaseWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["instantiating",{"_index":3148,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instead",{"_index":865,"title":{},"body":{"classes/BaseFormControl.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["insures",{"_index":3990,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["intellij",{"_index":3953,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["interact",{"_index":3151,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ActivityResponse.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ActivityResponse.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"overview.html":{}}}],["interfaces/can",{"_index":886,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["interfaces/component",{"_index":969,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["interfaces/datagrid",{"_index":973,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["internal",{"_index":2863,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["internalization",{"_index":4658,"title":{},"body":{"index.html":{}}}],["internally",{"_index":2350,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["internals",{"_index":3124,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["interrupt",{"_index":2151,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["introduced",{"_index":3819,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["invoked",{"_index":2577,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["invoking",{"_index":3603,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["irrespective",{"_index":32,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["is(\"isvapptemplate\").equalto(true",{"_index":2960,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["is(\"vcd\").equalto(vcdid",{"_index":2961,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["is(property",{"_index":3017,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["isactionavailable",{"_index":184,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactionavailable(action",{"_index":228,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactiondisabled",{"_index":185,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactiondisabled(action",{"_index":230,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactive",{"_index":2232,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["ischeckbox",{"_index":3233,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["iscolumnhideable(column",{"_index":1634,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isdisabled",{"_index":853,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isdropdownopen",{"_index":2106,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isexportenabled",{"_index":2120,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isfindparamsobject(params",{"_index":3203,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["isfinite(control.value",{"_index":3400,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isfirstdropdowntrigger",{"_index":2884,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["isfunction",{"_index":1770,"title":{},"body":{"classes/CommonUtil.html":{}}}],["isfunction(value",{"_index":1772,"title":{},"body":{"classes/CommonUtil.html":{}}}],["isinrange",{"_index":3924,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isinrange(min",{"_index":3837,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isinsidemodal",{"_index":2794,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["isloading",{"_index":1521,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["ismouseover",{"_index":1062,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":1588,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isnan(number(control.value",{"_index":3838,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isnan(parsefloat(control.value",{"_index":3399,"title":{},"body":{"classes/FormValidators.html":{}}}],["isnullorundefined(item[property",{"_index":3622,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnullorundefined(value",{"_index":3619,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnullorundefined(value[nestedprop",{"_index":3620,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnumber",{"_index":3398,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isnumberinrange",{"_index":3379,"title":{},"body":{"classes/FormValidators.html":{}}}],["isnumberinrange(min",{"_index":3387,"title":{},"body":{"classes/FormValidators.html":{}}}],["isodatevalue",{"_index":3329,"title":{},"body":{"components/FormInputComponent.html":{}}}],["isoverflowing",{"_index":1215,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["isreadonly",{"_index":824,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["isreadytosearchpromise",{"_index":176,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isrequestpending",{"_index":2093,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isroot",{"_index":1960,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["isrootdropdown",{"_index":2545,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["isrowexpanded",{"_index":1509,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isseparator",{"_index":131,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["isspinnerspinning",{"_index":4293,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["issue",{"_index":4540,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":4581,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["istanbul",{"_index":3191,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["istooltipvisible",{"_index":4198,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["istranslatable",{"_index":126,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/SelectOption.html":{}}}],["isubscriptiontracker",{"_index":3476,"title":{"interfaces/ISubscriptionTracker.html":{}},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["isunitdropdowndisplayed",{"_index":3876,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["isvapptemplate==true;vcd==some",{"_index":2966,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["it's",{"_index":1149,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":64,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["item.displaytext",{"_index":4048,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["item.element",{"_index":2728,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["item.element.focus",{"_index":2730,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["item.getmultiplier",{"_index":3916,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["item.handler",{"_index":4050,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["item.interface",{"_index":1258,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["item.interface.ts",{"_index":7,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.matches(activatablemenuitemtype.button",{"_index":2662,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["item.object",{"_index":426,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["item.queryselector(nested_dropdown_trigger",{"_index":2663,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["item.response.error",{"_index":428,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["item:nth",{"_index":2216,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["item[property",{"_index":3623,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["itemclicked(item",{"_index":3995,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["itemdisplaytext",{"_index":3943,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["itemindex",{"_index":1611,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["items",{"_index":286,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["itemsperpage",{"_index":1317,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["iterable",{"_index":519,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["iterator",{"_index":553,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["itself",{"_index":2522,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["jan",{"_index":1893,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["jasmine",{"_index":4187,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["job",{"_index":4719,"title":{},"body":{"index.html":{}}}],["js",{"_index":4598,"title":{},"body":{"dependencies.html":{}}}],["js/ts",{"_index":3141,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["json",{"_index":2015,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"index.html":{}}}],["json.stringify(cellvalue",{"_index":1932,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["justify",{"_index":3580,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["karma",{"_index":4612,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["keep",{"_index":4735,"title":{},"body":{"index.html":{}}}],["key",{"_index":71,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":765,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keyboardevent",{"_index":3946,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["keyboardevent(eventtype",{"_index":3167,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keydown",{"_index":776,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keydown.arrowdown",{"_index":2736,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keydown.arrowleft",{"_index":2740,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keydown.arrowright",{"_index":2644,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["keydown.arrowup",{"_index":2738,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keyof",{"_index":945,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{}}}],["keypress",{"_index":777,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keys",{"_index":866,"title":{},"body":{"classes/BaseFormControl.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MenuItem.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/enumerations.html":{}}}],["keyup",{"_index":775,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["kinds",{"_index":1687,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["know",{"_index":327,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["known",{"_index":1389,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["knows",{"_index":437,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{}}}],["label",{"_index":146,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["label:first",{"_index":3370,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["labels",{"_index":864,"title":{},"body":{"classes/BaseFormControl.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["lap",{"_index":2898,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["last",{"_index":1058,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["lastitem",{"_index":1360,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["lastrealvalue",{"_index":3714,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["later",{"_index":3318,"title":{},"body":{"components/FormInputComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["latest",{"_index":4016,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["lazy",{"_index":3963,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["lazystring",{"_index":623,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["le",{"_index":3033,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["leading_control_char",{"_index":1908,"title":{},"body":{"injectables/CsvExporterService.html":{},"miscellaneous/variables.html":{}}}],["leading_control_char.test(encodevalue(cell",{"_index":1912,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["leading_control_char.test(value",{"_index":1946,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["leaks",{"_index":3138,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["leaky",{"_index":3223,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["lease",{"_index":4557,"title":{},"body":{"contributing.html":{}}}],["leave",{"_index":2784,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["left",{"_index":1034,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":651,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["length",{"_index":541,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["lengthy",{"_index":2027,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["less",{"_index":1218,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["lessthan",{"_index":2976,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthan(value",{"_index":3019,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthanorequalto",{"_index":2977,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthanorequalto(value",{"_index":3021,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["level",{"_index":1745,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["lg",{"_index":1044,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["lg(large",{"_index":3561,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["lib/directives/show",{"_index":1261,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["library",{"_index":323,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/ObjectAndResponse.html":{},"index.html":{}}}],["license",{"_index":2768,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["life",{"_index":3325,"title":{},"body":{"components/FormInputComponent.html":{}}}],["limit",{"_index":139,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/FilterBuilder.html":{}}}],["limited",{"_index":3731,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["limitedinput",{"_index":3720,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["limitedinputshowerrors",{"_index":3758,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["line",{"_index":3188,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["line:triple",{"_index":3790,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["line:typedef",{"_index":995,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["lines",{"_index":1938,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["link.click",{"_index":1906,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.setattribute('download",{"_index":1903,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.setattribute('href",{"_index":1902,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.style.visibility",{"_index":1904,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["linked",{"_index":2535,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["linkmenuitems",{"_index":2551,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["links",{"_index":2585,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["linkvertical",{"_index":2552,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["lint",{"_index":2671,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["list",{"_index":20,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["listed",{"_index":1302,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listen",{"_index":1549,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listeners",{"_index":1373,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listening",{"_index":2689,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentoarrowkeys",{"_index":2695,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentoarrowkeys(menucontainer",{"_index":2703,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentorightarrowkeypressonnestedtrigger",{"_index":2553,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["lit",{"_index":4614,"title":{},"body":{"dependencies.html":{}}}],["literal",{"_index":17,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/MockRecord.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":3970,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"dependencies.html":{},"index.html":{}}}],["load",{"_index":1742,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["loaded",{"_index":1539,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["loading",{"_index":374,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["loading/loading",{"_index":4372,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["loadingindicatorcomponent",{"_index":692,"title":{"components/LoadingIndicatorComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["loadingmessage",{"_index":620,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["loadingtext",{"_index":723,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["loadingtextkey",{"_index":3539,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["local",{"_index":3272,"title":{},"body":{"components/FormInputComponent.html":{}}}],["locale_id",{"_index":3610,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["localeid",{"_index":3614,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["localized",{"_index":4334,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["locator",{"_index":930,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["locatordriver",{"_index":442,"title":{"interfaces/LocatorDriver.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["locatorforchild",{"_index":920,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["locatorforparent",{"_index":921,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["locatorfortext",{"_index":922,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["logic",{"_index":1229,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["logical",{"_index":4516,"title":{},"body":{"contributing.html":{}}}],["loginwidgetobject",{"_index":911,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["long",{"_index":1067,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["longer",{"_index":1173,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["look",{"_index":3969,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["looks",{"_index":455,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{},"contributing.html":{}}}],["loop",{"_index":515,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["lower",{"_index":2999,"title":{},"body":{"classes/FilterBuilder.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["lt",{"_index":3032,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["ma",{"_index":2311,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["mac",{"_index":3949,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["made",{"_index":1005,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["magic",{"_index":1328,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["magically",{"_index":1705,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["main",{"_index":41,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["make",{"_index":809,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["makes",{"_index":1761,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"index.html":{}}}],["making",{"_index":1757,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["male",{"_index":3595,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":729,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["manipulate",{"_index":573,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["manual",{"_index":4535,"title":{},"body":{"contributing.html":{}}}],["manually",{"_index":650,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["many",{"_index":136,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{}}}],["map",{"_index":2099,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["map((action",{"_index":291,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["map((child",{"_index":2668,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["map(cols.map((col",{"_index":2169,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["map(selectedoption",{"_index":2374,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["mapped",{"_index":1602,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["mapselectedrecords(currentselection",{"_index":1606,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["margin",{"_index":2452,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FormInputComponent.html":{}}}],["marginleft",{"_index":2891,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["mark",{"_index":124,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"injectables/CsvExporterService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["marked",{"_index":2843,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["marks",{"_index":2921,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["massachusetts",{"_index":2312,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["master",{"_index":4555,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["match",{"_index":246,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["matchcase",{"_index":1983,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["matches",{"_index":460,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["matching",{"_index":160,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.hostelement.getboundingclientrect().width",{"_index":1220,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["math.floor(availableheight",{"_index":1673,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["math.max(contextualfeaturedactions.length",{"_index":1487,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["math.max(default_size",{"_index":1675,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["matter",{"_index":3086,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["max",{"_index":1483,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["max_header_height",{"_index":1283,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["maxfeaturedactionsonrow",{"_index":1474,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["maximum",{"_index":1278,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":3279,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["maxnumberlength",{"_index":2387,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["mb",{"_index":3661,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["md",{"_index":1042,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["md(medium",{"_index":3557,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["mean",{"_index":349,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["means",{"_index":949,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{}}}],["measure",{"_index":3559,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["measures",{"_index":3555,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["medium",{"_index":3558,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["members",{"_index":4525,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":42,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["menu'},{'name",{"_index":657,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["menu.component",{"_index":1256,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{}}}],["menu.module",{"_index":4401,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["menu.module.ts",{"_index":4359,"title":{},"body":{"modules/VcdActionMenuModule.html":{}}}],["menu/action",{"_index":1255,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdDatagridModule.html":{}}}],["menu/index",{"_index":4381,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["menu_buffer_space",{"_index":2841,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["menuchildren",{"_index":2664,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menucontainer",{"_index":2708,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["menuitem",{"_index":2583,"title":{"interfaces/MenuItem.html":{}},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["menuitem.up",{"_index":2681,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menuitems",{"_index":2546,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menus",{"_index":1477,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["menutrigger",{"_index":2547,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menutrigger.closemenu",{"_index":2679,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["merge",{"_index":4542,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["message",{"_index":321,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{}}}],["messageformat",{"_index":4616,"title":{},"body":{"dependencies.html":{}}}],["messages",{"_index":4518,"title":{},"body":{"contributing.html":{}}}],["messaging",{"_index":3392,"title":{},"body":{"classes/FormValidators.html":{}}}],["metadata",{"_index":611,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["method",{"_index":234,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":181,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["mhz",{"_index":3663,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["milliseconds",{"_index":2276,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["mimetype",{"_index":1890,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["min",{"_index":3280,"title":{},"body":{"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["minimum",{"_index":3296,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["miscellaneou",{"_index":4778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":4635,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":991,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"components/LoadingIndicatorComponent.html":{}}}],["mockdata",{"_index":3591,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["mockrecord",{"_index":963,"title":{"interfaces/MockRecord.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["mocktranslationservice",{"_index":3089,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["modal",{"_index":2838,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{}}}],["mode",{"_index":868,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["modifiers(eg",{"_index":1548,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["modify",{"_index":1550,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["module",{"_index":2745,"title":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["modules",{"_index":2747,"title":{"modules.html":{}},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":4463,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["monitor",{"_index":393,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["monitoredit",{"_index":381,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitoredit(activityresolutionpromise",{"_index":396,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorget",{"_index":382,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorget(activityresolutionpromise",{"_index":401,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorgetall",{"_index":383,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorgetall(activityresolutionpromises",{"_index":403,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitors",{"_index":398,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monorepo",{"_index":4648,"title":{},"body":{"index.html":{}}}],["more",{"_index":3679,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["morevalues",{"_index":3007,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["morevalues.foreach(val",{"_index":3071,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["morevalues.length",{"_index":3070,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["mouse",{"_index":1024,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mouseevent",{"_index":1159,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["mouseevent('mouseenter",{"_index":4254,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["mouseevent('mouseleave",{"_index":4257,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["mousein",{"_index":1161,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["mouseout",{"_index":1069,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mouseoutdelay",{"_index":1020,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mousetrap",{"_index":4618,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":2540,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["moved",{"_index":2702,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocus",{"_index":2696,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocus(direction",{"_index":2709,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocusto",{"_index":2697,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocusto(item",{"_index":2711,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocustofirstitem",{"_index":2554,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["movemouseoffhost",{"_index":4191,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseofftooltip",{"_index":4192,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseoverhost",{"_index":4193,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseoversecondhost",{"_index":4194,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseovertooltip",{"_index":4195,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["moves",{"_index":2586,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["moving",{"_index":2742,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["msgkey",{"_index":3824,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["multi",{"_index":1297,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdFormlyModule.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":91,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["multiplier",{"_index":3849,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["multiply",{"_index":3852,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["multiselect",{"_index":668,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"miscellaneous/variables.html":{}}}],["multiselectoption",{"_index":2349,"title":{"interfaces/MultiSelectOption.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["multiselectoptioninternal",{"_index":2337,"title":{"interfaces/MultiSelectOptionInternal.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["name",{"_index":198,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":3146,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["names",{"_index":1860,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["native",{"_index":772,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement",{"_index":3162,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.click",{"_index":3165,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.dispatchevent(event",{"_index":3171,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.dispatchevent(new",{"_index":3176,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.value",{"_index":3174,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["navigate",{"_index":4668,"title":{},"body":{"index.html":{}}}],["navigating",{"_index":2612,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["navigator.mssaveblob",{"_index":1897,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["navigator.mssaveblob(blob",{"_index":1898,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["nbsp",{"_index":890,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["nc",{"_index":2313,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["nearest",{"_index":2530,"title":{},"body":{"classes/DomUtil.html":{}}}],["need",{"_index":570,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":1174,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["needs",{"_index":1819,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["negative",{"_index":4153,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["neighboring",{"_index":2620,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["neighbors",{"_index":2536,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["neq",{"_index":3035,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["ness",{"_index":807,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["nested",{"_index":244,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"modules/PipesModule.html":{}}}],["nested_dropdown_trigger",{"_index":2617,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["nested_dropdown_trigger_selector",{"_index":4773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nested_menu_hide_delay",{"_index":4774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nested_vcd_dropdown",{"_index":2616,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["nestedmenutrigger",{"_index":2557,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["nestedprop",{"_index":3618,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["nestedproperty",{"_index":3604,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["nestedpropertypipe",{"_index":3598,"title":{"pipes/NestedPropertyPipe.html":{}},"body":{"pipes/NestedPropertyPipe.html":{},"modules/PipesModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1720,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["new",{"_index":281,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1603,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["newrecords",{"_index":1607,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["newrecords.find",{"_index":1610,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["next",{"_index":556,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["nextdisabled",{"_index":1181,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["nextelements",{"_index":488,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["nextelements.filter((el",{"_index":497,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["nextselection",{"_index":1593,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ng",{"_index":2449,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"index.html":{}}}],["ngaftercontentchecked",{"_index":3754,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngaftercontentinit",{"_index":2795,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["ngafterviewinit",{"_index":1703,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ngcontrol",{"_index":830,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngcontrol.valueaccessor",{"_index":893,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["ngmodule",{"_index":2773,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["ngonchanges(changes",{"_index":3753,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngondestroy",{"_index":1206,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["ngoninit",{"_index":1190,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["ngx",{"_index":3424,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["nightly",{"_index":4708,"title":{},"body":{"index.html":{}}}],["no_scrolling_classname",{"_index":2837,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":741,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":760,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["non",{"_index":100,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["none",{"_index":1299,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":3372,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["normally",{"_index":1307,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["notation",{"_index":3676,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["note",{"_index":1760,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["notequalto",{"_index":2978,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["notequalto(value",{"_index":3023,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["notext",{"_index":2059,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["notification",{"_index":4574,"title":{},"body":{"contributing.html":{}}}],["notifications",{"_index":1372,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["nounit",{"_index":3628,"title":{"classes/NoUnit.html":{}},"body":{"classes/NoUnit.html":{}}}],["nounit(1",{"_index":3639,"title":{},"body":{"classes/NoUnit.html":{}}}],["nounit.instance",{"_index":3780,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["now",{"_index":3818,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["nowrap",{"_index":1204,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["npm",{"_index":4662,"title":{},"body":{"index.html":{}}}],["npm's",{"_index":4705,"title":{},"body":{"index.html":{}}}],["null",{"_index":272,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["num",{"_index":3339,"title":{},"body":{"components/FormInputComponent.html":{}}}],["number",{"_index":140,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(math.round(number(value",{"_index":1784,"title":{},"body":{"classes/CommonUtil.html":{}}}],["number.max_safe_integer",{"_index":3288,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["number.max_safe_integer.tostring().length",{"_index":2407,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["number.min_safe_integer",{"_index":3294,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{}}}],["number_with_unit_input",{"_index":4450,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["numbers",{"_index":1782,"title":{},"body":{"classes/CommonUtil.html":{},"classes/FilterBuilder.html":{}}}],["numberunit",{"_index":3839,"title":{"classes/NumberUnit.html":{}},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["numberunit:105",{"_index":4091,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:11",{"_index":4087,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:112",{"_index":4092,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:12",{"_index":4088,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:24",{"_index":4095,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:28",{"_index":4097,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:37",{"_index":4096,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:45",{"_index":4094,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:54",{"_index":4099,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:61",{"_index":4098,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:71",{"_index":4093,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:89",{"_index":4090,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberwithunitforminputcomponent",{"_index":694,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["numberwithunitforminputcomponent.errorlabels",{"_index":3440,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.hintposition",{"_index":3445,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.max",{"_index":3444,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.min",{"_index":3442,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.showunlimitedoption",{"_index":3448,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.unlimitedvalue",{"_index":3450,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputwidgetobject",{"_index":3864,"title":{"classes/NumberWithUnitFormInputWidgetObject.html":{}},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["numberwithunitsformvalidatorsfactory",{"_index":3836,"title":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["numeric",{"_index":671,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["numerical",{"_index":3675,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["obj",{"_index":3602,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["object",{"_index":361,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["object.assign(defaults",{"_index":4246,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.assign(el.style",{"_index":1170,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["object.assign(this.host.style",{"_index":4247,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.defineproperty",{"_index":770,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.defineproperty(event",{"_index":3169,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.defineproperty(this.limitedinput",{"_index":3756,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["object.is(item.element.innertext",{"_index":2677,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["object.is(this.currentfocuseditem.element",{"_index":2727,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["object.keys(eventproperties).foreach((key",{"_index":3168,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.keys(rec).map((key",{"_index":2145,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["object.keys(records[0]).map((fieldname",{"_index":2141,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["object.keys(sizes).indexof(size",{"_index":3568,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["object.keys(this.formcontrol.errors",{"_index":901,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["object.keys(this.formgroup.controls).foreach(control",{"_index":2358,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(this.formgroup.getrawvalue",{"_index":2371,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(this.formgroup.getrawvalue()).filter(frmctrl",{"_index":2377,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(tooltipposition",{"_index":4263,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.ts",{"_index":436,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.ts:102",{"_index":4315,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:109",{"_index":4317,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:114",{"_index":4492,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:116",{"_index":4313,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:123",{"_index":4311,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:128",{"_index":4489,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:131",{"_index":4309,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:136",{"_index":4490,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:139",{"_index":4310,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:140",{"_index":4488,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:147",{"_index":4314,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:15",{"_index":3878,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:154",{"_index":4312,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:16",{"_index":452,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:161",{"_index":4316,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:168",{"_index":4318,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:17",{"_index":3885,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:186",{"_index":4477,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:191",{"_index":4476,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:20",{"_index":1962,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:205",{"_index":4482,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:21",{"_index":3887,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:22",{"_index":471,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:230",{"_index":4480,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:242",{"_index":4478,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:26",{"_index":1965,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:27",{"_index":4483,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:28",{"_index":3889,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:30",{"_index":924,"title":{},"body":{"classes/BaseWidgetObject.html":{}}}],["object.ts:31",{"_index":473,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:32",{"_index":3892,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:34",{"_index":1970,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:36",{"_index":3894,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:38",{"_index":929,"title":{},"body":{"classes/BaseWidgetObject.html":{}}}],["object.ts:40",{"_index":3896,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:42",{"_index":4484,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:43",{"_index":475,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{}}}],["object.ts:44",{"_index":3881,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:45",{"_index":933,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["object.ts:48",{"_index":3883,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:51",{"_index":1971,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:52",{"_index":935,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:54",{"_index":4486,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:56",{"_index":3898,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:57",{"_index":454,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:58",{"_index":1964,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:62",{"_index":4487,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:64",{"_index":3583,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:65",{"_index":3884,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:69",{"_index":3584,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:70",{"_index":476,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:72",{"_index":1966,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:73",{"_index":4485,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:74",{"_index":3585,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:77",{"_index":467,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:79",{"_index":3582,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:81",{"_index":3900,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:87",{"_index":3586,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:88",{"_index":3902,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:90",{"_index":4491,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:96",{"_index":4307,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:97",{"_index":4308,"title":{},"body":{"classes/TestElement.html":{}}}],["object/angular",{"_index":434,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["object/cypress",{"_index":1948,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"miscellaneous/variables.html":{}}}],["object/widget",{"_index":905,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"miscellaneous/typealiases.html":{}}}],["object_property_separator",{"_index":3611,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"miscellaneous/variables.html":{}}}],["objectandresponse",{"_index":329,"title":{"interfaces/ObjectAndResponse.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["objects",{"_index":560,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["objet",{"_index":1341,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["obs",{"_index":2290,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["observable",{"_index":1253,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observable.subscribe(tosubscriber(observerornext",{"_index":3509,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["observables",{"_index":3481,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["observerornext",{"_index":3484,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["obtained",{"_index":2632,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["of(this.to.options",{"_index":3463,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["official",{"_index":4702,"title":{},"body":{"index.html":{}}}],["ok').parent('.button",{"_index":918,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["ok').unwrap",{"_index":916,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["old",{"_index":3831,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onalertclosedchange",{"_index":2915,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["onalertclosedchange(closed",{"_index":2933,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["onarrowdown(event",{"_index":3997,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onarrowup(event",{"_index":3999,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onbeforesetconfig",{"_index":2233,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["onbeforesetconfig(config",{"_index":2258,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["once",{"_index":2005,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["onchange",{"_index":817,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["onchanges",{"_index":3667,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["onclickexport",{"_index":2107,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["ondestroy",{"_index":1029,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{}}}],["ondestroy.ngondestroy",{"_index":3503,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["one",{"_index":378,"title":{},"body":{"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["onenterclicked",{"_index":3404,"title":{},"body":{"components/FormlyInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["onenterkey(event",{"_index":4001,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onerrorclosed",{"_index":616,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["ones",{"_index":4040,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["onescapeclicked",{"_index":3405,"title":{},"body":{"components/FormlyInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["oninit",{"_index":1030,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["only.interface",{"_index":888,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["only.interface.ts",{"_index":1004,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["onmouseenter",{"_index":1097,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["onmousein",{"_index":1210,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["onmouseleave",{"_index":1099,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["onmouseout",{"_index":1214,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["onsuccessclosed",{"_index":617,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["ontop",{"_index":1502,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ontouch",{"_index":818,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ontouched",{"_index":850,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ontransitionend",{"_index":1224,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["ontransitionend(e",{"_index":1110,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["opacity",{"_index":1084,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1881,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["open(open",{"_index":3977,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["open(value",{"_index":2082,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["open/close",{"_index":2195,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["openchange",{"_index":2088,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["opened",{"_index":2038,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{}}}],["opening",{"_index":2579,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["opens",{"_index":2660,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MenuItem.html":{}}}],["operation",{"_index":89,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["operator",{"_index":2988,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["operators",{"_index":3029,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["operators.and",{"_index":3048,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["operators.or",{"_index":3043,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["opposite",{"_index":1136,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":1332,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["option.display",{"_index":2381,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/FormSelectComponent.html":{}}}],["option.istranslatable",{"_index":2380,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/FormSelectComponent.html":{}}}],["option.ts",{"_index":4163,"title":{},"body":{"interfaces/SelectOption.html":{}}}],["option.value",{"_index":2474,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{}}}],["option.value.tostring",{"_index":3366,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["optional",{"_index":14,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":152,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["options).unwrap",{"_index":928,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["options.indexof(this.pagesize",{"_index":1651,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["options.push(this.pagesize",{"_index":1652,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["options.sort((a",{"_index":1653,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["optionsformgroup",{"_index":2101,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["or(...conditions",{"_index":3054,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["or(conditions",{"_index":3025,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["order",{"_index":179,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/NumberUnit.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ThousandsUnit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["origin",{"_index":4502,"title":{},"body":{"contributing.html":{}}}],["originalondestroy",{"_index":3505,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["originalondestroy.call(destroyable",{"_index":3508,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["osx",{"_index":3950,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["otherwise",{"_index":2507,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"contributing.html":{}}}],["out",{"_index":2609,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1817,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive",{"_index":4405,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["outlet.directive.ts",{"_index":1797,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:29",{"_index":1824,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:30",{"_index":1815,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:40",{"_index":1816,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:52",{"_index":1822,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:63",{"_index":1821,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:70",{"_index":1823,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outline",{"_index":4510,"title":{},"body":{"contributing.html":{}}}],["output",{"_index":1242,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["outputnumber",{"_index":3862,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["outputs",{"_index":1363,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["outputunit",{"_index":3655,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["outputunit.multiplier",{"_index":3858,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["outputunit.unitname",{"_index":4339,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["outside",{"_index":2266,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":1061,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["overflow",{"_index":1202,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overflowing",{"_index":1200,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overflows",{"_index":1216,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overlay",{"_index":3544,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["override",{"_index":324,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["overrides",{"_index":2324,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["overview",{"_index":4740,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":1499,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["p",{"_index":944,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["p:first",{"_index":3354,"title":{},"body":{"components/FormInputComponent.html":{}}}],["package",{"_index":4584,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":4681,"title":{},"body":{"index.html":{}}}],["pad(date.getdate",{"_index":3335,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.gethours",{"_index":3336,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.getminutes",{"_index":3337,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.getmonth",{"_index":3334,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(num",{"_index":3338,"title":{},"body":{"components/FormInputComponent.html":{}}}],["padding",{"_index":3344,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["page",{"_index":1271,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["page(they",{"_index":1324,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagenumber",{"_index":1315,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pages",{"_index":1322,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pagesize",{"_index":1330,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{}}}],["pagesizeoptions",{"_index":1320,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagination",{"_index":1289,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["pagination(pagination",{"_index":1441,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationcallback",{"_index":1358,"title":{"interfaces/PaginationCallback.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationcomponent",{"_index":1528,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationconfiguration",{"_index":1319,"title":{"interfaces/PaginationConfiguration.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdata.firstitem",{"_index":1643,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdata.lastitem",{"_index":1644,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdata.totalitems",{"_index":1645,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdropdowntext",{"_index":1516,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationtranslationkey",{"_index":1534,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagionation",{"_index":1312,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagionationinformation",{"_index":1314,"title":{"interfaces/PagionationInformation.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["palo",{"_index":3593,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1339,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["param",{"_index":85,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["parameter",{"_index":347,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/ObjectAndResponse.html":{}}}],["parameters",{"_index":197,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params",{"_index":1524,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params.tagname",{"_index":3215,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params.woconstructor.tagname",{"_index":3214,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent",{"_index":459,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.query(by.css(cssselector)).nativeelement",{"_index":3164,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.query(query",{"_index":3160,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.queryall(query",{"_index":3161,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parentdropdown",{"_index":2805,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect",{"_index":2902,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect.left",{"_index":2906,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect.right",{"_index":2905,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownwidth",{"_index":2904,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentfocushandler",{"_index":2559,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["parents",{"_index":446,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{}}}],["parents(cssselector",{"_index":474,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["parentvcddropdown",{"_index":2564,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["parseint(triggercomputedstyles.marginleft",{"_index":2893,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["part",{"_index":1349,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["partial",{"_index":1169,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["partialobserver",{"_index":3485,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["partialresult",{"_index":3928,"title":{"interfaces/PartialResult.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["pased",{"_index":3184,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pass",{"_index":739,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["passed",{"_index":66,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["passes",{"_index":3488,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["passing",{"_index":2024,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"modules/VcdFormlyModule.html":{}}}],["patch",{"_index":1399,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["pattern",{"_index":3119,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pause",{"_index":186,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["paused",{"_index":235,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["peer",{"_index":4633,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["per",{"_index":1323,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["percent",{"_index":3903,"title":{"classes/Percent.html":{}},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{}}}],["percent(0.01",{"_index":4074,"title":{},"body":{"classes/Percent.html":{}}}],["percent(1",{"_index":4072,"title":{},"body":{"classes/Percent.html":{}}}],["percent.zero_to_1",{"_index":3918,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["percent.zero_to_100",{"_index":3917,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["perfect",{"_index":3822,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["perform",{"_index":2262,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["performed",{"_index":68,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["performer",{"_index":391,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["performer.resolveactivities(activityresolutionpromises",{"_index":423,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["performer.resolveactivity(activityresolutionpromise",{"_index":418,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["permanently",{"_index":1968,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["person",{"_index":3592,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":3466,"title":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["pipeline",{"_index":4700,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":3468,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{},"modules/VcdDatagridModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipes/function",{"_index":4407,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["pipesmodule",{"_index":4080,"title":{"modules/PipesModule.html":{}},"body":{"modules/PipesModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":3474,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["pixels",{"_index":1282,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["placed",{"_index":1515,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["placeholder",{"_index":3281,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["please",{"_index":1222,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":4654,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":135,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["point",{"_index":1780,"title":{},"body":{"classes/CommonUtil.html":{}}}],["popup",{"_index":1049,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":808,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["position.directive",{"_index":2778,"title":{},"body":{"modules/DropdownModule.html":{}}}],["position.directive.ts",{"_index":2780,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["position.directive.ts:101",{"_index":2830,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:134",{"_index":2832,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:188",{"_index":2816,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:198",{"_index":2807,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:57",{"_index":2820,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:58",{"_index":2824,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:59",{"_index":2821,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:60",{"_index":2825,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:61",{"_index":2823,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:63",{"_index":2826,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:66",{"_index":2828,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:84",{"_index":2806,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:94",{"_index":2814,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["positional",{"_index":3823,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["positionleft",{"_index":2801,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["positiontop",{"_index":2800,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["possible",{"_index":156,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["possibly",{"_index":568,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["posts",{"_index":399,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["potential",{"_index":3135,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["potentially",{"_index":2026,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["powertwounit",{"_index":4086,"title":{"classes/PowerTwoUnit.html":{}},"body":{"classes/PowerTwoUnit.html":{}}}],["pr",{"_index":1957,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"contributing.html":{},"index.html":{}}}],["pr](https://github.com/vmware/vmware",{"_index":1975,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["pre",{"_index":3847,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["precision",{"_index":4346,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["predefined",{"_index":3812,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["prefer",{"_index":3150,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["prefix",{"_index":3524,"title":{},"body":{"classes/IdGenerator.html":{}}}],["prefixed",{"_index":1925,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/IdGenerator.html":{}}}],["prefixing",{"_index":1943,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["preid=dev",{"_index":4711,"title":{},"body":{"index.html":{}}}],["prerelease",{"_index":4710,"title":{},"body":{"index.html":{}}}],["present",{"_index":1605,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserved",{"_index":1538,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserveselection",{"_index":1540,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserving",{"_index":1498,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pressed",{"_index":2571,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["presses",{"_index":2690,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["pressing",{"_index":2578,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["prevent",{"_index":1864,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["prevents",{"_index":1942,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["previousvalue",{"_index":2133,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["previousvalue[currentvalue.fieldname",{"_index":2132,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["primitives",{"_index":3006,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["prismjs",{"_index":4620,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":172,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["process",{"_index":325,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/ObjectAndResponse.html":{}}}],["processes",{"_index":330,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["processrow(row",{"_index":1887,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["produce",{"_index":2965,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["produces",{"_index":3606,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["programmatically",{"_index":3736,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["progress",{"_index":2009,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["project",{"_index":4495,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["projects",{"_index":4650,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":4637,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../base",{"_index":4770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../component",{"_index":4747,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../csv",{"_index":4771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../cypress",{"_index":4761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data",{"_index":4644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datagrid",{"_index":4641,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../datagrid.component.ts",{"_index":4639,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../datagrid.module.ts",{"_index":4765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../datagrid.wo.ts",{"_index":4757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dropdown",{"_index":4638,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../dropdown.component.ts",{"_index":4766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dynamic",{"_index":4760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../filter",{"_index":4750,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../form",{"_index":4640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../form.module.ts",{"_index":4763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../loading",{"_index":4642,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../mock",{"_index":4772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../nested",{"_index":4762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../number",{"_index":4776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pipes.module.ts",{"_index":4764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../quick",{"_index":4751,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../show",{"_index":4643,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../types.ts",{"_index":4749,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../vcd",{"_index":4645,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../widget",{"_index":4748,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects//package.json",{"_index":4713,"title":{},"body":{"index.html":{}}}],["projects/components",{"_index":4651,"title":{},"body":{"index.html":{}}}],["projects/components/src/action",{"_index":164,"title":{},"body":{"classes/ActionSearchProvider.html":{},"modules/VcdActionMenuModule.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/activity",{"_index":314,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{}}}],["projects/components/src/common/error/error",{"_index":2909,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{}}}],["projects/components/src/common/interfaces/action",{"_index":6,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/common/interfaces/select",{"_index":4162,"title":{},"body":{"interfaces/SelectOption.html":{}}}],["projects/components/src/common/loading/loading",{"_index":3531,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/common/pipes/nested",{"_index":3599,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/pipes/pipes.module.ts",{"_index":4084,"title":{},"body":{"modules/PipesModule.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/subscription/subscription",{"_index":3477,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["projects/components/src/components.module.ts",{"_index":4380,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["projects/components/src/data",{"_index":1848,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"modules/VcdDataExporterModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/datagrid.component.ts",{"_index":1227,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/datagrid.module.ts",{"_index":4398,"title":{},"body":{"modules/VcdDatagridModule.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/directives/component",{"_index":1796,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["projects/components/src/datagrid/filters/datagrid",{"_index":2219,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/interfaces/component",{"_index":1785,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/datagrid/interfaces/datagrid",{"_index":1713,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["projects/components/src/datagrid/mock",{"_index":3587,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/pipes/function",{"_index":3469,"title":{},"body":{"pipes/FunctionRendererPipe.html":{}}}],["projects/components/src/datagrid/renderers/bold",{"_index":950,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{}}}],["projects/components/src/dropdown/dropdown",{"_index":2532,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/dropdown/dropdown.component.ts",{"_index":4779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/components/src/dropdown/dropdown.module.ts",{"_index":2761,"title":{},"body":{"modules/DropdownModule.html":{}}}],["projects/components/src/dropdown/dynamic",{"_index":2779,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/base",{"_index":801,"title":{},"body":{"classes/BaseFormControl.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/form",{"_index":3227,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"miscellaneous/enumerations.html":{}}}],["projects/components/src/form/form.module.ts",{"_index":4432,"title":{},"body":{"modules/VcdFormModule.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/interfaces/can",{"_index":1003,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["projects/components/src/form/number",{"_index":3629,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/validators.ts",{"_index":3375,"title":{},"body":{"classes/FormValidators.html":{}}}],["projects/components/src/form/validators.ts:17",{"_index":3381,"title":{},"body":{"classes/FormValidators.html":{}}}],["projects/components/src/form/validators.ts:32",{"_index":3389,"title":{},"body":{"classes/FormValidators.html":{}}}],["projects/components/src/formly/vcd/inputs/input/formly",{"_index":3402,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["projects/components/src/formly/vcd/inputs/number",{"_index":3435,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["projects/components/src/formly/vcd/inputs/select/formly",{"_index":3457,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["projects/components/src/formly/vcd/vcd",{"_index":4435,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/lib/directives/show",{"_index":1014,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/quick",{"_index":3929,"title":{},"body":{"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/utils/common",{"_index":1768,"title":{},"body":{"classes/CommonUtil.html":{}}}],["projects/components/src/utils/dom",{"_index":2513,"title":{},"body":{"classes/DomUtil.html":{}}}],["projects/components/src/utils/filter",{"_index":2954,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/id",{"_index":3519,"title":{},"body":{"classes/IdGenerator.html":{}}}],["projects/components/src/utils/test/activity",{"_index":711,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["projects/components/src/utils/test/datagrid/datagrid.wo.ts",{"_index":4777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/components/src/utils/test/datagrid/filter",{"_index":3074,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["projects/components/src/utils/test/datagrid/vcd",{"_index":4410,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["projects/components/src/utils/test/widget",{"_index":433,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/types.ts",{"_index":4752,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/components/src/utils/unit/unit",{"_index":4332,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["projects/components/src/utils/unit/unit.ts",{"_index":3840,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:105",{"_index":3850,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:11",{"_index":4324,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:112",{"_index":3851,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:119",{"_index":4320,"title":{},"body":{"classes/ThousandsUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:12",{"_index":4323,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:128",{"_index":4089,"title":{},"body":{"classes/PowerTwoUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:187",{"_index":4071,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:188",{"_index":4068,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:196",{"_index":4073,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:197",{"_index":4075,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:199",{"_index":4079,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:203",{"_index":4078,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:213",{"_index":4077,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:24",{"_index":4327,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:28",{"_index":4329,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:37",{"_index":4328,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:45",{"_index":4326,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:54",{"_index":4331,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:61",{"_index":4330,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:71",{"_index":4325,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:89",{"_index":3845,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/examples",{"_index":4660,"title":{},"body":{"index.html":{}}}],["projects/i18n",{"_index":4659,"title":{},"body":{"index.html":{}}}],["projects/route",{"_index":4673,"title":{},"body":{"index.html":{}}}],["promise",{"_index":58,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/typealiases.html":{}}}],["promise((resolve",{"_index":282,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["promiseresolver",{"_index":395,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["propagating",{"_index":2572,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["proper",{"_index":3391,"title":{},"body":{"classes/FormValidators.html":{},"contributing.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["property",{"_index":1683,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["property.pipe",{"_index":4085,"title":{},"body":{"modules/PipesModule.html":{}}}],["property.pipe.ts",{"_index":3600,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"miscellaneous/variables.html":{}}}],["property.pipe.ts:32",{"_index":3607,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["property.split(object_property_separator",{"_index":3616,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["protected",{"_index":714,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/PowerTwoUnit.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["protractor",{"_index":4692,"title":{},"body":{"index.html":{}}}],["prov.order",{"_index":4155,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["provide",{"_index":408,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":767,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["providedin",{"_index":1876,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{}}}],["provider",{"_index":3941,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/variables.html":{}}}],["provider.order",{"_index":4149,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["provider/action",{"_index":166,"title":{},"body":{"classes/ActionSearchProvider.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":2751,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["provides",{"_index":2029,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["providing",{"_index":1794,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"injectables/QuickSearchService.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["prs",{"_index":4546,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":521,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["public/exported",{"_index":4524,"title":{},"body":{"contributing.html":{}}}],["publish",{"_index":4721,"title":{},"body":{"index.html":{}}}],["published",{"_index":4725,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":4698,"title":{},"body":{"index.html":{}}}],["pull",{"_index":4522,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pure",{"_index":3471,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["purpose",{"_index":3123,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["push",{"_index":4519,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pushed",{"_index":2907,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["pushes",{"_index":1371,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["put",{"_index":3240,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["px",{"_index":1120,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["quad",{"_index":1152,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["quadrant",{"_index":1137,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["queries",{"_index":906,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["query",{"_index":596,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["queryfield",{"_index":2225,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["queryfieldname",{"_index":1734,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["querying",{"_index":1733,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["querylist",{"_index":1243,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["queryoptions",{"_index":1982,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["quick",{"_index":263,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdComponentsModule.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchcomponent",{"_index":208,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"overview.html":{}}}],["quicksearchcomponent#haspartialresult",{"_index":3934,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchmodule",{"_index":4100,"title":{"modules/QuickSearchModule.html":{}},"body":{"modules/QuickSearchModule.html":{},"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["quicksearchprovider",{"_index":171,"title":{"interfaces/QuickSearchProvider.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchproviderdefaults",{"_index":169,"title":{"classes/QuickSearchProviderDefaults.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["quicksearchproviderdefaults:37",{"_index":220,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:38",{"_index":219,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:39",{"_index":218,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:40",{"_index":252,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchprovider}quicksearchprovider",{"_index":3962,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchregistrarservice",{"_index":4121,"title":{"injectables/QuickSearchRegistrarService.html":{}},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["quicksearchresultitem",{"_index":225,"title":{"interfaces/QuickSearchResultItem.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchresults",{"_index":262,"title":{"interfaces/QuickSearchResults.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchresultstype",{"_index":253,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchservice",{"_index":3938,"title":{"injectables/QuickSearchService.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchservice}quicksearchservice",{"_index":3960,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quite",{"_index":3820,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["quotes",{"_index":1923,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["r",{"_index":55,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["range",{"_index":3390,"title":{},"body":{"classes/FormValidators.html":{}}}],["rbradford",{"_index":4623,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":3156,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reactiveformsmodule",{"_index":2774,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{}}}],["read",{"_index":887,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["readme",{"_index":4656,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":806,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["readonlytext",{"_index":3871,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["reads",{"_index":3890,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["ready",{"_index":2089,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"contributing.html":{}}}],["readytosearchpromisefactory",{"_index":187,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["real",{"_index":3709,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["really",{"_index":4015,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["reasons",{"_index":1955,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["rebase",{"_index":4554,"title":{},"body":{"contributing.html":{}}}],["rec[key",{"_index":2146,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["recalculate",{"_index":2809,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["recalculateunitminmax",{"_index":3796,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["recalculating",{"_index":1676,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["receive",{"_index":742,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["receiving",{"_index":1187,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["recent",{"_index":4565,"title":{},"body":{"contributing.html":{}}}],["recommended",{"_index":3143,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["record",{"_index":90,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["record.name",{"_index":964,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["records",{"_index":86,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["records.map((rec",{"_index":2144,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["rect",{"_index":1117,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.height",{"_index":1125,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.left",{"_index":1121,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.top",{"_index":1119,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.width",{"_index":1123,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter",{"_index":1145,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter.x",{"_index":1150,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter.y",{"_index":1151,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":3343,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["reduce",{"_index":2956,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["redundant",{"_index":1829,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["references",{"_index":4577,"title":{},"body":{"contributing.html":{}}}],["referencing",{"_index":4580,"title":{},"body":{"contributing.html":{}}}],["reflects",{"_index":1739,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["refs/tags",{"_index":4733,"title":{},"body":{"index.html":{}}}],["register",{"_index":3961,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["register(provider",{"_index":4127,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registered",{"_index":3966,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["registeronchange",{"_index":819,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registeronchange(onchange",{"_index":845,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerontouched",{"_index":820,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerontouched(ontouched",{"_index":848,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerprovider",{"_index":4138,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registerprovider(provider",{"_index":4141,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registerrootmenucontainer",{"_index":2555,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["registrar.service.ts",{"_index":4122,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:16",{"_index":4125,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:19",{"_index":4129,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:21",{"_index":4128,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:26",{"_index":4126,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registration",{"_index":4145,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registrations",{"_index":4136,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["regprovider",{"_index":4159,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["regular",{"_index":3193,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reject",{"_index":283,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["related",{"_index":4564,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["relative",{"_index":1582,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["relatively",{"_index":2817,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["release",{"_index":4712,"title":{},"body":{"index.html":{}}}],["released",{"_index":3301,"title":{},"body":{"components/FormInputComponent.html":{}}}],["releases",{"_index":4703,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":3700,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["reload",{"_index":4670,"title":{},"body":{"index.html":{}}}],["remember",{"_index":3735,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["remote",{"_index":4714,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1223,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["removecolumn",{"_index":1495,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["removecolumn(col",{"_index":1557,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["removed",{"_index":1012,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["render",{"_index":1337,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rendered",{"_index":1505,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["renderer",{"_index":962,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"modules/VcdDatagridModule.html":{}}}],["renderer'},{'name",{"_index":661,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["renderer(item",{"_index":3475,"title":{},"body":{"pipes/FunctionRendererPipe.html":{}}}],["renderer.component",{"_index":990,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"modules/VcdDatagridModule.html":{}}}],["renderer.component.ts",{"_index":951,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["renderer.component.ts:41",{"_index":968,"title":{},"body":{"components/BoldTextRendererComponent.html":{}}}],["renderer.context",{"_index":1835,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["renderer.interface",{"_index":970,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["renderer.interface.ts",{"_index":1786,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"miscellaneous/typealiases.html":{}}}],["renderer.pipe",{"_index":4408,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["renderer.pipe.ts",{"_index":3470,"title":{},"body":{"pipes/FunctionRendererPipe.html":{}}}],["renderer.pipe.ts:17",{"_index":3473,"title":{},"body":{"pipes/FunctionRendererPipe.html":{}}}],["renderer.rendererspec.type",{"_index":1828,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["renderer.wo.ts",{"_index":983,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["renderer.wo.ts:28",{"_index":984,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["renderer.wo.ts:30",{"_index":985,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["renderer2",{"_index":2562,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["renderers",{"_index":1688,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{},"miscellaneous/variables.html":{}}}],["renderers/bold",{"_index":4409,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["rendererspec",{"_index":958,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rendering",{"_index":953,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reopen",{"_index":1410,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["repeat",{"_index":4541,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":1547,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["repo",{"_index":4647,"title":{},"body":{"index.html":{}}}],["repo(vmware/vmware",{"_index":4730,"title":{},"body":{"index.html":{}}}],["reported",{"_index":2846,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["reporter",{"_index":390,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter'},{'name",{"_index":658,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component",{"_index":4374,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["reporter.component.html",{"_index":614,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts",{"_index":608,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:20",{"_index":642,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:21",{"_index":641,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:22",{"_index":643,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:27",{"_index":4285,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:28",{"_index":622,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:36",{"_index":4289,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:40",{"_index":631,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:44",{"_index":4286,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:49",{"_index":628,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:52",{"_index":4288,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:57",{"_index":629,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:67",{"_index":625,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:74",{"_index":627,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:83",{"_index":630,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.module",{"_index":4382,"title":{},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["reporter.module.ts",{"_index":4368,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["reporter.ts",{"_index":370,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:13",{"_index":388,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:21",{"_index":414,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:27",{"_index":407,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:33",{"_index":413,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:38",{"_index":402,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:53",{"_index":404,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:73",{"_index":397,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.wo.ts",{"_index":712,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:10",{"_index":724,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:11",{"_index":4294,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:12",{"_index":787,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:13",{"_index":4296,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:16",{"_index":789,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:17",{"_index":4297,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:20",{"_index":791,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:24",{"_index":793,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:33",{"_index":4295,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter/activity",{"_index":315,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["reporter/banner",{"_index":607,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter/spinner",{"_index":4284,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporterror",{"_index":384,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporterror(errortext",{"_index":406,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporting",{"_index":375,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{}}}],["reportsuccess",{"_index":385,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reportsuccess(successmessage",{"_index":412,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reposition",{"_index":2811,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["repositions",{"_index":2781,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["repository",{"_index":4503,"title":{},"body":{"contributing.html":{}}}],["represent",{"_index":610,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/Percent.html":{}}}],["representation",{"_index":1300,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["represented",{"_index":4061,"title":{},"body":{"classes/Percent.html":{}}}],["representing",{"_index":3012,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["represents",{"_index":3194,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["request",{"_index":2042,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["requested",{"_index":1065,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":4533,"title":{},"body":{"contributing.html":{}}}],["require",{"_index":106,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["required",{"_index":61,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["requirements",{"_index":4523,"title":{},"body":{"contributing.html":{}}}],["requires",{"_index":3155,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["res",{"_index":3394,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["reset",{"_index":618,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["resetposition",{"_index":2796,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resetposition(element",{"_index":2815,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resets",{"_index":1637,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["resettopageone",{"_index":1638,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["resize",{"_index":2808,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resolve",{"_index":284,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["resolve(csvfile",{"_index":2159,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["resolveactivities",{"_index":331,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resolveactivities(activityresolutionpromises",{"_index":333,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolveactivity",{"_index":332,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolveactivity(activityresolutionpromise",{"_index":350,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resolveisreadytosearch",{"_index":177,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["resolver",{"_index":353,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["resolver.ts",{"_index":316,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resolver.ts:51",{"_index":351,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolver.ts:71",{"_index":335,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resource",{"_index":431,"title":{},"body":{"interfaces/ActivityResponse.html":{}}}],["response",{"_index":320,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"injectables/UnitFormatter.html":{}}}],["response.length",{"_index":427,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.map(item",{"_index":425,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.object",{"_index":422,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.response.error",{"_index":419,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["responsible",{"_index":1791,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["rest",{"_index":1706,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["restitem",{"_index":1795,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["result",{"_index":159,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.items",{"_index":1385,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["result.search(/[\",\\n]/g",{"_index":1939,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["result.totalitems",{"_index":1387,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["result.ts",{"_index":4134,"title":{},"body":{"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"miscellaneous/typealiases.html":{}}}],["result[0",{"_index":368,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resultactivated",{"_index":3981,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["resultactivatedevent",{"_index":3942,"title":{"interfaces/ResultActivatedEvent.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["resulting",{"_index":940,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["resultitem.displaytext",{"_index":4047,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["results",{"_index":161,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":249,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["retrieve",{"_index":757,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["return",{"_index":280,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":363,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["returns",{"_index":224,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["returnvalue",{"_index":424,"title":{},"body":{"classes/ActivityReporter.html":{},"pipes/NestedPropertyPipe.html":{}}}],["reusable",{"_index":4653,"title":{},"body":{"index.html":{}}}],["reused",{"_index":3122,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reverse",{"_index":1309,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["reversed",{"_index":1308,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["review",{"_index":4561,"title":{},"body":{"contributing.html":{}}}],["rgba(250",{"_index":3571,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["rgba(255",{"_index":3574,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["right",{"_index":1036,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rightlabel",{"_index":3232,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["risk",{"_index":1875,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["role",{"_index":2951,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["root",{"_index":587,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["root.componentinstance",{"_index":3211,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["rootelement",{"_index":450,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["rootmenucontainer",{"_index":2649,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["rootmenutrigger",{"_index":2556,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["rough",{"_index":4509,"title":{},"body":{"contributing.html":{}}}],["roughly",{"_index":4583,"title":{},"body":{"contributing.html":{}}}],["rounds",{"_index":1778,"title":{},"body":{"classes/CommonUtil.html":{}}}],["roundto",{"_index":1771,"title":{},"body":{"classes/CommonUtil.html":{}}}],["roundto(value",{"_index":1775,"title":{},"body":{"classes/CommonUtil.html":{}}}],["route",{"_index":4671,"title":{},"body":{"index.html":{}}}],["routermodule",{"_index":4399,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["routes",{"_index":4677,"title":{},"body":{"index.html":{}}}],["row",{"_index":1270,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["row.detailbutton",{"_index":1413,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["row.map((cell",{"_index":1915,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["row.some((cell",{"_index":1911,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["row_height",{"_index":1286,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["row_tag",{"_index":4775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rowheight",{"_index":1331,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rows",{"_index":1296,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rows.map((row",{"_index":1886,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["rows.some(haspotentialinjection",{"_index":1889,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["rules",{"_index":3128,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["run",{"_index":3385,"title":{},"body":{"classes/FormValidators.html":{},"index.html":{}}}],["running",{"_index":615,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/FormValidators.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"index.html":{}}}],["runs",{"_index":543,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["rxjs",{"_index":1254,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["rxjs/internal",{"_index":3498,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["rxjs/operators",{"_index":2275,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["safety",{"_index":1755,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/typealiases.html":{}}}],["same",{"_index":751,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sanitization",{"_index":2205,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["sanitize",{"_index":2022,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["sanitizecheckboxhint",{"_index":2072,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizecheckboxlabel",{"_index":2070,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizecontrol",{"_index":2116,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizeinfomessage",{"_index":2074,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizestring(result",{"_index":1941,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["sanitizestring(value",{"_index":1945,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["satisfy",{"_index":948,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["saving",{"_index":1361,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["scaffolding",{"_index":4682,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":4112,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["scope",{"_index":1969,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["screen",{"_index":23,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["scroll",{"_index":2520,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["scrolling",{"_index":2732,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["scrolls",{"_index":2518,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrolltoelement",{"_index":2514,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrolltoelement(elref",{"_index":2515,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrollwidth",{"_index":1219,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["search",{"_index":165,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":695,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["search(criteria",{"_index":240,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["search.as(id",{"_index":1994,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["search.component",{"_index":4106,"title":{},"body":{"modules/QuickSearchModule.html":{}}}],["search.component.html",{"_index":3972,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.component.scss",{"_index":3973,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.component.ts",{"_index":3931,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.module",{"_index":4388,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["search.module.ts",{"_index":4104,"title":{},"body":{"modules/QuickSearchModule.html":{}}}],["search.provider",{"_index":3937,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.provider.ts",{"_index":167,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"miscellaneous/variables.html":{}}}],["search.provider.ts:114",{"_index":229,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:122",{"_index":231,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:19",{"_index":255,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:23",{"_index":257,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:26",{"_index":196,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:31",{"_index":211,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:33",{"_index":4107,"title":{},"body":{"interfaces/QuickSearchProvider.html":{}}}],["search.provider.ts:36",{"_index":201,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:37",{"_index":4119,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:38",{"_index":4118,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:39",{"_index":4117,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:40",{"_index":4120,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:41",{"_index":209,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:43",{"_index":214,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:44",{"_index":213,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:45",{"_index":215,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:51",{"_index":232,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:59",{"_index":248,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:65",{"_index":239,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:75",{"_index":241,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:90",{"_index":222,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:99",{"_index":227,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.service",{"_index":3939,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.service.ts",{"_index":4135,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:13",{"_index":4148,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:19",{"_index":4142,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:51",{"_index":4144,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:62",{"_index":4140,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search/quick",{"_index":3930,"title":{},"body":{"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"modules/VcdComponentsModule.html":{},"miscellaneous/typealiases.html":{}}}],["searchcriteria",{"_index":223,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchcriteria(value",{"_index":3984,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searches",{"_index":242,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["searchid",{"_index":3989,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searching",{"_index":205,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["searchinput",{"_index":3988,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchresult",{"_index":4010,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection",{"_index":3940,"title":{"interfaces/SearchSection.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.isloading",{"_index":4008,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.provider.search(this.searchcriteria",{"_index":4012,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.provider.sectionname",{"_index":4049,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result",{"_index":4017,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result.items.length",{"_index":4057,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result?.items?.length",{"_index":4056,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result?.total",{"_index":4055,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsections",{"_index":3993,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchservice",{"_index":3982,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["secondhost",{"_index":4190,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["section",{"_index":43,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.isloading",{"_index":4029,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.result?.items.some((resultitem",{"_index":4046,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.result?.items[0",{"_index":4031,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["sectionname",{"_index":180,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["sections",{"_index":3965,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["sectiontitle",{"_index":3944,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["see",{"_index":2297,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["seen",{"_index":1956,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["select",{"_index":673,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["select'},{'name",{"_index":690,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["select.component",{"_index":3673,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["select.component.html",{"_index":3358,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.scss",{"_index":3357,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts",{"_index":3356,"title":{},"body":{"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{}}}],["select.component.ts:23",{"_index":3360,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts:27",{"_index":3459,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["select.component.ts:29",{"_index":3362,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts:31",{"_index":3461,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["select/form",{"_index":3355,"title":{},"body":{"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{}}}],["selectall",{"_index":2020,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["selectallcontrol",{"_index":2114,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectcolumn(column",{"_index":2128,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectcolumnstext",{"_index":2053,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selected",{"_index":40,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["selectedcolumns",{"_index":2001,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectedcombounit",{"_index":3788,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedentities",{"_index":54,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectedentities(entities",{"_index":273,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["selectedfilters",{"_index":2370,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["selectedindex",{"_index":1609,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selecteditem",{"_index":3994,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selecteditemindex",{"_index":4038,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selectedoption",{"_index":3359,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedoption.display",{"_index":3369,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedoption.istranslatable",{"_index":3368,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedunit",{"_index":3794,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedunit(value",{"_index":3715,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedunitdisplayvalue",{"_index":3875,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["selectfirst(ensurefirstsectionisloaded",{"_index":4022,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selecting",{"_index":1295,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selection",{"_index":93,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["selection[0",{"_index":1466,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectionchanged",{"_index":1491,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectiontype",{"_index":1251,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectiontype(selectiontype",{"_index":1415,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectnext(down",{"_index":4032,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selectoption",{"_index":2344,"title":{"interfaces/SelectOption.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/SelectOption.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["selectoption.display",{"_index":4164,"title":{},"body":{"interfaces/SelectOption.html":{}}}],["selectoptions",{"_index":3458,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["selector",{"_index":461,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["selects",{"_index":1510,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{}}}],["selectunit",{"_index":3867,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["selectunit(unit",{"_index":3880,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["self",{"_index":3262,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["semantic",{"_index":4704,"title":{},"body":{"index.html":{}}}],["send",{"_index":764,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sending",{"_index":2041,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sendkeyboardevent",{"_index":720,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sendkeyboardevent(eventtype",{"_index":761,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["separate",{"_index":4116,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"index.html":{}}}],["separated",{"_index":1736,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["separator",{"_index":2611,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["separators",{"_index":128,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["server",{"_index":1321,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["serves",{"_index":1801,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["service",{"_index":2688,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["set",{"_index":36,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setactions(actions",{"_index":254,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["setconfig(config",{"_index":4179,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["setconfig(val",{"_index":2270,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["setdisabled(disabled",{"_index":4222,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["setdisabledstate",{"_index":821,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":851,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["setdropdownmenu(dropdown",{"_index":2827,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["seterrormessage(val",{"_index":2937,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["setfilter",{"_index":3079,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["setfilter(filtertype",{"_index":3080,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["sethostposition(quadrant",{"_index":4220,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["sethosttext(text",{"_index":4224,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["setinputvalue",{"_index":721,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["setinputvalue(value",{"_index":782,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setinputvalueunit",{"_index":3868,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setinputvalueunit(unit",{"_index":3882,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["sets",{"_index":784,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setselectedentities(entities",{"_index":256,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["setsize(size",{"_index":3566,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["setstyle(el",{"_index":1167,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["setstyle(this.hostelement",{"_index":1201,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["setstyle(tip.container",{"_index":1080,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["setstyle(tip.content",{"_index":1128,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["setter",{"_index":2260,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/LoadingIndicatorComponent.html":{}}}],["settimeout",{"_index":1055,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":769,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setunit(val",{"_index":2416,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["setunitoptions(val",{"_index":2413,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["setunitoptionstonone",{"_index":3869,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setunitoptionstopercent",{"_index":3870,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setvalue",{"_index":2224,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["setvalue(value",{"_index":2264,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["setvalue(values",{"_index":2326,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["setvcdcomponentrendereroutlet(renderer",{"_index":1825,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["setwidth(width",{"_index":4218,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["shape",{"_index":3238,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["share",{"_index":3221,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["shared",{"_index":1050,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["shift",{"_index":2839,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["shift+shift",{"_index":3954,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["shoulddisplaycontextualactionsinrow",{"_index":1472,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shoulddisplaycontextualactionsontop",{"_index":1468,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldfillparent",{"_index":1457,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldsanitize",{"_index":1855,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["shouldsanitize)).join",{"_index":1917,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["shouldsanitize)).join('\\n",{"_index":1888,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["shouldshowactionbarontop",{"_index":1436,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldshowbubbles",{"_index":2124,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["shouldshowpagenumberinput",{"_index":1334,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldshowpagesizeselector",{"_index":1333,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldwait",{"_index":178,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["show",{"_index":633,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["show/hide",{"_index":1633,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["showasterisk",{"_index":825,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["showcases",{"_index":4661,"title":{},"body":{"index.html":{}}}],["showclippedtextdirective",{"_index":707,"title":{"directives/ShowClippedTextDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["showclippedtextdirective.instancecount",{"_index":1192,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["showclippedtextdirectivemodule",{"_index":2759,"title":{"modules/ShowClippedTextDirectiveModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["showclippedtextdirectivetesthelper",{"_index":4184,"title":{"classes/ShowClippedTextDirectiveTestHelper.html":{}},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["showclippedtextdirectivetesthostcomponent",{"_index":696,"title":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["showerrors",{"_index":827,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["showing",{"_index":1741,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["shown",{"_index":141,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{},"miscellaneous/enumerations.html":{}}}],["shows",{"_index":21,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["showsectiontitle(searchsection",{"_index":4052,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["showspinner",{"_index":3540,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["showunlimitedoption",{"_index":3437,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["sibling",{"_index":2573,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["side",{"_index":1869,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["signature",{"_index":3465,"title":{},"body":{"interfaces/FunctionRenderer.html":{},"interfaces/PaginationCallback.html":{},"contributing.html":{}}}],["signed",{"_index":4504,"title":{},"body":{"contributing.html":{}}}],["signpost",{"_index":3286,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["simplechanges",{"_index":3668,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["simplifying",{"_index":1228,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["simply",{"_index":4566,"title":{},"body":{"contributing.html":{}}}],["single",{"_index":87,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["singleton",{"_index":1046,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["singleunitdisplaytext",{"_index":3877,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["sit",{"_index":1501,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["site",{"_index":1763,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["sixty",{"_index":2457,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["size",{"_index":1021,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["size(size",{"_index":3567,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sized",{"_index":3547,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sizes",{"_index":3552,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sizes.md",{"_index":3562,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sizing",{"_index":3554,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["skip",{"_index":4027,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["skipself",{"_index":2606,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["sm",{"_index":1040,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["sm(small",{"_index":3553,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["smaller",{"_index":1325,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["smooth",{"_index":2531,"title":{},"body":{"classes/DomUtil.html":{}}}],["somerecord.property",{"_index":1725,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["something",{"_index":3154,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sometimes",{"_index":2570,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["sortable",{"_index":1752,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["sortcolumn",{"_index":1357,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["sorted",{"_index":1305,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["sortedcolumn",{"_index":1306,"title":{"interfaces/SortedColumn.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["sorting",{"_index":1347,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["sorting/filtering",{"_index":1729,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["sound",{"_index":1504,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["space",{"_index":862,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["spaces",{"_index":1922,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["spdx",{"_index":2767,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["spec",{"_index":1569,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["special",{"_index":1944,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["specific",{"_index":326,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["specification",{"_index":1715,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["specifications",{"_index":2302,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["specified",{"_index":2301,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["specifies",{"_index":1507,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["specify",{"_index":3674,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["specs",{"_index":3199,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["spinner",{"_index":698,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"miscellaneous/enumerations.html":{}}}],["spinneractivityreportercomponent",{"_index":697,"title":{"components/SpinnerActivityReporterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["spinneractivityreporterwidgetobject",{"_index":4291,"title":{"classes/SpinnerActivityReporterWidgetObject.html":{}},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["spinners",{"_index":3550,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["spinnersize",{"_index":3545,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["splitproperty",{"_index":3615,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["splitproperty.length",{"_index":3617,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["spotlight",{"_index":3948,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["squash",{"_index":4563,"title":{},"body":{"contributing.html":{}}}],["stackblitz/sdk",{"_index":4593,"title":{},"body":{"dependencies.html":{}}}],["stale",{"_index":1601,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["start",{"_index":748,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["startactivity",{"_index":386,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["started",{"_index":4493,"title":{"contributing.html":{},"index.html":{}},"body":{}}],["starting",{"_index":415,"title":{},"body":{"classes/ActivityReporter.html":{},"injectables/CsvExporterService.html":{}}}],["starts",{"_index":1924,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["start}${input}${end",{"_index":2506,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["state",{"_index":133,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["state.filters",{"_index":1623,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.filters.map((filter",{"_index":1625,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page",{"_index":1620,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page.current",{"_index":1621,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page.size",{"_index":1622,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort",{"_index":1627,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort.by",{"_index":1629,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort.reverse",{"_index":1631,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["static",{"_index":25,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["static/featured",{"_index":11,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["static_featured",{"_index":37,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["staticactionstyling",{"_index":16,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["statically",{"_index":4675,"title":{},"body":{"index.html":{}}}],["status",{"_index":339,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["staying",{"_index":4547,"title":{},"body":{"contributing.html":{}}}],["steps",{"_index":4534,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":3187,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["store",{"_index":839,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["stored",{"_index":3315,"title":{},"body":{"components/FormInputComponent.html":{},"index.html":{}}}],["strictmetadataemit",{"_index":2845,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["strictnullchecks",{"_index":3189,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["string",{"_index":73,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(value",{"_index":3175,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["strings",{"_index":2187,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["striving",{"_index":4528,"title":{},"body":{"contributing.html":{}}}],["structure",{"_index":1048,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":1168,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"directives/ShowClippedTextDirective.html":{},"contributing.html":{}}}],["styles",{"_index":1198,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["styleurls",{"_index":1367,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["styling",{"_index":144,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/FormCheckboxComponent.html":{}}}],["sub",{"_index":45,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/TestElement.html":{}}}],["subclass",{"_index":3127,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["subclasses",{"_index":3129,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["subject",{"_index":2240,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["submit",{"_index":4521,"title":{},"body":{"contributing.html":{}}}],["subscribable",{"_index":3496,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribe",{"_index":3479,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribe(observable",{"_index":3483,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribes",{"_index":3487,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscription",{"_index":3490,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscription.unsubscribe",{"_index":3511,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscriptions",{"_index":3495,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscriptiontracker",{"_index":1259,"title":{"classes/SubscriptionTracker.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{}}}],["subscriptiontracker(this",{"_index":1536,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["substracting",{"_index":1666,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["subtext",{"_index":2451,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["subtracker",{"_index":1535,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["succeeded",{"_index":345,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["succeeds",{"_index":343,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["success",{"_index":342,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["successmessage",{"_index":334,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["sucesss",{"_index":355,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["sucesstext",{"_index":722,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["such",{"_index":2897,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":276,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["super(controldirective",{"_index":3266,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["super(filtercontainer",{"_index":2355,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["super(ngcontrol",{"_index":3363,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["super(promiseresolver",{"_index":646,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["supply",{"_index":1440,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["support",{"_index":1732,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"modules.html":{}}}],["supported",{"_index":380,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["supports",{"_index":3270,"title":{},"body":{"components/FormInputComponent.html":{}}}],["suppress",{"_index":2844,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["sure",{"_index":1758,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["svg",{"_index":4738,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2202,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["symbol.iterator",{"_index":552,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["sync",{"_index":4548,"title":{},"body":{"contributing.html":{}}}],["syntax",{"_index":4579,"title":{},"body":{"contributing.html":{}}}],["t",{"_index":57,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["t[p",{"_index":946,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["tab",{"_index":1926,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["tag",{"_index":4722,"title":{},"body":{"index.html":{}}}],["tag(npm",{"_index":4720,"title":{},"body":{"index.html":{}}}],["tagname",{"_index":583,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tagname`on",{"_index":3192,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tagnameon",{"_index":3226,"title":{},"body":{"interfaces/FindableWidget.html":{}}}],["take",{"_index":318,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["takes",{"_index":336,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["task",{"_index":2152,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["tbase",{"_index":997,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["team",{"_index":4496,"title":{},"body":{"contributing.html":{}}}],["technically",{"_index":3183,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["template",{"_index":605,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["templateoptions",{"_index":4440,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["templateref",{"_index":1738,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["templates",{"_index":4448,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["templateurl",{"_index":613,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["test",{"_index":3100,"title":{},"body":{"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["test:components",{"_index":4687,"title":{},"body":{"index.html":{}}}],["test:i18n",{"_index":4688,"title":{},"body":{"index.html":{}}}],["testbed",{"_index":584,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["testbed.configuretestingmodule",{"_index":3093,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["testbed.createcomponent(arg",{"_index":590,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["testbed.createcomponent(componentconstructor",{"_index":3198,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["testelement",{"_index":449,"title":{"classes/TestElement.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["testelement([el",{"_index":549,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelement([root",{"_index":602,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["testelement([this.elements[counter",{"_index":558,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelement(nextelements",{"_index":492,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelements",{"_index":440,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testhostcomponent",{"_index":3076,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["testing",{"_index":2172,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["testinput",{"_index":3106,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["tests",{"_index":2298,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tests's",{"_index":588,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["text",{"_index":247,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["text').length",{"_index":4266,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["text.directive",{"_index":1262,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["text.directive.module",{"_index":2777,"title":{},"body":{"modules/DropdownModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["text.directive.module.ts",{"_index":4183,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{}}}],["text.directive.test",{"_index":4185,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["text.directive.ts",{"_index":1016,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["text.directive.ts:224",{"_index":4174,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:227",{"_index":4167,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:246",{"_index":4175,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:247",{"_index":4178,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:248",{"_index":4173,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:253",{"_index":4166,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:257",{"_index":4172,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:263",{"_index":4168,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:276",{"_index":4171,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:282",{"_index":4169,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:290",{"_index":4176,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:301",{"_index":4177,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:305",{"_index":4170,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text/csv;charset=utf",{"_index":1891,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["text2",{"_index":4271,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["textarea",{"_index":785,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["textcontent",{"_index":3182,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["textextractor",{"_index":979,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["textextractor(record",{"_index":981,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["texticon",{"_index":151,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["texting",{"_index":4277,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["textinput",{"_index":3276,"title":{},"body":{"components/FormInputComponent.html":{}}}],["textkey",{"_index":76,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{}}}],["textoverflow",{"_index":1205,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["then(result",{"_index":365,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["thing",{"_index":1937,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["thirty",{"_index":2455,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this._actions",{"_index":270,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns",{"_index":1376,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns.push(col",{"_index":1556,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns.splice(colindex",{"_index":1558,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns[colindex",{"_index":1555,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._config",{"_index":2287,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._config.queryfield",{"_index":2299,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._config.value",{"_index":2288,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._errormessage",{"_index":2939,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this._height",{"_index":1451,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._isrequestpending",{"_index":2094,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this._multiplier",{"_index":3855,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this._open",{"_index":2083,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this._pagination",{"_index":1442,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.pagesizeoptions",{"_index":1443,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.shouldshowpagenumberinput",{"_index":1445,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.shouldshowpagesizeselector",{"_index":1444,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._progress",{"_index":2096,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this._searchcriteria",{"_index":3983,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this._selectedentities",{"_index":274,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this._selectiontype",{"_index":1416,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._size",{"_index":3569,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["this._unit",{"_index":2428,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this._unitname",{"_index":3856,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this._unitoptions",{"_index":2422,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions.foreach((unitoption",{"_index":3687,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions.length",{"_index":3682,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions[0",{"_index":3684,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.actionreporter",{"_index":1426,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actionreporter.monitorget(actionhandlerresponse",{"_index":1427,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.filter",{"_index":1546,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.length",{"_index":1437,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.some",{"_index":1429,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.activate",{"_index":1184,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.addwildcard(value",{"_index":2504,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.alias",{"_index":1981,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.assignvalue(renderer.rendererspec.config",{"_index":1834,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.attachrenderer",{"_index":1833,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.bestunit",{"_index":3724,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.bestunit.getmultiplier",{"_index":3734,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.bestvalue",{"_index":3725,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.buildpartial",{"_index":3039,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.calculatepagesize",{"_index":1648,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.cfr.resolvecomponentfactory(this.componenttype",{"_index":1838,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.chainable",{"_index":1986,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.changedetectorref.detectchanges",{"_index":1397,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["this.changes.next",{"_index":2295,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.clearselectioninformation",{"_index":1417,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.closed",{"_index":2941,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.closevcddropdown",{"_index":2675,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.clrdatagrid.getcell(row",{"_index":1000,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["this.clrdropdownmenuel",{"_index":2629,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.column.filter",{"_index":3112,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["this.columns",{"_index":2122,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columns.filter((col",{"_index":2126,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columns.findindex((column",{"_index":1560,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.columns.reduce((previousvalue",{"_index":2130,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columnsconfig",{"_index":1564,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.columnsupdated.emit",{"_index":1379,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.combooptions",{"_index":3686,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptions.find",{"_index":3789,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptions.push(combooption",{"_index":3693,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.clear",{"_index":3685,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(displaycombounit",{"_index":3816,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(selectedcombounit",{"_index":3795,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(this.unitdropdown.selectedoption",{"_index":3810,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.set(combooption",{"_index":3691,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.component.displayvalue",{"_index":3905,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.errortext",{"_index":796,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.component.formcontrol",{"_index":3904,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('combounitoptions",{"_index":3909,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('combounitoptions').value",{"_index":3913,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('limited",{"_index":3908,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('unlimited",{"_index":3907,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.inputvalueunit",{"_index":3912,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.running",{"_index":795,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.component.selectedunit",{"_index":3910,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.successmessage",{"_index":797,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["this.component.unitoptions",{"_index":3914,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.componentinstance.directive.mouseoutdelay",{"_index":4206,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.disabled",{"_index":4249,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.div.nativeelement",{"_index":4208,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.div2.nativeelement",{"_index":4210,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.text",{"_index":4251,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentref",{"_index":1832,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componentref.instance",{"_index":1840,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componentref.instance.config",{"_index":1841,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componenttype",{"_index":1827,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.computebestunitandvalue(this.initialvalue",{"_index":3727,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.computebestunitandvalue(value",{"_index":3762,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.condition(operators.eq",{"_index":3058,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.ge",{"_index":3063,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.gt",{"_index":3062,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.le",{"_index":3061,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.lt",{"_index":3060,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.neq",{"_index":3059,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.config",{"_index":2502,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.config.customfiql",{"_index":2478,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.config.options.find(option",{"_index":2473,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.config.wildcardposition",{"_index":2503,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.contentareaelement",{"_index":2871,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.contentareaelement.getboundingclientrect",{"_index":2882,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.contextualactionposition",{"_index":1469,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.contextualactions",{"_index":1433,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.contextualactions.length",{"_index":1438,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.createformgroup",{"_index":2242,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.csvexporterservice.createcsv(data",{"_index":2156,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.csvexporterservice.downloadcsvfile(csvfile",{"_index":2157,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.currentdetailrowconfig",{"_index":1571,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.count",{"_index":1574,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.index",{"_index":1573,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.record",{"_index":1572,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowrenderspec",{"_index":1575,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentfocuseditem",{"_index":2725,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.element.blur",{"_index":2729,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.left",{"_index":2741,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.left.closemenu",{"_index":2743,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentoperator",{"_index":3042,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.currentpanespec",{"_index":1579,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentpanespecrecord",{"_index":1578,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.dataexportrequest.emit",{"_index":2110,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.datagrid",{"_index":1615,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.close",{"_index":1414,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.isopen",{"_index":1406,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.open(row.item",{"_index":1412,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.state",{"_index":1405,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.items.change.subscribe",{"_index":1710,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.items.displayed.length",{"_index":1711,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows",{"_index":1597,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows.find((findrow",{"_index":1407,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows.notifyonchanges",{"_index":1598,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selected",{"_index":1616,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.clearselection",{"_index":1591,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.current",{"_index":1461,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.current.length",{"_index":1462,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.currentsingle",{"_index":1460,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.setselected(found",{"_index":1592,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.updatecurrent(nextselection",{"_index":1596,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.singleselected",{"_index":1617,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselection",{"_index":1704,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselection.length",{"_index":1471,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselectionchange",{"_index":1492,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.deactivate",{"_index":1183,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.defaultspinnersize",{"_index":3548,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["this.detachrenderer",{"_index":1836,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.detailcomponent",{"_index":1576,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.detailpane.component",{"_index":1580,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.detectchanges",{"_index":3166,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.disabled",{"_index":904,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.dismissed.next",{"_index":2943,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.document.body.classlist.contains(no_scrolling_classname",{"_index":2870,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.document.body.queryselector(content_area_selector",{"_index":2872,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dosearch",{"_index":3985,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.downloaddata(rows",{"_index":2147,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.downloadingmessage",{"_index":2109,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.driver.getbytext('button",{"_index":915,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.dropdownmenuelement",{"_index":2854,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdownmenuelement.getboundingclientrect",{"_index":2859,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdownmenurect",{"_index":2858,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerel",{"_index":2624,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.dropdowntriggerel.innertext",{"_index":2678,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.dropdowntriggerelement",{"_index":2852,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.getboundingclientrect",{"_index":2857,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.queryselector('button.first",{"_index":2885,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.queryselector('clr",{"_index":2855,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerrect",{"_index":2856,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.elements.length",{"_index":542,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements.map((el",{"_index":535,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements.map((element",{"_index":530,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.disabled",{"_index":527,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.textcontent.trim",{"_index":524,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.value",{"_index":525,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elref.nativeelement",{"_index":2853,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.errorlabels",{"_index":900,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.errorlabels.length",{"_index":899,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errorlabels.reduce",{"_index":3825,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errormessagechange.emit",{"_index":2942,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.errors",{"_index":3760,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errortext",{"_index":649,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["this.exportdata.bind(this",{"_index":2111,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.exportstage",{"_index":2108,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fb.group",{"_index":2472,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.fieldnamemap",{"_index":2168,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fieldnamemap.get(fieldname",{"_index":2163,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fieldnamemap.has(fieldname",{"_index":2162,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.filename",{"_index":2158,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.filter",{"_index":3104,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["this.filtercontainer.open",{"_index":2447,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.findcolumnindex(col",{"_index":1554,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.findelement('.spinner",{"_index":4298,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.findelement('clr",{"_index":798,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{}}}],["this.findelement('strong').nativeelement.textcontent",{"_index":1002,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["this.findelement(clrdatagridwidgetobject.tagname",{"_index":4421,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["this.findelement(cssselector",{"_index":3178,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.findelement(cssselector).nativeelement",{"_index":3920,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.findelements(cssselector).map((el",{"_index":3180,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.findparent(cssselector",{"_index":500,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.findwidgets(params",{"_index":3213,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture",{"_index":550,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.componentinstance",{"_index":592,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.debugelement",{"_index":3202,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.debugelement).query(by.css(query",{"_index":598,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["this.fixture.destroy",{"_index":4268,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.fixture.detectchanges",{"_index":532,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.flatlistofavailableactions",{"_index":271,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.focushandlerservice.listentoarrowkeys(rootmenucontainer",{"_index":2650,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocus(direction.down",{"_index":2657,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocus(direction.right",{"_index":2656,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocusto(this.menutrigger",{"_index":2651,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.unlistenfuncs.foreach((unlisten",{"_index":2646,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.forcedropdownopen",{"_index":2138,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.format(value",{"_index":4352,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["this.formcontrol.enabled",{"_index":896,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.errors",{"_index":3828,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formcontrol.pristine",{"_index":897,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.valid",{"_index":898,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.value",{"_index":3364,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.formcontrol.value.tostring",{"_index":3367,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.formcontrolnamedirective",{"_index":894,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrolnamedirective.control",{"_index":895,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formgroup",{"_index":2134,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.addcontrol(option.value",{"_index":2361,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.controls[col.fieldname].value",{"_index":2127,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].setvalue(selected",{"_index":2129,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].setvalue(true",{"_index":2137,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].value",{"_index":2123,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.get('combounitoptions').disable",{"_index":3772,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').enable",{"_index":3776,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').setvalue(value",{"_index":3716,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').value",{"_index":3787,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('filterselect').value",{"_index":2479,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.formgroup.get('filtertext').value",{"_index":2501,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.formgroup.get('limited",{"_index":3740,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').disable",{"_index":3774,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').enable",{"_index":3777,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').value",{"_index":3784,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited",{"_index":3805,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').setvalue(false",{"_index":3761,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').setvalue(value",{"_index":3765,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').value",{"_index":3806,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.disable",{"_index":3775,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.enable",{"_index":3778,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.value",{"_index":3783,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get(formcontrol).value",{"_index":2373,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.get(formfields.from).setvalue(null",{"_index":2436,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.from).setvalue(values[0",{"_index":2435,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.from).value",{"_index":2441,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).setvalue(null",{"_index":2439,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).setvalue(values[1",{"_index":2438,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).value",{"_index":2442,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(frmctrl",{"_index":2365,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.get(frmctrl).value).length",{"_index":2378,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.removecontrol(control",{"_index":2359,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.setvalue",{"_index":2477,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.formgroup.valuechanges",{"_index":2293,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.formgroup.valuechanges.pipe(debouncetime(this.getdebouncetimems",{"_index":2292,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.friendlyfieldscontrol.value",{"_index":2142,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getactions(criteria.tolowercase",{"_index":288,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.getallunittypes",{"_index":3846,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getbase",{"_index":1979,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.getbasevalue(value",{"_index":3857,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getcolumnsconfig(this.columns",{"_index":1565,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getcontextualactions",{"_index":1434,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getdebouncetimems",{"_index":2291,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.getdisplaynameforcolumn(exportcolumn",{"_index":2164,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getdisplaynameforfield(fieldname",{"_index":2143,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getdropdownitemelement(child",{"_index":2669,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.getflatlistofavailableactions(this._actions",{"_index":287,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.getnativeelement('.combo",{"_index":3921,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.getnativeelement('.single",{"_index":3922,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.getnodetext(el",{"_index":3181,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.getnodetext(element",{"_index":3179,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.getnodetext(this.findelement('strong",{"_index":1001,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["this.getpagesize",{"_index":1679,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getpagesizeoptions",{"_index":1681,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getselectedunit",{"_index":3797,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.getselectedunit().getoutputvalue(value",{"_index":3785,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.getspinner",{"_index":4300,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.gettext('.readonly",{"_index":3906,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.gettext('h3",{"_index":4419,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["this.getunitmultiplier",{"_index":3860,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getvalue",{"_index":3833,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.gridrefresh.emit(vcddgstate",{"_index":1632,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.handleitem(item",{"_index":3996,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.handleitem(this.selecteditem",{"_index":4003,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.handleopen(open",{"_index":3978,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.hasstaticactions",{"_index":1428,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.height",{"_index":1453,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.height}px",{"_index":1454,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.host.dispatchevent(new",{"_index":4253,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.host.nativeelement",{"_index":1189,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.host.style.position",{"_index":4245,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.host.style.width",{"_index":4243,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.hostcomponent",{"_index":591,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.hostvcddropdown._dropdowntriggerel",{"_index":2625,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.hostvcddropdown.clrdropdown.toggleservice.open",{"_index":2590,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.id",{"_index":891,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.initialselection",{"_index":1464,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.initialvalue",{"_index":3319,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.initialvalueunit",{"_index":3723,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit",{"_index":3683,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.findbestunit(value",{"_index":3781,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.initialvalue",{"_index":3726,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.max",{"_index":3802,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.min",{"_index":3799,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(value",{"_index":3782,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.isactionavailable(currentaction",{"_index":301,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isactiondisabled(action",{"_index":309,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isdropdownopen",{"_index":2039,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.isinsidemodal",{"_index":2869,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.isloading",{"_index":1383,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.isoverflowing",{"_index":1211,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.isreadonly",{"_index":3813,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.isreadytosearchpromise",{"_index":279,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isrequestpending",{"_index":2121,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.isroot",{"_index":1988,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.isrootdropdown",{"_index":2636,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.items",{"_index":1384,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.items).filter((item",{"_index":1595,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.items)[0",{"_index":1590,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.lastrealvalue",{"_index":3737,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.limitedinput",{"_index":3755,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.limitedinputshowerrors",{"_index":3757,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.linkmenuitems",{"_index":2640,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.linkvertical",{"_index":2670,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.listentorightarrowkeypressonnestedtrigger",{"_index":2626,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.locatordriver",{"_index":936,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatordriver.get(`.dropdown",{"_index":2215,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatordriver.get(cssselector",{"_index":927,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatordriver.getbytext(cssselector",{"_index":934,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatordriver.parents(cssselector",{"_index":932,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatorforchild('.cancel",{"_index":2183,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforchild('.column",{"_index":2185,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforchild('.dropdown",{"_index":2192,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforchild('.export",{"_index":2206,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforchild('.friendly",{"_index":2200,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforchild('.sanitize",{"_index":2203,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforchild('.username",{"_index":913,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatorforchild('li",{"_index":2189,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforchild('progress",{"_index":2198,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorfortext('button",{"_index":2196,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.mapselectedrecords([current",{"_index":1589,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.mapselectedrecords(current",{"_index":1594,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.max",{"_index":3803,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.max.tostring",{"_index":3835,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.maxfeaturedactionsonrow",{"_index":1482,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.menuitems",{"_index":2648,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems.foreach((menuitem",{"_index":2680,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[0",{"_index":2673,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[0].up",{"_index":2683,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[index",{"_index":2682,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[this.menuitems.length",{"_index":2684,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger",{"_index":2635,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger.down",{"_index":2672,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger.right",{"_index":2674,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.min",{"_index":3800,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.min.tostring",{"_index":3834,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.mouseoutdelay",{"_index":1179,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.movefocus(direction.down",{"_index":2737,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocus(direction.left",{"_index":2744,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocus(direction.up",{"_index":2739,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.down",{"_index":2718,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.left",{"_index":2720,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.right",{"_index":2724,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.up",{"_index":2722,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocustofirstitem",{"_index":2641,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.multiplier",{"_index":3859,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.nestedmenutrigger",{"_index":2638,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.node.nativeelement",{"_index":1656,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.node.nativeelement.style.setproperty",{"_index":1455,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.onbeforesetconfig(val",{"_index":2286,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.onchange",{"_index":902,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.onchange(isodatevalue",{"_index":3331,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onchange(parsefloat(value",{"_index":3328,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onchange(this.getvalue",{"_index":3750,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.onchange(value",{"_index":3327,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onmousein",{"_index":1195,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.onmouseout",{"_index":1196,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.ontouch",{"_index":903,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.ontransitionend",{"_index":1096,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["this.open",{"_index":2140,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.openchange.emit(this._open",{"_index":4043,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.openchange.emit(value",{"_index":2084,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.options",{"_index":2356,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.options.find((option",{"_index":3365,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.optionsformgroup.get(useroptions.friendlynames",{"_index":2119,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.optionsformgroup.get(useroptions.sanitize",{"_index":2117,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.optionsformgroup.get(useroptions.selectall",{"_index":2115,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.pagesize",{"_index":1678,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagesizeoptions",{"_index":1680,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.pagesize",{"_index":1647,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.pagesizeoptions.map((size",{"_index":1650,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.rowheight",{"_index":1665,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.paginationcomponent.currentpage",{"_index":1639,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.parent",{"_index":3036,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.buildpartial()}${this.result",{"_index":3073,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.clear",{"_index":3072,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.currentoperator",{"_index":3044,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.result",{"_index":3045,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parentdropdown",{"_index":2901,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.parentdropdown.dropdownmenuelement.getboundingclientrect",{"_index":2903,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.parentfocushandler.menuitems.find((item",{"_index":2676,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.parentvcddropdown",{"_index":2594,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.positionleft",{"_index":2862,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.positiontop",{"_index":2861,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.prefix",{"_index":3528,"title":{},"body":{"classes/IdGenerator.html":{}}}],["this.preserveselection",{"_index":1586,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.promiseresolver",{"_index":417,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.providers",{"_index":4132,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.providers.push(provider",{"_index":4130,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.quicksearchservice.registerprovider(provider",{"_index":4131,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.quicksearchservice.unregisterprovider(provider",{"_index":4133,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.readytosearchpromisefactory",{"_index":212,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.recalculateunitminmax",{"_index":3749,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.registerrootmenucontainer",{"_index":2639,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.registrations",{"_index":4161,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.findindex((prov",{"_index":4152,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.findindex((regprovider",{"_index":4158,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.push(provider",{"_index":4157,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.splice(index",{"_index":4160,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.splice(insertindex",{"_index":4156,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.renderer.listen",{"_index":2643,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.renderer.listen(menucontainer",{"_index":2735,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.reporterror(item.response.error",{"_index":429,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reporterror(response.response.error",{"_index":420,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reportsuccess(response.response.success",{"_index":421,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reportsuccess(response[0].response.success",{"_index":430,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reset",{"_index":2628,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.resetposition(this.dropdownmenuelement",{"_index":2860,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.resolveisreadytosearch",{"_index":278,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.result",{"_index":3046,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.resultactivated.emit(resultactivatedevent",{"_index":4051,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.root",{"_index":744,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.rootelement",{"_index":494,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.rootmenutrigger",{"_index":2637,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.running",{"_index":647,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["this.sanitizecontrol.value",{"_index":2148,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.searchcriteria",{"_index":4011,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchid",{"_index":4005,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchinput.nativeelement.focus",{"_index":4041,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchinput.nativeelement.select",{"_index":4042,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections",{"_index":4023,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.find",{"_index":4045,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.foreach((searchsection",{"_index":4007,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.foreach(async",{"_index":4009,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.reduce((acc",{"_index":4036,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.secondhost.dispatchevent(new",{"_index":4255,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.selectallcontrol.value",{"_index":2125,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.selectedcolumns",{"_index":2113,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.selecteditem",{"_index":4002,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectedunit",{"_index":3764,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.selectfirst(false",{"_index":4033,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectfirst(true",{"_index":4018,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectnext(false",{"_index":4000,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectnext(true",{"_index":3998,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.setvalue(this._config.value",{"_index":2289,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.shoulddisplaycontextualactionsontop",{"_index":1439,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.shouldshowactionbarontop",{"_index":1671,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.shouldwait",{"_index":277,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.showerrors",{"_index":3759,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.showunlimitedoption",{"_index":3730,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.startactivity",{"_index":416,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.styling",{"_index":3264,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["this.subscriptions",{"_index":3518,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.foreach(subscription",{"_index":3517,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.indexof(subscription",{"_index":3513,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.push(subscription",{"_index":3510,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.splice(indexofsubscription",{"_index":3516,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptiontracker.subscribe(columndropdown.toggleservice.openchange",{"_index":2037,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.subscriptiontracker.subscribe(obs",{"_index":2294,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.subscriptiontracker.subscribe(this.hostvcddropdown.dropdownmenuupdated",{"_index":2627,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.subscriptiontracker.subscribe(this.selectallcontrol.valuechanges",{"_index":2136,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.successmessage",{"_index":648,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["this.testelement",{"_index":504,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.elements",{"_index":487,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.elements.map((el",{"_index":499,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.fixture",{"_index":493,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.textinput",{"_index":3320,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.textinput.nativeelement.value",{"_index":3324,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.timeoutid",{"_index":2655,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.to.errorlabels",{"_index":3430,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["this.to.hintposition",{"_index":3429,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.max",{"_index":3427,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.min",{"_index":3426,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.onenterclicked",{"_index":3431,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onenterclicked(this.field",{"_index":3432,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onescapeclicked",{"_index":3433,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onescapeclicked(this.field",{"_index":3434,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.options",{"_index":3462,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["this.to.showunlimitedoption",{"_index":3455,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.type",{"_index":3428,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.unlimitedvalue",{"_index":3456,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.tooltip",{"_index":4258,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.dispatchevent(new",{"_index":4256,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.queryselector('.tooltip",{"_index":4269,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.style.opacity",{"_index":4259,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.classlist",{"_index":4261,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.innertext",{"_index":4260,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.offsetwidth",{"_index":4252,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.style.visibility",{"_index":4267,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipsize",{"_index":1130,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["this.totalitems",{"_index":1386,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(index",{"_index":1408,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(itemindex",{"_index":1612,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(selectedindex",{"_index":1613,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.tracker.subscribe(this.formgroup.get('combounitoptions').valuechanges",{"_index":3746,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.subscribe(this.formgroup.get('limited').valuechanges",{"_index":3751,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.subscribe(this.formgroup.get('unlimited').valuechanges",{"_index":3738,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.unsubscribeall",{"_index":3721,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.translationservice.translate('vcd.cc.unlimited",{"_index":3807,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.translationservice.translate(outputunit.getvaluewithunittranslationkey",{"_index":4350,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["this.translationservice.translateasync('vcd.cc.cancel",{"_index":2050,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.data",{"_index":2046,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.export",{"_index":2056,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.export.all",{"_index":2052,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.exporter.downloading",{"_index":2078,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.exporter.writing",{"_index":2081,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.hint",{"_index":2069,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.info",{"_index":2066,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.question",{"_index":2064,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.loading",{"_index":624,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["this.translationservice.translateasync('vcd.cc.no",{"_index":2060,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.hint",{"_index":2073,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.info",{"_index":2075,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.question",{"_index":2071,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.select.columns",{"_index":2054,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.yes",{"_index":2058,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync(this.paginationtranslationkey",{"_index":1642,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.ts.translate(currentaction.textkey",{"_index":304,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.type",{"_index":3322,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.unit",{"_index":2423,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.unitdropdown",{"_index":3808,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitformatter.bestformat(value",{"_index":3811,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitformcontrol.setvalue(this.component.unitoptions[0].getmultiplier",{"_index":3919,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.unitmax",{"_index":3801,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitmin",{"_index":3798,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions",{"_index":2424,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions.length",{"_index":2425,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions[0",{"_index":2426,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unlimitedvalue",{"_index":3732,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unlistenfuncs.foreach((unlisten",{"_index":2716,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.unlistenfuncs.push",{"_index":2734,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.unlistenrightarrowkeypress",{"_index":2642,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.unsubscribeall",{"_index":3507,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.updatecolumnsconfig",{"_index":1378,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updatedisabledstate(isdisabled",{"_index":3766,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatedisabledstate(this.formgroup?.get('unlimited')?.value",{"_index":3768,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatedisabledstate(true",{"_index":3752,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatefieldnamemap(cols",{"_index":2043,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.updatepagination",{"_index":1446,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updateprogress.bind(this",{"_index":2112,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.updateselecteditems",{"_index":1398,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updateunlimiteddisabledstate",{"_index":3745,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":1839,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.viewcontainerref.remove",{"_index":1843,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.viewinitted",{"_index":1396,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.wrap",{"_index":3047,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.writevalue(this.initialvalue",{"_index":3326,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.writingmessage",{"_index":2150,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["those",{"_index":2222,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["thousandsunit",{"_index":4319,"title":{"classes/ThousandsUnit.html":{}},"body":{"classes/ThousandsUnit.html":{}}}],["three",{"_index":3551,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["through",{"_index":243,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["throughout",{"_index":4110,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["throw",{"_index":599,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["thrown",{"_index":2092,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["throws",{"_index":593,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["till",{"_index":2631,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["time",{"_index":1022,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["timeoutid",{"_index":2548,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["timer",{"_index":1054,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["times",{"_index":2726,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tip",{"_index":1047,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.clearhidetimeout",{"_index":1098,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container",{"_index":1075,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.appendchild(tip.content",{"_index":1085,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.classlist.add('tooltip",{"_index":1077,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.style.opacity",{"_index":1106,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.style.visibility",{"_index":1111,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content",{"_index":1078,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.addeventlistener('transitionend",{"_index":1090,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.add('tooltip",{"_index":1079,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.add(tip.calculateposition(rect",{"_index":1132,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.remove(tl",{"_index":1131,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.innerhtml",{"_index":1133,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.removeeventlistener('transitionend",{"_index":1095,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.style.opacity",{"_index":1107,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.style.visibility",{"_index":1112,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.create",{"_index":1193,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.currentdirective",{"_index":1100,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.hostelement",{"_index":1064,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.mouseoutdelay",{"_index":1073,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.tooltipsize",{"_index":1066,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currenthost",{"_index":1116,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.destroy",{"_index":1209,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.hidetimeout",{"_index":1103,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.hidetooltip(this.mouseoutdelay",{"_index":1213,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.hidetooltip(tip.mouseoutdelay",{"_index":1101,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ismouseover",{"_index":1105,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.onmouseenter",{"_index":1088,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.onmouseleave",{"_index":1089,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ontransitionend",{"_index":1091,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ontransitionend(event",{"_index":1225,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.update",{"_index":1212,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["title",{"_index":145,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tl",{"_index":1032,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["to]).getstring",{"_index":2446,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["toarray",{"_index":548,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["todo",{"_index":1731,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"injectables/UnitFormatter.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":3955,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["toggle",{"_index":1718,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["toggled",{"_index":3713,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["toggler",{"_index":1727,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["toggles",{"_index":3710,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["toggleswitch",{"_index":3263,"title":{},"body":{"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["toggling",{"_index":1723,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["toinput",{"_index":2388,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["tooltip",{"_index":1027,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipcontent",{"_index":4202,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipcount",{"_index":4200,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipposition",{"_index":1031,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.bl",{"_index":1154,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.br",{"_index":1156,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.tl",{"_index":1153,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.tr",{"_index":1155,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition[key",{"_index":4264,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipsize",{"_index":1026,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipsize.md",{"_index":1186,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tooltiptext",{"_index":4199,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipvisibility",{"_index":4201,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["top",{"_index":1033,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["topic",{"_index":4513,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["topmost",{"_index":4021,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["tosubscriber",{"_index":3497,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["total",{"_index":1303,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["totalitems",{"_index":1304,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["touch",{"_index":844,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["touched",{"_index":3748,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["tr",{"_index":1035,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["trackby",{"_index":1392,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["trackbyfunction",{"_index":1244,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["tracker",{"_index":3502,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{}}}],["tracker.ts",{"_index":3478,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["tracker.ts:18",{"_index":3486,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:28",{"_index":3492,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:33",{"_index":3494,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:40",{"_index":4301,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:53",{"_index":4303,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:64",{"_index":4304,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:74",{"_index":4305,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["transform",{"_index":2818,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["transform(item",{"_index":3472,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["transformed",{"_index":1721,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["transitionend",{"_index":4786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate",{"_index":2382,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["translated",{"_index":72,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{}}}],["translatex/y",{"_index":2819,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["translating",{"_index":1533,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["translation",{"_index":1288,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["translationkey",{"_index":3388,"title":{},"body":{"classes/FormValidators.html":{}}}],["translationservice",{"_index":194,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{}}}],["translationservice.translate",{"_index":4753,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["translationservice.translateasync",{"_index":4754,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tree",{"_index":606,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tried",{"_index":2153,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["tries",{"_index":1587,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["trigger",{"_index":780,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["triggercomputedstyles",{"_index":2892,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["triggered",{"_index":781,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["triggers",{"_index":2574,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["true",{"_index":99,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["try",{"_index":1740,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"contributing.html":{}}}],["trying",{"_index":3841,"title":{},"body":{"classes/NumberUnit.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["ts",{"_index":199,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["tsdoc",{"_index":4527,"title":{},"body":{"contributing.html":{}}}],["tsickle",{"_index":4627,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":4629,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":994,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["turn",{"_index":319,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["turned",{"_index":1913,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["turns",{"_index":337,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/ObjectAndResponse.html":{}}}],["twice",{"_index":3711,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["two",{"_index":2927,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(${index",{"_index":2217,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["typealiases",{"_index":4745,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1628,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["types",{"_index":1233,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/Unit.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":3208,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["typically",{"_index":3149,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["typing",{"_index":4109,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["u00a0",{"_index":857,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ufeff",{"_index":1885,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["ui",{"_index":373,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":4146,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unamed",{"_index":3464,"title":{},"body":{"interfaces/FunctionRenderer.html":{},"interfaces/PaginationCallback.html":{}}}],["undefined",{"_index":344,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{}}}],["under",{"_index":122,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["underlying",{"_index":2659,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["underneath",{"_index":2733,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["understand",{"_index":976,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["understands",{"_index":317,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["unique",{"_index":79,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["unit",{"_index":688,"title":{"classes/Unit.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unit(val",{"_index":2427,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["unit.gb",{"_index":4343,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit.getmultiplier",{"_index":3911,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unit.kb",{"_index":4341,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit.mb",{"_index":4342,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit:11",{"_index":3641,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:12",{"_index":3642,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:24",{"_index":3653,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:28",{"_index":3657,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:37",{"_index":3656,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:45",{"_index":3652,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:54",{"_index":3664,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:61",{"_index":3658,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:71",{"_index":3648,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unitdropdown",{"_index":3718,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitformatter",{"_index":3671,"title":{"injectables/UnitFormatter.html":{}},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormModule.html":{},"overview.html":{}}}],["unitformcontrol",{"_index":3874,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unitlist",{"_index":4076,"title":{},"body":{"classes/Percent.html":{}}}],["unitmax",{"_index":3708,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitmin",{"_index":3707,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitname",{"_index":3659,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["unitoption",{"_index":3692,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoption.getmultiplier",{"_index":3690,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoption.getunitname",{"_index":3689,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoptions",{"_index":2389,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["unitoptions(unitoptions",{"_index":3681,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoptions(val",{"_index":2421,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["units",{"_index":2402,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["unittranslationkey",{"_index":4065,"title":{},"body":{"classes/Percent.html":{}}}],["unittypes",{"_index":3863,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["unknown",{"_index":216,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["unless",{"_index":1394,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unlimited",{"_index":3451,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["unlimitedchecked",{"_index":3739,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unlimitedformcontrol",{"_index":3872,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unlimitedvalue",{"_index":3438,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["unlisten",{"_index":2647,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["unlistenfuncs",{"_index":2693,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["unlistenrightarrowkeypress",{"_index":2549,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["unpause",{"_index":189,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["unregister",{"_index":4123,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{}}}],["unregistered",{"_index":4147,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unregisterprovider",{"_index":4139,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unregisterprovider(provider",{"_index":4143,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unset",{"_index":149,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unspecificed",{"_index":1448,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unsubscribe",{"_index":3480,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribe(subscription",{"_index":3491,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribeall",{"_index":3482,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribes",{"_index":3493,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["until",{"_index":236,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{}}}],["untracked",{"_index":3515,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unwatchevents(el",{"_index":1164,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["unwatchevents(this.hostelement",{"_index":1208,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["unwatchevents(tip.container",{"_index":1094,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["unwrap",{"_index":447,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["unwraps",{"_index":939,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["up",{"_index":22,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":1113,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["updatecolumnsconfig",{"_index":1563,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updated",{"_index":738,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["updatedisabledstate(isdisabled",{"_index":3769,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updatefieldnamemap(cols",{"_index":2167,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updatepagination",{"_index":1677,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateprogress",{"_index":2002,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updateprogress(progress",{"_index":2160,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updates",{"_index":1369,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateselecteditems",{"_index":1585,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateunlimitedcheckbox",{"_index":3770,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updateunlimiteddisabledstate",{"_index":3767,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updating",{"_index":1395,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["upgrade",{"_index":1403,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["upon",{"_index":1380,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["upper",{"_index":3001,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["upstream",{"_index":4549,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":1900,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["url.createobjecturl(blob",{"_index":1901,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["urn",{"_index":2967,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["usage",{"_index":957,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["use",{"_index":392,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":3094,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["used",{"_index":115,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":4780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":3694,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["user",{"_index":108,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["useroptions",{"_index":2019,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["useroptions.friendlynames",{"_index":2104,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["useroptions.sanitize",{"_index":2105,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["useroptions.selectall",{"_index":2102,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["users",{"_index":2785,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["uses",{"_index":1790,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["usevalue",{"_index":3095,"title":{},"body":{"components/FilterTestHostComponent.html":{},"modules/VcdFormlyModule.html":{}}}],["using",{"_index":111,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["utf",{"_index":1882,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["util",{"_index":3936,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"injectables/UnitFormatter.html":{}}}],["util.ts",{"_index":1769,"title":{},"body":{"classes/CommonUtil.html":{},"classes/DomUtil.html":{}}}],["util.ts:12",{"_index":1777,"title":{},"body":{"classes/CommonUtil.html":{}}}],["util.ts:19",{"_index":2517,"title":{},"body":{"classes/DomUtil.html":{}}}],["util.ts:22",{"_index":1773,"title":{},"body":{"classes/CommonUtil.html":{}}}],["utility",{"_index":1754,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"pipes/NestedPropertyPipe.html":{}}}],["utils",{"_index":265,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["utils.ts",{"_index":3075,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:102",{"_index":3087,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:110",{"_index":3085,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:112",{"_index":3088,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:119",{"_index":3082,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils/dom",{"_index":3935,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["utils/filter",{"_index":2347,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["utils/id",{"_index":883,"title":{},"body":{"classes/BaseFormControl.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["utils/test/datagrid/vcd",{"_index":987,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["utils/test/widget",{"_index":989,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["utils/unit/unit",{"_index":2418,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["ux",{"_index":804,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["v",{"_index":1759,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["v.result?.items",{"_index":4037,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["v[0",{"_index":4727,"title":{},"body":{"index.html":{}}}],["val",{"_index":856,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"pipes/FunctionRendererPipe.html":{}}}],["validates",{"_index":3382,"title":{},"body":{"classes/FormValidators.html":{}}}],["validation",{"_index":880,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["validationerrors",{"_index":3669,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["validations",{"_index":3377,"title":{},"body":{"classes/FormValidators.html":{}}}],["validator",{"_index":3384,"title":{},"body":{"classes/FormValidators.html":{}}}],["validator(control",{"_index":3396,"title":{},"body":{"classes/FormValidators.html":{}}}],["validatorfn",{"_index":3386,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["validators",{"_index":3376,"title":{},"body":{"classes/FormValidators.html":{}}}],["validators.required(control",{"_index":3395,"title":{},"body":{"classes/FormValidators.html":{}}}],["value",{"_index":200,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.tostring",{"_index":3817,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["value.tostring(10",{"_index":3321,"title":{},"body":{"components/FormInputComponent.html":{}}}],["value[nestedprop",{"_index":3621,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["valueformcontrol",{"_index":3873,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["values",{"_index":2252,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"pipes/FunctionRendererPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["values.foreach(frmctrl",{"_index":2363,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["values[0",{"_index":2434,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["values[1",{"_index":2437,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["valuewithunittranslationkey",{"_index":4066,"title":{},"body":{"classes/Percent.html":{}}}],["var",{"_index":654,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["variable",{"_index":3316,"title":{},"body":{"components/FormInputComponent.html":{}}}],["variables",{"_index":4755,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1345,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcd",{"_index":612,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.action.provider.section.title",{"_index":268,"title":{},"body":{"classes/ActionSearchProvider.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.display.percent",{"_index":4070,"title":{},"body":{"classes/Percent.html":{}}}],["vcd.cc.grid.default.pagination",{"_index":1292,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.units.percent",{"_index":4069,"title":{},"body":{"classes/Percent.html":{}}}],["vcd.cc.warning.numrange",{"_index":3393,"title":{},"body":{"classes/FormValidators.html":{}}}],["vcd/i18n",{"_index":260,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["vcd/route",{"_index":4674,"title":{},"body":{"index.html":{}}}],["vcd/ui",{"_index":4652,"title":{},"body":{"index.html":{}}}],["vcd_formly_config",{"_index":4451,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcd_formly_input_components",{"_index":4469,"title":{},"body":{"modules/VcdFormlyModule.html":{},"miscellaneous/variables.html":{}}}],["vcdactionmenumodule",{"_index":4354,"title":{"modules/VcdActionMenuModule.html":{}},"body":{"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdactivityreportermodule",{"_index":4361,"title":{"modules/VcdActivityReporterModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdcomponentrendereroutlet",{"_index":1805,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["vcdcomponentrendereroutlet(renderer",{"_index":1826,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["vcdcomponentrendereroutlet]'},{'name",{"_index":701,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["vcdcomponentsmodule",{"_index":4375,"title":{"modules/VcdComponentsModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddataexportermodule",{"_index":4378,"title":{"modules/VcdDataExporterModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddatagridmodule",{"_index":3090,"title":{"modules/VcdDatagridModule.html":{}},"body":{"components/FilterTestHostComponent.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddatagridwidgetobject",{"_index":986,"title":{"classes/VcdDatagridWidgetObject.html":{}},"body":{"classes/BoldTextRendererWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["vcddgstate",{"_index":1619,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcddgstate.filters",{"_index":1624,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcddgstate.sortcolumn",{"_index":1630,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcderrorbannermodule",{"_index":4366,"title":{"modules/VcdErrorBannerModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdformlyfieldconfig",{"_index":4434,"title":{"interfaces/VcdFormlyFieldConfig.html":{}},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["vcdformlyinputtypes",{"_index":4442,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["vcdformlyinputtypes.input",{"_index":4452,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlyinputtypes.number_with_unit_input",{"_index":4454,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlyinputtypes.select",{"_index":4453,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlymodule",{"_index":4455,"title":{"modules/VcdFormlyModule.html":{}},"body":{"modules/VcdFormlyModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdformlytemplateoptions",{"_index":4441,"title":{"interfaces/VcdFormlyTemplateOptions.html":{}},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["vcdformmodule",{"_index":4379,"title":{"modules/VcdFormModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdloadingindicatormodule",{"_index":4367,"title":{"modules/VcdLoadingIndicatorModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdshowclippedtext",{"_index":708,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["verbosity",{"_index":2957,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["verifies",{"_index":1774,"title":{},"body":{"classes/CommonUtil.html":{}}}],["verify",{"_index":4014,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["version",{"_index":1404,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["versioning",{"_index":4701,"title":{},"body":{"index.html":{}}}],["via",{"_index":4690,"title":{},"body":{"index.html":{}}}],["view",{"_index":1364,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["view's",{"_index":2524,"title":{},"body":{"classes/DomUtil.html":{}}}],["viewable",{"_index":2017,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["viewchild",{"_index":1245,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild('actionreporter",{"_index":1530,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild('div",{"_index":4273,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchild('div2",{"_index":4275,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchild('from",{"_index":2405,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["viewchild('limitedinput",{"_index":3719,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["viewchild('searchinput",{"_index":3987,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["viewchild('textinput",{"_index":3311,"title":{},"body":{"components/FormInputComponent.html":{}}}],["viewchild('to",{"_index":2409,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["viewchild('unitdropdown",{"_index":3717,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["viewchild(clrdatagrid",{"_index":1526,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild(clrdatagridpagination",{"_index":1527,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild(clrdropdown",{"_index":2034,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["viewchild(showclippedtextdirective",{"_index":4272,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchildren",{"_index":1246,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchildren('actionmenuinrow",{"_index":1478,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewcontainerref",{"_index":1812,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["viewinitted",{"_index":1532,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewport",{"_index":2519,"title":{},"body":{"classes/DomUtil.html":{}}}],["visibility",{"_index":1129,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":38,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DomUtil.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["visual",{"_index":3959,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["vm.actions",{"_index":2787,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["vmw/ng",{"_index":4595,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["vmw/plain",{"_index":4597,"title":{},"body":{"dependencies.html":{}}}],["vmware",{"_index":2765,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{}}}],["vmware/master",{"_index":4550,"title":{},"body":{"contributing.html":{}}}],["vmware/vmware",{"_index":4715,"title":{},"body":{"index.html":{}}}],["void",{"_index":59,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["vs",{"_index":4543,"title":{},"body":{"contributing.html":{}}}],["w",{"_index":468,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["wait",{"_index":1068,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":138,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["warning",{"_index":2924,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["watchevents(el",{"_index":1160,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["watchevents(this.hostelement",{"_index":1194,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["watchevents(tip.container",{"_index":1087,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["way",{"_index":2654,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ways",{"_index":157,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["we're",{"_index":1221,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["webcomponents/webcomponentsjs",{"_index":4600,"title":{},"body":{"dependencies.html":{}}}],["welcomes",{"_index":4497,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":2580,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wessberg/ts",{"_index":4602,"title":{},"body":{"dependencies.html":{}}}],["whenever",{"_index":730,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["whether",{"_index":83,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":3371,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["whitespace",{"_index":1203,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["whole",{"_index":1936,"title":{},"body":{"injectables/CsvExporterService.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["whose",{"_index":3650,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["widget",{"_index":435,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["widgetconstructor",{"_index":580,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetconstructor(new",{"_index":601,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetconstructor.tagname",{"_index":597,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetfinder",{"_index":3081,"title":{"classes/WidgetFinder.html":{}},"body":{"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgetfinder#find",{"_index":3196,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgetfinder#findwidgets",{"_index":3195,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgetfinder(filtertesthostcomponent",{"_index":3107,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["widgetobject",{"_index":713,"title":{"classes/WidgetObject.html":{}},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgetobject:114",{"_index":783,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:128",{"_index":755,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:136",{"_index":759,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:140",{"_index":753,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:42",{"_index":726,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:45",{"_index":745,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:54",{"_index":747,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:62",{"_index":750,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:73",{"_index":734,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgetobject:90",{"_index":763,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["widgets",{"_index":3121,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgets.length",{"_index":3216,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgets[0",{"_index":3219,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["width",{"_index":1122,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["width(width",{"_index":4242,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["wildcardcharacter",{"_index":2488,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["wildcardposition",{"_index":2487,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"miscellaneous/enumerations.html":{}}}],["wildcardposition.end",{"_index":2497,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{}}}],["wildcardposition.start",{"_index":2496,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["window",{"_index":1144,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["window.cleartimeout(this.timeoutid",{"_index":2658,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["window.innerheight",{"_index":2880,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["window.requestanimationframe",{"_index":2154,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["window.settimeout",{"_index":1104,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["window:resize",{"_index":2798,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["wired",{"_index":1365,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["withgridboldrenderer>>(base",{"_index":996,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["within",{"_index":81,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["without",{"_index":359,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["wo.ts",{"_index":3147,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor",{"_index":3116,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor(this.fixture",{"_index":3210,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor.tagname",{"_index":3204,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["wordbreak",{"_index":1126,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":1744,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["worked",{"_index":1748,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["workflow",{"_index":4512,"title":{},"body":{"contributing.html":{}}}],["working",{"_index":4500,"title":{},"body":{"contributing.html":{}}}],["works",{"_index":3964,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["wouldn't",{"_index":2653,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wrap",{"_index":2495,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["wrapcharacter",{"_index":2491,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["wrapped",{"_index":3142,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["wrapper",{"_index":506,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["wrapping",{"_index":2619,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wraps",{"_index":2490,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["write",{"_index":4576,"title":{},"body":{"contributing.html":{}}}],["writevalue",{"_index":822,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["writevalue(val",{"_index":854,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["writevalue(value",{"_index":3307,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["writing",{"_index":2079,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["writingmessage",{"_index":2080,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["written",{"_index":4531,"title":{},"body":{"contributing.html":{}}}],["wrote",{"_index":4506,"title":{},"body":{"contributing.html":{}}}],["x",{"_index":1146,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":1148,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":341,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["yestext",{"_index":2057,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["you'll",{"_index":4562,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["z",{"_index":3578,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["zero_to_1",{"_index":4064,"title":{},"body":{"classes/Percent.html":{}}}],["zero_to_100",{"_index":4063,"title":{},"body":{"classes/Percent.html":{}}}],["zindex",{"_index":1082,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":4631,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2760,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionDisplayConfig.html":{"url":"interfaces/ActionDisplayConfig.html","title":"interface - ActionDisplayConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionDisplayConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/action-item.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration of actions that are not static/featured\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        contextual\n                                \n                                \n                                            Optional\n                                        staticActionStyling\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contextual\n                                    \n                                \n                                \n                                    \n                                        contextual:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How the contextual actions list shows up on the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticActionStyling\n                                    \n                                \n                                \n                                    \n                                        staticActionStyling:         ActionStyling\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionStyling\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How the static actions list shows up on the screen\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export enum ActionType {\n    /**\n     * Global actions that are displayed always irrespective of the context. These display as the first set of actions\n     */\n    STATIC_FEATURED = 'STATIC_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in the main menu section\n     */\n    CONTEXTUAL_FEATURED = 'CONTEXTUAL_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in a sub menu\n     */\n    CONTEXTUAL = 'CONTEXTUAL',\n    /**\n     * Actions that are not context dependent. These display after the above 3 buckets of actions\n     */\n    STATIC = 'STATIC',\n}\n\n/**\n * Type of {@link ActionItem.handler} function\n */\nexport type ActionHandlerType = (selectedEntities?: R[], handlerData?: T) => Promise | void;\n\n/**\n * Data required for displaying an action item in a menu.\n * T is the type of custom data passed to action handler\n * R is the type of selected entity on which the action will be performed\n */\nexport interface ActionItem {\n    /**\n     * The i18n key or a translated string for contents of a action button\n     */\n    textKey?: string;\n    /**\n     * The css class the button should have.\n     *\n     * Must be unique among all added actions within an action list\n     */\n    class?: string;\n    /**\n     * Condition whether or not the action is available.\n     * @param records Single item in case of an operation on single record and multiple in case of an operation on batch\n     * selection\n     */\n    availability?: (records?: R[], additionalData?: any) => boolean;\n    /**\n     * Indicates if an action that is available should be disabled. If true, a non available action is disabled.\n     * If false, a non-available action is hidden\n     */\n    disabled?: (records?: R[]) => boolean | boolean;\n    /**\n     * The key that will be fired with the action.\n     */\n    action?: string;\n    /**\n     * The function to be executed when the button is clicked.\n     *\n     * Actions that require additional user input can collect it using handlerData which will be passed as an argument\n     * to the handler call\n     */\n    handler?: ActionHandlerType;\n    /**\n     * Custom data that will be passed when handler is called\n     */\n    handlerData?: any;\n    /**\n     * Used for determining where in the action menu this action gets displayed\n     */\n    actionType?: ActionType;\n    /**\n     * The Clarity icon of the contextual button that is displayed if the button is featured.\n     */\n    icon?: string;\n    /**\n     * List of actions that will be grouped under this action\n     */\n    children?: ActionItem[];\n    /**\n     * To mark if the {@link #ActionItem.textKey} has to be translated or not\n     */\n    isTranslatable?: boolean;\n    /**\n     * To add separators between groups of actions\n     */\n    isSeparator?: boolean;\n    /**\n     * Busy state for the menu item. Used by extension actions of plugins\n     */\n    busy?: boolean;\n}\n\n/**\n * Configuration of actions that are not static/featured\n */\nexport interface ActionDisplayConfig {\n    /**\n     * How the contextual actions list shows up on the screen\n     */\n    contextual?: {\n        /**\n         * How many buttons should display on the featured section.\n         *\n         * Used when you want to set a limit on the number of featured buttons shown.\n         *\n         * If featuredCount is not set, it will default to all featured actions.\n         */\n        featuredCount: number;\n        /**\n         * How the featured actions should be displayed\n         */\n        styling: ActionStyling;\n        /**\n         * If the title should be the button label, icon, or both\n         * Defaults to ICON if unset.\n         */\n        buttonContents: TextIcon;\n    };\n\n    /**\n     * How the static actions list shows up on the screen\n     */\n    staticActionStyling?: ActionStyling;\n}\n\n/**\n * Display options for action menu\n */\nexport enum ActionStyling {\n    INLINE = 'INLINE',\n    DROPDOWN = 'DROPDOWN',\n}\n\n/**\n * An enum that describes the possible ways to display the button title.\n */\nexport enum TextIcon {\n    ICON = 1 \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionItem.html":{"url":"interfaces/ActionItem.html","title":"interface - ActionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/action-item.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data required for displaying an action item in a menu.\nT is the type of custom data passed to action handler\nR is the type of selected entity on which the action will be performed\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        actionType\n                                \n                                \n                                            Optional\n                                        availability\n                                \n                                \n                                            Optional\n                                        busy\n                                \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        class\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        handler\n                                \n                                \n                                            Optional\n                                        handlerData\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        isSeparator\n                                \n                                \n                                            Optional\n                                        isTranslatable\n                                \n                                \n                                            Optional\n                                        textKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that will be fired with the action.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionType\n                                    \n                                \n                                \n                                    \n                                        actionType:         ActionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for determining where in the action menu this action gets displayed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availability\n                                    \n                                \n                                \n                                    \n                                        availability:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Condition whether or not the action is available.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busy\n                                    \n                                \n                                \n                                    \n                                        busy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Busy state for the menu item. Used by extension actions of plugins\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ActionItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of actions that will be grouped under this action\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The css class the button should have.\nMust be unique among all added actions within an action list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if an action that is available should be disabled. If true, a non available action is disabled.\nIf false, a non-available action is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         ActionHandlerType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionHandlerType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The function to be executed when the button is clicked.\nActions that require additional user input can collect it using handlerData which will be passed as an argument\nto the handler call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handlerData\n                                    \n                                \n                                \n                                    \n                                        handlerData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom data that will be passed when handler is called\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Clarity icon of the contextual button that is displayed if the button is featured.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSeparator\n                                    \n                                \n                                \n                                    \n                                        isSeparator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    To add separators between groups of actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTranslatable\n                                    \n                                \n                                \n                                    \n                                        isTranslatable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    To mark if the #ActionItem.textKey has to be translated or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textKey\n                                    \n                                \n                                \n                                    \n                                        textKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The i18n key or a translated string for contents of a action button\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export enum ActionType {\n    /**\n     * Global actions that are displayed always irrespective of the context. These display as the first set of actions\n     */\n    STATIC_FEATURED = 'STATIC_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in the main menu section\n     */\n    CONTEXTUAL_FEATURED = 'CONTEXTUAL_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in a sub menu\n     */\n    CONTEXTUAL = 'CONTEXTUAL',\n    /**\n     * Actions that are not context dependent. These display after the above 3 buckets of actions\n     */\n    STATIC = 'STATIC',\n}\n\n/**\n * Type of {@link ActionItem.handler} function\n */\nexport type ActionHandlerType = (selectedEntities?: R[], handlerData?: T) => Promise | void;\n\n/**\n * Data required for displaying an action item in a menu.\n * T is the type of custom data passed to action handler\n * R is the type of selected entity on which the action will be performed\n */\nexport interface ActionItem {\n    /**\n     * The i18n key or a translated string for contents of a action button\n     */\n    textKey?: string;\n    /**\n     * The css class the button should have.\n     *\n     * Must be unique among all added actions within an action list\n     */\n    class?: string;\n    /**\n     * Condition whether or not the action is available.\n     * @param records Single item in case of an operation on single record and multiple in case of an operation on batch\n     * selection\n     */\n    availability?: (records?: R[], additionalData?: any) => boolean;\n    /**\n     * Indicates if an action that is available should be disabled. If true, a non available action is disabled.\n     * If false, a non-available action is hidden\n     */\n    disabled?: (records?: R[]) => boolean | boolean;\n    /**\n     * The key that will be fired with the action.\n     */\n    action?: string;\n    /**\n     * The function to be executed when the button is clicked.\n     *\n     * Actions that require additional user input can collect it using handlerData which will be passed as an argument\n     * to the handler call\n     */\n    handler?: ActionHandlerType;\n    /**\n     * Custom data that will be passed when handler is called\n     */\n    handlerData?: any;\n    /**\n     * Used for determining where in the action menu this action gets displayed\n     */\n    actionType?: ActionType;\n    /**\n     * The Clarity icon of the contextual button that is displayed if the button is featured.\n     */\n    icon?: string;\n    /**\n     * List of actions that will be grouped under this action\n     */\n    children?: ActionItem[];\n    /**\n     * To mark if the {@link #ActionItem.textKey} has to be translated or not\n     */\n    isTranslatable?: boolean;\n    /**\n     * To add separators between groups of actions\n     */\n    isSeparator?: boolean;\n    /**\n     * Busy state for the menu item. Used by extension actions of plugins\n     */\n    busy?: boolean;\n}\n\n/**\n * Configuration of actions that are not static/featured\n */\nexport interface ActionDisplayConfig {\n    /**\n     * How the contextual actions list shows up on the screen\n     */\n    contextual?: {\n        /**\n         * How many buttons should display on the featured section.\n         *\n         * Used when you want to set a limit on the number of featured buttons shown.\n         *\n         * If featuredCount is not set, it will default to all featured actions.\n         */\n        featuredCount: number;\n        /**\n         * How the featured actions should be displayed\n         */\n        styling: ActionStyling;\n        /**\n         * If the title should be the button label, icon, or both\n         * Defaults to ICON if unset.\n         */\n        buttonContents: TextIcon;\n    };\n\n    /**\n     * How the static actions list shows up on the screen\n     */\n    staticActionStyling?: ActionStyling;\n}\n\n/**\n * Display options for action menu\n */\nexport enum ActionStyling {\n    INLINE = 'INLINE',\n    DROPDOWN = 'DROPDOWN',\n}\n\n/**\n * An enum that describes the possible ways to display the button title.\n */\nexport enum TextIcon {\n    ICON = 1 \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionSearchProvider.html":{"url":"classes/ActionSearchProvider.html","title":"class - ActionSearchProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionSearchProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/action-search-provider/action-search.provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuickSearchProviderDefaults\n            \n\n            \n                Implements\n            \n            \n                            QuickSearchProvider\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _actions\n                            \n                            \n                                    Private\n                                _selectedEntities\n                            \n                            \n                                    Private\n                                flatListOfAvailableActions\n                            \n                            \n                                    Private\n                                isReadyToSearchPromise\n                            \n                            \n                                    Private\n                                resolveIsReadyToSearch\n                            \n                            \n                                    Private\n                                shouldWait\n                            \n                            \n                                data\n                            \n                            \n                                order\n                            \n                            \n                                sectionName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActions\n                            \n                            \n                                    Private\n                                getFlatListOfAvailableActions\n                            \n                            \n                                    Private\n                                isActionAvailable\n                            \n                            \n                                    Private\n                                isActionDisabled\n                            \n                            \n                                pause\n                            \n                            \n                                    Private\n                                readyToSearchPromiseFactory\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                unPause\n                            \n                            \n                                    Abstract\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actions\n                                \n                                \n                                    selectedEntities\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ts: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/action-search-provider/action-search.provider.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:36\n                            \n                        \n\n                \n                    \n                        Initialized by the calling component and is used for searching of the search criteria entered in QuickSearchComponent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedEntities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     R[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:41\n                            \n                        \n\n                \n                    \n                        Used in isActionDisabled to calculate disabled state of actions  and also in action handler\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            flatListOfAvailableActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isReadyToSearchPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                    \n                        \n                            Default value : this.readyToSearchPromiseFactory()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolveIsReadyToSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shouldWait\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     -1\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:37\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActions(searchCriteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchCriteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFlatListOfAvailableActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlatListOfAvailableActions(actions: ActionItem[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ActionItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isActionAvailable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActionAvailable(action: ActionItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isActionDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActionDisabled(action: ActionItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:51\n                \n            \n\n\n            \n                \n                    Pause searching for actions. For example, Call this method when searching for actions has to be paused until\nsome data has to be fetched asynchronously\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            readyToSearchPromiseFactory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readyToSearchPromiseFactory()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:75\n                \n            \n\n\n            \n                \n                    Searches through nested actions and finds all the actions that match with entered search text on the\nQuickSearchComponent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unPause\n                        \n                        \n                    \n                \n            \n            \n                \nunPause()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:59\n                \n            \n\n\n            \n                \n                    Resume searching for actions. To unpause searching for actions functionality that might have been paused earlier\nusing pause method above\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Inherited from         QuickSearchProviderDefaults\n\n                \n            \n            \n                \n                        Defined in         QuickSearchProviderDefaults:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actions\n                    \n                \n\n\n                \n                    \n                        setactions(actions: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            actions\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedEntities\n                    \n                \n\n\n                \n                    \n                        setselectedEntities(entities: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            entities\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { TranslationService } from '@vcd/i18n';\nimport { ActionItem } from '../common/interfaces';\nimport {\n    QuickSearchProvider,\n    QuickSearchProviderDefaults,\n    QuickSearchResultItem,\n    QuickSearchResults,\n} from '../quick-search';\nimport { CommonUtil } from '../utils';\n\nexport const DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX = 'vcd.cc.action.provider.section.title';\n\nexport class ActionSearchProvider extends QuickSearchProviderDefaults implements QuickSearchProvider {\n    set actions(actions: ActionItem[]) {\n        this._actions = actions;\n        this.flatListOfAvailableActions = null;\n    }\n    set selectedEntities(entities: R[]) {\n        this._selectedEntities = entities;\n        this.flatListOfAvailableActions = null;\n    }\n\n    constructor(private ts: TranslationService) {\n        super();\n    }\n    private flatListOfAvailableActions: ActionItem[];\n\n    /**\n     * Initialized by the calling component and is used for searching of the search criteria entered in {@link QuickSearchComponent}\n     */\n    private _actions: ActionItem[] = [];\n\n    /**\n     * Used in {@link isActionDisabled} to calculate disabled state of actions  and also in action handler\n     */\n    private _selectedEntities: R[] = [];\n\n    private resolveIsReadyToSearch: (value?: null) => void;\n    private isReadyToSearchPromise: Promise = this.readyToSearchPromiseFactory();\n    private shouldWait = false;\n\n    /**\n     * Pause searching for actions. For example, Call this method when searching for actions has to be paused until\n     * some data has to be fetched asynchronously\n     */\n    pause(): void {\n        this.shouldWait = true;\n    }\n\n    /**\n     * Resume searching for actions. To unpause searching for actions functionality that might have been paused earlier\n     * using pause method above\n     */\n    unPause(): void {\n        this.shouldWait = false;\n        this.resolveIsReadyToSearch();\n        this.isReadyToSearchPromise = this.readyToSearchPromiseFactory();\n    }\n\n    private readyToSearchPromiseFactory(): Promise {\n        return new Promise((resolve, reject) => {\n            this.resolveIsReadyToSearch = resolve;\n        });\n    }\n\n    /**\n     * Searches through nested actions and finds all the actions that match with entered search text on the\n     * {@link QuickSearchComponent}\n     */\n    async search(criteria: string): Promise {\n        if (this.shouldWait) {\n            await this.isReadyToSearchPromise;\n        }\n\n        if (!criteria) {\n            return { items: [] };\n        }\n\n        if (this.flatListOfAvailableActions == null) {\n            this.flatListOfAvailableActions = this.getFlatListOfAvailableActions(this._actions);\n        }\n        return { items: this.getActions(criteria.toLowerCase()) };\n    }\n\n    private getActions(searchCriteria: string): QuickSearchResultItem[] {\n        return this.flatListOfAvailableActions\n            .filter((action) => action.textKey?.toLowerCase().includes(searchCriteria))\n            .map((action) => ({\n                displayText: action.textKey,\n                handler: () => action.handler(this._selectedEntities, action.handlerData),\n            }));\n    }\n\n    private getFlatListOfAvailableActions(actions: ActionItem[]): ActionItem[] {\n        return actions.reduce((flatActionList, currentAction) => {\n            if (currentAction?.children?.length) {\n                flatActionList = flatActionList.concat(this.getFlatListOfAvailableActions(currentAction.children));\n            } else if (this.isActionAvailable(currentAction)) {\n                const textKey =\n                    currentAction.isTranslatable === false\n                        ? currentAction.textKey\n                        : this.ts.translate(currentAction.textKey);\n                flatActionList.push({ ...currentAction, textKey });\n            }\n            return flatActionList;\n        }, []);\n    }\n\n    private isActionAvailable(action: ActionItem): boolean {\n        return (\n            !action.isSeparator &&\n            (!action.availability || action.availability(this._selectedEntities)) &&\n            !this.isActionDisabled(action)\n        );\n    }\n\n    private isActionDisabled(action: ActionItem): boolean {\n        return CommonUtil.isFunction(action.disabled) ? action.disabled(this._selectedEntities) : action.disabled;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityPromiseResolver.html":{"url":"classes/ActivityPromiseResolver.html","title":"class - ActivityPromiseResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityPromiseResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                A class that understands how to take a promise and turn it into some response message for display.\nA client of this library will override ActivityPromiseResolver to process their specific type of promise.\nThis override will know how to generate a ObjectAndResponse from the type of promise it processes.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolveActivities\n                            \n                            \n                                resolveActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveActivities\n                        \n                        \n                    \n                \n            \n            \n                \nresolveActivities(activityResolutionPromises: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-promise-resolver.ts:71\n                \n            \n\n\n            \n                \n                    Takes a Promise of many items and turns it to some activity status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The success message this method should return if the activity succeeds. If undefined is passed,\na succeeded promise will return an empty response parameter which is assumed to mean success.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveActivity\n                        \n                        \n                    \n                \n            \n            \n                \nresolveActivity(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-promise-resolver.ts:51\n                \n            \n\n\n            \n                \n                    Takes a Promise and turns it to some activity status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The activity that this resolver will generate a response from. It generates\neither a sucesss or a failure condition.\n\n                                    \n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The success message this method should return if the activity succeeds. If undefined is passed,\na succeeded promise will return an empty response parameter which is assumed to mean success.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then(result => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch(error => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise)[]> {\n        return activityResolutionPromises\n            .then(result => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch(error => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityReporter.html":{"url":"classes/ActivityReporter.html","title":"class - ActivityReporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityReporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-reporter.ts\n        \n\n            \n                Description\n            \n            \n                Expresses the contract between a activity status and the UI displaying a loading message, reporting\nsuccess or errors\nCurrently, only one concurrent activity is supported.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:13\n                            \n                        \n\n                \n                    \n                            Creates this reporter with the performer that it will use to monitor events.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:73\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:53\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:27\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:33\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ActivityPromiseResolver } from './activity-promise-resolver';\n\n/**\n * Expresses the contract between a activity status and the UI displaying a loading message, reporting\n * success or errors\n * Currently, only one concurrent activity is supported.\n */\nexport abstract class ActivityReporter {\n    /**\n     * Creates this reporter with the performer that it will use to monitor events.\n     */\n    constructor(private promiseResolver: ActivityPromiseResolver) {}\n    /*\n     * Override this method to provide custom error activity starting behavior.\n     */\n    abstract startActivity(): void;\n    /**\n     * Override this method to provide custom error reporting behavior.\n     *\n     *  @param errorText The text to display in the error alert.\n     */\n    abstract reportError(errorText: string): void;\n    /**\n     * Override this method to provide custom success reporting behavior.\n     *\n     * @param successMessage A message to display to the user.\n     */\n    abstract reportSuccess(successMessage: string): void;\n\n    /**\n     * Monitors a promise that returns an entity using {@link ActivityPromiseResolver.monitorActivity}.\n     */\n    async monitorGet(activityResolutionPromise: Promise): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivity(activityResolutionPromise);\n        if (response.response.error) {\n            this.reportError(response.response.error);\n        } else {\n            this.reportSuccess(response.response.success);\n        }\n        return response.object;\n    }\n\n    /**\n     * Monitors a promise that returns many entities using {@link ActivityPromiseResolver.monitorActivities}.\n     */\n    async monitorGetAll(activityResolutionPromises: Promise): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivities(activityResolutionPromises);\n        const returnValue = response.map(item => item.object);\n        if (response.length) {\n            for (const item of response) {\n                if (item.response.error) {\n                    this.reportError(item.response.error);\n                    return returnValue;\n                }\n            }\n            this.reportSuccess(response[0].response.success);\n        }\n        return returnValue;\n    }\n\n    /**\n     * Monitors a promise that returns an entity and posts a successMessage using {@link ActivityPromiseResolver.monitorActivity}.\n     */\n    async monitorEdit(activityResolutionPromise: Promise, successMessage?: string): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivity(activityResolutionPromise, successMessage);\n        if (response.response.error) {\n            this.reportError(response.response.error);\n        } else {\n            this.reportSuccess(response.response.success);\n        }\n        return response.object;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActivityResponse.html":{"url":"interfaces/ActivityResponse.html","title":"interface - ActivityResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActivityResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                The response that was given with some resource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error message, if any, from the activity.\nA response without an error is assumed to have succeeded.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The response message, if any, from the activity.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then(result => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch(error => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise)[]> {\n        return activityResolutionPromises\n            .then(result => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch(error => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularLocatorDriver.html":{"url":"classes/AngularLocatorDriver.html","title":"class - AngularLocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularLocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Angular TestElements in the DOM.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LocatorDriver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                findParent\n                            \n                            \n                                findWidget\n                            \n                            \n                                get\n                            \n                            \n                                getByText\n                            \n                            \n                                parents\n                            \n                            \n                                unwrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testElement: TestElement, rootElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        testElement\n                                                  \n                                                        \n                                                                        TestElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rootElement\n                                                  \n                                                        \n                                                                        DebugElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParent(cssSelector: string, debugElement: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:57\n                \n            \n\n\n            \n                \n                    Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\nChecks the given element.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    debugElement\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, TestElement>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TestElement\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularWidgetObjectFinder } from './angular-widget-finder';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes, LocatorDriver } from './widget-object';\n\n/**\n * Knows how to find Angular TestElements in the DOM.\n */\nexport class AngularLocatorDriver implements LocatorDriver {\n    constructor(private testElement: TestElement, private rootElement: DebugElement) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        const nextElements = [].concat(...elements.map((element) => element.queryAll(By.css(cssSelector))));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        let nextElements: DebugElement[] = [].concat(\n            ...elements.map((element) => element.queryAll(By.css(cssSelector)))\n        );\n        nextElements = nextElements.filter((el) => el.nativeElement.textContent.includes(value));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string): AngularLocatorDriver {\n        return new AngularLocatorDriver(\n            new TestElement(\n                this.testElement.elements.map((el) => this.findParent(cssSelector, el.parent)),\n                this.testElement.fixture\n            ),\n            this.rootElement\n        );\n    }\n\n    /**\n     * Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\n     * Checks the given element.\n     */\n    private findParent(cssSelector: string, debugElement: DebugElement): DebugElement {\n        if (!debugElement) {\n            return undefined;\n        } else if (debugElement.nativeElement.matches(cssSelector)) {\n            return debugElement;\n        } else {\n            return this.findParent(cssSelector, debugElement.parent);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): TestElement {\n        return this.testElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        return new AngularWidgetObjectFinder(this.testElement.fixture).find(widget, this.rootElement, cssSelector);\n    }\n}\n\n/**\n * A wrapper around an array of DebugElements that adds convenience methods.\n * Avoid accessing the debug elements at all costs.\n *\n * Can be used in a `for ... of ...` loop to inspect all the sub elements within this TestElement.\n *\n * @example\n * for (const el of testElement) {\n *     expect(el.enabled()).toBeTruthy()\n * }\n */\nexport class TestElement implements Iterable {\n    constructor(public elements: DebugElement[], public fixture: ComponentFixture) {}\n\n    /**\n     * Gives the text of the first element.\n     */\n    text(): string {\n        return this.elements[0].nativeElement.textContent.trim();\n    }\n\n    /**\n     * Gives the value of the first element.\n     */\n    value(): string {\n        return this.elements[0].nativeElement.value;\n    }\n\n    /**\n     * Says if this element is enabled.\n     */\n    enabled(): boolean {\n        return !this.elements[0].nativeElement.disabled;\n    }\n\n    /**\n     * Clicks all of the elements contained.\n     */\n    click(): void {\n        this.elements.map((element) => element.nativeElement.click());\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Blurs all the contained elements.\n     */\n    blur(): void {\n        this.elements.map((el) => el.nativeElement.dispatchEvent(new Event('blur')));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Clears the input on all the contained elements.\n     */\n    clear(): void {\n        this.elements.map((el) => (el.nativeElement.value = ''));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Says how many elements are contained in this TestElement.\n     */\n    length(): number {\n        return this.elements.length;\n    }\n\n    /**\n     * Runs change detection with the component fixture.\n     */\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Gives the elements contained within this TestElement where each element is its own TestElement\n     */\n    toArray(): TestElement[] {\n        return this.elements.map((el) => new TestElement([el], this.fixture));\n    }\n\n    /**\n     * Allows a TestElement to be used in a `for ... of ...` loop.\n     */\n    [Symbol.iterator](): Iterator {\n        let counter = 0;\n        return {\n            next: () => {\n                counter += 1;\n                return {\n                    done: counter === this.elements.length,\n                    value: new TestElement([this.elements[counter]], this.fixture),\n                };\n            },\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularWidgetObjectFinder.html":{"url":"classes/AngularWidgetObjectFinder.html","title":"class - AngularWidgetObjectFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularWidgetObjectFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-finder.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Angular objects in the DOM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fixture\n                            \n                            \n                                    Public\n                                hostComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detectChanges\n                            \n                            \n                                    Public\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(arg: Type | ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        arg\n                                                  \n                                                        \n                                                                    Type | ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:21\n                            \n                        \n\n                \n                    \n                        We don't care or could possibly know the type of fixture\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     H\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:26\n                            \n                        \n\n                \n                    \n                        If you need direct access to manipulate the host\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:72\n                \n            \n\n\n            \n                \n                    Runs a change detection cycle.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(widgetConstructor: C, ancestor?: DebugElement, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    widgetConstructor\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe constructor of the widget to use\n\n\n                                    \n                                \n                                \n                                    ancestor\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe parent DebugElement to begin the search from\n\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe cssSelector to append to the tagName for the search\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, TestElement>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularLocatorDriver, TestElement } from './angular-widget-object';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes } from './widget-object';\n\n/**\n * Knows how to find Angular objects in the DOM.\n */\n\nexport class AngularWidgetObjectFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(arg: Type | ComponentFixture) {\n        this.fixture = (arg as ComponentFixture).componentRef\n            ? (arg as ComponentFixture)\n            : TestBed.createComponent(arg as Type);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds a single widget object\n     *\n     * @param widgetConstructor - The constructor of the widget to use\n     * @param ancestor - The parent DebugElement to begin the search from\n     * @param cssSelector - The cssSelector to append to the tagName for the search\n     *\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find, C extends FindableWidget>(\n        widgetConstructor: C,\n        ancestor?: DebugElement,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        let query = widgetConstructor.tagName;\n        if (cssSelector) {\n            query += `${cssSelector}`;\n        }\n        if (ancestor) {\n            query = query;\n        }\n\n        const root = (ancestor ? ancestor : this.fixture.debugElement).query(By.css(query));\n        if (!root) {\n            throw new Error(`Could not find the widget using the query ${query}`);\n        }\n\n        const widget = new widgetConstructor(new AngularLocatorDriver(new TestElement([root], this.fixture), root));\n        return (widget as any) as CorrectReturnTypes, TestElement>;\n    }\n\n    /**\n     * Runs a change detection cycle.\n     */\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerActivityReporterComponent.html":{"url":"components/BannerActivityReporterComponent.html","title":"component - BannerActivityReporterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BannerActivityReporterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts\n\n\n    \n        Description\n    \n    \n        Shows a banner to the user to represent the state of an activity.\n\n    \n\n    \n        Extends\n    \n    \n                ActivityReporter\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-banner-activity-reporter\n            \n\n\n\n\n            \n                templateUrl\n                ./banner-activity-reporter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorText\n                            \n                            \n                                running\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onErrorClosed\n                            \n                            \n                                onSuccessClosed\n                            \n                            \n                                reportError\n                            \n                            \n                                reportSuccess\n                            \n                            \n                                reset\n                            \n                            \n                                startActivity\n                            \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadingMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslationService, promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadingMessage\n                    \n                \n                \n                    \n                        Type :         LazyString\n\n                    \n                \n                \n                    \n                        Default value : this.translationService.translateAsync('vcd.cc.loading')\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:28\n                            \n                        \n                \n                    \n                        The translated message that is displayed to the user while loading.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onErrorClosed\n                        \n                        \n                    \n                \n            \n            \n                \nonErrorClosed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:67\n                \n            \n\n\n            \n                \n                    Closes the error message if displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSuccessClosed\n                        \n                        \n                    \n                \n            \n            \n                \nonSuccessClosed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:74\n                \n            \n\n\n            \n                \n                    Closes the success message if displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \nreportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:49\n                \n            \n\n\n            \n                \n                    Shows the given {@param errorText} to the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nreportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:57\n                \n            \n\n\n            \n                \n                    Shows the given {@param successMessage} to the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \nstartActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:40\n                \n            \n\n\n            \n                \n                    Begins to show the banner with a loading indicator.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:73\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:53\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:27\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:33\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { LazyString } from '@vcd/i18n';\nimport { ActivityPromiseResolver } from './activity-promise-resolver';\nimport { ActivityReporter } from './activity-reporter';\n\n/**\n * Shows a banner to the user to represent the state of an activity.\n */\n@Component({\n    selector: 'vcd-banner-activity-reporter',\n    templateUrl: './banner-activity-reporter.component.html',\n})\nexport class BannerActivityReporterComponent extends ActivityReporter {\n    running = false;\n    errorText: string;\n    successMessage: string;\n\n    /**\n     * The translated message that is displayed to the user while loading.\n     */\n    @Input()\n    loadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.loading');\n\n    constructor(\n        private translationService: TranslationService,\n        @Inject(ActivityPromiseResolver) promiseResolver: ActivityPromiseResolver\n    ) {\n        super(promiseResolver);\n    }\n\n    /**\n     * Begins to show the banner with a loading indicator.\n     */\n    startActivity(): void {\n        this.running = true;\n        this.successMessage = null;\n        this.errorText = null;\n    }\n\n    /**\n     * Shows the given {@param errorText} to the user.\n     */\n    reportError(errorText: string): void {\n        this.errorText = errorText;\n        this.running = false;\n    }\n\n    /**\n     * Shows the given {@param successMessage} to the user.\n     */\n    reportSuccess(successMessage: string): void {\n        if (successMessage) {\n            this.successMessage = successMessage;\n        }\n        this.running = false;\n    }\n\n    /**\n     * Closes the error message if displayed.\n     */\n    onErrorClosed(): void {\n        this.errorText = null;\n    }\n\n    /**\n     * Closes the success message if displayed.\n     */\n    onSuccessClosed(): void {\n        this.successMessage = null;\n    }\n\n    /*\n     * Reset the banner activity state manually.\n     *\n     * Call it when banner should be reset to its default state.\n     */\n    reset(): void {\n        this.running = false;\n        this.errorText = null;\n        this.successMessage = null;\n    }\n}\n\n    \n\n    \n        \n    {{ loadingMessage | lazyString }}\n\n\n\n    \n        \n            {{ errorText }}\n        \n    \n\n\n\n    \n        \n            {{ successMessage }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ loadingMessage | lazyString }}                        {{ errorText }}                                    {{ successMessage }}            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'BannerActivityReporterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BannerActivityReporterWidgetObject.html":{"url":"classes/BannerActivityReporterWidgetObject.html","title":"class - BannerActivityReporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BannerActivityReporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    running\n                                \n                                \n                                    errorText\n                                \n                                \n                                    sucessText\n                                \n                                \n                                    loadingText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-banner-activity-reporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        running\n                    \n                \n\n                \n                    \n                        getrunning()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorText\n                    \n                \n\n                \n                    \n                        geterrorText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sucessText\n                    \n                \n\n                \n                    \n                        getsucessText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadingText\n                    \n                \n\n                \n                    \n                        getloadingText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BannerActivityReporterComponent } from '../../../common/activity-reporter';\nimport { WidgetObject } from '../widget-object';\n\nexport class BannerActivityReporterWidgetObject extends WidgetObject {\n    static tagName = 'vcd-banner-activity-reporter';\n\n    get running(): boolean {\n        return this.component.running;\n    }\n\n    get errorText(): string {\n        return this.component.errorText;\n    }\n\n    get sucessText(): string {\n        return this.component.successMessage;\n    }\n\n    get loadingText(): string {\n        return this.findElement('clr-alert').nativeElement.textContent;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFormControl.html":{"url":"classes/BaseFormControl.html","title":"class - BaseFormControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFormControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/base-form-control.ts\n        \n\n            \n                Description\n            \n            \n                Wrapper to enforce UX decisions like readonly-ness, label position and error displaying. And also to make\nthe form control backing a form control name directive available to sub classes.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n                            CanBeReadOnly\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formControl\n                                \n                                \n                                    showErrors\n                                \n                                \n                                    errorKeys\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/base-form-control.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:67\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:21\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:72\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:26\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:31\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:52\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:62\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:57\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:46\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:41\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:85\n                                \n                            \n                    \n                        \n                                The FormControl associated with the FormControlName directive\n\n\n                                \n                                    Returns :         FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showErrors\n                    \n                \n\n                \n                    \n                        getshowErrors()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorKeys\n                    \n                \n\n                \n                    \n                        geterrorKeys()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:98\n                                \n                            \n                    \n                        \n                                Errors from the form control validation\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Input, Type } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { IdGenerator } from '../utils/id-generator/id-generator';\nimport { CanBeReadOnly } from './interfaces/can-be-read-only.interface';\n\nconst idGenerator = new IdGenerator('base-form-control-id');\n\n/**\n * Wrapper to enforce UX decisions like readonly-ness, label position and error displaying. And also to make\n * the form control backing a form control name directive available to sub classes.\n */\nexport class BaseFormControl implements ControlValueAccessor, CanBeReadOnly {\n    /**\n     * Auto generated ID for the input field.\n     */\n    id: string;\n\n    /**\n     * Change callback.\n     */\n    onChange: (...args: unknown[]) => unknown;\n\n    /**\n     * Touch callback.\n     */\n    onTouch: (...args: unknown[]) => unknown;\n\n    /**\n     * Whether the control is disabled.\n     */\n    disabled = false;\n\n    /**\n     * Show the asterisk next to the control when true\n     */\n    @Input() showAsterisk = false;\n\n    /**\n     * The label that appears before the control\n     */\n    @Input() label: string;\n\n    /**\n     * The description that appears below the control\n     * \\u00A0 is &nbsp; (non-breaking space)\n     */\n    @Input() description = '\\u00A0';\n\n    /**\n     * Whether this component is in readonly mode\n     */\n    @Input() isReadOnly = false;\n\n    /**\n     * Error labels to be used instead of NgControl error keys\n     */\n    @Input() errorLabels: string[] = [];\n\n    /**\n     * FormControlName directive\n     */\n    formControlNameDirective: NgControl;\n\n    /**\n     * To store the initial value of the input form control.\n     */\n    protected initialValue: number | string | boolean;\n\n    constructor(ngControl: NgControl) {\n        this.id = idGenerator.generate();\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n            this.formControlNameDirective = ngControl;\n        }\n    }\n\n    /**\n     * The FormControl associated with the FormControlName directive\n     */\n    get formControl(): FormControl {\n        return this.formControlNameDirective\n            ? (this.formControlNameDirective.control as FormControl)\n            : new FormControl('');\n    }\n\n    get showErrors(): boolean {\n        return this.formControl.enabled && !this.formControl.pristine && !this.formControl.valid;\n    }\n\n    /**\n     * Errors from the form control validation\n     */\n    get errorKeys(): string[] {\n        if (this.errorLabels.length) {\n            return this.errorLabels;\n        }\n        return Object.keys(this.formControl.errors || {});\n    }\n\n    registerOnChange(onChange: (...args: unknown[]) => unknown): void {\n        this.onChange = onChange;\n    }\n\n    registerOnTouched(onTouched: (...args: unknown[]) => unknown): void {\n        this.onTouch = onTouched;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(val: any): void {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseWidgetObject.html":{"url":"classes/BaseWidgetObject.html","title":"class - BaseWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                A class that is able to make queries to the DOM and be instantiated by a widget finder.\nWidget objects should be used only to find elements in the DOM. You should not attempt to take\nactions on these elements in a given widget object.\nAll widget objects should extend this base class.\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            class LoginWidgetObject extends BaseWidgetObject {\n      getUsernameField = this.locatorForChild('.username');\n\n      getOkButton(): T {\n          return this.driver.getByText('button', 'Ok').unwrap();\n      }\n\n      getOkButtonContainer(): T {\n          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n      }\n}\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                locatorDriver\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForChild\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForParent\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driver: LocatorDriver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/widget-object.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driver\n                                                  \n                                                        \n                                                                        LocatorDriver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorDriver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocatorDriver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForChild\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:38\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:45\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a parent with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:52\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector and text when called.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForChild? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForParent? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoldTextRendererComponent.html":{"url":"components/BoldTextRendererComponent.html","title":"component - BoldTextRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoldTextRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n\n\n    \n        Description\n    \n    \n        A ComponentRenderer component that is used for rendering a bold text inside a column cell template\n\n    \n\n\n    \n        Implements\n    \n    \n                    ComponentRenderer\n    \n\n    \n        Example\n    \n    \n                \n                    Example usage with RendererSpec:\ncolumns: GridColumn[] = [\n{\ndisplayName: 'Component Renderer',\nrenderer: RendererSpec(\n  BoldTextRendererComponent,\n  (record: MockRecord) => ({text: record.name})\n)\n}\n];\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-bold-text-renderer\n            \n\n\n\n            \n                template\n                {{ config.text }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         BoldTextRendererConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.component.ts:41\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ComponentRenderer } from '../interfaces/component-renderer.interface';\nimport { ColumnComponentRendererSpec, ColumnRendererSpec } from '../interfaces/datagrid-column.interface';\n/**\n * {@link ComponentRenderer.config} type that the {@link BoldTextRendererComponent} can understand\n */\nexport interface BoldTextRendererConfig {\n    /**\n     * Text to be displayed in bold font\n     */\n    text: string;\n}\n\n/**\n * A {@link ComponentRenderer} component that is used for rendering a bold text inside a column cell template\n *\n * @example Example usage with RendererSpec:\n *     columns: GridColumn[] = [\n *       {\n *         displayName: 'Component Renderer',\n *         renderer: RendererSpec(\n *           BoldTextRendererComponent,\n *           (record: MockRecord) => ({text: record.name})\n *         )\n *       }\n *     ];\n */\n@Component({\n    selector: 'vcd-bold-text-renderer',\n    template: `\n        {{ config.text }}\n    `,\n})\nexport class BoldTextRendererComponent implements ComponentRenderer {\n    @Input()\n    config: BoldTextRendererConfig;\n}\n\n/**\n * Creates a {@link ColumnRendererSpec} for rendering bold text in a column.\n */\nexport function BoldTextRenderer(\n    textExtractor: (record: R) => string\n): ColumnRendererSpec {\n    return ColumnComponentRendererSpec({\n        type: BoldTextRendererComponent,\n        config(record): BoldTextRendererConfig {\n            return {\n                text: textExtractor(record),\n            };\n        },\n    });\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ config.text }}'\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoldTextRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BoldTextRendererConfig.html":{"url":"interfaces/BoldTextRendererConfig.html","title":"interface - BoldTextRendererConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BoldTextRendererConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n        \n\n            \n                Description\n            \n            \n                ComponentRenderer.config type that the BoldTextRendererComponent can understand\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text to be displayed in bold font\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ComponentRenderer } from '../interfaces/component-renderer.interface';\nimport { ColumnComponentRendererSpec, ColumnRendererSpec } from '../interfaces/datagrid-column.interface';\n/**\n * {@link ComponentRenderer.config} type that the {@link BoldTextRendererComponent} can understand\n */\nexport interface BoldTextRendererConfig {\n    /**\n     * Text to be displayed in bold font\n     */\n    text: string;\n}\n\n/**\n * A {@link ComponentRenderer} component that is used for rendering a bold text inside a column cell template\n *\n * @example Example usage with RendererSpec:\n *     columns: GridColumn[] = [\n *       {\n *         displayName: 'Component Renderer',\n *         renderer: RendererSpec(\n *           BoldTextRendererComponent,\n *           (record: MockRecord) => ({text: record.name})\n *         )\n *       }\n *     ];\n */\n@Component({\n    selector: 'vcd-bold-text-renderer',\n    template: `\n        {{ config.text }}\n    `,\n})\nexport class BoldTextRendererComponent implements ComponentRenderer {\n    @Input()\n    config: BoldTextRendererConfig;\n}\n\n/**\n * Creates a {@link ColumnRendererSpec} for rendering bold text in a column.\n */\nexport function BoldTextRenderer(\n    textExtractor: (record: R) => string\n): ColumnRendererSpec {\n    return ColumnComponentRendererSpec({\n        type: BoldTextRendererComponent,\n        config(record): BoldTextRendererConfig {\n            return {\n                text: textExtractor(record),\n            };\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoldTextRendererWidgetObject.html":{"url":"classes/BoldTextRendererWidgetObject.html","title":"class - BoldTextRendererWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoldTextRendererWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts\n        \n\n            \n                Description\n            \n            \n                Widget Object for the bold text renderer.\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-bold-text-renderer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { VcdDatagridWidgetObject } from '../../utils/test/datagrid/vcd-datagrid.wo';\nimport { WidgetObject } from '../../utils/test/widget-object';\nimport { BoldTextRendererComponent } from './bold-text-renderer.component';\n\n/**\n * Mixin that allows {@link ClrDatagridWidgetObject} to read information from {@link BoldTextRendererComponent}\n */\n// tslint:disable-next-line:typedef\nexport function WithGridBoldRenderer>>(Base: TBase) {\n    return class extends Base {\n        getBoldText(row: number, column: number): string {\n            const cellElement = this.clrDatagrid.getCell(row, column);\n            return this.getNodeText(this.findElement('strong', cellElement));\n        }\n    };\n}\n\n/**\n * Widget Object for the bold text renderer.\n */\nexport class BoldTextRendererWidgetObject extends WidgetObject {\n    static tagName = 'vcd-bold-text-renderer';\n\n    get text(): string {\n        return this.findElement('strong').nativeElement.textContent;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanBeReadOnly.html":{"url":"interfaces/CanBeReadOnly.html","title":"interface - CanBeReadOnly","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanBeReadOnly\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/interfaces/can-be-read-only.interface.ts\n        \n\n            \n                Description\n            \n            \n                Components that can be made readonly should implement this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isReadOnly\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isReadOnly\n                                    \n                                \n                                \n                                    \n                                        isReadOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This being true implies that any controls that may edit data will not allow editing or be removed\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CanBeReadOnly {\n    /**\n     * This being true implies that any controls that may edit data will not allow editing or be removed\n     */\n    isReadOnly: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CliptextConfig.html":{"url":"interfaces/CliptextConfig.html","title":"interface - CliptextConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CliptextConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.ts\n        \n\n            \n                Description\n            \n            \n                The configuration information for the cliptext within the cells of the datagrid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        mouseoutDelay\n                                \n                                \n                                            Optional\n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the cliptext should be disabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mouseoutDelay\n                                    \n                                \n                                \n                                    \n                                        mouseoutDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The time delay from mouse off to hide the cliptext.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         TooltipSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TooltipSize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The size of the tooltip to be displayed in the cell.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n\nexport enum TooltipPosition {\n    tl = 'tooltip-top-left',\n    tr = 'tooltip-top-right',\n    br = 'tooltip-bottom-right',\n    bl = 'tooltip-bottom-left',\n}\n\nexport enum TooltipSize {\n    sm = '100px',\n    md = '200px',\n    lg = '400px',\n}\n\n/**\n * The configuration information for the cliptext within the cells of the datagrid.\n */\nexport interface CliptextConfig {\n    /**\n     * The size of the tooltip to be displayed in the cell.\n     */\n    size?: TooltipSize;\n    /**\n     * The time delay from mouse off to hide the cliptext.\n     */\n    mouseoutDelay?: number;\n    /**\n     * If the cliptext should be disabled.\n     */\n    disabled?: boolean;\n}\n\n/**\n * Singleton tooltip created by directive\n */\nconst tip = {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n};\n\ntype EventHandler = (e: MouseEvent) => void;\n\nfunction watchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.addEventListener('mouseenter', mouseIn);\n    el.addEventListener('mouseleave', mouseOut);\n}\n\nfunction unwatchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.removeEventListener('mouseenter', mouseIn);\n    el.removeEventListener('mouseleave', mouseOut);\n}\n\nfunction setStyle(el: HTMLElement, style: Partial): void {\n    Object.assign(el.style, style);\n}\n\n/**\n * Displays a clarity tooltip with the full contents of a host element on hover but only if\n * the elements is clipped.\n */\n@Directive({\n    selector: '[vcdShowClippedText]',\n})\nexport class ShowClippedTextDirective implements OnDestroy, OnInit {\n    /** To destroy the tooltip when no longer needed */\n    static instanceCount = 0;\n\n    @Input('vcdShowClippedText')\n    set config(config: CliptextConfig) {\n        if (config && config.mouseoutDelay) {\n            this.mouseoutDelay = config.mouseoutDelay;\n        }\n        if (config && config.size) {\n            this.tooltipSize = config.size;\n        }\n        const nextDisabled = config !== undefined && config.disabled;\n        if (this.disabled === nextDisabled) {\n            return;\n        }\n        this.disabled = nextDisabled;\n        if (this.disabled) {\n            this.deactivate();\n        } else {\n            this.activate();\n        }\n    }\n\n    mouseoutDelay = 500;\n    tooltipSize = TooltipSize.md;\n    disabled = false;\n\n    /**\n     * The HTML element receiving the directive\n     */\n    public hostElement: HTMLElement = this.host.nativeElement;\n\n    constructor(private host: ElementRef) {}\n\n    ngOnInit(): void {\n        if (!this.disabled) {\n            this.activate();\n        }\n    }\n\n    activate(): void {\n        ShowClippedTextDirective.instanceCount++;\n        tip.create();\n        watchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n\n        // A host must have the following styles to show text ellipsis when overflowing\n        setStyle(this.hostElement, {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (!this.disabled) {\n            this.deactivate();\n        }\n    }\n\n    deactivate(): void {\n        ShowClippedTextDirective.instanceCount--;\n        unwatchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n        if (ShowClippedTextDirective.instanceCount === 0) {\n            tip.destroy();\n        }\n    }\n\n    private onMouseIn = (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    };\n\n    private onMouseOut = () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    };\n\n    private isOverflowing(): boolean {\n        // Text overflows when the content element's width is less than its scrollWidth.\n        return Math.ceil(this.hostElement.getBoundingClientRect().width)  {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnConfigInternal.html":{"url":"interfaces/ColumnConfigInternal.html","title":"interface - ColumnConfigInternal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnConfigInternal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                For simplifying logic inside the HTML template to differentiate between different GridColumn.renderer\ntypes.\n\n            \n\n            \n                Extends\n            \n            \n                        GridColumn\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fieldColumnRendererSpec\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fieldRenderer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldColumnRendererSpec\n                                    \n                                \n                                \n                                    \n                                        fieldColumnRendererSpec:         ColumnRendererSpec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnRendererSpec\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldRenderer\n                                    \n                                \n                                \n                                    \n                                        fieldRenderer:         FunctionRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FunctionRenderer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnRendererSpec.html":{"url":"interfaces/ColumnRendererSpec.html","title":"interface - ColumnRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\ncomponent. used by the ComponentRendererOutletDirective\n\n            \n\n            \n                Extends\n            \n            \n                        ComponentRendererSpec\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A function that creates a config object required for the configuration of component that will be rendered in the column\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonUtil.html":{"url":"classes/CommonUtil.html","title":"class - CommonUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/common-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isFunction\n                            \n                            \n                                    Static\n                                roundTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFunction(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/common-util.ts:22\n                \n            \n\n\n            \n                \n                    Verifies if the passed value is of type Function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            roundTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    roundTo(value: number, digits: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/common-util.ts:12\n                \n            \n\n\n            \n                \n                    Rounds number to given floating point, 2 by default.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        number from float data type\n\n                                    \n                                \n                                \n                                    digits\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        2\n                                    \n\n                                    \n                                        how many numbers will be shown after decimal point\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class CommonUtil {\n    /**\n     * Rounds number to given floating point, 2 by default.\n     * @param value number from float data type\n     * @param digits how many numbers will be shown after decimal point\n     */\n    static roundTo(value: number, digits: number = 2): number {\n        if (!value) {\n            value = 0;\n        }\n        return Number(Math.round(Number(value + 'e' + digits)) + 'e-' + digits);\n    }\n\n    /**\n     * Verifies if the passed value is of type Function\n     */\n    static isFunction(value: any): value is (...args: unknown[]) => unknown {\n        return typeof value === 'function';\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentRenderer.html":{"url":"interfaces/ComponentRenderer.html","title":"interface - ComponentRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n        \n\n            \n                Description\n            \n            \n                Implemented by all the component renderers. The components that have to be rendered dynamically.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object used by the component renderers inside their HTML template\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n/**\n * Implemented by all the component renderers. The components that have to be rendered dynamically.\n */\nexport interface ComponentRenderer {\n    /**\n     * Object used by the component renderers inside their HTML template\n     */\n    config: T;\n}\n\n/**\n * Used for the type safety of {@link ColumnRendererSpec#type}\n */\nexport type ComponentRendererConstructor = Type>;\n\n/**\n * An object that contains the constructor of a component of {@link ComponentRenderer} type that has to be rendered dynamically.\n *\n * {@link ComponentRendererOutletDirective} uses this object to render the component. It is responsible for setting the\n * component's configuration{@link ComponentRenderer#config} after dynamically initializing it. But the caller is responsible\n * for providing a config\n */\nexport interface ComponentRendererSpec {\n    /**\n     * Constructor of a specific type of component to be rendered\n     */\n    type: ComponentRendererConstructor;\n    /**\n     * {@link ComponentRenderer.config}. In the case of a {@link ColumnRendererSpec} it is a function that takes a rest\n     * item as input and returns an object of {@link ComponentRenderer.config}\n     */\n    config: C | ((restItem: unknown) => C);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ComponentRendererOutletDirective.html":{"url":"directives/ComponentRendererOutletDirective.html","title":"directive - ComponentRendererOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ComponentRendererOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Component that acts as a host element for dynamic rendering of component constructors.\nIt takes ComponentRendererSpec and also 'context' as input in case of a ColumnRendererSpec that serves as argument for\nColumnRendererSpec.config method. Attaches the component to be rendered to the view container of host element\nand updates it's configuration whenever changed.\nExample usage:\n\n\n\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [vcdComponentRendererOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentRef\n                            \n                            \n                                    Private\n                                componentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignValue\n                            \n                            \n                                    Private\n                                attachRenderer\n                            \n                            \n                                    Private\n                                detachRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                vcdComponentRendererOutlet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    vcdComponentRendererOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, cfr: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cfr\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        vcdComponentRendererOutlet\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:40\n                            \n                        \n                \n                    \n                        Sets the component that this outlet should render. Where rendererSpec is the\nComponentRendererSpec that details how to render the component and context\nis any information that the component needs to render.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assignValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignValue(config:  | T, context: R)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:63\n                \n            \n\n\n            \n                \n                    Updates the configuration of instantiated component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                             | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            R\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            attachRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attachRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:52\n                \n            \n\n\n            \n                \n                    Attaches the passed component type to the view of this directive host\n\n\n                    \n                        Returns :         ComponentRef>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            detachRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detachRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRendererConstructor\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        vcdComponentRendererOutlet\n                    \n                \n\n\n                \n                    \n                        setvcdComponentRendererOutlet(renderer: literal type)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:40\n                                \n                            \n                    \n                        \n                                Sets the component that this outlet should render. Where rendererSpec is the\nComponentRendererSpec that details how to render the component and context\nis any information that the component needs to render.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            renderer\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { ComponentFactoryResolver, ComponentRef, Directive, Input, ViewContainerRef } from '@angular/core';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Component that acts as a host element for dynamic rendering of component constructors.\n * It takes {@link ComponentRendererSpec} and also 'context' as input in case of a {@link ColumnRendererSpec} that serves as argument for\n * {@link ColumnRendererSpec.config} method. Attaches the component to be rendered to the view container of host element\n * and updates it's configuration whenever changed.\n *\n * Example usage:\n * \n *\n */\n@Directive({\n    selector: '[vcdComponentRendererOutlet]',\n})\nexport class ComponentRendererOutletDirective {\n    private componentRef: ComponentRef>;\n    private componentType: ComponentRendererConstructor;\n\n    constructor(private viewContainerRef: ViewContainerRef, private cfr: ComponentFactoryResolver) {}\n\n    /**\n     * Sets the component that this outlet should render. Where rendererSpec is the\n     * {@link ComponentRendererSpec} that details how to render the component and context\n     * is any information that the component needs to render.\n     */\n    @Input()\n    set vcdComponentRendererOutlet(renderer: { rendererSpec: ComponentRendererSpec; context?: R }) {\n        if (this.componentType !== renderer.rendererSpec.type) {\n            // Cache the componentType to avoid redundant detaching and attaching of component to this host\n            this.componentType = renderer.rendererSpec.type;\n            this.componentRef = this.attachRenderer();\n        }\n        this.assignValue(renderer.rendererSpec.config, renderer.context);\n    }\n\n    /**\n     * Attaches the passed component type to the view of this directive host\n     */\n    private attachRenderer(): ComponentRef> {\n        if (this.componentRef) {\n            this.detachRenderer();\n        }\n        const componentFactory = this.cfr.resolveComponentFactory(this.componentType);\n        return this.viewContainerRef.createComponent(componentFactory);\n    }\n\n    /**\n     * Updates the configuration of instantiated component\n     */\n    private assignValue(config: ((r: R) => T) | T, context: R): void {\n        if (!this.componentRef || !this.componentRef.instance) {\n            return;\n        }\n        this.componentRef.instance.config = config instanceof Function ? config(context) : config;\n    }\n\n    private detachRenderer(): void {\n        this.viewContainerRef.remove();\n        this.componentRef = null;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentRendererSpec.html":{"url":"interfaces/ComponentRendererSpec.html","title":"interface - ComponentRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n        \n\n            \n                Description\n            \n            \n                An object that contains the constructor of a component of ComponentRenderer type that has to be rendered dynamically.\nComponentRendererOutletDirective uses this object to render the component. It is responsible for setting the\ncomponent's configurationComponentRenderer after dynamically initializing it. But the caller is responsible\nfor providing a config\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     C | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ComponentRenderer.config. In the case of a ColumnRendererSpec it is a function that takes a rest\nitem as input and returns an object of ComponentRenderer.config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         ComponentRendererConstructor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentRendererConstructor\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Constructor of a specific type of component to be rendered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n/**\n * Implemented by all the component renderers. The components that have to be rendered dynamically.\n */\nexport interface ComponentRenderer {\n    /**\n     * Object used by the component renderers inside their HTML template\n     */\n    config: T;\n}\n\n/**\n * Used for the type safety of {@link ColumnRendererSpec#type}\n */\nexport type ComponentRendererConstructor = Type>;\n\n/**\n * An object that contains the constructor of a component of {@link ComponentRenderer} type that has to be rendered dynamically.\n *\n * {@link ComponentRendererOutletDirective} uses this object to render the component. It is responsible for setting the\n * component's configuration{@link ComponentRenderer#config} after dynamically initializing it. But the caller is responsible\n * for providing a config\n */\nexport interface ComponentRendererSpec {\n    /**\n     * Constructor of a specific type of component to be rendered\n     */\n    type: ComponentRendererConstructor;\n    /**\n     * {@link ComponentRenderer.config}. In the case of a {@link ColumnRendererSpec} it is a function that takes a rest\n     * item as input and returns an object of {@link ComponentRenderer.config}\n     */\n    config: C | ((restItem: unknown) => C);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CsvExporterService.html":{"url":"injectables/CsvExporterService.html","title":"injectable - CsvExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CsvExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/csv-exporter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createCsv\n                            \n                            \n                                    Public\n                                downloadCsvFile\n                            \n                            \n                                    Public\n                                hasPotentialInjection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createCsv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCsv(rows: any[][], shouldSanitize)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:21\n                \n            \n\n\n            \n                \n                    Creates a string that can be used to create a Blob for a CSV\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            any[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        2D array of data. First row is the names for the fields\n\n                                    \n                                \n                                \n                                    shouldSanitize\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If a cell starting with a control character should be edited to prevent\npossible code injection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            downloadCsvFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadCsvFile(csvFile: string, filename: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:39\n                \n            \n\n\n            \n                \n                    Does a client side download\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    csvFile\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string contents of a CSV file to be downloaded\n\n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the file to be downloaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasPotentialInjection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasPotentialInjection(rows: any[][])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:30\n                \n            \n\n\n            \n                \n                    Whether the CSV that would result from the export is at risk of code injection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            any[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        2D array of data. First row is the names for the fields\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\n/**\n * Encodes a data set to be downloaded as a CSV\n */\nexport class CsvExporterService {\n    /**\n     * Creates a string that can be used to create a Blob for a CSV\n     * @param rows 2D array of data. First row is the names for the fields\n     * @param shouldSanitize If a cell starting with a control character should be edited to prevent\n     * possible code injection\n     */\n    public createCsv(rows: any[][], shouldSanitize = false): string {\n        // BOM Mark to help Excel open the CSV when it contains UTF-8 characters\n        return '\\ufeff' + rows.map((row) => processRow(row, shouldSanitize)).join('\\n');\n    }\n\n    /**\n     * Whether the CSV that would result from the export is at risk of code injection\n     * @param rows 2D array of data. First row is the names for the fields\n     */\n    public hasPotentialInjection(rows: any[][]): boolean {\n        return rows.some(hasPotentialInjection);\n    }\n\n    /**\n     * Does a client side download\n     * @param csvFile The string contents of a CSV file to be downloaded\n     * @param filename The name of the file to be downloaded\n     */\n    public downloadCsvFile(csvFile: string, filename: string): void {\n        const mimeType = 'text/csv;charset=utf-8;';\n        const blob = new Blob([csvFile], { type: mimeType });\n        // Jan 1, 2020 - Chrome and IE support this\n        if (navigator.msSaveBlob) {\n            navigator.msSaveBlob(blob, filename);\n        } else {\n            const link = document.createElement('a');\n            const url = URL.createObjectURL(blob);\n            link.setAttribute('href', url);\n            link.setAttribute('download', filename);\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n\nconst LEADING_CONTROL_CHAR = /^[-+=@]/;\n\n/**\n * Whether the given row data is at risk of code injection when exported to CSV.\n */\nfunction hasPotentialInjection(row: unknown[]): boolean {\n    return row.some((cell) => LEADING_CONTROL_CHAR.test(encodeValue(cell, false)));\n}\n\n/**\n * Returns a string\n * @param row A list of cells to be turned into a CSV string, separated by commas\n * @param shouldSanitize If a cell starting with a control character should be edited to prevent\n * possible code injection\n */\nfunction processRow(row: unknown[], shouldSanitize: boolean): string {\n    return row.map((cell) => encodeValue(cell, shouldSanitize)).join(',');\n}\n\n/**\n * Returns a cell's cellValue encoded against spaces, quotes, and CSV injection character\n * @param cellValue Cell cellValue to be encoded\n * @param shouldSanitize If this cellValue starts with a control should it be\n * prefixed with the tab character\n */\nfunction encodeValue(cellValue: unknown, shouldSanitize: boolean): string {\n    let innerValue = cellValue == null ? '' : cellValue.toString();\n    if (cellValue instanceof Date) {\n        innerValue = cellValue.toLocaleString();\n    } else if (cellValue && typeof cellValue === 'object') {\n        innerValue = JSON.stringify(cellValue);\n    }\n    // Double quotes are doubled\n    let result = innerValue.replace(/\"/g, '\"\"');\n\n    // Add quotes around the whole thing if it contains new lines\n    if (result.search(/[\",\\n]/g) >= 0) {\n        result = `\"${result}\"`;\n    }\n    // Escape against\n    if (shouldSanitize) {\n        return sanitizeString(result);\n    }\n    return result;\n}\n\n/**\n * Prevents CSV injection by prefixing with a tab character if the string contains a\n * special character.\n */\nfunction sanitizeString(value: string): string {\n    if (LEADING_CONTROL_CHAR.test(value)) {\n        return '\\t' + value;\n    }\n    return value;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CypressLocatorDriver.html":{"url":"classes/CypressLocatorDriver.html","title":"class - CypressLocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CypressLocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Cypress chainables in the DOM.\nT is the type of data that this will output when you call unwrap.\nIn almost all cases, this should be a Cypress.Chainable.\nWe chose to provide this as a generic because for reasons seen in\nthis PR\nwe could not load the Cypress types in our library.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LocatorDriver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findWidget\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                getBase\n                            \n                            \n                                getByText\n                            \n                            \n                                parents\n                            \n                            \n                                unwrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chainable: T, isRoot: boolean, alias: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chainable\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRoot\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getBase\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBase()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:72\n                \n            \n\n\n            \n                \n                    Gives the correct base for this current query.\nThis is to override the behavior where calls to .find will permanently change the scope of the query.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CypressWidgetObjectFinder } from './cypress-widget-finder';\nimport { BaseWidgetObject, CorrectReturnTypes, FindableWidget, LocatorDriver } from './widget-object';\n\ndeclare const cy;\n\n/**\n * Knows how to find Cypress chainables in the DOM.\n *\n * T is the type of data that this will output when you call `unwrap`.\n * In almost all cases, this should be a `Cypress.Chainable`.\n * We chose to provide this as a generic because for reasons seen in\n * [this PR](https://github.com/vmware/vmware-cloud-director-ui-components/pull/248)\n * we could not load the Cypress types in our library.\n */\nexport class CypressLocatorDriver implements LocatorDriver {\n    constructor(private chainable: T, private isRoot: boolean, private alias: string) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        return new CypressLocatorDriver(root.find(cssSelector, options), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        const queryOptions = { matchCase: false, ...(options ? (options as object) : {}) };\n        return new CypressLocatorDriver(root.contains(cssSelector, value, queryOptions), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        return new CypressLocatorDriver(root.parents(cssSelector, options), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): T {\n        return this.chainable;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T> {\n        return new CypressWidgetObjectFinder().find(widget, '@' + this.alias, cssSelector) as CorrectReturnTypes,\n            T\n        >;\n    }\n\n    /**\n     * Gives the correct base for this current query.\n     * This is to override the behavior where calls to .find will permanently change the scope of the query.\n     */\n    private getBase(): any {\n        if (this.isRoot) {\n            return cy.get('@' + this.alias);\n        } else {\n            return this.chainable;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CypressWidgetObjectFinder.html":{"url":"classes/CypressWidgetObjectFinder.html","title":"class - CypressWidgetObjectFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CypressWidgetObjectFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Cypress widget objects within the DOM.\nT is the type of data that this will output when you call unwrap.\nIn almost all cases, this should be a Cypress.Chainable.\nWe chose to provide this as a generic because for reasons seen in\nthis PR\nwe could not load the Cypress types in our library.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(widgetConstructor: C, ancestor?: string, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-finder.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    widgetConstructor\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe constructor of the widget to use\n\n\n                                    \n                                \n                                \n                                    ancestor\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe CSS query or alias of the parent to begin the search from.\nthis will be passed to cy.get and is a global search.\n\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe cssSelector to append to the tagName for the search\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IdGenerator } from '../../id-generator/id-generator';\nimport { CypressLocatorDriver } from './cypress-widget-object';\nimport { BaseWidgetObject, CorrectReturnTypes, FindableWidget } from './widget-object';\n\ndeclare const cy;\nconst idGenerator = new IdGenerator('cy-id');\n\n/**\n * Knows how to find Cypress widget objects within the DOM.\n *\n * T is the type of data that this will output when you call `unwrap`.\n * In almost all cases, this should be a `Cypress.Chainable`.\n * We chose to provide this as a generic because for reasons seen in\n * [this PR](https://github.com/vmware/vmware-cloud-director-ui-components/pull/248)\n * we could not load the Cypress types in our library.\n */\nexport class CypressWidgetObjectFinder {\n    /**\n     * Finds a single widget object\n     *\n     * @param widgetConstructor - The constructor of the widget to use\n     * @param ancestor - The CSS query or alias of the parent to begin the search from.\n     *                 this will be passed to `cy.get` and is a global search.\n     * @param cssSelector - The cssSelector to append to the tagName for the search\n     *\n     */\n    public find, C extends FindableWidget>(\n        widgetConstructor: C,\n        ancestor?: string,\n        cssSelector?: string\n    ): CorrectReturnTypes, T> {\n        let tagName = widgetConstructor.tagName;\n        if (cssSelector) {\n            tagName += `${cssSelector}`;\n        }\n        const id = idGenerator.generate();\n        const search = ancestor ? cy.get(ancestor).find(tagName) : cy.get(tagName);\n        const root = search.as(id);\n        const widget = new widgetConstructor(new CypressLocatorDriver(root, true, id));\n        return (widget as any) as CorrectReturnTypes, T>;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataExportRequestEvent.html":{"url":"interfaces/DataExportRequestEvent.html","title":"interface - DataExportRequestEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataExportRequestEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.component.ts\n        \n\n            \n                Description\n            \n            \n                Information passed to the caller so they can fetch the data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exportData\n                                \n                                \n                                        selectedColumns\n                                \n                                \n                                        updateProgress\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportData\n                                    \n                                \n                                \n                                    \n                                        exportData:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Call this when all records have been fetched to initiate the CSV creation.\nThis should only be called once after all data fetching is finished\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedColumns\n                                    \n                                \n                                \n                                    \n                                        selectedColumns:         ExportColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExportColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Columns selected by the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateProgress\n                                    \n                                \n                                \n                                    \n                                        updateProgress:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Call this to indicate a new value to be displayed in the progress indicator.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDropdown } from '@clr/angular';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { CsvExporterService } from './csv-exporter.service';\n\n/**\n * Identifiers for each column that user is allowed to select\n */\nexport interface ExportColumn {\n    /**\n     * Displayed in the list of columns. If there is no displayName, the default value is fieldName\n     */\n    displayName?: string;\n    /**\n     * The name of the field in the JSON that is returned and converted to a viewable format\n     */\n    fieldName: string;\n}\n\nexport enum UserOptions {\n    selectAll = 'selectAll',\n    friendlyNames = 'friendlyNames',\n    sanitize = 'sanitize',\n}\n\n/**\n * Information passed to the caller so they can fetch the data\n */\nexport interface DataExportRequestEvent {\n    /**\n     * Call this to indicate a new value to be displayed in the progress indicator.\n     * @param progress A number from 0 to 1 indicating download progress. Passing -1 will make it an indeterminate\n     */\n    updateProgress: (progress: number) => void;\n\n    /**\n     * Call this when all records have been fetched to initiate the CSV creation.\n     * This should only be called once after all data fetching is finished\n     * @param records Records to be converted into a csv file\n     * @return a promise of the resulting CSV to indicate when this potentially lengthy process is over\n     */\n    exportData: (records: object[]) => Promise;\n\n    /**\n     * Columns selected by the user.\n     */\n    selectedColumns: ExportColumn[];\n}\n\n/**\n * A dialog to export data\n *\n *  - Allows the UI to select columns to be exported\n *  - Provides a progress indicator\n *  - Converts the data that is fetched by the caller into a CSV\n */\n@Component({\n    selector: 'vcd-data-exporter',\n    templateUrl: 'data-exporter.component.html',\n    styleUrls: ['./data-exporter.component.scss'],\n})\nexport class DataExporterComponent implements OnInit, OnDestroy {\n    constructor(private csvExporterService: CsvExporterService, private translationService: TranslationService) {}\n\n    @ViewChild(ClrDropdown) set columnDropdown(columnDropdown: ClrDropdown) {\n        if (!columnDropdown) {\n            return;\n        }\n        this.subscriptionTracker.subscribe(columnDropdown.toggleService.openChange, (opened) => {\n            this.isDropdownOpen = opened;\n        });\n    }\n\n    _columns: ExportColumn[] = [];\n\n    /**\n     * List of columns that can be exported, user may deselect some before sending the download request.\n     * Display name defaults to field name if there is no displayName\n     */\n    @Input()\n    set columns(cols: ExportColumn[]) {\n        this._columns = cols;\n        this.updateFieldNameMap(cols);\n    }\n\n    get columns(): ExportColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * The name of the file to be downloaded\n     */\n    @Input() fileName = 'data-export.csv';\n\n    /**\n     * Text for the Dialog Header\n     */\n    @Input()\n    dialogHeader: LazyString = this.translationService.translateAsync('vcd.cc.data-exporter.title');\n\n    /**\n     * Text for the cancel button.\n     */\n    @Input()\n    cancelText: LazyString = this.translationService.translateAsync('vcd.cc.cancel');\n\n    /**\n     * Text for the export all button.\n     */\n    @Input()\n    exportAllText: LazyString = this.translationService.translateAsync('vcd.cc.export.all');\n\n    /**\n     * Text for the select columns dropdown button.\n     */\n    @Input()\n    selectColumnsText: LazyString = this.translationService.translateAsync('vcd.cc.select.columns');\n\n    /**\n     * Text for the export button.\n     */\n    @Input()\n    exportText: LazyString = this.translationService.translateAsync('vcd.cc.export');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    yesText: LazyString = this.translationService.translateAsync('vcd.cc.yes');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    noText: LazyString = this.translationService.translateAsync('vcd.cc.no');\n\n    /**\n     * Text label that is next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.question');\n\n    /**\n     * Text the info message next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.info');\n\n    /**\n     * Text the hint message below the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesHint: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.hint');\n\n    /**\n     * Text label that is next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.question');\n\n    /**\n     * Hint message that is below the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxHint: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.hint');\n\n    /**\n     * Text the info message next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.info');\n\n    /**\n     * The message that is displayed while the data is downloading.\n     */\n    @Input()\n    downloadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.downloading');\n\n    /**\n     * The message that is displayed while the data is writing to file.\n     */\n    @Input()\n    writingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.writing');\n\n    /**\n     * Whether the dialog is open\n     */\n    @Input()\n    set open(value: boolean) {\n        this._open = value;\n        this.openChange.emit(value);\n    }\n    get open(): boolean {\n        return this._open;\n    }\n\n    private _open = false;\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    forceDropdownOpen = false;\n\n    /**\n     * Fires when {@link _open} changes. Its parameter indicates the new state.\n     */\n    @Output() openChange = new EventEmitter();\n\n    /**\n     * Called when the export is ready to be created\n     */\n    @Output() dataExportRequest = new EventEmitter();\n\n    /**\n     * True between the time {@link dataExportRequest} fires and {@link DataExportRequestEvent.exportData} is called\n     * or an error is thrown\n     */\n    get isRequestPending(): boolean {\n        return this._isRequestPending;\n    }\n    private _isRequestPending = false;\n\n    /**\n     * Number between 0-1, used for displaying the progress bar.\n     */\n    get progress(): number {\n        return this._progress;\n    }\n    private _progress = 0;\n\n    private fieldNameMap = new Map();\n\n    formGroup: FormGroup;\n\n    exportStage: LazyString;\n\n    optionsFormGroup = new FormGroup({\n        [UserOptions.selectAll]: new FormControl(true),\n        [UserOptions.friendlyNames]: new FormControl(true),\n        [UserOptions.sanitize]: new FormControl(true),\n    });\n\n    /**\n     * Says if the column dropdown is open.\n     */\n    isDropdownOpen = false;\n\n    onClickExport(): void {\n        this.exportStage = this.downloadingMessage;\n        this._isRequestPending = true;\n        this.dataExportRequest.emit({\n            exportData: this.exportData.bind(this),\n            updateProgress: this.updateProgress.bind(this),\n            selectedColumns: this.selectedColumns,\n        });\n    }\n\n    get selectAllControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.selectAll) as FormControl;\n    }\n\n    get sanitizeControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.sanitize) as FormControl;\n    }\n\n    get friendlyFieldsControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.friendlyNames) as FormControl;\n    }\n\n    get isExportEnabled(): boolean {\n        if (this.isRequestPending) {\n            return false;\n        }\n        for (const column of this.columns) {\n            if (this.formGroup.controls[column.fieldName].value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get shouldShowBubbles(): boolean {\n        return !this.selectAllControl.value && !this.isDropdownOpen;\n    }\n\n    /**\n     * Gives a list of all the columns that are selected.\n     */\n    get selectedColumns(): ExportColumn[] {\n        return this.columns.filter((col) => this.formGroup.controls[col.fieldName].value);\n    }\n\n    /**\n     * Sets the selected value of the given column.\n     */\n    selectColumn(column: ExportColumn, selected: boolean): void {\n        this.formGroup.controls[column.fieldName].setValue(selected);\n    }\n\n    ngOnInit(): void {\n        const controls = this.columns.reduce((previousValue, currentValue) => {\n            previousValue[currentValue.fieldName] = new FormControl(true);\n            return previousValue;\n        }, {});\n        this.formGroup = new FormGroup(controls);\n        this.subscriptionTracker.subscribe(this.selectAllControl.valueChanges, (change) => {\n            if (change) {\n                for (const column of this.columns) {\n                    this.formGroup.controls[column.fieldName].setValue(true);\n                }\n            } else {\n                this.forceDropdownOpen = true;\n                this.isDropdownOpen = true;\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n\n    private exportData(records: object[]): Promise {\n        if (!this.open) {\n            return;\n        }\n\n        const rows = [\n            // First row is the display names\n            Object.keys(records[0]).map((fieldName) =>\n                this.friendlyFieldsControl.value ? this.getDisplayNameForField(fieldName) : fieldName\n            ),\n            // Then the data\n            ...records.map((rec) => Object.keys(rec).map((key) => rec[key])),\n        ];\n        return this.downloadData(rows, this.sanitizeControl.value);\n    }\n\n    downloadData(data: any[][], shouldSanitize: boolean = false): Promise {\n        this.exportStage = this.writingMessage;\n        return new Promise((resolve) => {\n            // We need to setTimeout because we changed how the message should be displayed\n            // but we need to interrupt the current task to get the message to display\n            // We tried to use window.requestAnimationFrame, but this didn't work so we had to use\n            // setTimeout().\n            setTimeout(() => {\n                this._isRequestPending = false;\n                const csvFile = this.csvExporterService.createCsv(data, shouldSanitize);\n                this.csvExporterService.downloadCsvFile(csvFile, this.fileName);\n                this.open = false;\n                resolve(csvFile);\n            });\n        });\n    }\n\n    private updateProgress(progress: number): void {\n        this._progress = progress;\n    }\n\n    private getDisplayNameForField(fieldName: string): string {\n        if (this.fieldNameMap.has(fieldName)) {\n            const exportColumn = this.fieldNameMap.get(fieldName);\n            return this.getDisplayNameForColumn(exportColumn);\n        } else {\n            return fieldName;\n        }\n    }\n\n    getDisplayNameForColumn(col: ExportColumn): string {\n        return col.displayName || col.fieldName;\n    }\n\n    private updateFieldNameMap(cols: ExportColumn[]): void {\n        this.fieldNameMap = new Map(cols.map((col) => [col.fieldName, col]));\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataExporterWidgetObject.html":{"url":"classes/DataExporterWidgetObject.html","title":"class - DataExporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataExporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.wo.ts\n        \n\n            \n                Description\n            \n            \n                Testing Object for DataExporterComponent\n\n            \n\n            \n                Extends\n            \n            \n                        BaseWidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getCancelButton\n                            \n                            \n                                getColumnBubbles\n                            \n                            \n                                getColumnCheckboxes\n                            \n                            \n                                getColumnDropdown\n                            \n                            \n                                getExportButton\n                            \n                            \n                                getProgress\n                            \n                            \n                                getToggleFriendlyNames\n                            \n                            \n                                getToggleSanitize\n                            \n                            \n                                getToggleSelectAll\n                            \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorDriver\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForChild\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForParent\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColumnCheckbox\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCancelButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForChild('.cancel')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForChild('.cancel')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:27\n                            \n                        \n\n                \n                    \n                        Gets the cancel button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnBubbles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForChild('.column-container .column-label')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForChild('.column-container .column-label')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:17\n                            \n                        \n\n                \n                    \n                        The strings for the available column bubbles.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnCheckboxes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForChild('li .column-checkbox')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForChild('li .column-checkbox')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:22\n                            \n                        \n\n                \n                    \n                        The strings for the available column checkboxes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForChild('.dropdown-button')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForChild('.dropdown-button')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:37\n                            \n                        \n\n                \n                    \n                        Gets the arrow to open/close the column dropdown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExportButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForText('button', 'export')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForText('button', 'export')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:32\n                            \n                        \n\n                \n                    \n                        Gets the export button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForChild('progress')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForChild('progress')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:57\n                            \n                        \n\n                \n                    \n                        Gets the progress bar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleFriendlyNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForChild('.friendly-names')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForChild('.friendly-names')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:52\n                            \n                        \n\n                \n                    \n                        Gets the friendly field names switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleSanitize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForChild('.sanitize-cells')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForChild('.sanitize-cells')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:47\n                            \n                        \n\n                \n                    \n                        Gets the sanitization switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleSelectAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForChild('.export-all')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForChild('.export-all')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:42\n                            \n                        \n\n                \n                    \n                        Gets the export all switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-data-exporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorDriver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocatorDriver\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForChild\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:38\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:45\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a parent with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:52\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector and text when called.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnCheckbox\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnCheckbox(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:63\n                \n            \n\n\n            \n                \n                    Gets the checkbox next to a given column\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of column, 0 based\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseWidgetObject } from '../utils/test/widget-object/widget-object';\n\n/**\n * Testing Object for {@link DataExporterComponent}\n */\nexport class DataExporterWidgetObject extends BaseWidgetObject {\n    static tagName = 'vcd-data-exporter';\n\n    /**\n     * The strings for the available column bubbles.\n     */\n    getColumnBubbles = this.locatorForChild('.column-container .column-label');\n\n    /**\n     * The strings for the available column checkboxes.\n     */\n    getColumnCheckboxes = this.locatorForChild('li .column-checkbox');\n\n    /**\n     * Gets the cancel button.\n     */\n    getCancelButton = this.locatorForChild('.cancel');\n\n    /**\n     * Gets the export button.\n     */\n    getExportButton = this.locatorForText('button', 'export');\n\n    /**\n     * Gets the arrow to open/close the column dropdown.\n     */\n    getColumnDropdown = this.locatorForChild('.dropdown-button');\n\n    /**\n     * Gets the export all switch\n     */\n    getToggleSelectAll = this.locatorForChild('.export-all');\n\n    /**\n     * Gets the sanitization switch\n     */\n    getToggleSanitize = this.locatorForChild('.sanitize-cells');\n\n    /**\n     * Gets the friendly field names switch\n     */\n    getToggleFriendlyNames = this.locatorForChild('.friendly-names');\n\n    /**\n     * Gets the progress bar.\n     */\n    getProgress = this.locatorForChild('progress');\n\n    /**\n     * Gets the checkbox next to a given column\n     * @param index Index of column, 0 based\n     */\n    getColumnCheckbox(index: number): T {\n        return this.locatorDriver.get(`.dropdown-item:nth-of-type(${index + 1})  .column-checkbox input`).unwrap();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatagridFilter.html":{"url":"classes/DatagridFilter.html","title":"class - DatagridFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatagridFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Extended by filter components used in DatagridComponent. Those components can only be used inside a\nclr-dg-filter component and are dynamically rendered by ComponentRendererOutletDirective using\nGridColumn.filter\nV is the type of filter input value that is passed into setValue method\nC extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            ClrDatagridFilterInterface\n                            ComponentRenderer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                                \n                                    queryField\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:71\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:87\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:137\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:112\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:99\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:122\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:127\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:107\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:117\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:72\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:80\n                                \n                            \n\n                \n                    \n                        setconfig(val)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:72\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        queryField\n                    \n                \n\n                \n                    \n                        getqueryField()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:147\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridMultiSelectFilterComponent.html":{"url":"components/DatagridMultiSelectFilterComponent.html","title":"component - DatagridMultiSelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridMultiSelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Used within a clarity grid column DatagridComponent to render a filter widget with list of checkboxes to select\nmultiple options\nExample usage:\ncolumns: GridColumn[] = [{\n      displayName: 'Custom Select filter',\n      renderer: 'state',\n      queryFieldName: 'state',\n      filterRendererSpec: FilterComponentRendererSpec({\n          type: DatagridMultiSelectFilterComponent,\n          config: {\n              options: [{\n                  value: 'CA',\n                  display: 'California'\n              }, {\n                  value: 'MA',\n                  display: 'Massachusetts'\n              }],\n              value: ['MA', 'NC'],\n          },\n      }),\n   }]\n\n    \n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-multiselect-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./datagrid-multiselect-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onBeforeSetConfig\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \nonBeforeSetConfig(config: DatagridMultiSelectFilterConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:87\n                \n            \n\n\n            \n                \n                    Overrides the config property because, the formGroup controls are defined by the config set by the caller.\nValue of each option becomes a formControl name inside the formGroup.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DatagridMultiSelectFilterConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(values: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MultiSelectOptionInternal[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:77\n                            \n                        \n\n                \n                    \n                        Used inside the HTML to instantiate checkbox options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map(option => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach(option => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach(frmCtrl => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter(formControl => this.formGroup.get(formControl).value)\n            .map(selectedOption => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter(frmCtrl => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                \n                    {{ option.isTranslatable ? (option.display | translate) : option.display }}\n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ option.isTranslatable ? (option.display | translate) : option.display }}                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridMultiSelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridMultiSelectFilterConfig.html":{"url":"interfaces/DatagridMultiSelectFilterConfig.html","title":"interface - DatagridMultiSelectFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridMultiSelectFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     MultiSelectOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MultiSelectOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of select options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map(option => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach(option => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach(frmCtrl => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter(formControl => this.formGroup.get(formControl).value)\n            .map(selectedOption => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter(frmCtrl => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridNumericFilterComponent.html":{"url":"components/DatagridNumericFilterComponent.html","title":"component - DatagridNumericFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridNumericFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n\n\n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-numeric-filter\n            \n\n            \n                styleUrls\n                datagrid-numeric-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                datagrid-numeric-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _unit\n                            \n                            \n                                    Private\n                                _unitOptions\n                            \n                            \n                                fromInput\n                            \n                            \n                                maxNumberLength\n                            \n                            \n                                toInput\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                unit\n                            \n                            \n                                unitOptions\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    unitOptions\n                                \n                                \n                                    unit\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        unit\n                    \n                \n                \n                    \n                        Type :         Unit\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unitOptions\n                    \n                \n                \n                    \n                        Type :         Unit[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: DatagridNumericFilterConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DatagridNumericFilterConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(values: DatagridNumericFilterValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                DatagridNumericFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Unit\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:62\n                            \n                        \n\n                \n                    \n                        Base unit to which selected units are converted\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _unitOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Unit[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:48\n                            \n                        \n\n                \n                    \n                        Options for the select input of units\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NumberWithUnitFormInputComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('from')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxNumberLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Number.MAX_SAFE_INTEGER.toString().length\n\n                        \n                    \n                    \n                        \n                            Default value : Number.MAX_SAFE_INTEGER.toString().length\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NumberWithUnitFormInputComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('to')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        unitOptions\n                    \n                \n\n                \n                    \n                        getunitOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:55\n                                \n                            \n\n                \n                    \n                        setunitOptions(val: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        unit\n                    \n                \n\n                \n                    \n                        getunit()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:70\n                                \n                            \n\n                \n                    \n                        setunit(val)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Host, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { NumberWithUnitFormInputComponent } from '../../form';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { Unit } from '../../utils/unit/unit';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nenum FormFields {\n    from = 'from',\n    to = 'to',\n}\n\n/**\n * The type of value that goes in the {@link DatagridNumericFilterConfig}.\n */\nexport type DatagridNumericFilterValue = [number, number];\n\n/**\n * Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n */\nexport interface DatagridNumericFilterConfig extends FilterConfig {\n    unit?: Unit;\n    unitOptions?: Unit[];\n}\n\n@Component({\n    selector: 'vcd-dg-numeric-filter',\n    templateUrl: 'datagrid-numeric-filter.component.html',\n    styleUrls: ['datagrid-numeric-filter.component.scss'],\n})\nexport class DatagridNumericFilterComponent\n    extends DatagridFilter\n    implements OnInit, OnDestroy {\n    maxNumberLength = Number.MAX_SAFE_INTEGER.toString().length;\n\n    @ViewChild('from') fromInput: NumberWithUnitFormInputComponent;\n    @ViewChild('to') toInput: NumberWithUnitFormInputComponent;\n\n    /**\n     * Options for the select input of units\n     */\n    private _unitOptions: Unit[];\n    @Input() set unitOptions(val: Unit[]) {\n        this._unitOptions = val;\n        if (!this.unit && this.unitOptions && this.unitOptions.length) {\n            this.unit = this.unitOptions[0];\n        }\n    }\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * Base unit to which selected units are converted\n     */\n    private _unit: Unit;\n    @Input() set unit(val: Unit) {\n        if (!val && this.unitOptions && this.unitOptions.length) {\n            this._unit = this.unitOptions[0];\n            return;\n        }\n        this._unit = val;\n    }\n    get unit(): Unit {\n        return this._unit;\n    }\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            [FormFields.from]: new FormControl(null),\n            [FormFields.to]: new FormControl(null),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    protected onBeforeSetConfig(config: DatagridNumericFilterConfig): void {\n        this.unitOptions = config.unitOptions;\n        this.unit = config.unit;\n    }\n\n    setValue(values: DatagridNumericFilterValue): void {\n        if (!values) {\n            return;\n        }\n        if (typeof values[0] === 'number') {\n            this.formGroup.get(FormFields.from).setValue(values[0]);\n        } else {\n            this.formGroup.get(FormFields.from).setValue(null);\n        }\n        if (typeof values[1] === 'number') {\n            this.formGroup.get(FormFields.to).setValue(values[1]);\n        } else {\n            this.formGroup.get(FormFields.to).setValue(null);\n        }\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const from = this.formGroup.get(FormFields.from).value;\n        const to = this.formGroup.get(FormFields.to).value;\n        if (typeof from === 'number' && typeof to !== 'number') {\n            return filterBuilder.greaterThan(from).getString();\n        }\n        if (typeof from !== 'number' && typeof to === 'number') {\n            return filterBuilder.lessThan(to).getString();\n        }\n        if (typeof from === 'number' && typeof to === 'number') {\n            return filterBuilder.betweenNumbers([from, to]).getString();\n        }\n    }\n\n    isActive(): boolean {\n        return !!(\n            this.formGroup &&\n            (typeof this.formGroup.get(FormFields.from).value === 'number' ||\n                typeof this.formGroup.get(FormFields.to).value === 'number')\n        );\n    }\n\n    close(): void {\n        this.filterContainer.open = false;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param value the default value that should go in this numeric filter.\n * @param unit initial value for unit input to be selected\n * @param unitOptions Select dropdown options for unit input\n */\nexport function DatagridNumericFilter(\n    value?: DatagridNumericFilterValue,\n    unitOptions?: Unit[],\n    unit?: Unit\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridNumericFilterComponent,\n        config: {\n            value,\n            unit,\n            unitOptions,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n    \n\n    \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    datagrid-numeric-filter.component.scss\n                \n                vcd-form-input {\n    & ::ng-deep .clr-form-control,\n    & ::ng-deep .clr-subtext {\n        margin-top: 0;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridNumericFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridNumericFilterConfig.html":{"url":"interfaces/DatagridNumericFilterConfig.html","title":"interface - DatagridNumericFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridNumericFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        unit\n                                \n                                \n                                            Optional\n                                        unitOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         Unit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitOptions\n                                    \n                                \n                                \n                                    \n                                        unitOptions:         Unit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { NumberWithUnitFormInputComponent } from '../../form';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { Unit } from '../../utils/unit/unit';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nenum FormFields {\n    from = 'from',\n    to = 'to',\n}\n\n/**\n * The type of value that goes in the {@link DatagridNumericFilterConfig}.\n */\nexport type DatagridNumericFilterValue = [number, number];\n\n/**\n * Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n */\nexport interface DatagridNumericFilterConfig extends FilterConfig {\n    unit?: Unit;\n    unitOptions?: Unit[];\n}\n\n@Component({\n    selector: 'vcd-dg-numeric-filter',\n    templateUrl: 'datagrid-numeric-filter.component.html',\n    styleUrls: ['datagrid-numeric-filter.component.scss'],\n})\nexport class DatagridNumericFilterComponent\n    extends DatagridFilter\n    implements OnInit, OnDestroy {\n    maxNumberLength = Number.MAX_SAFE_INTEGER.toString().length;\n\n    @ViewChild('from') fromInput: NumberWithUnitFormInputComponent;\n    @ViewChild('to') toInput: NumberWithUnitFormInputComponent;\n\n    /**\n     * Options for the select input of units\n     */\n    private _unitOptions: Unit[];\n    @Input() set unitOptions(val: Unit[]) {\n        this._unitOptions = val;\n        if (!this.unit && this.unitOptions && this.unitOptions.length) {\n            this.unit = this.unitOptions[0];\n        }\n    }\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * Base unit to which selected units are converted\n     */\n    private _unit: Unit;\n    @Input() set unit(val: Unit) {\n        if (!val && this.unitOptions && this.unitOptions.length) {\n            this._unit = this.unitOptions[0];\n            return;\n        }\n        this._unit = val;\n    }\n    get unit(): Unit {\n        return this._unit;\n    }\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            [FormFields.from]: new FormControl(null),\n            [FormFields.to]: new FormControl(null),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    protected onBeforeSetConfig(config: DatagridNumericFilterConfig): void {\n        this.unitOptions = config.unitOptions;\n        this.unit = config.unit;\n    }\n\n    setValue(values: DatagridNumericFilterValue): void {\n        if (!values) {\n            return;\n        }\n        if (typeof values[0] === 'number') {\n            this.formGroup.get(FormFields.from).setValue(values[0]);\n        } else {\n            this.formGroup.get(FormFields.from).setValue(null);\n        }\n        if (typeof values[1] === 'number') {\n            this.formGroup.get(FormFields.to).setValue(values[1]);\n        } else {\n            this.formGroup.get(FormFields.to).setValue(null);\n        }\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const from = this.formGroup.get(FormFields.from).value;\n        const to = this.formGroup.get(FormFields.to).value;\n        if (typeof from === 'number' && typeof to !== 'number') {\n            return filterBuilder.greaterThan(from).getString();\n        }\n        if (typeof from !== 'number' && typeof to === 'number') {\n            return filterBuilder.lessThan(to).getString();\n        }\n        if (typeof from === 'number' && typeof to === 'number') {\n            return filterBuilder.betweenNumbers([from, to]).getString();\n        }\n    }\n\n    isActive(): boolean {\n        return !!(\n            this.formGroup &&\n            (typeof this.formGroup.get(FormFields.from).value === 'number' ||\n                typeof this.formGroup.get(FormFields.to).value === 'number')\n        );\n    }\n\n    close(): void {\n        this.filterContainer.open = false;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param value the default value that should go in this numeric filter.\n * @param unit initial value for unit input to be selected\n * @param unitOptions Select dropdown options for unit input\n */\nexport function DatagridNumericFilter(\n    value?: DatagridNumericFilterValue,\n    unitOptions?: Unit[],\n    unit?: Unit\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridNumericFilterComponent,\n        config: {\n            value,\n            unit,\n            unitOptions,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridSelectFilterComponent.html":{"url":"components/DatagridSelectFilterComponent.html","title":"component - DatagridSelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridSelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Used within a clarity grid column DatagridComponent to render a filter widget with select input\nExample usage:\ncolumns: GridColumn[] = [{\n      displayName: 'Custom Select filter',\n      renderer: 'age',\n      queryFieldName: 'age',\n      filterRendererSpec: FilterComponentRendererSpec({\n          type: DatagridSelectFilterComponent,\n          config: {\n              options: [{\n                  value: 30,\n                  display: 'Thirty'\n              }, {\n                  value: 60,\n                  display: 'sixty'\n              }],\n              value: 60,\n          },\n      }),\n   }]\n\n    \n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-select-filter\n            \n\n\n\n\n            \n                templateUrl\n                datagrid-select-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anyChoice\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            anyChoice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectOption\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        value: '',\n        display: '',\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:58\n                            \n                        \n\n                \n                    \n                        Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * List of select options and initial value for the filter are passed through this\n */\nexport interface DatagridSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: SelectOption[];\n\n    /**\n     * Switch to disable conversion of filter value to FIQL. Used by {@link DatagridSelectFilterComponent#getValue}\n     */\n    customFiql?: boolean;\n}\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with select input\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'age',\n *      queryFieldName: 'age',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 30,\n *                  display: 'Thirty'\n *              }, {\n *                  value: 60,\n *                  display: 'sixty'\n *              }],\n *              value: 60,\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-select-filter',\n    templateUrl: 'datagrid-select-filter.component.html',\n})\nexport class DatagridSelectFilterComponent extends DatagridFilter\n    implements OnInit, OnDestroy {\n    /**\n     * Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n     */\n    anyChoice: SelectOption = {\n        value: '',\n        display: '',\n    };\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterSelect: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter, private fb: FormBuilder) {\n        super(filterContainer);\n        this.formGroup = this.fb.group({\n            filterSelect: '',\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 0;\n    }\n\n    setValue(value: string | number): void {\n        if (!this.config.options.find(option => option.value === value)) {\n            throw Error('The value being set on select filter is not equal to any of the options');\n        }\n        this.formGroup.setValue({\n            filterSelect: value,\n        });\n    }\n\n    getValue(): string {\n        if (this.config.customFiql) {\n            return this.formGroup.get('filterSelect').value;\n        }\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const value = this.formGroup.get('filterSelect').value;\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterSelect').value;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this select filter.\n * @param customFiql when set as true will disable any formatting by {@link DatagridSelectFilterComponent#getValue}\n */\nexport function DatagridSelectFilter(\n    options: SelectOption[],\n    value?: string | number,\n    customFiql?: boolean\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridSelectFilterComponent,\n        config: {\n            options,\n            value,\n            customFiql,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    {{ anyChoice.display }}\n                    {{\n                        option.isTranslatable ? (option.display | translate) : option.display\n                    }}\n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ anyChoice.display }}                    {{                        option.isTranslatable ? (option.display | translate) : option.display                    }}                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridSelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridSelectFilterConfig.html":{"url":"interfaces/DatagridSelectFilterConfig.html","title":"interface - DatagridSelectFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridSelectFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                List of select options and initial value for the filter are passed through this\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customFiql\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFiql\n                                    \n                                \n                                \n                                    \n                                        customFiql:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Switch to disable conversion of filter value to FIQL. Used by DatagridSelectFilterComponent\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         SelectOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of select options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * List of select options and initial value for the filter are passed through this\n */\nexport interface DatagridSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: SelectOption[];\n\n    /**\n     * Switch to disable conversion of filter value to FIQL. Used by {@link DatagridSelectFilterComponent#getValue}\n     */\n    customFiql?: boolean;\n}\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with select input\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'age',\n *      queryFieldName: 'age',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 30,\n *                  display: 'Thirty'\n *              }, {\n *                  value: 60,\n *                  display: 'sixty'\n *              }],\n *              value: 60,\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-select-filter',\n    templateUrl: 'datagrid-select-filter.component.html',\n})\nexport class DatagridSelectFilterComponent extends DatagridFilter\n    implements OnInit, OnDestroy {\n    /**\n     * Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n     */\n    anyChoice: SelectOption = {\n        value: '',\n        display: '',\n    };\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterSelect: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter, private fb: FormBuilder) {\n        super(filterContainer);\n        this.formGroup = this.fb.group({\n            filterSelect: '',\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 0;\n    }\n\n    setValue(value: string | number): void {\n        if (!this.config.options.find(option => option.value === value)) {\n            throw Error('The value being set on select filter is not equal to any of the options');\n        }\n        this.formGroup.setValue({\n            filterSelect: value,\n        });\n    }\n\n    getValue(): string {\n        if (this.config.customFiql) {\n            return this.formGroup.get('filterSelect').value;\n        }\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const value = this.formGroup.get('filterSelect').value;\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterSelect').value;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this select filter.\n * @param customFiql when set as true will disable any formatting by {@link DatagridSelectFilterComponent#getValue}\n */\nexport function DatagridSelectFilter(\n    options: SelectOption[],\n    value?: string | number,\n    customFiql?: boolean\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridSelectFilterComponent,\n        config: {\n            options,\n            value,\n            customFiql,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridStringFilterComponent.html":{"url":"components/DatagridStringFilterComponent.html","title":"component - DatagridStringFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridStringFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n\n\n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-string-filter\n            \n\n\n\n\n            \n                templateUrl\n                datagrid-string-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWildCard\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addWildCard\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addWildCard(input: string, position: WildCardPosition, wildcardCharacter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:64\n                \n            \n\n\n            \n                \n                    Wraps a string with a wrapCharacter in given position;\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    position\n                                    \n                                                WildCardPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    wildcardCharacter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '*'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nexport enum WildCardPosition {\n    NONE = 0,\n    START = 1,\n    END = 2,\n    WRAP = WildCardPosition.START | WildCardPosition.END,\n}\n\n/**\n * Configures the '*' position in the FIQL string output\n */\nexport interface DatagridStringFilterConfig extends FilterConfig {\n    wildCardPosition?: WildCardPosition;\n}\n\n@Component({\n    selector: 'vcd-dg-string-filter',\n    templateUrl: 'datagrid-string-filter.component.html',\n})\nexport class DatagridStringFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterText: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    setValue(value: string): void {\n        this.formGroup.setValue({\n            filterText: value,\n        });\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        let value = this.formGroup.get('filterText').value;\n        if (this.config && this.config.wildCardPosition) {\n            value = this.addWildCard(value, this.config.wildCardPosition);\n        }\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterText').value;\n    }\n\n    /**\n     * Wraps a string with a `wrapCharacter` in given position;\n     */\n    private addWildCard(input: string, position: WildCardPosition, wildcardCharacter = '*'): string {\n        const start = getWrapCharacter(position, WildCardPosition.START);\n        const end = getWrapCharacter(position, WildCardPosition.END);\n        return `${start}${input}${end}`;\n        /**\n         * @return `wrapCharacter` if the passed in position should show it, an empty string otherwise\n         */\n        function getWrapCharacter(inputPosition: WildCardPosition, checkPosition: WildCardPosition): string {\n            return inputPosition & checkPosition ? wildcardCharacter : '';\n        }\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param wildCardPosition where the * should go in the FIQL string output.\n * @param value the default value of the filter\n */\nexport function DatagridStringFilter(\n    wildCardPosition?: WildCardPosition,\n    value?: string\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridStringFilterComponent,\n        config: {\n            wildCardPosition,\n            value,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridStringFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridStringFilterConfig.html":{"url":"interfaces/DatagridStringFilterConfig.html","title":"interface - DatagridStringFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridStringFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Configures the '*' position in the FIQL string output\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        wildCardPosition\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        wildCardPosition\n                                    \n                                \n                                \n                                    \n                                        wildCardPosition:         WildCardPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WildCardPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nexport enum WildCardPosition {\n    NONE = 0,\n    START = 1,\n    END = 2,\n    WRAP = WildCardPosition.START | WildCardPosition.END,\n}\n\n/**\n * Configures the '*' position in the FIQL string output\n */\nexport interface DatagridStringFilterConfig extends FilterConfig {\n    wildCardPosition?: WildCardPosition;\n}\n\n@Component({\n    selector: 'vcd-dg-string-filter',\n    templateUrl: 'datagrid-string-filter.component.html',\n})\nexport class DatagridStringFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterText: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    setValue(value: string): void {\n        this.formGroup.setValue({\n            filterText: value,\n        });\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        let value = this.formGroup.get('filterText').value;\n        if (this.config && this.config.wildCardPosition) {\n            value = this.addWildCard(value, this.config.wildCardPosition);\n        }\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterText').value;\n    }\n\n    /**\n     * Wraps a string with a `wrapCharacter` in given position;\n     */\n    private addWildCard(input: string, position: WildCardPosition, wildcardCharacter = '*'): string {\n        const start = getWrapCharacter(position, WildCardPosition.START);\n        const end = getWrapCharacter(position, WildCardPosition.END);\n        return `${start}${input}${end}`;\n        /**\n         * @return `wrapCharacter` if the passed in position should show it, an empty string otherwise\n         */\n        function getWrapCharacter(inputPosition: WildCardPosition, checkPosition: WildCardPosition): string {\n            return inputPosition & checkPosition ? wildcardCharacter : '';\n        }\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param wildCardPosition where the * should go in the FIQL string output.\n * @param value the default value of the filter\n */\nexport function DatagridStringFilter(\n    wildCardPosition?: WildCardPosition,\n    value?: string\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridStringFilterComponent,\n        config: {\n            wildCardPosition,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailPane.html":{"url":"interfaces/DetailPane.html","title":"interface - DetailPane","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailPane\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration objet used to create the detail pane on the datagrid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                        header\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:         ComponentRendererConstructor>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentRendererConstructor>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The contents that go within this detail pane.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header that goes on top of this detail pane.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailPaneConfig.html":{"url":"interfaces/DetailPaneConfig.html","title":"interface - DetailPaneConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailPaneConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration object that is passed to the detail pane component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        record\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:     R\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The record that this detail pane should render.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailRowConfig.html":{"url":"interfaces/DetailRowConfig.html","title":"interface - DetailRowConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailRowConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration object that is passed to the detail row component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        index\n                                \n                                \n                                        record\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of rows in the datagrid.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The index this detail row is in the datagrid.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:     R\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The record that this detail row should render.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DomUtil.html":{"url":"classes/DomUtil.html","title":"class - DomUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DomUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/dom-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                scrollToElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            scrollToElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollToElement(elRef: ElementRef, classSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/dom-util.ts:19\n                \n            \n\n\n            \n                \n                    Scrolls view to a element so that the element becomes visible in the viewport.\nIf a css style selector is provided then the element to scroll is the html element\ndescribed by the css selector which parent is the provided element.\nId a css style selector is not provided then the element to scroll is the provided\nelement itself.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    elRef\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the view's element.\n\n                                    \n                                \n                                \n                                    classSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        the css-style selector for the element to scroll to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ElementRef } from '@angular/core';\n\nexport class DomUtil {\n    /**\n     * Scrolls view to a element so that the element becomes visible in the viewport.\n     * If a css style selector is provided then the element to scroll is the html element\n     * described by the css selector which parent is the provided element.\n     * Id a css style selector is not provided then the element to scroll is the provided\n     * element itself.\n     *\n     * @param elRef the view's element.\n     * @param classSelector the css-style selector for the element to scroll to.\n     */\n    public static scrollToElement(elRef: ElementRef, classSelector?: string): void {\n        if (!elRef || !elRef.nativeElement) {\n            return;\n        }\n        const el: HTMLElement = elRef.nativeElement as HTMLElement;\n        const elementToScroll = classSelector ? el.querySelector(classSelector) : el;\n\n        if (elementToScroll) {\n            elementToScroll.scrollIntoView({ block: 'nearest', behavior: 'smooth' });\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropdownFocusHandlerDirective.html":{"url":"directives/DropdownFocusHandlerDirective.html","title":"directive - DropdownFocusHandlerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropdownFocusHandlerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n        \n\n            \n                Description\n            \n            \n                Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\nneighbors in the 4 directions. It then uses the DropdownFocusHandlerService to move the DOM focus between the menu items.\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        vcd-dropdown[vcdDropdownFocusHandler]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                closeVcdDropdown\n                            \n                            \n                                    Private\n                                clrDropdownMenuEl\n                            \n                            \n                                    Private\n                                dropdownTriggerEl\n                            \n                            \n                                    Private\n                                isRootDropdown\n                            \n                            \n                                menuItems\n                            \n                            \n                                    Private\n                                menuTrigger\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                            \n                                    Private\n                                timeoutId\n                            \n                            \n                                    Private\n                                unlistenRightArrowKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDropdownItemElement\n                            \n                            \n                                    Private\n                                linkMenuItems\n                            \n                            \n                                    Private\n                                linkVertical\n                            \n                            \n                                    Private\n                                listenToRightArrowKeyPressOnNestedTrigger\n                            \n                            \n                                    Private\n                                moveFocusToFirstItem\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                registerRootMenuContainer\n                            \n                            \n                                    Private\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rootMenuTrigger\n                                \n                                \n                                    nestedMenuTrigger\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentVcdDropdown: DropdownComponent, parentFocusHandler: DropdownFocusHandlerDirective, hostVcdDropdown: DropdownComponent, focusHandlerService: DropdownFocusHandlerService, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parentVcdDropdown\n                                                  \n                                                        \n                                                                        DropdownComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentFocusHandler\n                                                  \n                                                        \n                                                                    DropdownFocusHandlerDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hostVcdDropdown\n                                                  \n                                                        \n                                                                        DropdownComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        focusHandlerService\n                                                  \n                                                        \n                                                                        DropdownFocusHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDropdownItemElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDropdownItemElement(item: Element)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            linkMenuItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMenuItems()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            linkVertical\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    linkVertical()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            listenToRightArrowKeyPressOnNestedTrigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenToRightArrowKeyPressOnNestedTrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:118\n                \n            \n\n\n            \n                \n                    Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\nthe event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\narrow on a nested menu is opening other sibling menus as well\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            moveFocusToFirstItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    moveFocusToFirstItem()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:94\n                \n            \n\n\n            \n                \n                    After a dropdown menu is opened, it creates MenuItem for each of the menu items along with their trigger menu item and links\nthem. It also then moves the focus to first item in the opened menu list.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerRootMenuContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerRootMenuContainer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeVcdDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:193\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clrDropdownMenuEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isRootDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     !this.parentVcdDropdown\n\n                        \n                    \n                    \n                        \n                            Default value : !this.parentVcdDropdown\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:78\n                            \n                        \n\n                \n                    \n                        List of focusable menu items with their neighbors in 4 directions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuTrigger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:82\n                            \n                        \n\n                \n                    \n                        The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeoutId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            unlistenRightArrowKeyPress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:88\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rootMenuTrigger\n                    \n                \n\n                \n                    \n                        getrootMenuTrigger()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:197\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nestedMenuTrigger\n                    \n                \n\n                \n                    \n                        getnestedMenuTrigger()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:204\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, Host, OnDestroy, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { DropdownFocusHandlerService } from './dropdown-focus-handler.service';\nimport { DropdownComponent } from './dropdown.component';\n\n/**\n * To filter out the non-activatable separator item type when creating linked menu list {@link #linkMenuItems}. Because, we don't\n * want the focus to go to separator item type when navigating using the arrow keys\n */\nenum ActivatableMenuItemType {\n    /**\n     * Menu item that results in executing of an action when clicked\n     */\n    BUTTON = 'button',\n    /**\n     * Activating this would open a nested menu\n     */\n    NESTED_VCD_DROPDOWN = 'vcd-dropdown',\n}\n\nconst NESTED_DROPDOWN_TRIGGER = 'clr-dropdown > button';\n\n/**\n * Arrow keys directions\n */\nexport enum Direction {\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n\n/**\n * Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n */\nexport interface MenuItem {\n    /**\n     * The HTML element of this dropdown menu item\n     */\n    element: HTMLElement;\n    /**\n     * Neighboring menu items in all the 4 directions\n     */\n    up?: MenuItem;\n    down?: MenuItem;\n    left?: MenuItem;\n    right?: MenuItem;\n    /**\n     * Call back to close the menu for which this menu item can be a trigger. called from {@link DropdownFocusHandlerService}\n     */\n    closeMenu?: () => void;\n}\n\n/**\n * Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\n * neighbors in the 4 directions. It then uses the {@link DropdownFocusHandlerService} to move the DOM focus between the menu items.\n */\n@Directive({\n    selector: 'vcd-dropdown[vcdDropdownFocusHandler]',\n})\nexport class DropdownFocusHandlerDirective implements AfterViewInit, OnDestroy {\n    constructor(\n        @Optional() @SkipSelf() private parentVcdDropdown: DropdownComponent,\n        @Optional() @SkipSelf() private parentFocusHandler: DropdownFocusHandlerDirective,\n        @Host() private hostVcdDropdown: DropdownComponent,\n        private focusHandlerService: DropdownFocusHandlerService,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * List of focusable menu items with their neighbors in 4 directions.\n     */\n    menuItems: MenuItem[];\n    /**\n     * The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n     */\n    private menuTrigger: MenuItem;\n    private dropdownTriggerEl: HTMLElement;\n    private clrDropdownMenuEl: HTMLElement;\n    private isRootDropdown = !this.parentVcdDropdown;\n    private timeoutId: number;\n    private subscriptionTracker = new SubscriptionTracker(this);\n    private unlistenRightArrowKeyPress: (...argArray: any[]) => any;\n\n    /**\n     * After a dropdown menu is opened, it creates {@link MenuItem} for each of the menu items along with their trigger menu item and links\n     * them. It also then moves the focus to first item in the opened menu list.\n     */\n    ngAfterViewInit(): void {\n        this.dropdownTriggerEl = this.hostVcdDropdown._dropdownTriggerEl;\n        this.listenToRightArrowKeyPressOnNestedTrigger();\n\n        this.subscriptionTracker.subscribe(this.hostVcdDropdown.dropdownMenuUpdated, (dropdown) => {\n            if (!dropdown) {\n                this.reset();\n                return;\n            }\n            this.clrDropdownMenuEl = dropdown.menu;\n            // We have to wait till the dropdown is opened for getting the menus trigger because, in case of a nested menu, the trigger is\n            // obtained from parent menus menuItems and they are not initialized even if we wait till the ngAfterViewInit hook\n            this.menuTrigger = this.isRootDropdown ? this.rootMenuTrigger : this.nestedMenuTrigger;\n            this.registerRootMenuContainer();\n            this.linkMenuItems();\n            this.moveFocusToFirstItem();\n        });\n    }\n\n    /**\n     * Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\n     * the event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\n     * arrow on a nested menu is opening other sibling menus as well\n     */\n    private listenToRightArrowKeyPressOnNestedTrigger(): void {\n        if (this.isRootDropdown) {\n            return;\n        }\n        this.unlistenRightArrowKeyPress = this.renderer.listen(\n            this.dropdownTriggerEl,\n            'keydown.arrowright',\n            (event: Event) => event.stopPropagation()\n        );\n    }\n\n    private reset(): void {\n        if (this.isRootDropdown) {\n            this.focusHandlerService.unlistenFuncs.forEach((unlisten) => unlisten());\n        }\n        this.menuTrigger = null;\n        this.menuItems = null;\n    }\n\n    ngOnDestroy(): void {\n        if (this.unlistenRightArrowKeyPress) {\n            this.unlistenRightArrowKeyPress();\n        }\n    }\n\n    private registerRootMenuContainer(): void {\n        if (this.isRootDropdown) {\n            const rootMenuContainer = this.clrDropdownMenuEl;\n            this.focusHandlerService.listenToArrowKeys(rootMenuContainer);\n        }\n    }\n\n    private moveFocusToFirstItem(): void {\n        this.focusHandlerService.moveFocusTo(this.menuTrigger);\n        // After the menu is opened, the ClrDropdownMenu wouldn't be attached to the DOM until the next change detection cycle.\n        // So setTimeout is the only way to wait for the ClrDropdownMenu to be ready to move focus to first item.\n        this.timeoutId = window.setTimeout(() => {\n            if (this.parentVcdDropdown) {\n                this.focusHandlerService.moveFocus(Direction.RIGHT);\n            } else {\n                this.focusHandlerService.moveFocus(Direction.DOWN);\n            }\n            window.clearTimeout(this.timeoutId);\n        });\n    }\n\n    private getDropdownItemElement(item: Element): HTMLElement {\n        // We only need the underlying button that opens the nested dropdown as that is the activatable/focusable item\n        return (item.matches(ActivatableMenuItemType.BUTTON)\n            ? item\n            : item.querySelector(NESTED_DROPDOWN_TRIGGER)) as HTMLElement;\n    }\n\n    private linkMenuItems(): void {\n        const menuChildren: Element[] = Array.from(this.clrDropdownMenuEl.children);\n        this.menuItems = menuChildren\n            .filter(\n                (child) =>\n                    child.matches(ActivatableMenuItemType.BUTTON) ||\n                    child.matches(ActivatableMenuItemType.NESTED_VCD_DROPDOWN)\n            )\n            .map((child) => ({\n                element: this.getDropdownItemElement(child),\n                left: this.menuTrigger,\n            }));\n        this.linkVertical();\n        // Lint to menu trigger\n        if (this.isRootDropdown) {\n            this.menuTrigger.down = this.menuItems[0];\n        } else {\n            // If there is a parent dropdown, We have to link these menu items to their trigger in the parent dropdown\n            this.menuTrigger.right = this.menuItems[0];\n        }\n    }\n\n    private closeVcdDropdown = () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    };\n\n    private get rootMenuTrigger(): MenuItem {\n        return {\n            element: this.dropdownTriggerEl,\n            closeMenu: this.closeVcdDropdown,\n        };\n    }\n\n    private get nestedMenuTrigger(): MenuItem {\n        const menuTrigger = this.parentFocusHandler.menuItems.find((item) => {\n            return Object.is(item.element.innerText, this.dropdownTriggerEl.innerText);\n        });\n        menuTrigger.closeMenu = this.closeVcdDropdown;\n        return menuTrigger;\n    }\n\n    private linkVertical(): void {\n        this.menuItems.forEach((menuItem: MenuItem, index: number) => {\n            if (index > 0) {\n                menuItem.up = this.menuItems[index - 1];\n            }\n            if (index  1) {\n            this.menuItems[0].up = this.menuItems[this.menuItems.length - 1];\n            this.menuItems[this.menuItems.length - 1].down = this.menuItems[0];\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DropdownFocusHandlerService.html":{"url":"injectables/DropdownFocusHandlerService.html","title":"injectable - DropdownFocusHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DropdownFocusHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Provided at the injector level of root DropdownComponent. The same service object is used for all the nested menus along\nwith the root menu. This is responsible for listening to arrow key presses within the root dropdown menu container and updating the\nfocused item on the DOM across all the nested and root menus.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentFocusedItem\n                            \n                            \n                                unlistenFuncs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                escapePressed\n                            \n                            \n                                listenToArrowKeys\n                            \n                            \n                                moveFocus\n                            \n                            \n                                moveFocusTo\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapePressed\n                        \n                        \n                    \n                \n            \n            \n                \nescapePressed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:106\n                \n            \n\n\n            \n                \n                    Whenever escape is pressed on dropdown item, the menu has to be closed and the focus has to be moved to parent menu if any... Just\nlike when left arrow key is pressed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenToArrowKeys\n                        \n                        \n                    \n                \n            \n            \n                \nlistenToArrowKeys(menuContainer: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:72\n                \n            \n\n\n            \n                \n                    Attaches arrow key event listeners to the root menu container in all direction except right. This is because, when a right arrow is\npressed, Clarity opens the nested dropdown menu and the logic inside DropdownFocusHandlerDirective.ngAfterViewInit\nautomatically moves the focus to first item in the menu on the right side\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuContainer\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveFocus\n                        \n                        \n                    \n                \n            \n            \n                \nmoveFocus(direction: Direction)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:28\n                \n            \n\n\n            \n                \n                    Moves the focus to HTML element in the given direction and returns true if the focus is moved and false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                                Direction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveFocusTo\n                        \n                        \n                    \n                \n            \n            \n                \nmoveFocusTo(item: MenuItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:51\n                \n            \n\n\n            \n                \n                    Calls the HTML focus method on the HTML element passed and removed focus on currently focused element.\nReturns true if the focus is moved and false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                MenuItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentFocusedItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlistenFuncs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     (function)[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Renderer2 } from '@angular/core';\nimport { Direction, MenuItem } from './dropdown-focus-handler.directive';\n\n/**\n * Provided at the injector level of root {@link DropdownComponent}. The same service object is used for all the nested menus along\n * with the root menu. This is responsible for listening to arrow key presses within the root dropdown menu container and updating the\n * focused item on the DOM across all the nested and root menus.\n */\n@Injectable()\nexport class DropdownFocusHandlerService implements OnDestroy {\n    currentFocusedItem: MenuItem;\n    unlistenFuncs: (() => void)[] = [];\n\n    constructor(private renderer: Renderer2) {}\n\n    ngOnDestroy(): void {\n        this.unlistenFuncs.forEach((unlisten) => unlisten());\n    }\n\n    /**\n     * Moves the focus to HTML element in the given direction and returns true if the focus is moved and false otherwise\n     */\n    moveFocus(direction: Direction): boolean {\n        let moved;\n        switch (direction) {\n            case Direction.DOWN:\n                moved = this.moveFocusTo(this.currentFocusedItem.down);\n                break;\n            case Direction.LEFT:\n                moved = this.moveFocusTo(this.currentFocusedItem.left);\n                break;\n            case Direction.UP:\n                moved = this.moveFocusTo(this.currentFocusedItem.up);\n                break;\n            case Direction.RIGHT:\n                moved = this.moveFocusTo(this.currentFocusedItem.right);\n                break;\n        }\n        return moved;\n    }\n\n    /**\n     * Calls the HTML focus method on the HTML element passed and removed focus on currently focused element.\n     * Returns true if the focus is moved and false otherwise.\n     */\n    moveFocusTo(item: MenuItem): boolean {\n        if (!item) {\n            return false;\n        }\n        if (this.currentFocusedItem) {\n            // Sometimes, when navigating to a nested menu using right arrow, the nested menu trigger gets focused multiple times\n            if (Object.is(this.currentFocusedItem.element, item.element)) {\n                return false;\n            }\n            this.currentFocusedItem.element.blur();\n        }\n        item.element.focus();\n        this.currentFocusedItem = item;\n        return true;\n    }\n\n    /**\n     * Attaches arrow key event listeners to the root menu container in all direction except right. This is because, when a right arrow is\n     * pressed, Clarity opens the nested dropdown menu and the logic inside {@link DropdownFocusHandlerDirective.ngAfterViewInit}\n     * automatically moves the focus to first item in the menu on the right side\n     */\n    listenToArrowKeys(menuContainer: HTMLElement): void {\n        // We call event.preventDefault below to prevent scrolling of page underneath the dropdown when arrow keys are pressed\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowdown', (event: Event) => {\n                event.stopPropagation();\n                this.moveFocus(Direction.DOWN);\n                event.preventDefault();\n            })\n        );\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowup', (event: Event) => {\n                event.stopPropagation();\n                this.moveFocus(Direction.UP);\n                event.preventDefault();\n            })\n        );\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowleft', (event: Event) => {\n                if (!this.currentFocusedItem.left) {\n                    return;\n                }\n                // Close the nested menu before moving focus to left side\n                this.currentFocusedItem.left.closeMenu();\n                event.stopPropagation();\n                this.moveFocus(Direction.LEFT);\n                event.preventDefault();\n            })\n        );\n    }\n\n    /**\n     * Whenever escape is pressed on dropdown item, the menu has to be closed and the focus has to be moved to parent menu if any... Just\n     * like when left arrow key is pressed\n     */\n    escapePressed(): void {\n        if (!this.currentFocusedItem.left) {\n            return;\n        }\n        // Close the nested menu before moving focus to left side\n        this.currentFocusedItem.left.closeMenu();\n        this.moveFocus(Direction.LEFT);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_DropdownComponent_providers\n\n\n\ncluster_DropdownModule_imports\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownFocusHandlerDirective\n\nDropdownFocusHandlerDirective\n\nDropdownModule -->\n\nDropdownFocusHandlerDirective->DropdownModule\n\n\n\n\n\nDynamicDropdownPositionDirective\n\nDynamicDropdownPositionDirective\n\nDropdownModule -->\n\nDynamicDropdownPositionDirective->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective  -->\n\nDropdownModule->DropdownFocusHandlerDirective \n\n\n\n\n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective  -->\n\nDropdownModule->DynamicDropdownPositionDirective \n\n\n\n\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDropdownComponent -->\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER->DropdownComponent\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nDropdownModule -->\n\nShowClippedTextDirectiveModule->DropdownModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                        \n                            DropdownFocusHandlerDirective\n                        \n                        \n                            DynamicDropdownPositionDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                        \n                            DropdownFocusHandlerDirective\n                        \n                        \n                            DynamicDropdownPositionDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { DropdownFocusHandlerDirective } from './dropdown-focus-handler.directive';\nimport { DropdownComponent } from './dropdown.component';\nimport { DynamicDropdownPositionDirective } from './dynamic-dropdown-position.directive';\n\n@NgModule({\n    declarations: [DropdownComponent, DynamicDropdownPositionDirective, DropdownFocusHandlerDirective],\n    imports: [CommonModule, ReactiveFormsModule, ClarityModule, I18nModule, ShowClippedTextDirectiveModule],\n    exports: [DropdownComponent, DynamicDropdownPositionDirective, DropdownFocusHandlerDirective],\n})\nexport class DropdownModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicDropdownPositionDirective.html":{"url":"directives/DynamicDropdownPositionDirective.html","title":"directive - DynamicDropdownPositionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicDropdownPositionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive for ClrDropDown which repositions the drop-down menu dynamically based on the available space.\nIf there is not enough space to show the whole drop-down menu, then leave the default position which is bottom and\nusers have to scroll down to access it.\n\n            \n\n            \n                Implements\n            \n            \n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            ```\n * \n *     \n *         {{ 'vm.actions' | translate }}\n *         \n *         \n *     \n *         Dropdown header\n *         Action 1\n *         Action 2\n *         \n *         Link 1\n *         Link 2\n *     \n * \n * ```\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        clr-dropdown[vcdDynamicDropdown]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contentAreaElement\n                            \n                            \n                                    Private\n                                dropdownMenuElement\n                            \n                            \n                                    Private\n                                dropdownMenuRect\n                            \n                            \n                                    Private\n                                dropdownTriggerElement\n                            \n                            \n                                    Private\n                                dropdownTriggerRect\n                            \n                            \n                                    Private\n                                isInsideModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Private\n                                resetPosition\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dropdownMenu\n                                \n                                \n                                    positionTop\n                                \n                                \n                                    positionLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, renderer: Renderer2, document: Document, dropDownBtn: ClrDropdown, parentDropdown: DynamicDropdownPositionDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropDownBtn\n                                                  \n                                                        \n                                                                    ClrDropdown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentDropdown\n                                                  \n                                                        \n                                                                    DynamicDropdownPositionDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:198\n                \n            \n\n\n            \n                \n                    On window resize, close the dropdown when it is open, otherwise we need to recalculate again its position\nand reposition it, which may not be a good user experience.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPosition(element: HTMLElement, top: number, left: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:188\n                \n            \n\n\n            \n                \n                    Reposition the dropdown element by setting top and left position.\nNote: The dropdown is position absolute by setting position, top and left properties AND then is position\nrelatively to itself by setting transform: translateX/Y property.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    left\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contentAreaElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownMenuElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownMenuRect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DOMRect\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerRect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DOMRect\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isInsideModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:63\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropdownMenu\n                    \n                \n\n\n                \n                    \n                        setdropdownMenu(dropdown)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            dropdown\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        positionTop\n                    \n                \n\n                \n                    \n                        getpositionTop()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionLeft\n                    \n                \n\n                \n                    \n                        getpositionLeft()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:134\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    ElementRef,\n    HostListener,\n    Inject,\n    Optional,\n    Renderer2,\n    SkipSelf,\n} from '@angular/core';\nimport { ClrDropdown, ClrDropdownMenu } from '@clr/angular';\n\nconst CONTENT_AREA_SELECTOR = '.content-area';\nconst NO_SCROLLING_CLASSNAME = 'no-scrolling'; // Set by Clarity when a modal is opened\n// Extra space on the right and left of drop down menus to shift them left or right and prevent any clipping\nconst MENU_BUFFER_SPACE = 150;\n\n/**\n * Directive for ClrDropDown which repositions the drop-down menu dynamically based on the available space.\n *\n * If there is not enough space to show the whole drop-down menu, then leave the default position which is `bottom` and\n * users have to scroll down to access it.\n *\n * @example\n * ```\n * \n *     \n *         {{ 'vm.actions' | translate }}\n *         \n *         \n *     \n *         Dropdown header\n *         Action 1\n *         Action 2\n *         \n *         Link 1\n *         Link 2\n *     \n * \n * ```\n */\n/**\n * This component is marked as dynamic to suppress the '\"strictMetadataEmit\": true' error being reported on DI of Document\n */\n/** @dynamic */\n@Directive({\n    selector: 'clr-dropdown[vcdDynamicDropdown]',\n})\nexport class DynamicDropdownPositionDirective implements AfterContentInit {\n    private contentAreaElement: HTMLElement;\n    private dropdownTriggerElement: HTMLElement;\n    private dropdownMenuElement: HTMLElement;\n    private dropdownTriggerRect: DOMRect;\n    private dropdownMenuRect: DOMRect;\n    // Drop downs should be position absolutely to the window when they are in modal\n    private isInsideModal = false;\n\n    @ContentChild(ClrDropdownMenu, { static: false })\n    set dropdownMenu(dropdown: ClrDropdownMenu) {\n        if (dropdown) {\n            this.dropdownTriggerElement = this.elRef.nativeElement;\n            this.dropdownMenuElement = this.dropdownTriggerElement.querySelector('clr-dropdown-menu');\n            if (this.dropdownMenuElement) {\n                // Recalculate the dropdown position on open\n                this.dropdownTriggerRect = this.dropdownTriggerElement.getBoundingClientRect();\n                this.dropdownMenuRect = this.dropdownMenuElement.getBoundingClientRect();\n                this.resetPosition(this.dropdownMenuElement, this.positionTop, this.positionLeft);\n            }\n            try {\n                // Internal API\n                (dropdown as any).popoverInstance.removeScrollEventListeners();\n            } catch (e) {\n                console.error('Clarity has changed ClrDropdownMenu internal API. Please fix me!');\n                throw new Error('Clarity has changed ClrDropdownMenu internal API. Please fix me!');\n            }\n        }\n    }\n\n    constructor(\n        private elRef: ElementRef,\n        private renderer: Renderer2,\n        @Inject(DOCUMENT) private document: Document,\n        private dropDownBtn: ClrDropdown,\n        @Optional() @SkipSelf() private parentDropdown: DynamicDropdownPositionDirective\n    ) {}\n\n    ngAfterContentInit(): void {\n        this.isInsideModal = this.document.body.classList.contains(NO_SCROLLING_CLASSNAME);\n        if (!this.isInsideModal) {\n            this.contentAreaElement = this.document.body.querySelector(CONTENT_AREA_SELECTOR) as HTMLElement;\n        }\n    }\n\n    private get positionTop(): number {\n        const dropdownTriggerRect = this.dropdownTriggerRect;\n        const dropdownTriggerHeight = dropdownTriggerRect.bottom - dropdownTriggerRect.top;\n        const dropdownMenuRect = this.dropdownMenuRect;\n        const dropdownMenuHeight = dropdownMenuRect.bottom - dropdownMenuRect.top;\n\n        // When the dropdown is inside a modal and it's being clipped, its position is determined based on the window\n        if (this.isInsideModal && dropdownMenuRect.bottom > window.innerHeight) {\n            return -(dropdownMenuHeight + dropdownTriggerHeight + 1);\n        }\n        if (!this.contentAreaElement) {\n            return 0;\n        }\n        const contentAreaRect = this.contentAreaElement.getBoundingClientRect();\n        // When not in a modal, the position is relative to the `.content-area` element\n        if (dropdownMenuRect.bottom = contentAreaRect.top) {\n            // If the dropdown trigger is a dropdown item instead of a button, we shift it up by less number of pixels to avoid space\n            // between dropdown trigger and the dropdown menu\n            const isFirstDropdownTrigger = !!this.dropdownTriggerElement.querySelector('button.first-dropdown-toggle');\n            return isFirstDropdownTrigger ? -(dropdownTriggerHeight + dropdownMenuHeight) : -dropdownMenuHeight;\n        }\n        if (dropdownTriggerRect.top - dropdownMenuRect.height = contentAreaRect.right &&\n            dropdownTriggerRect.left - dropdownMenuRect.width >= contentAreaRect.left\n        ) {\n            const marginLeft = triggerComputedStyles ? parseInt(triggerComputedStyles.marginLeft, 10) : 0;\n            // If the dropdown being clipped is at the 2nd level, we want to shift it furthur left such that it would\n            // not over lap and cover the 1st level of dropdown underneath it\n            if (this.parentDropdown) {\n                const parentDropdownMenuRect = this.parentDropdown.dropdownMenuElement.getBoundingClientRect();\n                const parentDropdownWidth = parentDropdownMenuRect.right - parentDropdownMenuRect.left;\n                return -(parentDropdownWidth + dropdownMenuRect.width + marginLeft);\n            }\n            return -(dropdownMenuRect.width + marginLeft);\n        }\n        // if the dropdown is clipped at the bottom and if it is also being clipped at the top and pushed down, shift it to right\n        if (\n            dropdownMenuRect.bottom > contentAreaRect.bottom &&\n            dropdownTriggerRect.top - dropdownMenuRect.height \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorBannerComponent.html":{"url":"components/ErrorBannerComponent.html","title":"component - ErrorBannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorBannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/error/error-banner.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays the error message only if a non empty errorMessage is passed in\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-error-banner\n            \n\n            \n                styleUrls\n                ./error-banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errorMessage\n                            \n                            \n                                closed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onAlertClosedChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alertClosable\n                            \n                            \n                                alertType\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dismissed\n                            \n                            \n                                errorMessageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorMessage\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alertClosable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:41\n                            \n                        \n                \n                    \n                        Marks clr-alert as closable or not\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        alertType\n                    \n                \n                \n                    \n                        Type :     \"danger\" | \"warning\" | \"info\" | \"success\"\n\n                    \n                \n                \n                    \n                        Default value : 'danger'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:36\n                            \n                        \n                \n                    \n                        Sets clr-alert type\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:29\n                            \n                        \n                \n                    \n                        Two way bound errorMessage, will be cleared when the user dismisses the alert\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dismissed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:24\n                            \n                        \n                \n                    \n                        Emits events when the error banner is dismissed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:54\n                            \n                        \n                \n                    \n                        Emits an event when the error message is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAlertClosedChange\n                        \n                        \n                    \n                \n            \n            \n                \nonAlertClosedChange(closed: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/error/error-banner.component.ts:59\n                \n            \n\n\n            \n                \n                    Clears the error message when the alert is closed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    closed\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n\n\n                \n                    \n                        seterrorMessage(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:46\n                                \n                            \n                    \n                        \n                                Sets the error message displayed by this error banner.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component that displays the error message only if a non empty errorMessage is passed in\n */\n@Component({\n    selector: 'vcd-error-banner',\n    templateUrl: './error-banner.component.html',\n    styleUrls: ['./error-banner.component.scss'],\n})\nexport class ErrorBannerComponent {\n    private _errorMessage = '';\n\n    closed = true;\n\n    /**\n     * Emits events when the error banner is dismissed.\n     */\n    @Output() dismissed = new EventEmitter();\n\n    /**\n     * Two way bound errorMessage, will be cleared when the user dismisses the alert\n     */\n    @Input() get errorMessage(): string {\n        return this._errorMessage;\n    }\n\n    /**\n     * Sets clr-alert type\n     */\n    @Input() alertType: 'danger' | 'warning' | 'info' | 'success' = 'danger';\n\n    /**\n     * Marks clr-alert as closable or not\n     */\n    @Input() alertClosable = true;\n\n    /**\n     * Sets the error message displayed by this error banner.\n     */\n    set errorMessage(val: string) {\n        this._errorMessage = val;\n        this.closed = !val;\n    }\n\n    /**\n     * Emits an event when the error message is changed.\n     */\n    @Output() errorMessageChange = new EventEmitter();\n\n    /**\n     * Clears the error message when the alert is closed.\n     */\n    onAlertClosedChange(closed: boolean): void {\n        this._errorMessage = '';\n        this.errorMessageChange.emit('');\n        this.dismissed.next();\n    }\n}\n\n    \n\n    \n        \n    \n        {{ errorMessage }}\n    \n\n\n    \n\n    \n                \n                    ./error-banner.component.scss\n                \n                /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nclr-alert ::ng-deep .alert {\n    margin-left: 0;\n    margin-right: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ errorMessage }}    '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorBannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorBannerWidgetObject.html":{"url":"classes/ErrorBannerWidgetObject.html","title":"class - ErrorBannerWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorBannerWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/error/error-banner.wo.ts\n        \n\n            \n                Description\n            \n            \n                Testing Widget Object for ErrorBannerComponent\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ariaRole\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-error-banner'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.wo.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ariaRole\n                    \n                \n\n                \n                    \n                        getariaRole()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/error/error-banner.wo.ts:18\n                                \n                            \n                    \n                        \n                                The ARIA role of the component.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { WidgetObject } from '../../utils/test/widget-object';\nimport { ErrorBannerComponent } from './error-banner.component';\n\n/**\n * Testing Widget Object for {@link ErrorBannerComponent}\n */\nexport class ErrorBannerWidgetObject extends WidgetObject {\n    static tagName = 'vcd-error-banner';\n\n    /**\n     * The ARIA role of the component.\n     */\n    get ariaRole(): string {\n        return this.findElement('clr-alert').nativeElement.getAttribute('role');\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExportColumn.html":{"url":"interfaces/ExportColumn.html","title":"interface - ExportColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExportColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.component.ts\n        \n\n            \n                Description\n            \n            \n                Identifiers for each column that user is allowed to select\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        fieldName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Displayed in the list of columns. If there is no displayName, the default value is fieldName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the field in the JSON that is returned and converted to a viewable format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDropdown } from '@clr/angular';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { CsvExporterService } from './csv-exporter.service';\n\n/**\n * Identifiers for each column that user is allowed to select\n */\nexport interface ExportColumn {\n    /**\n     * Displayed in the list of columns. If there is no displayName, the default value is fieldName\n     */\n    displayName?: string;\n    /**\n     * The name of the field in the JSON that is returned and converted to a viewable format\n     */\n    fieldName: string;\n}\n\nexport enum UserOptions {\n    selectAll = 'selectAll',\n    friendlyNames = 'friendlyNames',\n    sanitize = 'sanitize',\n}\n\n/**\n * Information passed to the caller so they can fetch the data\n */\nexport interface DataExportRequestEvent {\n    /**\n     * Call this to indicate a new value to be displayed in the progress indicator.\n     * @param progress A number from 0 to 1 indicating download progress. Passing -1 will make it an indeterminate\n     */\n    updateProgress: (progress: number) => void;\n\n    /**\n     * Call this when all records have been fetched to initiate the CSV creation.\n     * This should only be called once after all data fetching is finished\n     * @param records Records to be converted into a csv file\n     * @return a promise of the resulting CSV to indicate when this potentially lengthy process is over\n     */\n    exportData: (records: object[]) => Promise;\n\n    /**\n     * Columns selected by the user.\n     */\n    selectedColumns: ExportColumn[];\n}\n\n/**\n * A dialog to export data\n *\n *  - Allows the UI to select columns to be exported\n *  - Provides a progress indicator\n *  - Converts the data that is fetched by the caller into a CSV\n */\n@Component({\n    selector: 'vcd-data-exporter',\n    templateUrl: 'data-exporter.component.html',\n    styleUrls: ['./data-exporter.component.scss'],\n})\nexport class DataExporterComponent implements OnInit, OnDestroy {\n    constructor(private csvExporterService: CsvExporterService, private translationService: TranslationService) {}\n\n    @ViewChild(ClrDropdown) set columnDropdown(columnDropdown: ClrDropdown) {\n        if (!columnDropdown) {\n            return;\n        }\n        this.subscriptionTracker.subscribe(columnDropdown.toggleService.openChange, (opened) => {\n            this.isDropdownOpen = opened;\n        });\n    }\n\n    _columns: ExportColumn[] = [];\n\n    /**\n     * List of columns that can be exported, user may deselect some before sending the download request.\n     * Display name defaults to field name if there is no displayName\n     */\n    @Input()\n    set columns(cols: ExportColumn[]) {\n        this._columns = cols;\n        this.updateFieldNameMap(cols);\n    }\n\n    get columns(): ExportColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * The name of the file to be downloaded\n     */\n    @Input() fileName = 'data-export.csv';\n\n    /**\n     * Text for the Dialog Header\n     */\n    @Input()\n    dialogHeader: LazyString = this.translationService.translateAsync('vcd.cc.data-exporter.title');\n\n    /**\n     * Text for the cancel button.\n     */\n    @Input()\n    cancelText: LazyString = this.translationService.translateAsync('vcd.cc.cancel');\n\n    /**\n     * Text for the export all button.\n     */\n    @Input()\n    exportAllText: LazyString = this.translationService.translateAsync('vcd.cc.export.all');\n\n    /**\n     * Text for the select columns dropdown button.\n     */\n    @Input()\n    selectColumnsText: LazyString = this.translationService.translateAsync('vcd.cc.select.columns');\n\n    /**\n     * Text for the export button.\n     */\n    @Input()\n    exportText: LazyString = this.translationService.translateAsync('vcd.cc.export');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    yesText: LazyString = this.translationService.translateAsync('vcd.cc.yes');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    noText: LazyString = this.translationService.translateAsync('vcd.cc.no');\n\n    /**\n     * Text label that is next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.question');\n\n    /**\n     * Text the info message next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.info');\n\n    /**\n     * Text the hint message below the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesHint: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.hint');\n\n    /**\n     * Text label that is next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.question');\n\n    /**\n     * Hint message that is below the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxHint: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.hint');\n\n    /**\n     * Text the info message next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.info');\n\n    /**\n     * The message that is displayed while the data is downloading.\n     */\n    @Input()\n    downloadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.downloading');\n\n    /**\n     * The message that is displayed while the data is writing to file.\n     */\n    @Input()\n    writingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.writing');\n\n    /**\n     * Whether the dialog is open\n     */\n    @Input()\n    set open(value: boolean) {\n        this._open = value;\n        this.openChange.emit(value);\n    }\n    get open(): boolean {\n        return this._open;\n    }\n\n    private _open = false;\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    forceDropdownOpen = false;\n\n    /**\n     * Fires when {@link _open} changes. Its parameter indicates the new state.\n     */\n    @Output() openChange = new EventEmitter();\n\n    /**\n     * Called when the export is ready to be created\n     */\n    @Output() dataExportRequest = new EventEmitter();\n\n    /**\n     * True between the time {@link dataExportRequest} fires and {@link DataExportRequestEvent.exportData} is called\n     * or an error is thrown\n     */\n    get isRequestPending(): boolean {\n        return this._isRequestPending;\n    }\n    private _isRequestPending = false;\n\n    /**\n     * Number between 0-1, used for displaying the progress bar.\n     */\n    get progress(): number {\n        return this._progress;\n    }\n    private _progress = 0;\n\n    private fieldNameMap = new Map();\n\n    formGroup: FormGroup;\n\n    exportStage: LazyString;\n\n    optionsFormGroup = new FormGroup({\n        [UserOptions.selectAll]: new FormControl(true),\n        [UserOptions.friendlyNames]: new FormControl(true),\n        [UserOptions.sanitize]: new FormControl(true),\n    });\n\n    /**\n     * Says if the column dropdown is open.\n     */\n    isDropdownOpen = false;\n\n    onClickExport(): void {\n        this.exportStage = this.downloadingMessage;\n        this._isRequestPending = true;\n        this.dataExportRequest.emit({\n            exportData: this.exportData.bind(this),\n            updateProgress: this.updateProgress.bind(this),\n            selectedColumns: this.selectedColumns,\n        });\n    }\n\n    get selectAllControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.selectAll) as FormControl;\n    }\n\n    get sanitizeControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.sanitize) as FormControl;\n    }\n\n    get friendlyFieldsControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.friendlyNames) as FormControl;\n    }\n\n    get isExportEnabled(): boolean {\n        if (this.isRequestPending) {\n            return false;\n        }\n        for (const column of this.columns) {\n            if (this.formGroup.controls[column.fieldName].value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get shouldShowBubbles(): boolean {\n        return !this.selectAllControl.value && !this.isDropdownOpen;\n    }\n\n    /**\n     * Gives a list of all the columns that are selected.\n     */\n    get selectedColumns(): ExportColumn[] {\n        return this.columns.filter((col) => this.formGroup.controls[col.fieldName].value);\n    }\n\n    /**\n     * Sets the selected value of the given column.\n     */\n    selectColumn(column: ExportColumn, selected: boolean): void {\n        this.formGroup.controls[column.fieldName].setValue(selected);\n    }\n\n    ngOnInit(): void {\n        const controls = this.columns.reduce((previousValue, currentValue) => {\n            previousValue[currentValue.fieldName] = new FormControl(true);\n            return previousValue;\n        }, {});\n        this.formGroup = new FormGroup(controls);\n        this.subscriptionTracker.subscribe(this.selectAllControl.valueChanges, (change) => {\n            if (change) {\n                for (const column of this.columns) {\n                    this.formGroup.controls[column.fieldName].setValue(true);\n                }\n            } else {\n                this.forceDropdownOpen = true;\n                this.isDropdownOpen = true;\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n\n    private exportData(records: object[]): Promise {\n        if (!this.open) {\n            return;\n        }\n\n        const rows = [\n            // First row is the display names\n            Object.keys(records[0]).map((fieldName) =>\n                this.friendlyFieldsControl.value ? this.getDisplayNameForField(fieldName) : fieldName\n            ),\n            // Then the data\n            ...records.map((rec) => Object.keys(rec).map((key) => rec[key])),\n        ];\n        return this.downloadData(rows, this.sanitizeControl.value);\n    }\n\n    downloadData(data: any[][], shouldSanitize: boolean = false): Promise {\n        this.exportStage = this.writingMessage;\n        return new Promise((resolve) => {\n            // We need to setTimeout because we changed how the message should be displayed\n            // but we need to interrupt the current task to get the message to display\n            // We tried to use window.requestAnimationFrame, but this didn't work so we had to use\n            // setTimeout().\n            setTimeout(() => {\n                this._isRequestPending = false;\n                const csvFile = this.csvExporterService.createCsv(data, shouldSanitize);\n                this.csvExporterService.downloadCsvFile(csvFile, this.fileName);\n                this.open = false;\n                resolve(csvFile);\n            });\n        });\n    }\n\n    private updateProgress(progress: number): void {\n        this._progress = progress;\n    }\n\n    private getDisplayNameForField(fieldName: string): string {\n        if (this.fieldNameMap.has(fieldName)) {\n            const exportColumn = this.fieldNameMap.get(fieldName);\n            return this.getDisplayNameForColumn(exportColumn);\n        } else {\n            return fieldName;\n        }\n    }\n\n    getDisplayNameForColumn(col: ExportColumn): string {\n        return col.displayName || col.fieldName;\n    }\n\n    private updateFieldNameMap(cols: ExportColumn[]): void {\n        this.fieldNameMap = new Map(cols.map((col) => [col.fieldName, col]));\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterBuilder.html":{"url":"classes/FilterBuilder.html","title":"class - FilterBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/filter-builder.ts\n        \n\n            \n                Description\n            \n            \n                Utility to reduce the verbosity required when creating complex query filter expressions.\nUsage:\nconst builder = new FilterBuilder();\nconst filter = builder\n          .is(\"isVappTemplate\").equalTo(true)\n          .and()\n          .is(\"vcd\").equalTo(vcdId)\n          .and().or(\n              builder.is(\"created\").before(userInputDate),\n              builder.is(\"uptime\").greaterThan(user)\n          );\nWill produce:\nisVappTemplate==true;vcd==some-urn-here;(created=lt=DATETIME,uptime=gt=3600000)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentOperator\n                            \n                            \n                                    Private\n                                parent\n                            \n                            \n                                    Private\n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                after\n                            \n                            \n                                    Public\n                                all\n                            \n                            \n                                    Public\n                                and\n                            \n                            \n                                    Public\n                                any\n                            \n                            \n                                    Public\n                                before\n                            \n                            \n                                    Public\n                                betweenNumbers\n                            \n                            \n                                    Private\n                                buildPartial\n                            \n                            \n                                    Private\n                                clear\n                            \n                            \n                                    Private\n                                condition\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                            \n                                    Public\n                                getString\n                            \n                            \n                                    Public\n                                greaterThan\n                            \n                            \n                                    Public\n                                greaterThanOrEqualTo\n                            \n                            \n                                    Public\n                                is\n                            \n                            \n                                    Public\n                                lessThan\n                            \n                            \n                                    Public\n                                lessThanOrEqualTo\n                            \n                            \n                                    Public\n                                notEqualTo\n                            \n                            \n                                    Public\n                                or\n                            \n                            \n                                    Public\n                                wrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: FilterBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/filter-builder.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        FilterBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentOperator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            after\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    after(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:246\n                \n            \n\n\n            \n                \n                    Match a filter expression to be after a date\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:106\n                \n            \n\n\n            \n                \n                    Top level AND operator\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            and\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    and(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:72\n                \n            \n\n\n            \n                \n                    Conjunct expressions\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            any\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    any(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:160\n                \n            \n\n\n            \n                \n                    Top level OR operator\nconditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            before\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    before(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:238\n                \n            \n\n\n            \n                \n                    Match a filter expression to be before a date\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            betweenNumbers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    betweenNumbers(values: number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:256\n                \n            \n\n\n            \n                \n                    Match a filter expression to be between two numbers.\nLower limit is greater or equal and upper limit is less or equal.\nIf for either of the limit is not provided value, the limit is not included in the filter expression.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildPartial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildPartial()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            condition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    condition(operator: string, value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            equalTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    equalTo(value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:190\n                \n            \n\n\n            \n                \n                    Match a filter expression to be equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getString()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:62\n                \n            \n\n\n            \n                \n                    Create a string representing the filter parameter to be used in a query\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the filter expression\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            greaterThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterThan(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:222\n                \n            \n\n\n            \n                \n                    Match a filter expression to be greater than a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            greaterThanOrEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterThanOrEqualTo(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:230\n                \n            \n\n\n            \n                \n                    Match a filter expression to be greater than or equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            is\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    is(property: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:52\n                \n            \n\n\n            \n                \n                    Initialize a filter expression\n  property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The created FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lessThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lessThan(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:206\n                \n            \n\n\n            \n                \n                    Match a filter expression to be less than a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lessThanOrEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lessThanOrEqualTo(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:214\n                \n            \n\n\n            \n                \n                    Match a filter expression to be less than or equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notEqualTo(value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:198\n                \n            \n\n\n            \n                \n                    Match a filter expression to be different to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            or\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    or(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:126\n                \n            \n\n\n            \n                \n                    Disjunct expressions\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            wrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:180\n                \n            \n\n\n            \n                \n                    Wrap the current expression in ()\n\n\n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const Operators: { [key: string]: string } = {\n    OR: ',',\n    AND: ';',\n    GT: '=gt=',\n    GE: '=ge=',\n    LT: '=lt=',\n    LE: '=le=',\n    EQ: '==',\n    NEQ: '!=',\n};\n\nexport type Primitives = boolean | string | number;\n\n/**\n * Utility to reduce the verbosity required when creating complex query filter expressions.\n *\n * Usage:\n * const builder = new FilterBuilder();\n * const filter = builder\n *          .is(\"isVappTemplate\").equalTo(true)\n *          .and()\n *          .is(\"vcd\").equalTo(vcdId)\n *          .and().or(\n *              builder.is(\"created\").before(userInputDate),\n *              builder.is(\"uptime\").greaterThan(user)\n *          );\n *\n * Will produce:\n * isVappTemplate==true;vcd==some-urn-here;(created=lt=DATETIME,uptime=gt=3600000)\n */\nexport class FilterBuilder {\n    private result = '';\n    private parent: FilterBuilder;\n    private currentOperator: string;\n\n    constructor(parent: FilterBuilder = null) {\n        this.parent = parent;\n    }\n\n    /**\n     * Initialize a filter expression\n     *  property\n     * @returns The created FilterBuilder instance\n     */\n    public is(property: string): FilterBuilder {\n        const fb = new FilterBuilder(this);\n        fb.result = property;\n        return fb;\n    }\n\n    /**\n     * Create a string representing the filter parameter to be used in a query\n     * @returns the filter expression\n     */\n    public getString(): string {\n        const query = this.buildPartial();\n        return query;\n    }\n\n    /**\n     * Conjunct expressions\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public and(...conditions: FilterBuilder[]): FilterBuilder {\n        if (!conditions.length) {\n            if (\n                this.currentOperator === Operators.OR ||\n                (this.parent && this.parent.currentOperator === Operators.OR)\n            ) {\n                if (this.parent) {\n                    this.parent.result = '(' + this.parent.result;\n                    this.result += ')';\n                } else {\n                    this.wrap();\n                }\n                this.currentOperator = Operators.AND;\n            }\n            this.result += Operators.AND;\n        } else {\n            this.result += '(';\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach(condition => {\n                partial += Operators.AND + condition.buildPartial();\n            });\n\n            this.result += partial + ')';\n        }\n        return this;\n    }\n\n    /**\n     * Top level AND operator\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public all(...conditions: FilterBuilder[]): FilterBuilder {\n        if (conditions.length) {\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach(condition => {\n                partial += Operators.AND + condition.buildPartial();\n            });\n\n            this.result += partial;\n        }\n\n        return this;\n    }\n\n    /**\n     * Disjunct expressions\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public or(...conditions: FilterBuilder[]): FilterBuilder {\n        if (!conditions.length) {\n            if (\n                this.currentOperator === Operators.AND ||\n                (this.parent && this.parent.currentOperator === Operators.AND)\n            ) {\n                if (this.parent) {\n                    this.parent.result = '(' + this.parent.result;\n                    this.result += ')';\n                } else {\n                    this.wrap();\n                }\n                this.currentOperator = Operators.OR;\n            }\n            this.result += Operators.OR;\n        } else {\n            this.result += '(';\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach(condition => {\n                partial += Operators.OR + condition.buildPartial();\n            });\n\n            this.result += partial + ')';\n        }\n        return this;\n    }\n\n    /**\n     * Top level OR operator\n     * conditions\n     * @returns The FilterBuilder instance\n     */\n    public any(...conditions: FilterBuilder[]): FilterBuilder {\n        if (conditions.length) {\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n            first.clear();\n\n            conditions.forEach(condition => {\n                partial += Operators.OR + condition.buildPartial();\n                condition.clear();\n            });\n            this.result += partial;\n        }\n\n        return this;\n    }\n\n    /**\n     * Wrap the current expression in ()\n     * @returns The FilterBuilder instance\n     */\n    public wrap(): FilterBuilder {\n        this.result = '(' + this.result + ')';\n        this.currentOperator = null;\n        return this;\n    }\n\n    /**\n     * Match a filter expression to be equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public equalTo(value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        return this.condition(Operators.EQ, value, ...moreValues);\n    }\n\n    /**\n     * Match a filter expression to be different to a value\n     * @returns The FilterBuilder instance\n     */\n    public notEqualTo(value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        return this.condition(Operators.NEQ, value, ...moreValues);\n    }\n\n    /**\n     * Match a filter expression to be less than a value\n     * @returns The FilterBuilder instance\n     */\n    public lessThan(value: number): FilterBuilder {\n        return this.condition(Operators.LT, value);\n    }\n\n    /**\n     * Match a filter expression to be less than or equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public lessThanOrEqualTo(value: number): FilterBuilder {\n        return this.condition(Operators.LE, value);\n    }\n\n    /**\n     * Match a filter expression to be greater than a value\n     * @returns The FilterBuilder instance\n     */\n    public greaterThan(value: number): FilterBuilder {\n        return this.condition(Operators.GT, value);\n    }\n\n    /**\n     * Match a filter expression to be greater than or equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public greaterThanOrEqualTo(value: number): FilterBuilder {\n        return this.condition(Operators.GE, value);\n    }\n\n    /**\n     * Match a filter expression to be before a date\n     * @returns The FilterBuilder instance\n     */\n    public before(date: Date): FilterBuilder {\n        return this.condition(Operators.LT, date.toISOString());\n    }\n\n    /**\n     * Match a filter expression to be after a date\n     * @returns The FilterBuilder instance\n     */\n    public after(date: Date): FilterBuilder {\n        return this.condition(Operators.GT, date.toISOString());\n    }\n\n    /**\n     * Match a filter expression to be between two numbers.\n     * Lower limit is greater or equal and upper limit is less or equal.\n     * If for either of the limit is not provided value, the limit is not included in the filter expression.\n     * @returns The FilterBuilder instance\n     */\n    public betweenNumbers(values: number[]): FilterBuilder {\n        const builders: FilterBuilder[] = [];\n\n        if (typeof values[0] === 'number') {\n            builders.push(new FilterBuilder().is(this.result).condition(Operators.GE, values[0]));\n        }\n\n        if (typeof values[1] === 'number') {\n            builders.push(new FilterBuilder().is(this.result).condition(Operators.LE, values[1]));\n        }\n\n        return new FilterBuilder().is('').and(...builders);\n    }\n\n    private condition(operator: string, value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        const name = this.result;\n        this.result += (operator + value) as string;\n        if (moreValues.length) {\n            moreValues.forEach(val => {\n                this.result += (',' + name + operator + val) as string;\n            });\n            this.currentOperator = Operators.OR;\n        }\n        return this;\n    }\n\n    private clear(): void {\n        this.result = '';\n        this.currentOperator = '';\n        if (this.parent) {\n            this.parent.clear();\n            this.parent = null;\n        }\n    }\n\n    private buildPartial(): string {\n        if (this.parent) {\n            return `${this.parent.buildPartial()}${this.result}`;\n        } else {\n            return this.result;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterConfig.html":{"url":"interfaces/FilterConfig.html","title":"interface - FilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Properties required by all the grid filters\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        queryField\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queryField\n                                    \n                                \n                                \n                                    \n                                        queryField:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used as a query field for server side filtering of the grid column\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     V\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     V\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Value with which grid data can be filtered before initially being rendered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterRendererSpec.html":{"url":"interfaces/FilterRendererSpec.html","title":"interface - FilterRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\ncomponent. used by the ComponentRendererOutletDirective\n\n            \n\n            \n                Extends\n            \n            \n                        ComponentRendererSpec\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     C\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Config object required for the configuration of component that will be rendered in the column filter widget\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterTestHostComponent.html":{"url":"components/FilterTestHostComponent.html","title":"component - FilterTestHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterTestHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/utils/test/datagrid/filter-utils.ts\n\n\n    \n        Description\n    \n    \n        TestHostComponent that has only single column for filter testing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                    Static\n                                filterColumn\n                            \n                            \n                                gridData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFilter\n                        \n                        \n                    \n                \n            \n            \n                \nsetFilter(filterType: Type>, finder: WidgetFinder, config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:119\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        V\n                        C\n                    \n                \n            \n\n            \n                \n                    Creates the filterRendererSpec and adds it to the grid column above\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterType\n                                    \n                                                Type>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    finder\n                                    \n                                                WidgetFinder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            column\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterTestHostComponent.filterColumn\n\n                        \n                    \n                    \n                        \n                            Default value : FilterTestHostComponent.filterColumn\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:110\n                            \n                        \n\n                \n                    \n                        Used inside the html template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filterColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridColumn\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        displayName: 'Filter',\n        renderer: 'Does not matter',\n        queryFieldName: 'queryFieldName',\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:102\n                            \n                        \n\n                \n                    \n                        Made static so that it can be called in filter unit tests to make sure the FIQL string outputs have the queryFieldName\nvalue given in the column definition below\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GridDataFetchResult\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        items: [],\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:112\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Type } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { MockTranslationService, TranslationService } from '@vcd/i18n';\nimport {\n    DatagridFilter,\n    FilterComponentRendererSpec,\n    GridColumn,\n    GridDataFetchResult,\n    VcdDatagridModule,\n} from '../../../datagrid';\nimport { MockRecord } from '../../../datagrid/mock-data';\nimport { IdGenerator } from '../../id-generator/id-generator';\nimport { WidgetFinder } from '../widget-object';\nimport { ClrDatagridWidgetObject } from './datagrid.wo';\n\n/**\n * Creates a testing module with {@link FilterTestHostComponent} that has only single column for filter testing\n */\nasync function configureTestingModule(): Promise {\n    await TestBed.configureTestingModule({\n        imports: [VcdDatagridModule],\n        declarations: [FilterTestHostComponent],\n        providers: [\n            {\n                provide: TranslationService,\n                useClass: MockTranslationService,\n            },\n            {\n                provide: IdGenerator,\n                useValue: new IdGenerator('vcd-id'),\n            },\n        ],\n    }).compileComponents();\n}\n\n/**\n * Used inside beforeEach functions of filter tests and it does the following:\n * - Creates a testing module with {@link FilterTestHostComponent} that has only single column for filter testing\n * - Sets the filter on the column of host component({@link FilterTestHostComponent})\n * - Opens the filter and returns a component instance of the filter created\n *\n * @param filterType to be created in the test host component grid's column\n * @param config The configuration for the filter\n *\n * Example:\n * beforeEach(function(this: HasDgStringFilter): void {\n *     this.filter = createDatagridFilterTestHelper(\n *         DatagridStringFilterComponent,\n *         { wildCardPosition: WildCardPosition.END, value: 'testInput-1' }\n *     );\n * });\n */\nexport function createDatagridFilterTestHelper(\n    filterType: Type>,\n    config?: C\n): DatagridFilter {\n    configureTestingModule();\n\n    // Add the filter to grid column\n    const finder = new WidgetFinder(FilterTestHostComponent);\n    const grid = finder.find(ClrDatagridWidgetObject);\n    finder.hostComponent.setFilter(filterType, finder, config || ({} as C));\n\n    return grid.getFilter(filterType);\n}\n\n/**\n * Same as the above function but used for tests which need finder\n */\nexport function createDatagridFilterTestHelperWithFinder(\n    filterType: Type>,\n    config?: C\n): { finder: WidgetFinder; filter: DatagridFilter } {\n    configureTestingModule();\n\n    // Add the filter to grid column\n    const finder = new WidgetFinder(FilterTestHostComponent);\n    const grid = finder.find(ClrDatagridWidgetObject);\n    finder.hostComponent.setFilter(filterType, finder, config || ({} as C));\n\n    return { finder, filter: grid.getFilter(filterType) };\n}\n\n/**\n * TestHostComponent that has only single column for filter testing.\n */\n@Component({\n    template: `\n        \n    `,\n})\nexport class FilterTestHostComponent {\n    /**\n     * Made static so that it can be called in filter unit tests to make sure the FIQL string outputs have the queryFieldName\n     * value given in the column definition below\n     */\n    static filterColumn: GridColumn = {\n        displayName: 'Filter',\n        renderer: 'Does not matter',\n        queryFieldName: 'queryFieldName',\n    };\n    /**\n     * Used inside the html template\n     */\n    column = FilterTestHostComponent.filterColumn;\n\n    gridData: GridDataFetchResult = {\n        items: [],\n    };\n\n    /**\n     * Creates the filterRendererSpec and adds it to the grid column above\n     */\n    setFilter(\n        filterType: Type>,\n        finder: WidgetFinder,\n        config: C\n    ): void {\n        this.column.filter = FilterComponentRendererSpec({ type: filterType, config });\n        finder.detectChanges();\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterTestHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindParams.html":{"url":"interfaces/FindParams.html","title":"interface - FindParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Arguments for WidgetFinder and WidgetFinder\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ancestor\n                                \n                                \n                                            Optional\n                                        className\n                                \n                                \n                                        woConstructor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ancestor\n                                    \n                                \n                                \n                                    \n                                        ancestor:         DebugElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If provided, search starts from this container. It defaults to the fixture's root debugElement\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class name that can be used when there could be multiple instances of the object within the\nfixture tree\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        woConstructor\n                                    \n                                \n                                \n                                    \n                                        woConstructor:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The constructor of the widget to be found\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * Finds instances that implement {@link FindableWidget}\n * H is the host component's type\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindableWidget.html":{"url":"interfaces/FindableWidget.html","title":"interface - FindableWidget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindableWidget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Subclasses should implement the FindableWidget interface so they can be found with WidgetFinder\nNote\nThis is done by creating a static property tagNameon your subclass, not a regular instance, since this\ninterface represents a constructor for a WidgetObject, not an instance.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tagName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagName\n                                    \n                                \n                                \n                                    \n                                        tagName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * Finds instances that implement {@link FindableWidget}\n * H is the host component's type\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindableWidget-1.html":{"url":"interfaces/FindableWidget-1.html","title":"interface - FindableWidget-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindableWidget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\nhave a static tagName.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tagName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagName\n                                    \n                                \n                                \n                                    \n                                        tagName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForChild? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForParent? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormCheckboxComponent.html":{"url":"components/FormCheckboxComponent.html","title":"component - FormCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-checkbox/form-checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        FormControl wrapper around a input HTML element of checkbox type. The label input from\nBaseFormControl is used for displaying a label on the left of a form field and the text input is used for\ndisplaying label on the right of checkbox. Use the 'styling' property with a value of 'checkbox' or 'toggle-switch'\nto display a checkbox or toggle switch on the UI.\nExample:\n      \n      \n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./form-checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconShape\n                            \n                            \n                                rightLabel\n                            \n                            \n                                styling\n                            \n                            \n                                text\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isCheckbox\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDirective: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDirective\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iconShape\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:49\n                            \n                        \n                \n                    \n                        A shape for the icon that appears next to the checkbox.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightLabel\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:44\n                            \n                        \n                \n                    \n                        Put the label text on the right.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styling\n                    \n                \n                \n                    \n                        Type :         CheckBoxStyling\n\n                    \n                \n                \n                    \n                        Default value : CheckBoxStyling.CHECKBOX\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:39\n                            \n                        \n                \n                    \n                        Styling for the checkbox.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:34\n                            \n                        \n                \n                    \n                        The label that appears next to the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isCheckbox\n                    \n                \n\n                \n                    \n                        getisCheckbox()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:51\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BaseFormControl } from '../base-form-control';\n\nexport enum CheckBoxStyling {\n    CHECKBOX = 'checkbox',\n    TOGGLESWITCH = 'toggle-switch',\n}\n\n/**\n * {@link FormControl} wrapper around a input HTML element of checkbox type. The label input from\n * {@link BaseFormControl} is used for displaying a label on the left of a form field and the text input is used for\n * displaying label on the right of checkbox. Use the 'styling' property with a value of 'checkbox' or 'toggle-switch'\n * to display a checkbox or toggle switch on the UI.\n *\n * Example:\n *      \n *      \n */\n@Component({\n    selector: 'vcd-form-checkbox',\n    templateUrl: './form-checkbox.component.html',\n})\nexport class FormCheckboxComponent extends BaseFormControl {\n    /**\n     * The label that appears next to the control\n     */\n    @Input() text: string;\n\n    /**\n     * Styling for the checkbox.\n     */\n    @Input() styling: CheckBoxStyling = CheckBoxStyling.CHECKBOX;\n\n    /**\n     * Put the label text on the right.\n     */\n    @Input() rightLabel = false;\n\n    /**\n     * A shape for the icon that appears next to the checkbox.\n     */\n    @Input() iconShape: string;\n\n    get isCheckbox(): boolean {\n        return this.styling === CheckBoxStyling.CHECKBOX;\n    }\n\n    constructor(@Self() @Optional() controlDirective: NgControl) {\n        super(controlDirective);\n    }\n}\n\n    \n\n    \n        \n    \n        {{ label }}\n        \n            \n                \n                \n                    \n                    {{ text }}\n                \n            \n            \n                \n                    {{ key | translate: formControl.value }}\n                \n            \n            \n                {{ description }}\n            \n        \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}                                                                                            {{ text }}                                                                            {{ key | translate: formControl.value }}                                                        {{ description }}                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormInputComponent.html":{"url":"components/FormInputComponent.html","title":"component - FormInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-input/form-input.component.ts\n\n\n    \n        Description\n    \n    \n        A FormControl that contains an input that supports string, number and datetime-local input types\nExample:\n      \n      \n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-input\n            \n\n            \n                styleUrls\n                ../form.scss,./form-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                textInput\n                            \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                inputChanged\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                writeValue\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hint\n                            \n                            \n                                hintPosition\n                            \n                            \n                                max\n                            \n                            \n                                maxlength\n                            \n                            \n                                min\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                enterClicked\n                            \n                            \n                                escapeClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDirective: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-input/form-input.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDirective\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:77\n                            \n                        \n                \n                    \n                        Hint to display in the content of a signpost\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'top-left'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:72\n                            \n                        \n                \n                    \n                        The direction for displaying the hint\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Number.MAX_SAFE_INTEGER\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:52\n                            \n                        \n                \n                    \n                        Maximum value allowed.\n(This is an input specified in the component attribute.)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:67\n                            \n                        \n                \n                    \n                        Maximum number of characters (in UTF-16 code units) that the user can enter.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Number.MIN_SAFE_INTEGER\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:46\n                            \n                        \n                \n                    \n                        Minimum value allowed.\n(This is an input specified in the component attribute.)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:40\n                            \n                        \n                \n                    \n                        Input 'placeholder' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:62\n                            \n                        \n                \n                    \n                        Input 'size' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:57\n                            \n                        \n                \n                    \n                        Input 'type' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        enterClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:88\n                            \n                        \n                \n                    \n                        Emitted when enter key is released for callers to handle the event like... closing a filter widget\nDatagridNumericFilterComponent.close\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        escapeClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:93\n                            \n                        \n                \n                    \n                        Emitted when escape key is released for callers to handle the event\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputChanged\n                        \n                        \n                    \n                \n            \n            \n                \ninputChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:104\n                \n            \n\n\n            \n                \n                    Input fields in the vcd-ui app does not support IME input on chrome browser. So in order to fix it, the value\nbeing assigned to the form control has to be given to the input HTML element's value using the 'viewChild' query\nselector inside writeValue function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('textInput', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:82\n                            \n                        \n\n                \n                    \n                        The input field element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BaseFormControl } from '../base-form-control';\n\n/**\n * A {@link FormControl} that contains an input that supports string, number and datetime-local input types\n *\n * Example:\n *      \n *      \n */\n@Component({\n    selector: 'vcd-form-input',\n    templateUrl: './form-input.component.html',\n    styleUrls: ['../form.scss', './form-input.component.scss'],\n})\nexport class FormInputComponent extends BaseFormControl implements AfterViewInit {\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Minimum value allowed.\n     * (This is an input specified in the component attribute.)\n     */\n    @Input() min: number = Number.MIN_SAFE_INTEGER;\n\n    /**\n     * Maximum value allowed.\n     * (This is an input specified in the component attribute.)\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'type' field.\n     */\n    @Input() type = 'text';\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = null;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The input field element\n     */\n    @ViewChild('textInput', { static: true }) textInput: ElementRef;\n\n    /**\n     * Emitted when enter key is released for callers to handle the event like... closing a filter widget\n     * {@link DatagridNumericFilterComponent.close}\n     */\n    @Output() enterClicked = new EventEmitter(false);\n\n    /**\n     * Emitted when escape key is released for callers to handle the event\n     */\n    @Output() escapeClicked = new EventEmitter(false);\n\n    constructor(@Self() @Optional() controlDirective: NgControl) {\n        super(controlDirective);\n    }\n\n    /**\n     * Input fields in the vcd-ui app does not support IME input on chrome browser. So in order to fix it, the value\n     * being assigned to the form control has to be given to the input HTML element's value using the 'viewChild' query\n     * selector inside writeValue function.\n     */\n    writeValue(value: any): void {\n        // The textInput view child element is undefined the first time. So, the initial value is stored in a variable\n        // to assign it later to the input field value.\n        this.initialValue = value;\n        if (!this.textInput) {\n            return;\n        }\n\n        if (typeof value === 'number') {\n            value = value.toString(10);\n        }\n        if (this.type === 'datetime-local') {\n            value = getFormattedDateValue(value);\n        }\n        this.textInput.nativeElement.value = value;\n    }\n\n    ngAfterViewInit(): void {\n        // The textInput view child element is only defined after this life cycle hook. So, the writeValue is called\n        // here.\n        this.writeValue(this.initialValue);\n    }\n\n    inputChanged(): void {\n        const value = this.textInput.nativeElement.value;\n        this.initialValue = value;\n\n        if (this.type === 'number') {\n            if (!value) {\n                this.onChange(value);\n            } else {\n                this.onChange(parseFloat(value));\n            }\n            return;\n        }\n        if (this.type === 'datetime-local' && value !== '') {\n            const isoDateValue = new Date(getFormattedDateValue(value)).toISOString();\n            this.onChange(isoDateValue);\n            return;\n        }\n        this.onChange(value);\n    }\n}\n\n/**\n * To format a date string into a value which can be given to the input html element\n */\nexport function getFormattedDateValue(value: string): string {\n    const date = new Date(value);\n    return (\n        date.getFullYear() +\n        '-' +\n        pad(date.getMonth() + 1) +\n        '-' +\n        pad(date.getDate()) +\n        'T' +\n        pad(date.getHours()) +\n        ':' +\n        pad(date.getMinutes())\n    );\n}\n\nexport function pad(num: number): string | number {\n    if (num \n    \n\n    \n        \n    \n        {{\n        label\n        }}\n        \n            \n                \n                \n            \n            \n                \n                    {{ key | translate: formControl.value:min.toString():max }}\n                \n            \n            \n                {{ description }}\n            \n        \n        \n        \n            \n                {{ hint }}\n            \n        \n    \n\n\n    \n\n\n    \n\n    \n                \n                    ../form.scss\n                \n                .required-field:after {\n    content: '*';\n    color: red;\n    padding-left: 5px;\n}\n\n                \n                    ./form-input.component.scss\n                \n                .form-group >>> aside {\n    margin-top: 6px;\n    margin-bottom: 6px;\n    flex-grow: 1;\n}\n\n.form-group.hide-label {\n    padding-left: 0;\n}\n\n.input-aside {\n    display: flex;\n    width: 100%;\n}\n\n:host-context(.modal):not(.adjust-aside-left) {\n    .form-label {\n        flex-grow: 1;\n    }\n    .form-label > input {\n        width: 100%;\n    }\n}\n\n.form-group-description {\n    margin-bottom: 15px;\n}\n\nclr-signpost p:first-child {\n    margin-top: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{        label        }}                                                                                                                {{ key | translate: formControl.value:min.toString():max }}                                                        {{ description }}                                                                {{ hint }}                            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSelectComponent.html":{"url":"components/FormSelectComponent.html","title":"component - FormSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-select/form-select.component.ts\n\n\n    \n        Description\n    \n    \n        FormControl wrapper around a select HTML element\n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-select\n            \n\n            \n                styleUrls\n                ../form.scss,./form-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedOption\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-select/form-select.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         SelectOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-select/form-select.component.ts:23\n                            \n                        \n                \n                    \n                        The displayed options for the select element\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedOption\n                    \n                \n\n                \n                    \n                        getselectedOption()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/form-select/form-select.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { BaseFormControl } from '../base-form-control';\n\n/**\n * {@link FormControl} wrapper around a select HTML element\n */\n@Component({\n    selector: 'vcd-form-select',\n    templateUrl: 'form-select.component.html',\n    styleUrls: ['../form.scss', './form-select.component.scss'],\n})\nexport class FormSelectComponent extends BaseFormControl {\n    /**\n     * The displayed options for the select element\n     */\n    @Input() options: SelectOption[] = [];\n\n    constructor(@Self() @Optional() ngControl: NgControl) {\n        super(ngControl);\n    }\n\n    get selectedOption(): SelectOption {\n        if (!this.options || this.formControl.value === null || this.formControl.value === undefined) {\n            return undefined;\n        }\n        // option.value and formControl.value can be of type number or string\n        return this.options.find((option) => option.value.toString() === this.formControl.value.toString());\n    }\n}\n\n    \n\n    \n        \n    \n        {{\n        label\n        }}\n        \n            {{ selectedOption.isTranslatable ? (selectedOption.display | translate) : selectedOption.display }}\n        \n        \n            \n                \n                    \n                        {{ option.isTranslatable ? (option.display | translate) : option.display }}\n                    \n                \n                \n            \n\n            \n\n            \n                \n                    {{ key | translate: [formControl.value] }}\n                \n            \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ../form.scss\n                \n                .required-field:after {\n    content: '*';\n    color: red;\n    padding-left: 5px;\n}\n\n                \n                    ./form-select.component.scss\n                \n                .form-group.hide-label {\n    padding-left: 0;\n}\n\n.form-group.hide-label label:first-child {\n    visibility: hidden;\n}\n\n.error-content {\n    white-space: normal;\n}\n\n:host(.site-selector-single-site) {\n    display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{        label        }}                    {{ selectedOption.isTranslatable ? (selectedOption.display | translate) : selectedOption.display }}                                                                                        {{ option.isTranslatable ? (option.display | translate) : option.display }}                                                                                                                            {{ key | translate: [formControl.value] }}                                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormValidators.html":{"url":"classes/FormValidators.html","title":"class - FormValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/validators.ts\n        \n\n            \n                Description\n            \n            \n                validators used for form control validations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createNullSafeValidator\n                            \n                            \n                                    Static\n                                isNumberInRange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createNullSafeValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNullSafeValidator(validator: (args: any[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/validators.ts:17\n                \n            \n\n\n            \n                \n                    A wrapper that validates that a control's value is defined before running the validator function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    validator\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The validator function to run if the control's value is defined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isNumberInRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumberInRange(min: number, max: number, translationKey: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/validators.ts:32\n                \n            \n\n\n            \n                \n                    Create a validator that requires a number to be within a range.\nAlso checks that the value is numeric\nAccepts a translation key to display proper error messaging\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    translationKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'vcd.cc.warning.numRange'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, ValidatorFn, Validators } from '@angular/forms';\n\n/**\n * validators used for form control validations.\n */\nexport class FormValidators {\n    /**\n     * A wrapper that validates that a control's value is defined before running the validator function.\n     *\n     * @param validator The validator function to run if the control's value is defined.\n     */\n    static createNullSafeValidator(validator: (...args: any[]) => unknown): ValidatorFn {\n        const res = (control: FormControl) => {\n            if (Validators.required(control)) {\n                return null;\n            }\n            return validator(control);\n        };\n        return res;\n    }\n\n    /**\n     * Create a validator that requires a number to be within a range.\n     * Also checks that the value is numeric\n     * Accepts a translation key to display proper error messaging\n     */\n    static isNumberInRange(min: number, max: number, translationKey = 'vcd.cc.warning.numRange'): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const isNumber = !isNaN(parseFloat(control.value)) && isFinite(control.value);\n            return control.value >= min && control.value \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlyInputComponent.html":{"url":"components/FormlyInputComponent.html","title":"component - FormlyInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlyInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/input/formly-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-input\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onEnterClicked\n                            \n                            \n                                onEscapeClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                                \n                                    type\n                                \n                                \n                                    hintPosition\n                                \n                                \n                                    errorLabels\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEnterClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonEnterClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:67\n                \n            \n\n\n            \n                \n                    FormInputComponent.enterClicked\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEscapeClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonEscapeClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:75\n                \n            \n\n\n            \n                \n                    FormInputComponent.escapeClicked\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:37\n                                \n                            \n                    \n                        \n                                FormInputComponent.min\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:43\n                                \n                            \n                    \n                        \n                                FormInputComponent.max\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:49\n                                \n                            \n                    \n                        \n                                FormInputComponent.type\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n\n                \n                    \n                        gethintPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:55\n                                \n                            \n                    \n                        \n                                FormInputComponent.hintPosition\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:61\n                                \n                            \n                    \n                        \n                                FormInputComponent.errorLabels\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n    selector: 'vcd-formly-input',\n    template: `\n        \n        \n    `,\n})\nexport class FormlyInputComponent extends FieldType {\n    /**\n     * {@link FormInputComponent.min}\n     */\n    get min(): number {\n        return this.to.min || Number.MIN_SAFE_INTEGER;\n    }\n    /**\n     * {@link FormInputComponent.max}\n     */\n    get max(): number {\n        return this.to.max || Number.MAX_SAFE_INTEGER;\n    }\n    /**\n     * {@link FormInputComponent.type}\n     */\n    get type(): string {\n        return this.to.type || 'text';\n    }\n    /**\n     * {@link FormInputComponent.hintPosition}\n     */\n    get hintPosition(): string {\n        return this.to.hintPosition || 'top-left';\n    }\n    /**\n     * {@link FormInputComponent.errorLabels}\n     */\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n    /**\n     * {@link FormInputComponent.enterClicked}\n     */\n    onEnterClicked(): any {\n        if (this.to.onEnterClicked) {\n            return this.to.onEnterClicked(this.field);\n        }\n    }\n    /**\n     * {@link FormInputComponent.escapeClicked}\n     */\n    onEscapeClicked(): any {\n        if (this.to.onEscapeClicked) {\n            return this.to.onEscapeClicked(this.field);\n        }\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlyInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlyNumberWithUnitInputComponent.html":{"url":"components/FormlyNumberWithUnitInputComponent.html","title":"component - FormlyNumberWithUnitInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlyNumberWithUnitInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-number-with-unit-input\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorLabels\n                                \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                                \n                                    hintPosition\n                                \n                                \n                                    showUnlimitedOption\n                                \n                                \n                                    unlimitedValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:39\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.errorLabels\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:45\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.min\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:51\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.max\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n\n                \n                    \n                        gethintPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:57\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.hintPosition\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showUnlimitedOption\n                    \n                \n\n                \n                    \n                        getshowUnlimitedOption()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:63\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.showUnlimitedOption\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unlimitedValue\n                    \n                \n\n                \n                    \n                        getunlimitedValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:72\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.unlimitedValue\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { UNLIMITED } from '../../../../form/number-with-unit-input/number-with-unit-form-input.component';\n\n@Component({\n    selector: 'vcd-formly-number-with-unit-input',\n    template: `\n        \n        \n    `,\n})\nexport class FormlyNumberWithUnitInputComponent extends FieldType {\n    /**\n     * {@link NumberWithUnitFormInputComponent.errorLabels}\n     */\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.min}\n     */\n    get min(): number {\n        return this.to.min || UNLIMITED;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.max}\n     */\n    get max(): number {\n        return this.to.max || Number.MAX_SAFE_INTEGER;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.hintPosition}\n     */\n    get hintPosition(): string {\n        return this.to.hintPosition || 'top-left';\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.showUnlimitedOption}\n     */\n    get showUnlimitedOption(): boolean {\n        if (typeof this.to.showUnlimitedOption !== 'boolean') {\n            return true;\n        }\n        return this.to.showUnlimitedOption;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.unlimitedValue}\n     */\n    get unlimitedValue(): number {\n        return this.to.unlimitedValue || UNLIMITED;\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlyNumberWithUnitInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlySelectComponent.html":{"url":"components/FormlySelectComponent.html","title":"component - FormlySelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlySelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/select/formly-select.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-select\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorLabels\n                                \n                                \n                                    selectOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/select/formly-select.component.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectOptions\n                    \n                \n\n                \n                    \n                        getselectOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/select/formly-select.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { Observable, of } from 'rxjs';\nimport { SelectOption } from '../../../../common/interfaces/select-option';\n\n@Component({\n    selector: 'vcd-formly-select',\n    template: `\n        \n        \n    `,\n})\nexport class FormlySelectComponent extends FieldType {\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n\n    get selectOptions(): Observable {\n        if (!(this.to.options instanceof Observable)) {\n            return of(this.to.options);\n        }\n        return this.to.options;\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlySelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FunctionRenderer.html":{"url":"interfaces/FunctionRenderer.html","title":"interface - FunctionRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FunctionRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Column renderer as a function. Defined in calling component when the cell value is calculated from different\nproperties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [record: T]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :         string\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FunctionRendererPipe.html":{"url":"pipes/FunctionRendererPipe.html","title":"pipe - FunctionRendererPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FunctionRendererPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/datagrid/pipes/function-renderer.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Used for executing the functions of column cells which use functions to calculate their values from different\nproperties of an object\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        functionRenderer\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(item: any, renderer: (val: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/pipes/function-renderer.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    renderer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Used for executing the functions of column cells which use functions to calculate their values from different\n * properties of an object\n */\n@Pipe({\n    name: 'functionRenderer',\n    pure: true,\n})\nexport class FunctionRendererPipe implements PipeTransform {\n    public transform(item: any, renderer: (val: any) => any): string {\n        if (!item || !renderer) {\n            return null;\n        }\n        return renderer(item);\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridColumn.html":{"url":"interfaces/GridColumn.html","title":"interface - GridColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration object defined in the caller. This contains properties for the column header (text, filtering,\nsorting, toggling etc.,) and content for row cells.\nExample:\nconst gridColumn: GridColumn = {\n   displayName: \"Column Heading\",\n   renderer: \"someRecord.property\",\n   hideable: \"NEVER\"\n}\nThe above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\nThe value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cliptextConfig\n                                \n                                \n                                            Optional\n                                        clrDgColumnClassName\n                                \n                                \n                                        displayName\n                                \n                                \n                                            Optional\n                                        emptyColumnPlaceholder\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hideable\n                                \n                                \n                                            Optional\n                                        queryFieldName\n                                \n                                \n                                        renderer\n                                \n                                \n                                            Optional\n                                        sortable\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cliptextConfig\n                                    \n                                \n                                \n                                    \n                                        cliptextConfig:         CliptextConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CliptextConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The configuration for the cliptext in the datagrid.\nDefaults to size: 'lg', mouseoutDelay: undefined.\nIf null, will disable cliptext\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clrDgColumnClassName\n                                    \n                                \n                                \n                                    \n                                        clrDgColumnClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class of the column header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header text for the column\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyColumnPlaceholder\n                                    \n                                \n                                \n                                    \n                                        emptyColumnPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When there is no data, show this message.\nTry to avoid showing this before initial load.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     FilterRendererSpec>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterRendererSpec>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO: Should this be made to work with top level search on grids across all columns?\n  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideable\n                                    \n                                \n                                \n                                    \n                                        hideable:         GridColumnHideable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GridColumnHideable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryFieldName\n                                    \n                                \n                                \n                                    \n                                        queryFieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for sorting/filtering. Not needed for columns not filterable/sortable\nTODO: do we need to support array type for querying across multiple columns?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderer\n                                    \n                                \n                                \n                                    \n                                        renderer:     string | FunctionRenderer | ColumnRendererSpec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | FunctionRenderer | ColumnRendererSpec\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the renderer passed in is a\n\nstring: Used as default renderer. Can be a dot separated string to identify a nested property of the item\nFunctionRenderer: When you want to create a calculated column, but don't need custom HTML\nTemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\nColumnRendererSpec: When HTML is needed and when the HTML is provided as a component\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to show the column as sortable. Defaults to true\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridDataFetchResult.html":{"url":"interfaces/GridDataFetchResult.html","title":"interface - GridDataFetchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridDataFetchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                Representation of data required for rendering contents of cells and pagination information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                            Optional\n                                        totalItems\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     R[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items to be listed in the grid\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridState.html":{"url":"interfaces/GridState.html","title":"interface - GridState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\npart of the event DatagridComponent.gridRefresh. The handler then used this object to construct a query.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filters\n                                \n                                \n                                            Optional\n                                        pagination\n                                \n                                \n                                            Optional\n                                        sortColumn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FIQL formatted list of active filters\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                    \n                                \n                                \n                                    \n                                        pagination:         PagionationInformation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PagionationInformation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The pagination information that the datagrid should show.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortColumn\n                                    \n                                \n                                \n                                    \n                                        sortColumn:         SortedColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortedColumn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The currently sorted column in the datagrid.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasFinder.html":{"url":"interfaces/HasFinder.html","title":"interface - HasFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HasFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Can be used in tests that use this to share a finder with before/AfterEach instead of leaky closures\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        finder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        finder\n                                    \n                                \n                                \n                                    \n                                        finder:         WidgetFinder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WidgetFinder\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * Finds instances that implement {@link FindableWidget}\n * H is the host component's type\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubscriptionTracker.html":{"url":"interfaces/ISubscriptionTracker.html","title":"interface - ISubscriptionTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISubscriptionTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/subscription/subscription-tracker.ts\n        \n\n            \n                Description\n            \n            \n                An interface that knows how to subscribe and unsubscribe from observables.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscribe\n                                \n                                \n                                    unsubscribe\n                                \n                                \n                                    unsubscribeAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observable: Observable, observerOrNext?: PartialObserver | , error?: (error?: any) => void, complete?: () => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\nWill call the {@param complete} when complete, and {@param error} when errors happen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observerOrNext\n                                    \n                                            PartialObserver | \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    complete\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:28\n                \n            \n\n\n            \n                \n                    Unsubscribes from the given {@param subscription}.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:33\n                \n            \n\n\n            \n                \n                    Unsubscribes from all subscriptions on this Subscribable.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { OnDestroy } from '@angular/core';\nimport { Observable, PartialObserver, Subscription } from 'rxjs';\nimport { toSubscriber } from 'rxjs/internal-compatibility';\n\n/**\n * An interface that knows how to subscribe and unsubscribe from observables.\n */\nexport interface ISubscriptionTracker {\n    /**\n     * Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\n     * Will call the {@param complete} when complete, and {@param error} when errors happen.\n     */\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription;\n\n    /**\n     * Unsubscribes from the given {@param subscription}.\n     */\n    unsubscribe(subscription: Subscription): Subscription;\n\n    /**\n     * Unsubscribes from all subscriptions on this {@link Subscribable}.\n     */\n    unsubscribeAll(): void;\n}\n\n/**\n * Components can use this to have subscriptions automatically removed when the component is destroyed\n */\nexport class SubscriptionTracker implements ISubscriptionTracker {\n    private subscriptions: Subscription[] = [];\n\n    /**\n     * Constructs this tracker to call {@link unsubscribeAll} when {@link OnDestroy.ngOnDestroy} is called.\n     */\n    constructor(destroyable: OnDestroy) {\n        const originalOnDestroy = destroyable.ngOnDestroy;\n        destroyable.ngOnDestroy = () => {\n            this.unsubscribeAll();\n            originalOnDestroy.call(destroyable);\n        };\n    }\n\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription {\n        const subscription = observable.subscribe(toSubscriber(observerOrNext, error, complete));\n        this.subscriptions.push(subscription);\n        return subscription;\n    }\n\n    unsubscribe(subscription: Subscription): Subscription {\n        subscription.unsubscribe();\n        const indexOfSubscription = this.subscriptions.indexOf(subscription);\n        if (indexOfSubscription === -1) {\n            throw new Error('Unsubscribing to untracked subscription');\n        }\n        this.subscriptions.splice(indexOfSubscription, 1);\n        return subscription;\n    }\n\n    unsubscribeAll(): void {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdGenerator.html":{"url":"classes/IdGenerator.html","title":"class - IdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/id-generator/id-generator.ts\n        \n\n            \n                Description\n            \n            \n                Generates unique IDs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                idCounter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/id-generator/id-generator.ts:17\n                            \n                        \n\n                \n                    \n                            The string to be prefixed for IdGenerator returned\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            idCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/id-generator/id-generator.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generate\n                        \n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/id-generator/id-generator.ts:15\n                \n            \n\n\n            \n                \n                    Getter that returns the a unique ID\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class IdGenerator {\n    private static idCounter = 0;\n\n    /**\n     * Getter that returns the a unique ID\n     */\n    generate(): string {\n        return `${this.prefix}-${IdGenerator.idCounter++}`;\n    }\n\n    /**\n     * The string to be prefixed for {@link IdGenerator#id} returned\n     */\n    constructor(private prefix: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingIndicatorComponent.html":{"url":"components/LoadingIndicatorComponent.html","title":"component - LoadingIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/loading/loading-indicator.component.ts\n\n\n    \n        Description\n    \n    \n        Loading indicator for blocking modal dialogs while loading.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-loading-indicator\n            \n\n            \n                styleUrls\n                loading-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                loading-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultSpinnerSize\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingTextKey\n                            \n                            \n                                showSpinner\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:43\n                            \n                        \n                \n                    \n                        Show/hide the loading indicator.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loadingTextKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:55\n                            \n                        \n                \n                    \n                        Text to show next to the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showSpinner\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:49\n                            \n                        \n                \n                    \n                        Show/hide the spinner if only an overlay is required.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         SpinnerSize\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:62\n                            \n                        \n                \n                    \n                        Spinner size setter.\nSets default size if provided value is not from specified sized.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpinnerSize\n\n                        \n                    \n                    \n                        \n                            Default value : this.defaultSpinnerSize\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:38\n                            \n                        \n\n                \n                    \n                        Spinner size.\nSpinners can be displayed in three sizes:\n\nsm(Small): This is the required sizing for inline spinners (see above). It measures 18x18 pixels.\nmd(Medium): Medium spinners measure 36x36 pixels. Default.\nlg(Large): This is the default size for page spinners (see above).\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            defaultSpinnerSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpinnerSize\n\n                        \n                    \n                    \n                        \n                            Default value : SIZES.md\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:27\n                            \n                        \n\n                \n                    \n                        Default spinner size set to \"md\" - medium used within the modal dialogs\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:73\n                                \n                            \n                    \n                        \n                                Gives the size of this loading indicator.\n\n\n                                \n                                    Returns :         SpinnerSize\n\n                                \n                        \n                    \n\n                \n                    \n                        setsize(size)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:62\n                                \n                            \n                    \n                        \n                                Spinner size setter.\nSets default size if provided value is not from specified sized.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            size\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport enum SIZES {\n    sm = 'sm',\n    md = 'md',\n    lg = 'lg',\n}\nexport type SpinnerSize = keyof typeof SIZES;\n\n/**\n * Loading indicator for blocking modal dialogs while loading.\n */\n@Component({\n    selector: 'vcd-loading-indicator',\n    templateUrl: 'loading-indicator.component.html',\n    styleUrls: ['loading-indicator.component.scss'],\n})\nexport class LoadingIndicatorComponent {\n    /**\n     * Default spinner size set to \"md\" - medium used within the modal dialogs\n     */\n    private readonly defaultSpinnerSize: SpinnerSize = SIZES.md;\n    /**\n     * Spinner size.\n     *\n     * Spinners can be displayed in three sizes:\n     *\n     *  - sm(Small): This is the required sizing for inline spinners (see above). It measures 18x18 pixels.\n     *  - md(Medium): Medium spinners measure 36x36 pixels. Default.\n     *  - lg(Large): This is the default size for page spinners (see above).\n     *\n     */\n    private _size: SpinnerSize = this.defaultSpinnerSize;\n    /**\n     * Show/hide the loading indicator.\n     */\n    @Input()\n    public isLoading: boolean;\n\n    /**\n     * Show/hide the spinner if only an overlay is required.\n     */\n    @Input()\n    public showSpinner = true;\n\n    /**\n     * Text to show next to the spinner.\n     */\n    @Input()\n    public loadingTextKey: string = null;\n\n    /**\n     * Spinner size setter.\n     * Sets default size if provided value is not from specified sized.\n     */\n    @Input()\n    set size(size: SpinnerSize) {\n        if (!size || Object.keys(SIZES).indexOf(size) === -1) {\n            this._size = this.defaultSpinnerSize;\n        } else {\n            this._size = size;\n        }\n    }\n\n    /**\n     * Gives the size of this loading indicator.\n     */\n    get size(): SpinnerSize {\n        return this._size;\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n             \n            {{ loadingTextKey | translate }}\n        \n    \n\n\n\n    \n\n    \n                \n                    loading-indicator.component.scss\n                \n                $overlay-background-color-default: rgba(250, 250, 250, 0.5);\n$overlay-background-color-modal: rgba(255, 255, 255, 0.5);\n\n@mixin full-height {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n:host {\n    display: block;\n    position: relative;\n}\n\n:host-context(.modal-body) .overlay {\n    background-color: $overlay-background-color-modal;\n}\n\n.overlay {\n    background-color: $overlay-background-color-default;\n    @include full-height();\n    z-index: 10;\n}\n\n.indicator-container {\n    z-index: 600;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    @include full-height();\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         {{ loadingTextKey | translate }}            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocatorDriver.html":{"url":"interfaces/LocatorDriver.html","title":"interface - LocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find elements of a given type T in the DOM.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    findWidget\n                                \n                                \n                                    get\n                                \n                                \n                                    getByText\n                                \n                                \n                                    parents\n                                \n                                \n                                    unwrap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:79\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Returns an instance of the given widget within this widget object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:64\n                \n            \n\n\n            \n                \n                    Finds all child elements that match the given cssSelector.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:69\n                \n            \n\n\n            \n                \n                    Finds all child elements that match the given cssSelector and have text that contains the given value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:74\n                \n            \n\n\n            \n                \n                    Finds the closest parent that matches the given cssSelector.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:87\n                \n            \n\n\n            \n                \n                    Unwraps the value from this query and turns it into the resulting object type.\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForChild? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForParent? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        closeMenu\n                                \n                                \n                                            Optional\n                                        down\n                                \n                                \n                                        element\n                                \n                                \n                                            Optional\n                                        left\n                                \n                                \n                                            Optional\n                                        right\n                                \n                                \n                                            Optional\n                                        up\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeMenu\n                                    \n                                \n                                \n                                    \n                                        closeMenu:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Call back to close the menu for which this menu item can be a trigger. called from DropdownFocusHandlerService\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        down\n                                    \n                                \n                                \n                                    \n                                        down:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML element of this dropdown menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        up\n                                    \n                                \n                                \n                                    \n                                        up:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Neighboring menu items in all the 4 directions\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Directive, Host, OnDestroy, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { DropdownFocusHandlerService } from './dropdown-focus-handler.service';\nimport { DropdownComponent } from './dropdown.component';\n\n/**\n * To filter out the non-activatable separator item type when creating linked menu list {@link #linkMenuItems}. Because, we don't\n * want the focus to go to separator item type when navigating using the arrow keys\n */\nenum ActivatableMenuItemType {\n    /**\n     * Menu item that results in executing of an action when clicked\n     */\n    BUTTON = 'button',\n    /**\n     * Activating this would open a nested menu\n     */\n    NESTED_VCD_DROPDOWN = 'vcd-dropdown',\n}\n\nconst NESTED_DROPDOWN_TRIGGER = 'clr-dropdown > button';\n\n/**\n * Arrow keys directions\n */\nexport enum Direction {\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n\n/**\n * Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n */\nexport interface MenuItem {\n    /**\n     * The HTML element of this dropdown menu item\n     */\n    element: HTMLElement;\n    /**\n     * Neighboring menu items in all the 4 directions\n     */\n    up?: MenuItem;\n    down?: MenuItem;\n    left?: MenuItem;\n    right?: MenuItem;\n    /**\n     * Call back to close the menu for which this menu item can be a trigger. called from {@link DropdownFocusHandlerService}\n     */\n    closeMenu?: () => void;\n}\n\n/**\n * Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\n * neighbors in the 4 directions. It then uses the {@link DropdownFocusHandlerService} to move the DOM focus between the menu items.\n */\n@Directive({\n    selector: 'vcd-dropdown[vcdDropdownFocusHandler]',\n})\nexport class DropdownFocusHandlerDirective implements AfterViewInit, OnDestroy {\n    constructor(\n        @Optional() @SkipSelf() private parentVcdDropdown: DropdownComponent,\n        @Optional() @SkipSelf() private parentFocusHandler: DropdownFocusHandlerDirective,\n        @Host() private hostVcdDropdown: DropdownComponent,\n        private focusHandlerService: DropdownFocusHandlerService,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * List of focusable menu items with their neighbors in 4 directions.\n     */\n    menuItems: MenuItem[];\n    /**\n     * The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n     */\n    private menuTrigger: MenuItem;\n    private dropdownTriggerEl: HTMLElement;\n    private clrDropdownMenuEl: HTMLElement;\n    private isRootDropdown = !this.parentVcdDropdown;\n    private timeoutId: number;\n    private subscriptionTracker = new SubscriptionTracker(this);\n    private unlistenRightArrowKeyPress: (...argArray: any[]) => any;\n\n    /**\n     * After a dropdown menu is opened, it creates {@link MenuItem} for each of the menu items along with their trigger menu item and links\n     * them. It also then moves the focus to first item in the opened menu list.\n     */\n    ngAfterViewInit(): void {\n        this.dropdownTriggerEl = this.hostVcdDropdown._dropdownTriggerEl;\n        this.listenToRightArrowKeyPressOnNestedTrigger();\n\n        this.subscriptionTracker.subscribe(this.hostVcdDropdown.dropdownMenuUpdated, (dropdown) => {\n            if (!dropdown) {\n                this.reset();\n                return;\n            }\n            this.clrDropdownMenuEl = dropdown.menu;\n            // We have to wait till the dropdown is opened for getting the menus trigger because, in case of a nested menu, the trigger is\n            // obtained from parent menus menuItems and they are not initialized even if we wait till the ngAfterViewInit hook\n            this.menuTrigger = this.isRootDropdown ? this.rootMenuTrigger : this.nestedMenuTrigger;\n            this.registerRootMenuContainer();\n            this.linkMenuItems();\n            this.moveFocusToFirstItem();\n        });\n    }\n\n    /**\n     * Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\n     * the event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\n     * arrow on a nested menu is opening other sibling menus as well\n     */\n    private listenToRightArrowKeyPressOnNestedTrigger(): void {\n        if (this.isRootDropdown) {\n            return;\n        }\n        this.unlistenRightArrowKeyPress = this.renderer.listen(\n            this.dropdownTriggerEl,\n            'keydown.arrowright',\n            (event: Event) => event.stopPropagation()\n        );\n    }\n\n    private reset(): void {\n        if (this.isRootDropdown) {\n            this.focusHandlerService.unlistenFuncs.forEach((unlisten) => unlisten());\n        }\n        this.menuTrigger = null;\n        this.menuItems = null;\n    }\n\n    ngOnDestroy(): void {\n        if (this.unlistenRightArrowKeyPress) {\n            this.unlistenRightArrowKeyPress();\n        }\n    }\n\n    private registerRootMenuContainer(): void {\n        if (this.isRootDropdown) {\n            const rootMenuContainer = this.clrDropdownMenuEl;\n            this.focusHandlerService.listenToArrowKeys(rootMenuContainer);\n        }\n    }\n\n    private moveFocusToFirstItem(): void {\n        this.focusHandlerService.moveFocusTo(this.menuTrigger);\n        // After the menu is opened, the ClrDropdownMenu wouldn't be attached to the DOM until the next change detection cycle.\n        // So setTimeout is the only way to wait for the ClrDropdownMenu to be ready to move focus to first item.\n        this.timeoutId = window.setTimeout(() => {\n            if (this.parentVcdDropdown) {\n                this.focusHandlerService.moveFocus(Direction.RIGHT);\n            } else {\n                this.focusHandlerService.moveFocus(Direction.DOWN);\n            }\n            window.clearTimeout(this.timeoutId);\n        });\n    }\n\n    private getDropdownItemElement(item: Element): HTMLElement {\n        // We only need the underlying button that opens the nested dropdown as that is the activatable/focusable item\n        return (item.matches(ActivatableMenuItemType.BUTTON)\n            ? item\n            : item.querySelector(NESTED_DROPDOWN_TRIGGER)) as HTMLElement;\n    }\n\n    private linkMenuItems(): void {\n        const menuChildren: Element[] = Array.from(this.clrDropdownMenuEl.children);\n        this.menuItems = menuChildren\n            .filter(\n                (child) =>\n                    child.matches(ActivatableMenuItemType.BUTTON) ||\n                    child.matches(ActivatableMenuItemType.NESTED_VCD_DROPDOWN)\n            )\n            .map((child) => ({\n                element: this.getDropdownItemElement(child),\n                left: this.menuTrigger,\n            }));\n        this.linkVertical();\n        // Lint to menu trigger\n        if (this.isRootDropdown) {\n            this.menuTrigger.down = this.menuItems[0];\n        } else {\n            // If there is a parent dropdown, We have to link these menu items to their trigger in the parent dropdown\n            this.menuTrigger.right = this.menuItems[0];\n        }\n    }\n\n    private closeVcdDropdown = () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    };\n\n    private get rootMenuTrigger(): MenuItem {\n        return {\n            element: this.dropdownTriggerEl,\n            closeMenu: this.closeVcdDropdown,\n        };\n    }\n\n    private get nestedMenuTrigger(): MenuItem {\n        const menuTrigger = this.parentFocusHandler.menuItems.find((item) => {\n            return Object.is(item.element.innerText, this.dropdownTriggerEl.innerText);\n        });\n        menuTrigger.closeMenu = this.closeVcdDropdown;\n        return menuTrigger;\n    }\n\n    private linkVertical(): void {\n        this.menuItems.forEach((menuItem: MenuItem, index: number) => {\n            if (index > 0) {\n                menuItem.up = this.menuItems[index - 1];\n            }\n            if (index  1) {\n            this.menuItems[0].up = this.menuItems[this.menuItems.length - 1];\n            this.menuItems[this.menuItems.length - 1].down = this.menuItems[0];\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockRecord.html":{"url":"interfaces/MockRecord.html","title":"interface - MockRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MockRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/mock-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        city\n                                \n                                \n                                        details\n                                \n                                \n                                        name\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MockRecord {\n    name: string;\n    city: string;\n    state: string;\n    details: {\n        gender: string;\n    };\n    age: number;\n}\n\nexport const mockData: MockRecord[] = [\n    {\n        name: 'Person 1',\n        city: 'Palo Alto',\n        state: 'CA',\n        details: {\n            gender: 'Male',\n        },\n        age: 30,\n    },\n    {\n        name: 'Person 2',\n        city: 'Boston',\n        state: 'MA',\n        details: {\n            gender: 'Female',\n        },\n        age: 60,\n    },\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiSelectOption.html":{"url":"interfaces/MultiSelectOption.html","title":"interface - MultiSelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiSelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Same as the SelectOption but value is always a string\n\n            \n\n            \n                Extends\n            \n            \n                        SelectOption\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map(option => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach(option => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach(frmCtrl => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter(formControl => this.formGroup.get(formControl).value)\n            .map(selectedOption => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter(frmCtrl => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiSelectOptionInternal.html":{"url":"interfaces/MultiSelectOptionInternal.html","title":"interface - MultiSelectOptionInternal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiSelectOptionInternal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Used internally for DatagridMultiSelectFilterComponent.options to add unique IDs to filter options. The IDs are used for\nassociating checkbox options with their labels in the HTML\n\n            \n\n            \n                Extends\n            \n            \n                        MultiSelectOption\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for each checkbox option instantiated in the HTML\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map(option => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach(option => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach(frmCtrl => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter(formControl => this.formGroup.get(formControl).value)\n            .map(selectedOption => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter(frmCtrl => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NestedPropertyPipe.html":{"url":"pipes/NestedPropertyPipe.html","title":"pipe - NestedPropertyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NestedPropertyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/pipes/nested-property.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Used for extracting the value of nested property of an object.\nExample:\nconst obj = {\n     a: {\n         b: {\n             c: 'c'\n         }\n     }\n}\nInvoking {{ obj | nestedProperty: 'a.b.c' }} in a template produces c\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nestedProperty\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(item: any, property: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/pipes/nested-property.pipe.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DatePipe, DecimalPipe } from '@angular/common';\nimport { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\nconst OBJECT_PROPERTY_SEPARATOR = '.';\nconst DATE_OBJECT_CLASS = '[object Date]';\n\n/**\n * Used for extracting the value of nested property of an object.\n *\n * Example:\n * const obj = {\n *     a: {\n *         b: {\n *             c: 'c'\n *         }\n *     }\n * }\n *\n * Invoking `{{ obj | nestedProperty: 'a.b.c' }}` in a template produces c\n */\n@Pipe({\n    name: 'nestedProperty',\n    pure: true,\n})\nexport class NestedPropertyPipe implements PipeTransform {\n    constructor(@Inject(LOCALE_ID) private localeId: string) {}\n    public transform(item: any, property: string): string {\n        if (!item || !property) {\n            return null;\n        }\n        const splitProperty = property.split(OBJECT_PROPERTY_SEPARATOR);\n        let returnValue;\n        if (splitProperty.length > 1) {\n            let value = item;\n            for (const nestedProp of splitProperty) {\n                if (isNullOrUndefined(value) || isNullOrUndefined(value[nestedProp])) {\n                    return null;\n                }\n                value = value[nestedProp];\n            }\n            returnValue = value;\n        } else {\n            if (isNullOrUndefined(item[property])) {\n                return null;\n            }\n            returnValue = item[property];\n        }\n\n        if (typeof returnValue === 'number') {\n            return new DecimalPipe(this.localeId).transform(returnValue);\n        }\n        return returnValue instanceof Date ? new DatePipe(this.localeId).transform(returnValue) : returnValue;\n    }\n}\n\n/**\n * Utility method for covering the 'null' and 'undefined' checks as 'value == null' is equivalent to 'value === null || value === undefined'\n */\nfunction isNullOrUndefined(value: unknown): boolean {\n    return value == null;\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUnit.html":{"url":"classes/NoUnit.html","title":"class - NoUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                INSTANCE\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                getUnitNameTranslationKey\n                            \n                            \n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NoUnit\n\n                        \n                    \n                    \n                        \n                            Default value : new NoUnit(1, '')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:490\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:491\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:495\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:499\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AfterContentChecked,\n    Component,\n    Injectable,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Self,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, NgControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { TranslationService } from '@vcd/i18n';\nimport { SelectOption } from '../../common/interfaces';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport { FormValidators } from '../../form/validators';\nimport { Unit } from '../../utils/unit/unit';\nimport { UnitFormatter } from '../../utils/unit/unit-formatter';\nimport { BaseFormControl } from '../base-form-control';\nimport { FormInputComponent } from '../form-input/form-input.component';\nimport { FormSelectComponent } from '../form-select/form-select.component';\n\n/**\n * -1 is the number to specify a value of unlimited.\n */\nexport const UNLIMITED = -1;\n\n/**\n * A numerical form input component with unit selection and unlimited checkbox.\n *\n * If a single element array is provided for the units, then there is no unit selection\n * but rather a string notation for the unit. If the array is empty then there are no units at all.\n *\n * The display of unlimited checkbox is configurable.\n */\n@Component({\n    selector: 'vcd-number-with-unit-form-input',\n    templateUrl: './number-with-unit-form-input.component.html',\n    styleUrls: ['./number-with-unit-form-input.component.scss'],\n})\nexport class NumberWithUnitFormInputComponent\n    extends BaseFormControl\n    implements OnChanges, OnInit, OnDestroy, AfterContentChecked {\n    /**\n     * List of available units. Consider the following options for the array:\n     * # array with more than one elements\n     *    - a dropdown unit selection is shown. You must also provide {@link inputValueUnit}\n     * # single element array\n     *    - a string notation for no dropdown, {@link inputValueUnit} is derived from the element\n     * # empty array\n     *    - no units at all\n     */\n    @Input()\n    set unitOptions(unitOptions: Unit[]) {\n        this._unitOptions = unitOptions || [];\n\n        if (this._unitOptions.length === 1) {\n            this.inputValueUnit = this._unitOptions[0];\n        }\n\n        this.comboOptionUnitMap.clear();\n        this.comboOptions = [];\n        this._unitOptions.forEach((unitOption) => {\n            const comboOption: SelectOption = {\n                display: unitOption.getUnitName(),\n                value: unitOption.getMultiplier(),\n            };\n            this.comboOptionUnitMap.set(comboOption, unitOption);\n            this.comboOptions.push(comboOption);\n        });\n    }\n\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * The base unit of the component. The value of this FormControl is calculated based on this property.\n     * Required when a multi element array is provided for {@link unitOptions} and it should be one of those values.\n     */\n    @Input() inputValueUnit: Unit;\n\n    /**\n     * The initial display unit.\n     * This is useful if you want to prevent finding best match when displaying a value for the first time.\n     * For example if you provide 1024 MB and you want it to be displayed as 1024MB instead of 1GB\n     */\n    @Input() initialValueUnit: Unit;\n\n    /**\n     * Show the Unlimited checkbox. Can be set just once only at render time.\n     */\n    @Input() showUnlimitedOption = true;\n\n    /**\n     * The value when the component is set to unlimited. Default is -1.\n     */\n    @Input() unlimitedValue: number = UNLIMITED;\n\n    /**\n     * Minimum value allowed relevant to {@link inputValueUnit}. Default is 0.\n     */\n    @Input() min: number = 0;\n\n    /**\n     * Maximum value allowed relevant to {@link inputValueUnit}. Default is {@link Number.MAX_SAFE_INTEGER}.\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = 10;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    public formGroup: FormGroup;\n\n    private _unitOptions: Unit[] = [];\n\n    /**\n     * A drop down of available units\n     *\n     * This list is constructed from list of\n     * available units in {@link unitOptions}\n     */\n    comboOptions: SelectOption[] = [];\n\n    /**\n     * Map of SelectOption and Unit which is used to\n     * extract Unit for a given SelectOption.\n     */\n    private comboOptionUnitMap: Map = new Map();\n\n    // value set to the number input of the formGroup\n    private bestValue: number = null;\n\n    // unit set to the selected dropdown select of the formGroup\n    private bestUnit: Unit;\n\n    /**\n     * The minimum value calculated from the {@link min} value converted to the currently selected unit\n     */\n    unitMin: number;\n\n    /**\n     * The maximum value calculated from the {@link max} value converted to the currently selected unit\n     */\n    unitMax: number;\n\n    /**\n     * This is the last real value for the input. Used in case when user toggles the unlimited checkbox twice in a row.\n     * When unlimited is checked the value of the input is cleared, then when toggled again, the input value should be\n     * set to the last value.\n     */\n    lastRealValue: number = null;\n\n    /**\n     * Set the unit in the dropdown.\n     * @param value Should be one of the value that you pass in {@link #unitOptions} to select the Unit.\n     */\n    set selectedUnit(value: number) {\n        this.formGroup.get('comboUnitOptions').setValue(value);\n    }\n\n    @ViewChild('unitDropdown', { static: false }) unitDropdown: FormSelectComponent;\n    @ViewChild('limitedInput', { static: false }) limitedInput: FormInputComponent;\n\n    tracker = new SubscriptionTracker(this);\n\n    constructor(\n        @Self() @Optional() controlDirective: NgControl,\n        private fb: FormBuilder,\n        private translationService: TranslationService,\n        private unitFormatter: UnitFormatter\n    ) {\n        super(controlDirective);\n    }\n\n    ngOnDestroy(): void {\n        this.tracker.unsubscribeAll();\n    }\n\n    ngOnInit(): void {\n        // Calculate the best unit and value. Take into account if initial unit is provided.\n        if (this.initialValueUnit) {\n            this.bestUnit = this.initialValueUnit;\n            this.bestValue = this.initialValue\n                ? this.inputValueUnit.getOutputValue(this.initialValue, this.bestUnit)\n                : null;\n        } else {\n            this.computeBestUnitAndValue(this.initialValue as number);\n        }\n\n        // Build the form group based on the best unit and value, considering also if unlimited is enabled\n        if (!this.showUnlimitedOption) {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: this.bestUnit.getMultiplier(),\n            });\n        } else {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: [this.bestUnit.getMultiplier()],\n                unlimited: this.bestValue === this.unlimitedValue,\n            });\n            // Remember the value in case the control value is programmatically set to unlimited\n            if (this.bestValue !== this.unlimitedValue) {\n                this.lastRealValue = this.bestValue;\n            }\n            this.tracker.subscribe(this.formGroup.get('unlimited').valueChanges, (unlimitedChecked) => {\n                const input = this.formGroup.get('limited');\n                if (unlimitedChecked) {\n                    // When going to unlimited remember the value of the input before clearing it\n                    this.lastRealValue = input.value;\n                    input.setValue(null);\n                } else {\n                    input.setValue(this.lastRealValue);\n                }\n                this.updateUnlimitedDisabledState();\n            });\n        }\n        this.tracker.subscribe(this.formGroup.get('comboUnitOptions').valueChanges, () => {\n            // Mark the input as dirty since if it was not touched no error will be displayed even if there are some\n            this.recalculateUnitMinMax();\n            this.onChange(this.getValue());\n        });\n        this.tracker.subscribe(this.formGroup.get('limited').valueChanges, () => {\n            this.onChange(this.getValue());\n        });\n        this.recalculateUnitMinMax();\n        this.updateUnlimitedDisabledState();\n        // This code should be here since the formGroup has been created in the ngOnInit. If the disabled()\n        // call has been done in a constructor this component would not have been initialized\n        if (this.disabled) {\n            this.updateDisabledState(true, true);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.recalculateUnitMinMax();\n    }\n\n    ngAfterContentChecked(): void {\n        if (!this.limitedInput) {\n            return;\n        }\n        Object.defineProperty(this.limitedInput, 'showErrors', {\n            get: this.limitedInputShowErrors,\n        });\n    }\n\n    limitedInputShowErrors = () => {\n        return this.showErrors && this.errors ? {} : null;\n    };\n\n    writeValue(value: number): void {\n        if (!this.formGroup) {\n            this.initialValue = value;\n            return;\n        }\n        const input = this.formGroup.get('limited');\n        if (value === null) {\n            if (this.showUnlimitedOption) {\n                // Set Unlimited checkbox to false because the form control was reset\n                this.formGroup.get('unlimited').setValue(false);\n            }\n            input.setValue(null);\n            this.updateUnlimitedDisabledState();\n            return;\n        }\n\n        if (this.showUnlimitedOption) {\n            if (value !== this.unlimitedValue) {\n                this.computeBestUnitAndValue(value);\n                this.lastRealValue = this.bestValue;\n                input.setValue(this.bestValue);\n                this.selectedUnit = this.bestUnit.getMultiplier();\n            }\n            this.formGroup.get('unlimited').setValue(value === this.unlimitedValue);\n        } else {\n            this.computeBestUnitAndValue(value);\n            this.lastRealValue = this.bestValue;\n            input.setValue(this.bestValue);\n            this.selectedUnit = this.bestUnit.getMultiplier();\n        }\n\n        this.updateUnlimitedDisabledState();\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.updateDisabledState(isDisabled, true);\n    }\n\n    private updateUnlimitedDisabledState(): void {\n        if (!this.showUnlimitedOption || this.disabled) {\n            return;\n        }\n        this.updateDisabledState(this.formGroup?.get('unlimited')?.value, false);\n    }\n\n    updateDisabledState(isDisabled: boolean, updateUnlimitedCheckbox: boolean): void {\n        if (this.formGroup) {\n            // Do not emit when changing the disable state\n            if (isDisabled) {\n                this.formGroup.get('comboUnitOptions').disable({ emitEvent: false });\n                this.formGroup.get('limited').disable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.disable({ emitEvent: false });\n                }\n            } else {\n                this.formGroup.get('comboUnitOptions').enable({ emitEvent: false });\n                this.formGroup.get('limited').enable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.enable({ emitEvent: false });\n                }\n            }\n        }\n    }\n\n    private computeBestUnitAndValue(value: number): void {\n        if (this.unitOptions.length === 0) {\n            this.bestValue = value;\n            this.bestUnit = NoUnit.INSTANCE;\n        } else if (value === null) {\n            this.bestValue = null;\n            this.bestUnit = this.unitOptions[0];\n        } else {\n            this.bestUnit = this.inputValueUnit.findBestUnit(value, this.unitOptions);\n            this.bestValue = this.inputValueUnit.getOutputValue(value, this.bestUnit);\n        }\n    }\n\n    private getValue(): number {\n        if (this.formGroup.get('unlimited')?.value) {\n            return this.unlimitedValue;\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value && this.unitOptions.length) {\n            return this.getSelectedUnit().getOutputValue(value, this.inputValueUnit);\n        }\n        return value;\n    }\n\n    private getSelectedUnit(): Unit {\n        const value = this.formGroup.get('comboUnitOptions').value;\n        const selectedComboUnit = this.comboOptions.find(\n            // tslint:disable-next-line:triple-equals\n            (co) => co.value == value\n        );\n        const selectedUnit = this.comboOptionUnitMap.get(selectedComboUnit);\n        return selectedUnit;\n    }\n\n    private recalculateUnitMinMax(): void {\n        if (!this.formGroup) {\n            return;\n        }\n        const selectedUnit = this.getSelectedUnit();\n        this.unitMin = selectedUnit ? this.inputValueUnit.getOutputValue(this.min, selectedUnit) : this.min;\n        this.unitMax = selectedUnit ? this.inputValueUnit.getOutputValue(this.max, selectedUnit) : this.max;\n    }\n\n    get displayValue(): string {\n        if (this.formGroup.get('unlimited') && this.formGroup.get('unlimited').value) {\n            return this.translationService.translate('vcd.cc.unlimited');\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value) {\n            if (this.unitDropdown) {\n                // Return the value and the selected unit.\n                const inputUnit: Unit = this.comboOptionUnitMap.get(this.unitDropdown.selectedOption);\n                return this.unitFormatter.bestFormat(value, inputUnit, this.unitOptions);\n            } else if (this.unitOptions.length === 1) {\n                // Return the value and the predefined unit. For example, 100 %.\n                return this.unitFormatter.bestFormat(value, this.unitOptions[0], this.unitOptions);\n            } else if (this.isReadOnly) {\n                // Return the value with best unit when #limited FormControl.value\n                // is set programmatically\n\n                const displayComboUnit = this.comboOptions.find(\n                    // tslint:disable-next-line:triple-equals\n                    (co) => co.value == this.formGroup.get('comboUnitOptions').value\n                );\n                const displayUnit = this.comboOptionUnitMap.get(displayComboUnit);\n                if (displayUnit) {\n                    return this.unitFormatter.bestFormat(value, displayUnit, this.unitOptions);\n                }\n            }\n            // Return only the value when unitOptions was not set.\n            return value.toString();\n        }\n        return;\n    }\n\n    /**\n     * Up to now (when this function has been introduced) all our form errors were in the form\n     * `{ [key]: true }` which made it quite impossible to add custom parameters for translation.\n     *  `errorLabels` are a perfect example for this use case\n     *\n     * Now the errors are in format `{ [key]: any }` where any can be either an array [] for positional\n     * based message format or `{msgKey: string}` for a named message format.\n     *\n     * For `errorLabels` we\n     *\n     */\n    get errors(): ValidationErrors {\n        if (this.errorLabels.length) {\n            return this.errorLabels.reduce(\n                (acc, cur) => ({\n                    ...acc,\n                    [cur]: true,\n                }),\n                {}\n            );\n        }\n        return this.formControl.errors;\n    }\n\n    getErrorTranslationParams(errorObjectValue: any): any {\n        // `errorObjectValue === true` is the 'old' case see comments for `errors`\n        if (!errorObjectValue || errorObjectValue === true) {\n            return [this.getValue(), this.min.toString(), this.max.toString()];\n        }\n        return errorObjectValue;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NumberWithUnitsFormValidatorsFactory {\n    constructor(private unitFormatter: UnitFormatter) {}\n\n    public isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited = -1): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const value = control.value;\n\n            const isNumber = !isNaN(Number(control.value)) && isFinite(control.value);\n\n            if (isNumber) {\n                if (value >= min && value \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberUnit.html":{"url":"classes/NumberUnit.html","title":"class - NumberUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of the comparison number\n\n            \n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:89\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:112\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberWithUnitFormInputWidgetObject.html":{"url":"classes/NumberWithUnitFormInputWidgetObject.html","title":"class - NumberWithUnitFormInputWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberWithUnitFormInputWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Test wrapper for the VCD Number With Unit Form Input component.\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNativeElement\n                            \n                            \n                                selectUnit\n                            \n                            \n                                setInputValueUnit\n                            \n                            \n                                setUnitOptionsToNone\n                            \n                            \n                                setUnitOptionsToPercent\n                            \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formControl\n                                \n                                \n                                    displayValue\n                                \n                                \n                                    readonlyText\n                                \n                                \n                                    unlimitedFormControl\n                                \n                                \n                                    valueFormControl\n                                \n                                \n                                    unitFormControl\n                                \n                                \n                                    selectedUnit\n                                \n                                \n                                    selectedUnitDisplayValue\n                                \n                                \n                                    isUnitDropDownDisplayed\n                                \n                                \n                                    singleUnitDisplayText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-number-with-unit-form-input'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeElement(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectUnit\n                        \n                        \n                    \n                \n            \n            \n                \nselectUnit(unit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInputValueUnit\n                        \n                        \n                    \n                \n            \n            \n                \nsetInputValueUnit(unit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUnitOptionsToNone\n                        \n                        \n                    \n                \n            \n            \n                \nsetUnitOptionsToNone()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUnitOptionsToPercent\n                        \n                        \n                    \n                \n            \n            \n                \nsetUnitOptionsToPercent()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        displayValue\n                    \n                \n\n                \n                    \n                        getdisplayValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readonlyText\n                    \n                \n\n                \n                    \n                        getreadonlyText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:28\n                                \n                            \n                    \n                        \n                                Reads from the readonly section. If widget is not readonly, it returns an empty string;\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unlimitedFormControl\n                    \n                \n\n                \n                    \n                        getunlimitedFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        valueFormControl\n                    \n                \n\n                \n                    \n                        getvalueFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unitFormControl\n                    \n                \n\n                \n                    \n                        getunitFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedUnit\n                    \n                \n\n                \n                    \n                        getselectedUnit()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedUnitDisplayValue\n                    \n                \n\n                \n                    \n                        getselectedUnitDisplayValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isUnitDropDownDisplayed\n                    \n                \n\n                \n                    \n                        getisUnitDropDownDisplayed()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        singleUnitDisplayText\n                    \n                \n\n                \n                    \n                        getsingleUnitDisplayText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:88\n                                \n                            \n                    \n                        \n                                Returns an empty string if there is no HTML for single unit\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\nimport { WidgetObject } from '../../utils/test/widget-object';\nimport { Percent, Unit } from '../../utils/unit/unit';\nimport { NumberWithUnitFormInputComponent } from './number-with-unit-form-input.component';\n\n/**\n * Test wrapper for the VCD Number With Unit Form Input component.\n */\nexport class NumberWithUnitFormInputWidgetObject extends WidgetObject {\n    static tagName = 'vcd-number-with-unit-form-input';\n\n    get formControl(): AbstractControl {\n        return this.component.formControl;\n    }\n\n    get displayValue(): string {\n        return this.component.displayValue;\n    }\n\n    /**\n     * Reads from the readonly section. If widget is not readonly, it returns an empty string;\n     */\n    get readonlyText(): string {\n        return this.getText('.readonly-text');\n    }\n\n    get unlimitedFormControl(): AbstractControl {\n        return this.component.formGroup.get('unlimited');\n    }\n\n    get valueFormControl(): AbstractControl {\n        return this.component.formGroup.get('limited');\n    }\n\n    get unitFormControl(): AbstractControl {\n        return this.component.formGroup.get('comboUnitOptions');\n    }\n\n    selectUnit(unit: Unit): void {\n        this.component.selectedUnit = unit.getMultiplier();\n    }\n\n    setInputValueUnit(unit: Unit): void {\n        this.component.inputValueUnit = unit;\n    }\n\n    get selectedUnit(): number {\n        return this.component.formGroup.get('comboUnitOptions').value;\n    }\n\n    get selectedUnitDisplayValue(): string {\n        return (\n            this.component.unitOptions\n                // tslint:disable-next-line:triple-equals\n                .find((item) => item.getMultiplier() == this.selectedUnit)\n                .getUnitName()\n        );\n    }\n\n    setUnitOptionsToPercent(): void {\n        this.component.unitOptions = [Percent.ZERO_TO_100];\n        this.component.inputValueUnit = Percent.ZERO_TO_1;\n        this.unitFormControl.setValue(this.component.unitOptions[0].getMultiplier());\n        this.fixture.detectChanges();\n    }\n\n    setUnitOptionsToNone(): void {\n        this.component.unitOptions = [];\n        this.fixture.detectChanges();\n    }\n\n    getNativeElement(cssSelector: string): HTMLElement {\n        return this.findElement(cssSelector) && this.findElement(cssSelector).nativeElement;\n    }\n\n    get isUnitDropDownDisplayed(): boolean {\n        return !!this.getNativeElement('.combo-options');\n    }\n\n    /**\n     * Returns an empty string if there is no HTML for single unit\n     */\n    get singleUnitDisplayText(): string {\n        const element = this.getNativeElement('.single-option');\n        return element ? element.innerHTML : '';\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NumberWithUnitsFormValidatorsFactory.html":{"url":"injectables/NumberWithUnitsFormValidatorsFactory.html","title":"injectable - NumberWithUnitsFormValidatorsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NumberWithUnitsFormValidatorsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isInRange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unitFormatter: UnitFormatter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:460\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unitFormatter\n                                                  \n                                                        \n                                                                        UnitFormatter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isInRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:463\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unlimited\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        -1\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    AfterContentChecked,\n    Component,\n    Injectable,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Self,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, NgControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { TranslationService } from '@vcd/i18n';\nimport { SelectOption } from '../../common/interfaces';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport { FormValidators } from '../../form/validators';\nimport { Unit } from '../../utils/unit/unit';\nimport { UnitFormatter } from '../../utils/unit/unit-formatter';\nimport { BaseFormControl } from '../base-form-control';\nimport { FormInputComponent } from '../form-input/form-input.component';\nimport { FormSelectComponent } from '../form-select/form-select.component';\n\n/**\n * -1 is the number to specify a value of unlimited.\n */\nexport const UNLIMITED = -1;\n\n/**\n * A numerical form input component with unit selection and unlimited checkbox.\n *\n * If a single element array is provided for the units, then there is no unit selection\n * but rather a string notation for the unit. If the array is empty then there are no units at all.\n *\n * The display of unlimited checkbox is configurable.\n */\n@Component({\n    selector: 'vcd-number-with-unit-form-input',\n    templateUrl: './number-with-unit-form-input.component.html',\n    styleUrls: ['./number-with-unit-form-input.component.scss'],\n})\nexport class NumberWithUnitFormInputComponent\n    extends BaseFormControl\n    implements OnChanges, OnInit, OnDestroy, AfterContentChecked {\n    /**\n     * List of available units. Consider the following options for the array:\n     * # array with more than one elements\n     *    - a dropdown unit selection is shown. You must also provide {@link inputValueUnit}\n     * # single element array\n     *    - a string notation for no dropdown, {@link inputValueUnit} is derived from the element\n     * # empty array\n     *    - no units at all\n     */\n    @Input()\n    set unitOptions(unitOptions: Unit[]) {\n        this._unitOptions = unitOptions || [];\n\n        if (this._unitOptions.length === 1) {\n            this.inputValueUnit = this._unitOptions[0];\n        }\n\n        this.comboOptionUnitMap.clear();\n        this.comboOptions = [];\n        this._unitOptions.forEach((unitOption) => {\n            const comboOption: SelectOption = {\n                display: unitOption.getUnitName(),\n                value: unitOption.getMultiplier(),\n            };\n            this.comboOptionUnitMap.set(comboOption, unitOption);\n            this.comboOptions.push(comboOption);\n        });\n    }\n\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * The base unit of the component. The value of this FormControl is calculated based on this property.\n     * Required when a multi element array is provided for {@link unitOptions} and it should be one of those values.\n     */\n    @Input() inputValueUnit: Unit;\n\n    /**\n     * The initial display unit.\n     * This is useful if you want to prevent finding best match when displaying a value for the first time.\n     * For example if you provide 1024 MB and you want it to be displayed as 1024MB instead of 1GB\n     */\n    @Input() initialValueUnit: Unit;\n\n    /**\n     * Show the Unlimited checkbox. Can be set just once only at render time.\n     */\n    @Input() showUnlimitedOption = true;\n\n    /**\n     * The value when the component is set to unlimited. Default is -1.\n     */\n    @Input() unlimitedValue: number = UNLIMITED;\n\n    /**\n     * Minimum value allowed relevant to {@link inputValueUnit}. Default is 0.\n     */\n    @Input() min: number = 0;\n\n    /**\n     * Maximum value allowed relevant to {@link inputValueUnit}. Default is {@link Number.MAX_SAFE_INTEGER}.\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = 10;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    public formGroup: FormGroup;\n\n    private _unitOptions: Unit[] = [];\n\n    /**\n     * A drop down of available units\n     *\n     * This list is constructed from list of\n     * available units in {@link unitOptions}\n     */\n    comboOptions: SelectOption[] = [];\n\n    /**\n     * Map of SelectOption and Unit which is used to\n     * extract Unit for a given SelectOption.\n     */\n    private comboOptionUnitMap: Map = new Map();\n\n    // value set to the number input of the formGroup\n    private bestValue: number = null;\n\n    // unit set to the selected dropdown select of the formGroup\n    private bestUnit: Unit;\n\n    /**\n     * The minimum value calculated from the {@link min} value converted to the currently selected unit\n     */\n    unitMin: number;\n\n    /**\n     * The maximum value calculated from the {@link max} value converted to the currently selected unit\n     */\n    unitMax: number;\n\n    /**\n     * This is the last real value for the input. Used in case when user toggles the unlimited checkbox twice in a row.\n     * When unlimited is checked the value of the input is cleared, then when toggled again, the input value should be\n     * set to the last value.\n     */\n    lastRealValue: number = null;\n\n    /**\n     * Set the unit in the dropdown.\n     * @param value Should be one of the value that you pass in {@link #unitOptions} to select the Unit.\n     */\n    set selectedUnit(value: number) {\n        this.formGroup.get('comboUnitOptions').setValue(value);\n    }\n\n    @ViewChild('unitDropdown', { static: false }) unitDropdown: FormSelectComponent;\n    @ViewChild('limitedInput', { static: false }) limitedInput: FormInputComponent;\n\n    tracker = new SubscriptionTracker(this);\n\n    constructor(\n        @Self() @Optional() controlDirective: NgControl,\n        private fb: FormBuilder,\n        private translationService: TranslationService,\n        private unitFormatter: UnitFormatter\n    ) {\n        super(controlDirective);\n    }\n\n    ngOnDestroy(): void {\n        this.tracker.unsubscribeAll();\n    }\n\n    ngOnInit(): void {\n        // Calculate the best unit and value. Take into account if initial unit is provided.\n        if (this.initialValueUnit) {\n            this.bestUnit = this.initialValueUnit;\n            this.bestValue = this.initialValue\n                ? this.inputValueUnit.getOutputValue(this.initialValue, this.bestUnit)\n                : null;\n        } else {\n            this.computeBestUnitAndValue(this.initialValue as number);\n        }\n\n        // Build the form group based on the best unit and value, considering also if unlimited is enabled\n        if (!this.showUnlimitedOption) {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: this.bestUnit.getMultiplier(),\n            });\n        } else {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: [this.bestUnit.getMultiplier()],\n                unlimited: this.bestValue === this.unlimitedValue,\n            });\n            // Remember the value in case the control value is programmatically set to unlimited\n            if (this.bestValue !== this.unlimitedValue) {\n                this.lastRealValue = this.bestValue;\n            }\n            this.tracker.subscribe(this.formGroup.get('unlimited').valueChanges, (unlimitedChecked) => {\n                const input = this.formGroup.get('limited');\n                if (unlimitedChecked) {\n                    // When going to unlimited remember the value of the input before clearing it\n                    this.lastRealValue = input.value;\n                    input.setValue(null);\n                } else {\n                    input.setValue(this.lastRealValue);\n                }\n                this.updateUnlimitedDisabledState();\n            });\n        }\n        this.tracker.subscribe(this.formGroup.get('comboUnitOptions').valueChanges, () => {\n            // Mark the input as dirty since if it was not touched no error will be displayed even if there are some\n            this.recalculateUnitMinMax();\n            this.onChange(this.getValue());\n        });\n        this.tracker.subscribe(this.formGroup.get('limited').valueChanges, () => {\n            this.onChange(this.getValue());\n        });\n        this.recalculateUnitMinMax();\n        this.updateUnlimitedDisabledState();\n        // This code should be here since the formGroup has been created in the ngOnInit. If the disabled()\n        // call has been done in a constructor this component would not have been initialized\n        if (this.disabled) {\n            this.updateDisabledState(true, true);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.recalculateUnitMinMax();\n    }\n\n    ngAfterContentChecked(): void {\n        if (!this.limitedInput) {\n            return;\n        }\n        Object.defineProperty(this.limitedInput, 'showErrors', {\n            get: this.limitedInputShowErrors,\n        });\n    }\n\n    limitedInputShowErrors = () => {\n        return this.showErrors && this.errors ? {} : null;\n    };\n\n    writeValue(value: number): void {\n        if (!this.formGroup) {\n            this.initialValue = value;\n            return;\n        }\n        const input = this.formGroup.get('limited');\n        if (value === null) {\n            if (this.showUnlimitedOption) {\n                // Set Unlimited checkbox to false because the form control was reset\n                this.formGroup.get('unlimited').setValue(false);\n            }\n            input.setValue(null);\n            this.updateUnlimitedDisabledState();\n            return;\n        }\n\n        if (this.showUnlimitedOption) {\n            if (value !== this.unlimitedValue) {\n                this.computeBestUnitAndValue(value);\n                this.lastRealValue = this.bestValue;\n                input.setValue(this.bestValue);\n                this.selectedUnit = this.bestUnit.getMultiplier();\n            }\n            this.formGroup.get('unlimited').setValue(value === this.unlimitedValue);\n        } else {\n            this.computeBestUnitAndValue(value);\n            this.lastRealValue = this.bestValue;\n            input.setValue(this.bestValue);\n            this.selectedUnit = this.bestUnit.getMultiplier();\n        }\n\n        this.updateUnlimitedDisabledState();\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.updateDisabledState(isDisabled, true);\n    }\n\n    private updateUnlimitedDisabledState(): void {\n        if (!this.showUnlimitedOption || this.disabled) {\n            return;\n        }\n        this.updateDisabledState(this.formGroup?.get('unlimited')?.value, false);\n    }\n\n    updateDisabledState(isDisabled: boolean, updateUnlimitedCheckbox: boolean): void {\n        if (this.formGroup) {\n            // Do not emit when changing the disable state\n            if (isDisabled) {\n                this.formGroup.get('comboUnitOptions').disable({ emitEvent: false });\n                this.formGroup.get('limited').disable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.disable({ emitEvent: false });\n                }\n            } else {\n                this.formGroup.get('comboUnitOptions').enable({ emitEvent: false });\n                this.formGroup.get('limited').enable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.enable({ emitEvent: false });\n                }\n            }\n        }\n    }\n\n    private computeBestUnitAndValue(value: number): void {\n        if (this.unitOptions.length === 0) {\n            this.bestValue = value;\n            this.bestUnit = NoUnit.INSTANCE;\n        } else if (value === null) {\n            this.bestValue = null;\n            this.bestUnit = this.unitOptions[0];\n        } else {\n            this.bestUnit = this.inputValueUnit.findBestUnit(value, this.unitOptions);\n            this.bestValue = this.inputValueUnit.getOutputValue(value, this.bestUnit);\n        }\n    }\n\n    private getValue(): number {\n        if (this.formGroup.get('unlimited')?.value) {\n            return this.unlimitedValue;\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value && this.unitOptions.length) {\n            return this.getSelectedUnit().getOutputValue(value, this.inputValueUnit);\n        }\n        return value;\n    }\n\n    private getSelectedUnit(): Unit {\n        const value = this.formGroup.get('comboUnitOptions').value;\n        const selectedComboUnit = this.comboOptions.find(\n            // tslint:disable-next-line:triple-equals\n            (co) => co.value == value\n        );\n        const selectedUnit = this.comboOptionUnitMap.get(selectedComboUnit);\n        return selectedUnit;\n    }\n\n    private recalculateUnitMinMax(): void {\n        if (!this.formGroup) {\n            return;\n        }\n        const selectedUnit = this.getSelectedUnit();\n        this.unitMin = selectedUnit ? this.inputValueUnit.getOutputValue(this.min, selectedUnit) : this.min;\n        this.unitMax = selectedUnit ? this.inputValueUnit.getOutputValue(this.max, selectedUnit) : this.max;\n    }\n\n    get displayValue(): string {\n        if (this.formGroup.get('unlimited') && this.formGroup.get('unlimited').value) {\n            return this.translationService.translate('vcd.cc.unlimited');\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value) {\n            if (this.unitDropdown) {\n                // Return the value and the selected unit.\n                const inputUnit: Unit = this.comboOptionUnitMap.get(this.unitDropdown.selectedOption);\n                return this.unitFormatter.bestFormat(value, inputUnit, this.unitOptions);\n            } else if (this.unitOptions.length === 1) {\n                // Return the value and the predefined unit. For example, 100 %.\n                return this.unitFormatter.bestFormat(value, this.unitOptions[0], this.unitOptions);\n            } else if (this.isReadOnly) {\n                // Return the value with best unit when #limited FormControl.value\n                // is set programmatically\n\n                const displayComboUnit = this.comboOptions.find(\n                    // tslint:disable-next-line:triple-equals\n                    (co) => co.value == this.formGroup.get('comboUnitOptions').value\n                );\n                const displayUnit = this.comboOptionUnitMap.get(displayComboUnit);\n                if (displayUnit) {\n                    return this.unitFormatter.bestFormat(value, displayUnit, this.unitOptions);\n                }\n            }\n            // Return only the value when unitOptions was not set.\n            return value.toString();\n        }\n        return;\n    }\n\n    /**\n     * Up to now (when this function has been introduced) all our form errors were in the form\n     * `{ [key]: true }` which made it quite impossible to add custom parameters for translation.\n     *  `errorLabels` are a perfect example for this use case\n     *\n     * Now the errors are in format `{ [key]: any }` where any can be either an array [] for positional\n     * based message format or `{msgKey: string}` for a named message format.\n     *\n     * For `errorLabels` we\n     *\n     */\n    get errors(): ValidationErrors {\n        if (this.errorLabels.length) {\n            return this.errorLabels.reduce(\n                (acc, cur) => ({\n                    ...acc,\n                    [cur]: true,\n                }),\n                {}\n            );\n        }\n        return this.formControl.errors;\n    }\n\n    getErrorTranslationParams(errorObjectValue: any): any {\n        // `errorObjectValue === true` is the 'old' case see comments for `errors`\n        if (!errorObjectValue || errorObjectValue === true) {\n            return [this.getValue(), this.min.toString(), this.max.toString()];\n        }\n        return errorObjectValue;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NumberWithUnitsFormValidatorsFactory {\n    constructor(private unitFormatter: UnitFormatter) {}\n\n    public isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited = -1): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const value = control.value;\n\n            const isNumber = !isNaN(Number(control.value)) && isFinite(control.value);\n\n            if (isNumber) {\n                if (value >= min && value \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ObjectAndResponse.html":{"url":"interfaces/ObjectAndResponse.html","title":"interface - ObjectAndResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ObjectAndResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                A combination of some object and the response that gave that object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        object\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The data that was returned from a given activity, if any.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         ActivityResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActivityResponse\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The response that an activity returned.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then(result => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch(error => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise)[]> {\n        return activityResolutionPromises\n            .then(result => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch(error => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationCallback.html":{"url":"interfaces/PaginationCallback.html","title":"interface - PaginationCallback","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationCallback\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                A function that can be used to render the pagination data in the grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [firstItem: number, lastItem: number, totalItems: number]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     string | Observable\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationConfiguration.html":{"url":"interfaces/PaginationConfiguration.html","title":"interface - PaginationConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information the user gives to show page size and page size options in the pagination footer.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pageSize\n                                \n                                \n                                            Optional\n                                        pageSizeOptions\n                                \n                                \n                                            Optional\n                                        rowHeight\n                                \n                                \n                                            Optional\n                                        shouldShowPageNumberInput\n                                \n                                \n                                            Optional\n                                        shouldShowPageSizeSelector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number | \"Magic\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | \"Magic\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\nnumber of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\nMagic: Auto calculates the size based on available height of the container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSizeOptions\n                                    \n                                \n                                \n                                    \n                                        pageSizeOptions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Available page size options in the dropdown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowHeight\n                                    \n                                \n                                \n                                    \n                                        rowHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The height of a row in the datagrid. If not set, will use the default of ROW_HEIGHT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldShowPageNumberInput\n                                    \n                                \n                                \n                                    \n                                        shouldShowPageNumberInput:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the page number input should be shown.\nDefaults to false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldShowPageSizeSelector\n                                    \n                                \n                                \n                                    \n                                        shouldShowPageSizeSelector:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the page size option dropdown should be shown.\nDefaults to false.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagionationInformation.html":{"url":"interfaces/PagionationInformation.html","title":"interface - PagionationInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagionationInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information about pagionation that will be exposed.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        itemsPerPage\n                                \n                                \n                                        pageNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How many items belong on a page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumber\n                                    \n                                \n                                \n                                    \n                                        pageNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    What page is currently selected.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartialResult.html":{"url":"interfaces/PartialResult.html","title":"interface - PartialResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartialResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes partial search result, i.e. result that do not contain all the items that match the\nsearch criteria {@see QuickSearchComponent#hasPartialResult}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastItem\n                                \n                                \n                                        totalItems\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastItem\n                                    \n                                \n                                \n                                    \n                                        lastItem:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of the last item of the result\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of items in the result\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Percent.html":{"url":"classes/Percent.html","title":"class - Percent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Percent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Percent is handled differently compared to other Units.\nCan be represented in two different formats -\nZERO_TO_100 - ex: 50 %\nZERO_TO_1 - ex: 0.5 %\nIn both formats single unitName - \"%\" is used represent the value\n\n            \n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                unitTranslationKey\n                            \n                            \n                                    Static\n                                valueWithUnitTranslationKey\n                            \n                            \n                                    Static\n                                ZERO_TO_1\n                            \n                            \n                                    Static\n                                ZERO_TO_100\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                getUnitNameTranslationKey\n                            \n                            \n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(multiplier: number)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit.ts:188\n                            \n                        \n\n                \n                    \n                            Percent always has unitName as \"%\"\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        multiplier\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            unitTranslationKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.units.percent'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            valueWithUnitTranslationKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.display.percent'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            ZERO_TO_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Percent\n\n                        \n                    \n                    \n                        \n                            Default value : new Percent(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:196\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            ZERO_TO_100\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Percent\n\n                        \n                    \n                    \n                        \n                            Default value : new Percent(0.01)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:197\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, unitList: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:213\n                \n            \n\n\n            \n                \n                    Percent is always best represented in ZERO_TO_100 format\nand so returns ZERO_TO_100\nEx: 50 % is the display format for ZERO_TO_100 for value - 50\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unitList\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nNestedPropertyPipe\n\nNestedPropertyPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nNestedPropertyPipe->PipesModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nPipesModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nPipesModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nPipesModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nPipesModule->NumberWithUnitFormInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NestedPropertyPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { NestedPropertyPipe } from './nested-property.pipe';\n\nconst declarations = [NestedPropertyPipe];\n\n@NgModule({\n    declarations,\n    exports: [...declarations],\n})\nexport class PipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PowerTwoUnit.html":{"url":"classes/PowerTwoUnit.html","title":"class - PowerTwoUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PowerTwoUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of 1024\n\n            \n\n            \n                Extends\n            \n            \n                        NumberUnit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUnitMultiplier\n                            \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:89\n\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:112\n\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuickSearchModule.html":{"url":"modules/QuickSearchModule.html","title":"module - QuickSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    QuickSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuickSearchModule\n\n\n\ncluster_QuickSearchModule_declarations\n\n\n\ncluster_QuickSearchModule_exports\n\n\n\n\nQuickSearchComponent\n\nQuickSearchComponent\n\n\n\nQuickSearchModule\n\nQuickSearchModule\n\nQuickSearchModule -->\n\nQuickSearchComponent->QuickSearchModule\n\n\n\n\n\nQuickSearchComponent \n\nQuickSearchComponent \n\nQuickSearchComponent  -->\n\nQuickSearchModule->QuickSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            QuickSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuickSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { QuickSearchComponent } from './quick-search.component';\n\n@NgModule({\n    imports: [CommonModule, ClarityModule, FormsModule, ReactiveFormsModule, I18nModule],\n    declarations: [QuickSearchComponent],\n    exports: [QuickSearchComponent],\n})\nexport class QuickSearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchProvider.html":{"url":"interfaces/QuickSearchProvider.html","title":"interface - QuickSearchProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.provider.ts\n        \n\n            \n                Description\n            \n            \n                The interface a search providers should implement in order to register itself with the QuickSearchService\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        order\n                                \n                                \n                                        sectionName\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    search\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.provider.ts:33\n                \n            \n\n\n            \n                \n                    Returns an array or a promise of array of items that comply with the search criteria.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search string provided by the user when typing in the Quick Search Component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A custom property available throughout all the providers. Not designed for any specific scenario.\nUse it according to the specific needs you may have.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n-1 means append\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionName\n                                    \n                                \n                                \n                                    \n                                        sectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Every search provider gets displayed in a separate section. This will be used as the section header.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { QuickSearchResultsType } from './quick-search-result';\n\n/**\n * The interface a search providers should implement in order to register itself with the {@link QuickSearchService}\n */\nexport interface QuickSearchProvider {\n    /**\n     * Every search provider gets displayed in a separate section. This will be used as the section header.\n     */\n    sectionName: string;\n\n    /**\n     * The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n     * -1 means append\n     */\n    order: number;\n\n    /**\n     * A custom property available throughout all the providers. Not designed for any specific scenario.\n     * Use it according to the specific needs you may have.\n     */\n    data: unknown;\n\n    /**\n     * Returns an array or a promise of array of items that comply with the search criteria.\n     * @param criteria The search string provided by the user when typing in the Quick Search Component\n     */\n    search(criteria: string): QuickSearchResultsType;\n}\n\nexport abstract class QuickSearchProviderDefaults implements QuickSearchProvider {\n    sectionName = '';\n    order = -1;\n    data: unknown;\n    abstract search(criteria: string): QuickSearchResultsType;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuickSearchProviderDefaults.html":{"url":"classes/QuickSearchProviderDefaults.html","title":"class - QuickSearchProviderDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuickSearchProviderDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.provider.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            QuickSearchProvider\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                order\n                            \n                            \n                                sectionName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     -1\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.provider.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { QuickSearchResultsType } from './quick-search-result';\n\n/**\n * The interface a search providers should implement in order to register itself with the {@link QuickSearchService}\n */\nexport interface QuickSearchProvider {\n    /**\n     * Every search provider gets displayed in a separate section. This will be used as the section header.\n     */\n    sectionName: string;\n\n    /**\n     * The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n     * -1 means append\n     */\n    order: number;\n\n    /**\n     * A custom property available throughout all the providers. Not designed for any specific scenario.\n     * Use it according to the specific needs you may have.\n     */\n    data: unknown;\n\n    /**\n     * Returns an array or a promise of array of items that comply with the search criteria.\n     * @param criteria The search string provided by the user when typing in the Quick Search Component\n     */\n    search(criteria: string): QuickSearchResultsType;\n}\n\nexport abstract class QuickSearchProviderDefaults implements QuickSearchProvider {\n    sectionName = '';\n    order = -1;\n    data: unknown;\n    abstract search(criteria: string): QuickSearchResultsType;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuickSearchRegistrarService.html":{"url":"injectables/QuickSearchRegistrarService.html","title":"injectable - QuickSearchRegistrarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuickSearchRegistrarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-registrar.service.ts\n        \n\n            \n                Description\n            \n            \n                Allows components to register with QuickSearchService and automatically unregister when the component is destroyed.\nMust be provided by the component itself in its providers: [QuickSearchRegistrarService]\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(quickSearchService: QuickSearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quickSearchService\n                                                  \n                                                        \n                                                                        QuickSearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuickSearchProvider[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\n/**\n * Allows components to register with {@link QuickSearchService} and automatically unregister when the component is destroyed.\n *\n * Must be provided by the component itself in its `providers: [QuickSearchRegistrarService]`\n */\n@Injectable()\nexport class QuickSearchRegistrarService implements OnDestroy {\n    constructor(private quickSearchService: QuickSearchService) {}\n\n    private providers: QuickSearchProvider[] = [];\n\n    register(provider: QuickSearchProvider): void {\n        this.providers.push(provider);\n        this.quickSearchService.registerProvider(provider);\n    }\n\n    ngOnDestroy(): void {\n        for (const provider of this.providers) {\n            this.quickSearchService.unregisterProvider(provider);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchResultItem.html":{"url":"interfaces/QuickSearchResultItem.html","title":"interface - QuickSearchResultItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchResultItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-result.ts\n        \n\n            \n                Description\n            \n            \n                The interface a quick search result item should implement\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayText\n                                \n                                \n                                        handler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayText\n                                    \n                                \n                                \n                                    \n                                        displayText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text that will be displayed in the quick search component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Function that is going to be called when this item is to be handled, i.e. when the\nuser clicks on this item or  selects it and presses the Enter key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface QuickSearchResults {\n    /**\n     * Item list returned by the search\n     */\n    items: QuickSearchResultItem[];\n\n    /**\n     * The current page returned by the search\n     */\n    page?: number;\n\n    /**\n     * The current page size returned by the search\n     */\n    pageSize?: number;\n\n    /**\n     * Total number of items\n     */\n    total?: number;\n}\n\n/**\n * The interface a quick search result item should implement\n */\nexport interface QuickSearchResultItem {\n    /**\n     * The text that will be displayed in the quick search component\n     */\n    displayText: string;\n\n    /**\n     * Function that is going to be called when this item is to be handled, i.e. when the\n     * user clicks on this item or  selects it and presses the Enter key.\n     */\n    handler: () => void;\n}\n\n/**\n * The type of the quick search result which can be a promise\n */\nexport type QuickSearchResultsType = QuickSearchResults | Promise;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchResults.html":{"url":"interfaces/QuickSearchResults.html","title":"interface - QuickSearchResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-result.ts\n        \n\n            \n                Description\n            \n            \n                The interface of a quick search result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:         QuickSearchResultItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchResultItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Item list returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current page returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current page size returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface QuickSearchResults {\n    /**\n     * Item list returned by the search\n     */\n    items: QuickSearchResultItem[];\n\n    /**\n     * The current page returned by the search\n     */\n    page?: number;\n\n    /**\n     * The current page size returned by the search\n     */\n    pageSize?: number;\n\n    /**\n     * Total number of items\n     */\n    total?: number;\n}\n\n/**\n * The interface a quick search result item should implement\n */\nexport interface QuickSearchResultItem {\n    /**\n     * The text that will be displayed in the quick search component\n     */\n    displayText: string;\n\n    /**\n     * Function that is going to be called when this item is to be handled, i.e. when the\n     * user clicks on this item or  selects it and presses the Enter key.\n     */\n    handler: () => void;\n}\n\n/**\n * The type of the quick search result which can be a promise\n */\nexport type QuickSearchResultsType = QuickSearchResults | Promise;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuickSearchService.html":{"url":"injectables/QuickSearchService.html","title":"injectable - QuickSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuickSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRegisteredProviders\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                unregisterProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRegisteredProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegisteredProviders()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:62\n                \n            \n\n\n            \n                \n                    Get a list of all the registered search providers.\n\n\n                    \n                        Returns :         QuickSearchProvider[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:19\n                \n            \n\n\n            \n                \n                    Register a search provider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search provider {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unregisterProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unregisterProvider(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:51\n                \n            \n\n\n            \n                \n                    Unregister a search provider by providing the registration id.\nReturns true if un-registration was done.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Provider to be unregistered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuickSearchProvider[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { QuickSearchProvider } from './quick-search.provider';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class QuickSearchService {\n    registrations: QuickSearchProvider[] = [];\n\n    /**\n     * Register a search provider\n     * @param provider The search provider {@link QuickSearchProvider}\n     */\n    public registerProvider(provider: QuickSearchProvider): void {\n        const order = typeof provider.order === 'undefined' ? -1 : provider.order;\n\n        let insertIndex = -1;\n        // Determine the position of the new registration\n        if (order > -1) {\n            insertIndex = this.registrations.findIndex((prov) => {\n                // If an item has a negative index, this means no order had been provided for that item\n                // which means we have found the insert index\n                if (prov.order  -1) {\n            this.registrations.splice(insertIndex, 0, provider);\n        } else {\n            this.registrations.push(provider);\n        }\n    }\n\n    /**\n     * Unregister a search provider by providing the registration id.\n     * Returns true if un-registration was done.\n     * @param provider Provider to be unregistered\n     */\n    public unregisterProvider(provider: QuickSearchProvider): boolean {\n        const index = this.registrations.findIndex((regProvider) => regProvider === provider);\n        if (index > -1) {\n            this.registrations.splice(index, 1);\n        }\n        return index > -1;\n    }\n\n    /**\n     * Get a list of all the registered search providers.\n     */\n    public getRegisteredProviders(): QuickSearchProvider[] {\n        return [...this.registrations];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResultActivatedEvent.html":{"url":"interfaces/ResultActivatedEvent.html","title":"interface - ResultActivatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResultActivatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes the event emitted when a result item is activated,\ni.e. its event handler has been called.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        eventSource\n                                \n                                \n                                        itemDisplayText\n                                \n                                \n                                        sectionTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventSource\n                                    \n                                \n                                \n                                    \n                                        eventSource:     \"MouseEvent\" | \"KeyboardEvent\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"MouseEvent\" | \"KeyboardEvent\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemDisplayText\n                                    \n                                \n                                \n                                    \n                                        itemDisplayText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionTitle\n                                    \n                                \n                                \n                                    \n                                        sectionTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchSection.html":{"url":"interfaces/SearchSection.html","title":"interface - SearchSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isLoading\n                                \n                                \n                                        provider\n                                \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         QuickSearchProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:         QuickSearchResults\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchResults\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOption.html":{"url":"interfaces/SelectOption.html","title":"interface - SelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/select-option.ts\n        \n\n            \n                Description\n            \n            \n                Options displayed in a select input option list\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        isTranslatable\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text to be shown for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTranslatable\n                                    \n                                \n                                \n                                    \n                                        isTranslatable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for translation of the SelectOption.display text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Value of a option\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SelectOption {\n    /**\n     * Value of a option\n     */\n    value: string | number;\n    /**\n     * Text to be shown for the option\n     */\n    display: string;\n    /**\n     * Used for translation of the {@link SelectOption.display} text\n     */\n    isTranslatable?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ShowClippedTextDirective.html":{"url":"directives/ShowClippedTextDirective.html","title":"directive - ShowClippedTextDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ShowClippedTextDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.ts\n        \n\n            \n                Description\n            \n            \n                Displays a clarity tooltip with the full contents of a host element on hover but only if\nthe elements is clipped.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [vcdShowClippedText]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                hostElement\n                            \n                            \n                                    Static\n                                instanceCount\n                            \n                            \n                                mouseoutDelay\n                            \n                            \n                                    Private\n                                onMouseIn\n                            \n                            \n                                    Private\n                                onMouseOut\n                            \n                            \n                                tooltipSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                    Private\n                                isOverflowing\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                vcdShowClippedText\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:253\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        vcdShowClippedText\n                    \n                \n                \n                    \n                        Type :         CliptextConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:227\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isOverflowing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isOverflowing()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:248\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.host.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:253\n                            \n                        \n\n                \n                    \n                        The HTML element receiving the directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            instanceCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:224\n                            \n                        \n\n                \n                    \n                        To destroy the tooltip when no longer needed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseoutDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:246\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onMouseIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:290\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onMouseOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:301\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TooltipSize.md\n\n                        \n                    \n                    \n                        \n                            Default value : TooltipSize.md\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:247\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:227\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n\nexport enum TooltipPosition {\n    tl = 'tooltip-top-left',\n    tr = 'tooltip-top-right',\n    br = 'tooltip-bottom-right',\n    bl = 'tooltip-bottom-left',\n}\n\nexport enum TooltipSize {\n    sm = '100px',\n    md = '200px',\n    lg = '400px',\n}\n\n/**\n * The configuration information for the cliptext within the cells of the datagrid.\n */\nexport interface CliptextConfig {\n    /**\n     * The size of the tooltip to be displayed in the cell.\n     */\n    size?: TooltipSize;\n    /**\n     * The time delay from mouse off to hide the cliptext.\n     */\n    mouseoutDelay?: number;\n    /**\n     * If the cliptext should be disabled.\n     */\n    disabled?: boolean;\n}\n\n/**\n * Singleton tooltip created by directive\n */\nconst tip = {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n};\n\ntype EventHandler = (e: MouseEvent) => void;\n\nfunction watchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.addEventListener('mouseenter', mouseIn);\n    el.addEventListener('mouseleave', mouseOut);\n}\n\nfunction unwatchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.removeEventListener('mouseenter', mouseIn);\n    el.removeEventListener('mouseleave', mouseOut);\n}\n\nfunction setStyle(el: HTMLElement, style: Partial): void {\n    Object.assign(el.style, style);\n}\n\n/**\n * Displays a clarity tooltip with the full contents of a host element on hover but only if\n * the elements is clipped.\n */\n@Directive({\n    selector: '[vcdShowClippedText]',\n})\nexport class ShowClippedTextDirective implements OnDestroy, OnInit {\n    /** To destroy the tooltip when no longer needed */\n    static instanceCount = 0;\n\n    @Input('vcdShowClippedText')\n    set config(config: CliptextConfig) {\n        if (config && config.mouseoutDelay) {\n            this.mouseoutDelay = config.mouseoutDelay;\n        }\n        if (config && config.size) {\n            this.tooltipSize = config.size;\n        }\n        const nextDisabled = config !== undefined && config.disabled;\n        if (this.disabled === nextDisabled) {\n            return;\n        }\n        this.disabled = nextDisabled;\n        if (this.disabled) {\n            this.deactivate();\n        } else {\n            this.activate();\n        }\n    }\n\n    mouseoutDelay = 500;\n    tooltipSize = TooltipSize.md;\n    disabled = false;\n\n    /**\n     * The HTML element receiving the directive\n     */\n    public hostElement: HTMLElement = this.host.nativeElement;\n\n    constructor(private host: ElementRef) {}\n\n    ngOnInit(): void {\n        if (!this.disabled) {\n            this.activate();\n        }\n    }\n\n    activate(): void {\n        ShowClippedTextDirective.instanceCount++;\n        tip.create();\n        watchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n\n        // A host must have the following styles to show text ellipsis when overflowing\n        setStyle(this.hostElement, {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (!this.disabled) {\n            this.deactivate();\n        }\n    }\n\n    deactivate(): void {\n        ShowClippedTextDirective.instanceCount--;\n        unwatchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n        if (ShowClippedTextDirective.instanceCount === 0) {\n            tip.destroy();\n        }\n    }\n\n    private onMouseIn = (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    };\n\n    private onMouseOut = () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    };\n\n    private isOverflowing(): boolean {\n        // Text overflows when the content element's width is less than its scrollWidth.\n        return Math.ceil(this.hostElement.getBoundingClientRect().width)  {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShowClippedTextDirectiveModule.html":{"url":"modules/ShowClippedTextDirectiveModule.html","title":"module - ShowClippedTextDirectiveModule","body":"\n                   \n\n\n\n\n    Modules\n    ShowClippedTextDirectiveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShowClippedTextDirectiveModule\n\n\n\ncluster_ShowClippedTextDirectiveModule_declarations\n\n\n\ncluster_ShowClippedTextDirectiveModule_exports\n\n\n\n\nShowClippedTextDirective\n\nShowClippedTextDirective\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule -->\n\nShowClippedTextDirective->ShowClippedTextDirectiveModule\n\n\n\n\n\nShowClippedTextDirective \n\nShowClippedTextDirective \n\nShowClippedTextDirective  -->\n\nShowClippedTextDirectiveModule->ShowClippedTextDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ShowClippedTextDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShowClippedTextDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { ShowClippedTextDirective } from './show-clipped-text.directive';\n\n@NgModule({\n    declarations: [ShowClippedTextDirective],\n    exports: [ShowClippedTextDirective],\n})\nexport class ShowClippedTextDirectiveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShowClippedTextDirectiveTestHelper.html":{"url":"classes/ShowClippedTextDirectiveTestHelper.html","title":"class - ShowClippedTextDirectiveTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShowClippedTextDirectiveTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n        \n\n            \n                Description\n            \n            \n                Used to remove DOM specific code from the jasmine tests while testing this directive\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentInstance\n                            \n                            \n                                    Public\n                                hideDelay\n                            \n                            \n                                    Private\n                                host\n                            \n                            \n                                    Private\n                                secondHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                moveMouseOffHost\n                            \n                            \n                                moveMouseOffTooltip\n                            \n                            \n                                moveMouseOverHost\n                            \n                            \n                                moveMouseOverSecondHost\n                            \n                            \n                                moveMouseOverTooltip\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    hostPosition\n                                \n                                \n                                    disabled\n                                \n                                \n                                    hostText\n                                \n                                \n                                    tooltipSize\n                                \n                                \n                                    isTooltipVisible\n                                \n                                \n                                    tooltipText\n                                \n                                \n                                    tooltipPosition\n                                \n                                \n                                    tooltipCount\n                                \n                                \n                                    tooltipVisibility\n                                \n                                \n                                    tooltipContent\n                                \n                                \n                                    tooltip\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fixture: ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                        ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.fixture.componentInstance\n\n                        \n                    \n                    \n                        \n                            Default value : this.fixture.componentInstance\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.componentInstance.directive.mouseoutDelay\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.directive.mouseoutDelay\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.div.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            secondHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.div2.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOffHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOffHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOffTooltip\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOffTooltip()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverSecondHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverSecondHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverTooltip\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverTooltip()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(width: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hostPosition\n                    \n                \n\n\n                \n                    \n                        sethostPosition(quadrant)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            quadrant\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n\n                \n                    \n                        setdisabled(disabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            disabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hostText\n                    \n                \n\n\n                \n                    \n                        sethostText(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipSize\n                    \n                \n\n                \n                    \n                        gettooltipSize()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTooltipVisible\n                    \n                \n\n                \n                    \n                        getisTooltipVisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipText\n                    \n                \n\n                \n                    \n                        gettooltipText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipPosition\n                    \n                \n\n                \n                    \n                        gettooltipPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipCount\n                    \n                \n\n                \n                    \n                        gettooltipCount()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipVisibility\n                    \n                \n\n                \n                    \n                        gettooltipVisibility()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipContent\n                    \n                \n\n                \n                    \n                        gettooltipContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n\n                \n                    \n                        gettooltip()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:114\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { ShowClippedTextDirective, TooltipPosition } from './show-clipped-text.directive';\n\n/**\n * Used to remove DOM specific code from the jasmine tests while testing this directive\n */\nexport class ShowClippedTextDirectiveTestHelper {\n    constructor(private fixture: ComponentFixture) {}\n\n    public componentInstance = this.fixture.componentInstance;\n\n    public hideDelay = this.componentInstance.directive.mouseoutDelay;\n\n    private host: HTMLElement = this.componentInstance.div.nativeElement;\n\n    private secondHost: HTMLElement = this.componentInstance.div2.nativeElement;\n\n    set width(width: string) {\n        this.host.style.width = width;\n    }\n\n    set hostPosition(quadrant: TooltipPosition) {\n        this.host.style.position = 'absolute';\n        const defaults = { top: '', left: '', bottom: '', right: '' };\n        if (quadrant === TooltipPosition.tl) {\n            Object.assign(defaults, { top: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.tr) {\n            Object.assign(defaults, { top: '0', right: '0' });\n        } else if (quadrant === TooltipPosition.bl) {\n            Object.assign(defaults, { bottom: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.br) {\n            Object.assign(defaults, { bottom: '0', right: '0' });\n        }\n\n        Object.assign(this.host.style, defaults);\n    }\n\n    set disabled(disabled: boolean) {\n        this.componentInstance.disabled = disabled;\n        this.fixture.detectChanges();\n    }\n\n    set hostText(text: string) {\n        this.componentInstance.text = text;\n        this.fixture.detectChanges();\n    }\n\n    get tooltipSize(): number {\n        return this.tooltipContent.offsetWidth;\n    }\n\n    moveMouseOverHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverSecondHost(): void {\n        this.secondHost.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOffHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    moveMouseOffTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    get isTooltipVisible(): boolean {\n        return !!this.tooltip && (this.tooltip.style.opacity === '1' || this.tooltip.style.opacity === '');\n    }\n\n    get tooltipText(): string {\n        return this.tooltipContent.innerText;\n    }\n\n    get tooltipPosition(): TooltipPosition {\n        const classes = this.tooltipContent.classList;\n        for (const className of Array.from(classes)) {\n            for (const key of Object.keys(TooltipPosition)) {\n                if (TooltipPosition[key] === className) {\n                    return TooltipPosition[key] as TooltipPosition;\n                }\n            }\n        }\n        return null;\n    }\n\n    public get tooltipCount(): number {\n        return document.querySelectorAll('.tooltip.vcd-show-clipped-text').length;\n    }\n\n    public get tooltipVisibility(): string {\n        return this.tooltipContent.style.visibility;\n    }\n\n    public destroy(): void {\n        this.fixture.destroy();\n    }\n\n    private get tooltipContent(): HTMLElement {\n        return this.tooltip.querySelector('.tooltip-content');\n    }\n\n    private get tooltip(): HTMLElement {\n        return document.querySelector('.tooltip.vcd-show-clipped-text');\n    }\n}\n\n@Component({\n    template: `\n        {{ text }}\n        {{ text2 }}\n    `,\n})\nexport class ShowClippedTextDirectiveTestHostComponent {\n    @ViewChild(ShowClippedTextDirective) directive!: ShowClippedTextDirective;\n    @ViewChild('div') div!: ElementRef;\n    @ViewChild('div2') div2!: ElementRef;\n\n    public text = 'texting';\n    public text2 = 'texting too';\n    public disabled = false;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowClippedTextDirectiveTestHostComponent.html":{"url":"components/ShowClippedTextDirectiveTestHostComponent.html","title":"component - ShowClippedTextDirectiveTestHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShowClippedTextDirectiveTestHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                {{ text }}\n{{ text2 }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                directive\n                            \n                            \n                                    Public\n                                disabled\n                            \n                            \n                                div\n                            \n                            \n                                div2\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                text2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            directive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ShowClippedTextDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ShowClippedTextDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            div\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('div')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            div2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('div2')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'texting'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'texting too'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:131\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { ShowClippedTextDirective, TooltipPosition } from './show-clipped-text.directive';\n\n/**\n * Used to remove DOM specific code from the jasmine tests while testing this directive\n */\nexport class ShowClippedTextDirectiveTestHelper {\n    constructor(private fixture: ComponentFixture) {}\n\n    public componentInstance = this.fixture.componentInstance;\n\n    public hideDelay = this.componentInstance.directive.mouseoutDelay;\n\n    private host: HTMLElement = this.componentInstance.div.nativeElement;\n\n    private secondHost: HTMLElement = this.componentInstance.div2.nativeElement;\n\n    set width(width: string) {\n        this.host.style.width = width;\n    }\n\n    set hostPosition(quadrant: TooltipPosition) {\n        this.host.style.position = 'absolute';\n        const defaults = { top: '', left: '', bottom: '', right: '' };\n        if (quadrant === TooltipPosition.tl) {\n            Object.assign(defaults, { top: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.tr) {\n            Object.assign(defaults, { top: '0', right: '0' });\n        } else if (quadrant === TooltipPosition.bl) {\n            Object.assign(defaults, { bottom: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.br) {\n            Object.assign(defaults, { bottom: '0', right: '0' });\n        }\n\n        Object.assign(this.host.style, defaults);\n    }\n\n    set disabled(disabled: boolean) {\n        this.componentInstance.disabled = disabled;\n        this.fixture.detectChanges();\n    }\n\n    set hostText(text: string) {\n        this.componentInstance.text = text;\n        this.fixture.detectChanges();\n    }\n\n    get tooltipSize(): number {\n        return this.tooltipContent.offsetWidth;\n    }\n\n    moveMouseOverHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverSecondHost(): void {\n        this.secondHost.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOffHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    moveMouseOffTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    get isTooltipVisible(): boolean {\n        return !!this.tooltip && (this.tooltip.style.opacity === '1' || this.tooltip.style.opacity === '');\n    }\n\n    get tooltipText(): string {\n        return this.tooltipContent.innerText;\n    }\n\n    get tooltipPosition(): TooltipPosition {\n        const classes = this.tooltipContent.classList;\n        for (const className of Array.from(classes)) {\n            for (const key of Object.keys(TooltipPosition)) {\n                if (TooltipPosition[key] === className) {\n                    return TooltipPosition[key] as TooltipPosition;\n                }\n            }\n        }\n        return null;\n    }\n\n    public get tooltipCount(): number {\n        return document.querySelectorAll('.tooltip.vcd-show-clipped-text').length;\n    }\n\n    public get tooltipVisibility(): string {\n        return this.tooltipContent.style.visibility;\n    }\n\n    public destroy(): void {\n        this.fixture.destroy();\n    }\n\n    private get tooltipContent(): HTMLElement {\n        return this.tooltip.querySelector('.tooltip-content');\n    }\n\n    private get tooltip(): HTMLElement {\n        return document.querySelector('.tooltip.vcd-show-clipped-text');\n    }\n}\n\n@Component({\n    template: `\n        {{ text }}\n        {{ text2 }}\n    `,\n})\nexport class ShowClippedTextDirectiveTestHostComponent {\n    @ViewChild(ShowClippedTextDirective) directive!: ShowClippedTextDirective;\n    @ViewChild('div') div!: ElementRef;\n    @ViewChild('div2') div2!: ElementRef;\n\n    public text = 'texting';\n    public text2 = 'texting too';\n    public disabled = false;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}{{ text2 }}'\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShowClippedTextDirectiveTestHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SortedColumn.html":{"url":"interfaces/SortedColumn.html","title":"interface - SortedColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SortedColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information about the currently sorted column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        reverse\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the column that is sorted.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reverse\n                                    \n                                \n                                \n                                    \n                                        reverse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the column is sorted normally or reversed.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerActivityReporterComponent.html":{"url":"components/SpinnerActivityReporterComponent.html","title":"component - SpinnerActivityReporterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerActivityReporterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts\n\n\n    \n        Description\n    \n    \n        Spinner activity reporter shows the spinner until an error or success message is returned.\nAn error message is displayed through the error banner.\n\n    \n\n    \n        Extends\n    \n    \n                ActivityReporter\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-spinner-activity-reporter\n            \n\n\n\n\n            \n                templateUrl\n                ./spinner-activity-reporter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorText\n                            \n                            \n                                    Public\n                                running\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reportError\n                            \n                            \n                                reportSuccess\n                            \n                            \n                                startActivity\n                            \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \nreportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:44\n                \n            \n\n\n            \n                \n                    Hides the loading indicator and shows an error message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nreportSuccess()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:52\n                \n            \n\n\n            \n                \n                    Hides the loading indicator.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \nstartActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:36\n                \n            \n\n\n            \n                \n                    Begins to show the loading indicator to the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:73\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:53\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:27\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:33\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:27\n                            \n                        \n\n                \n                    \n                        When set show the error text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:22\n                            \n                        \n\n                \n                    \n                        When true show the spinner\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { ActivityPromiseResolver } from './activity-promise-resolver';\nimport { ActivityReporter } from './activity-reporter';\n\n/**\n * Spinner activity reporter shows the spinner until an error or success message is returned.\n * An error message is displayed through the error banner.\n */\n@Component({\n    selector: 'vcd-spinner-activity-reporter',\n    templateUrl: './spinner-activity-reporter.component.html',\n})\nexport class SpinnerActivityReporterComponent extends ActivityReporter {\n    /**\n     * When true show the spinner\n     */\n    public running = false;\n\n    /**\n     * When set show the error text\n     */\n    public errorText: string = null;\n\n    constructor(@Inject(ActivityPromiseResolver) promiseResolver: ActivityPromiseResolver) {\n        super(promiseResolver);\n    }\n\n    /**\n     * Begins to show the loading indicator to the user.\n     */\n    startActivity(): void {\n        this.running = true;\n        this.errorText = null;\n    }\n\n    /**\n     * Hides the loading indicator and shows an error message.\n     */\n    reportError(errorText: string): void {\n        this.errorText = errorText;\n        this.running = false;\n    }\n\n    /**\n     * Hides the loading indicator.\n     */\n    reportSuccess(): void {\n        this.running = false;\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerActivityReporterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpinnerActivityReporterWidgetObject.html":{"url":"classes/SpinnerActivityReporterWidgetObject.html","title":"class - SpinnerActivityReporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpinnerActivityReporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSpinner\n                            \n                            \n                                    Public\n                                isSpinnerSpinning\n                            \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    running\n                                \n                                \n                                    errorText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-spinner-activity-reporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSpinner\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpinner()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:24\n                \n            \n\n\n            \n                \n                    Gives the spinner for this element\n\n\n                    \n                        Returns :         DebugElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isSpinnerSpinning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSpinnerSpinning()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        running\n                    \n                \n\n                \n                    \n                        getrunning()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorText\n                    \n                \n\n                \n                    \n                        geterrorText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DebugElement } from '@angular/core';\nimport { SpinnerActivityReporterComponent } from '../../../common/activity-reporter';\nimport { WidgetObject } from '../widget-object';\n\nexport class SpinnerActivityReporterWidgetObject extends WidgetObject {\n    static tagName = 'vcd-spinner-activity-reporter';\n\n    get running(): boolean {\n        return this.component.running;\n    }\n\n    get errorText(): string {\n        return this.component.errorText;\n    }\n\n    /**\n     * Gives the spinner for this element\n     */\n    private getSpinner(): DebugElement {\n        const element = this.findElement('.spinner');\n\n        if (!element) {\n            throw new Error('Could not find the spinner element.');\n        }\n        return element;\n    }\n\n    public isSpinnerSpinning(): boolean {\n        try {\n            return !!this.getSpinner();\n        } catch (error) {\n            return false;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubscriptionTracker.html":{"url":"classes/SubscriptionTracker.html","title":"class - SubscriptionTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubscriptionTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/subscription/subscription-tracker.ts\n        \n\n            \n                Description\n            \n            \n                Components can use this to have subscriptions automatically removed when the component is destroyed\n\n            \n\n\n            \n                Implements\n            \n            \n                            ISubscriptionTracker\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(destroyable: OnDestroy)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/subscription/subscription-tracker.ts:40\n                            \n                        \n\n                \n                    \n                            Constructs this tracker to call unsubscribeAll when OnDestroy.ngOnDestroy is called.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        destroyable\n                                                  \n                                                        \n                                                                        OnDestroy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observable: Observable, observerOrNext?: PartialObserver | , error?: (error?: any) => void, complete?: () => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:53\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observerOrNext\n                                    \n                                            PartialObserver | \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    complete\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy } from '@angular/core';\nimport { Observable, PartialObserver, Subscription } from 'rxjs';\nimport { toSubscriber } from 'rxjs/internal-compatibility';\n\n/**\n * An interface that knows how to subscribe and unsubscribe from observables.\n */\nexport interface ISubscriptionTracker {\n    /**\n     * Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\n     * Will call the {@param complete} when complete, and {@param error} when errors happen.\n     */\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription;\n\n    /**\n     * Unsubscribes from the given {@param subscription}.\n     */\n    unsubscribe(subscription: Subscription): Subscription;\n\n    /**\n     * Unsubscribes from all subscriptions on this {@link Subscribable}.\n     */\n    unsubscribeAll(): void;\n}\n\n/**\n * Components can use this to have subscriptions automatically removed when the component is destroyed\n */\nexport class SubscriptionTracker implements ISubscriptionTracker {\n    private subscriptions: Subscription[] = [];\n\n    /**\n     * Constructs this tracker to call {@link unsubscribeAll} when {@link OnDestroy.ngOnDestroy} is called.\n     */\n    constructor(destroyable: OnDestroy) {\n        const originalOnDestroy = destroyable.ngOnDestroy;\n        destroyable.ngOnDestroy = () => {\n            this.unsubscribeAll();\n            originalOnDestroy.call(destroyable);\n        };\n    }\n\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription {\n        const subscription = observable.subscribe(toSubscriber(observerOrNext, error, complete));\n        this.subscriptions.push(subscription);\n        return subscription;\n    }\n\n    unsubscribe(subscription: Subscription): Subscription {\n        subscription.unsubscribe();\n        const indexOfSubscription = this.subscriptions.indexOf(subscription);\n        if (indexOfSubscription === -1) {\n            throw new Error('Unsubscribing to untracked subscription');\n        }\n        this.subscriptions.splice(indexOfSubscription, 1);\n        return subscription;\n    }\n\n    unsubscribeAll(): void {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestElement.html":{"url":"classes/TestElement.html","title":"class - TestElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around an array of DebugElements that adds convenience methods.\nAvoid accessing the debug elements at all costs.\nCan be used in a for ... of ... loop to inspect all the sub elements within this TestElement.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Iterable\n            \n\n            \n                Example\n            \n            \n                        \n                            for (const el of testElement) {\nexpect(el.enabled()).toBeTruthy()\n}\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elements\n                            \n                            \n                                    Public\n                                fixture\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                clear\n                            \n                            \n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                enabled\n                            \n                            \n                                length\n                            \n                            \n                                text\n                            \n                            \n                                toArray\n                            \n                            \n                                value\n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elements: DebugElement[], fixture: ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elements\n                                                  \n                                                        \n                                                                    DebugElement[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                    ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DebugElement[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:97\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            blur\n                        \n                        \n                    \n                \n            \n            \n                \nblur()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:131\n                \n            \n\n\n            \n                \n                    Blurs all the contained elements.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:139\n                \n            \n\n\n            \n                \n                    Clears the input on all the contained elements.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:123\n                \n            \n\n\n            \n                \n                    Clicks all of the elements contained.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:154\n                \n            \n\n\n            \n                \n                    Runs change detection with the component fixture.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enabled\n                        \n                        \n                    \n                \n            \n            \n                \nenabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:116\n                \n            \n\n\n            \n                \n                    Says if this element is enabled.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            length\n                        \n                        \n                    \n                \n            \n            \n                \nlength()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:147\n                \n            \n\n\n            \n                \n                    Says how many elements are contained in this TestElement.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:102\n                \n            \n\n\n            \n                \n                    Gives the text of the first element.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toArray\n                        \n                        \n                    \n                \n            \n            \n                \ntoArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:161\n                \n            \n\n\n            \n                \n                    Gives the elements contained within this TestElement where each element is its own TestElement\n\n\n                    \n                        Returns :         TestElement[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:109\n                \n            \n\n\n            \n                \n                    Gives the value of the first element.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            \n                        \n                        \n                    \n                \n            \n            \n                \n()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:168\n                \n            \n\n\n            \n                \n                    Allows a TestElement to be used in a for ... of ... loop.\n\n\n                    \n                        Returns :         Iterator\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularWidgetObjectFinder } from './angular-widget-finder';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes, LocatorDriver } from './widget-object';\n\n/**\n * Knows how to find Angular TestElements in the DOM.\n */\nexport class AngularLocatorDriver implements LocatorDriver {\n    constructor(private testElement: TestElement, private rootElement: DebugElement) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        const nextElements = [].concat(...elements.map((element) => element.queryAll(By.css(cssSelector))));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        let nextElements: DebugElement[] = [].concat(\n            ...elements.map((element) => element.queryAll(By.css(cssSelector)))\n        );\n        nextElements = nextElements.filter((el) => el.nativeElement.textContent.includes(value));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string): AngularLocatorDriver {\n        return new AngularLocatorDriver(\n            new TestElement(\n                this.testElement.elements.map((el) => this.findParent(cssSelector, el.parent)),\n                this.testElement.fixture\n            ),\n            this.rootElement\n        );\n    }\n\n    /**\n     * Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\n     * Checks the given element.\n     */\n    private findParent(cssSelector: string, debugElement: DebugElement): DebugElement {\n        if (!debugElement) {\n            return undefined;\n        } else if (debugElement.nativeElement.matches(cssSelector)) {\n            return debugElement;\n        } else {\n            return this.findParent(cssSelector, debugElement.parent);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): TestElement {\n        return this.testElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        return new AngularWidgetObjectFinder(this.testElement.fixture).find(widget, this.rootElement, cssSelector);\n    }\n}\n\n/**\n * A wrapper around an array of DebugElements that adds convenience methods.\n * Avoid accessing the debug elements at all costs.\n *\n * Can be used in a `for ... of ...` loop to inspect all the sub elements within this TestElement.\n *\n * @example\n * for (const el of testElement) {\n *     expect(el.enabled()).toBeTruthy()\n * }\n */\nexport class TestElement implements Iterable {\n    constructor(public elements: DebugElement[], public fixture: ComponentFixture) {}\n\n    /**\n     * Gives the text of the first element.\n     */\n    text(): string {\n        return this.elements[0].nativeElement.textContent.trim();\n    }\n\n    /**\n     * Gives the value of the first element.\n     */\n    value(): string {\n        return this.elements[0].nativeElement.value;\n    }\n\n    /**\n     * Says if this element is enabled.\n     */\n    enabled(): boolean {\n        return !this.elements[0].nativeElement.disabled;\n    }\n\n    /**\n     * Clicks all of the elements contained.\n     */\n    click(): void {\n        this.elements.map((element) => element.nativeElement.click());\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Blurs all the contained elements.\n     */\n    blur(): void {\n        this.elements.map((el) => el.nativeElement.dispatchEvent(new Event('blur')));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Clears the input on all the contained elements.\n     */\n    clear(): void {\n        this.elements.map((el) => (el.nativeElement.value = ''));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Says how many elements are contained in this TestElement.\n     */\n    length(): number {\n        return this.elements.length;\n    }\n\n    /**\n     * Runs change detection with the component fixture.\n     */\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Gives the elements contained within this TestElement where each element is its own TestElement\n     */\n    toArray(): TestElement[] {\n        return this.elements.map((el) => new TestElement([el], this.fixture));\n    }\n\n    /**\n     * Allows a TestElement to be used in a `for ... of ...` loop.\n     */\n    [Symbol.iterator](): Iterator {\n        let counter = 0;\n        return {\n            next: () => {\n                counter += 1;\n                return {\n                    done: counter === this.elements.length,\n                    value: new TestElement([this.elements[counter]], this.fixture),\n                };\n            },\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThousandsUnit.html":{"url":"classes/ThousandsUnit.html","title":"class - ThousandsUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThousandsUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of 1000\n\n            \n\n            \n                Extends\n            \n            \n                        NumberUnit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUnitMultiplier\n                            \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:89\n\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:112\n\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Unit.html":{"url":"classes/Unit.html","title":"class - Unit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Unit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to define different types of units with unitName and\nmultiplier that converts to baseUnit.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(multiplier: number, unitName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        multiplier\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nValue that is used to convert this to base unit\n\n\n                                                        \n                                                \n                                                \n                                                        unitName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the Unit. Also used to construct translation\nkeys for each type of Unit.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:71\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:45\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:37\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:61\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:54\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UnitFormatter.html":{"url":"injectables/UnitFormatter.html","title":"injectable - UnitFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UnitFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit-formatter.ts\n        \n\n            \n                Description\n            \n            \n                UnitFormatter is used to format the value with unitName in localized string\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bestFormat\n                            \n                            \n                                format\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit-formatter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bestFormat\n                        \n                        \n                    \n                \n            \n            \n                \nbestFormat(value: number, inputUnit: Unit, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit-formatter.ts:46\n                \n            \n\n\n            \n                \n                    Converts the value of inputUnit to best unit out of availableUnits and returns\nin localized string format ${value} ${outputUnit.unitName}\nEx: bestFormat(1000000, Unit.KB, [Unit.KB, Unit.MB, Unit.GB]) = \"1 GB\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        = value of inputUnit\n\n                                    \n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit of value\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlist of units from which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(value: number, inputUnit: Unit, outputUnit: Unit, precision?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit-formatter.ts:29\n                \n            \n\n\n            \n                \n                    Converts the value of inputUnit to outPutUnit returns in\nlocalized string format ${value} ${outputUnit.unitName}\nEx: format(1000, Unit.MB, Unit.GB, 2) = \"1 GB\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nvalue of inputUnit\n\n\n                                    \n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit of value\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit to which value is converted\n\n\n                                    \n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nhow many digits are shown after decimal\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { CommonUtil } from '../common-util';\nimport { Unit } from './unit';\n\n/**\n * UnitFormatter is used to format the value with unitName in localized string\n */\n@Injectable()\nexport class UnitFormatter {\n    constructor(private translationService: TranslationService) {}\n\n    /**\n     * Converts the value of inputUnit to outPutUnit returns in\n     * localized string format `${value} ${outputUnit.unitName}`\n     *\n     * Ex: format(1000, Unit.MB, Unit.GB, 2) = \"1 GB\"\n     *\n     * @param value - value of inputUnit\n     * @param inputUnit - unit of value\n     * @param outputUnit - unit to which value is converted\n     * @param precision - how many digits are shown after decimal\n     */\n    format(value: number, inputUnit: Unit, outputUnit: Unit, precision?: number): string {\n        // TODO response from getOutputValue() needs to be formatted to localized number\n        return this.translationService.translate(outputUnit.getValueWithUnitTranslationKey(), [\n            CommonUtil.roundTo(inputUnit.getOutputValue(value, outputUnit), precision),\n        ]);\n    }\n\n    /**\n     * Converts the value of inputUnit to best unit out of availableUnits and returns\n     * in localized string format `${value} ${outputUnit.unitName}`\n     *\n     * Ex: bestFormat(1000000, Unit.KB, [Unit.KB, Unit.MB, Unit.GB]) = \"1 GB\"\n     *\n     * @param value = value of inputUnit\n     * @param inputUnit - unit of value\n     * @param availableUnits - list of units from which best unit is calculated\n     */\n    bestFormat(value: number, inputUnit: Unit, availableUnits: Unit[]): string {\n        return this.format(value, inputUnit, inputUnit.findBestUnit(value, availableUnits));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdActionMenuModule.html":{"url":"modules/VcdActionMenuModule.html","title":"module - VcdActionMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdActionMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdActionMenuModule\n\n\n\ncluster_VcdActionMenuModule_declarations\n\n\n\ncluster_VcdActionMenuModule_imports\n\n\n\ncluster_VcdActionMenuModule_exports\n\n\n\n\nActionMenuComponent\n\nActionMenuComponent\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdActionMenuModule -->\n\nActionMenuComponent->VcdActionMenuModule\n\n\n\n\n\nActionMenuComponent \n\nActionMenuComponent \n\nActionMenuComponent  -->\n\nVcdActionMenuModule->ActionMenuComponent \n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nVcdActionMenuModule -->\n\nDropdownModule->VcdActionMenuModule\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nVcdActionMenuModule -->\n\nShowClippedTextDirectiveModule->VcdActionMenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/action-menu/action-menu.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionMenuComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DropdownModule\n                        \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { DropdownModule } from '../dropdown/dropdown.module';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { ActionMenuComponent } from './action-menu.component';\n\n@NgModule({\n    imports: [ClarityModule, CommonModule, I18nModule, DropdownModule, ShowClippedTextDirectiveModule],\n    declarations: [ActionMenuComponent],\n    providers: [],\n    exports: [ActionMenuComponent],\n})\nexport class VcdActionMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdActivityReporterModule.html":{"url":"modules/VcdActivityReporterModule.html","title":"module - VcdActivityReporterModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdActivityReporterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdActivityReporterModule\n\n\n\ncluster_VcdActivityReporterModule_declarations\n\n\n\ncluster_VcdActivityReporterModule_imports\n\n\n\ncluster_VcdActivityReporterModule_exports\n\n\n\n\nBannerActivityReporterComponent\n\nBannerActivityReporterComponent\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule -->\n\nBannerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nSpinnerActivityReporterComponent\n\nSpinnerActivityReporterComponent\n\nVcdActivityReporterModule -->\n\nSpinnerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent  -->\n\nVcdActivityReporterModule->BannerActivityReporterComponent \n\n\n\n\n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent  -->\n\nVcdActivityReporterModule->SpinnerActivityReporterComponent \n\n\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdActivityReporterModule -->\n\nVcdErrorBannerModule->VcdActivityReporterModule\n\n\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdActivityReporterModule -->\n\nVcdLoadingIndicatorModule->VcdActivityReporterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-reporter.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VcdErrorBannerModule\n                        \n                        \n                            VcdLoadingIndicatorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdErrorBannerModule } from '../error/error-banner.module';\nimport { VcdLoadingIndicatorModule } from '../loading/loading-indicator.module';\nimport { BannerActivityReporterComponent } from './banner-activity-reporter.component';\nimport { SpinnerActivityReporterComponent } from './spinner-activity-reporter.component';\n\n@NgModule({\n    declarations: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n    imports: [CommonModule, ClarityModule, I18nModule, VcdErrorBannerModule, VcdLoadingIndicatorModule],\n    exports: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n    entryComponents: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n})\nexport class VcdActivityReporterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdComponentsModule.html":{"url":"modules/VcdComponentsModule.html","title":"module - VcdComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdComponentsModule\n\n\n\ncluster_VcdComponentsModule_exports\n\n\n\n\nDropdownModule \n\nDropdownModule \n\n\n\nQuickSearchModule \n\nQuickSearchModule \n\n\n\nShowClippedTextDirectiveModule \n\nShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule \n\nVcdActionMenuModule \n\n\n\nVcdActivityReporterModule \n\nVcdActivityReporterModule \n\n\n\nVcdDataExporterModule \n\nVcdDataExporterModule \n\n\n\nVcdDatagridModule \n\nVcdDatagridModule \n\n\n\nVcdErrorBannerModule \n\nVcdErrorBannerModule \n\n\n\nVcdFormModule \n\nVcdFormModule \n\n\n\nVcdLoadingIndicatorModule \n\nVcdLoadingIndicatorModule \n\n\n\nVcdComponentsModule\n\nVcdComponentsModule\n\nDropdownModule  -->\n\nVcdComponentsModule->DropdownModule \n\n\n\nQuickSearchModule  -->\n\nVcdComponentsModule->QuickSearchModule \n\n\n\nShowClippedTextDirectiveModule  -->\n\nVcdComponentsModule->ShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule  -->\n\nVcdComponentsModule->VcdActionMenuModule \n\n\n\nVcdActivityReporterModule  -->\n\nVcdComponentsModule->VcdActivityReporterModule \n\n\n\nVcdDataExporterModule  -->\n\nVcdComponentsModule->VcdDataExporterModule \n\n\n\nVcdDatagridModule  -->\n\nVcdComponentsModule->VcdDatagridModule \n\n\n\nVcdErrorBannerModule  -->\n\nVcdComponentsModule->VcdErrorBannerModule \n\n\n\nVcdFormModule  -->\n\nVcdComponentsModule->VcdFormModule \n\n\n\nVcdLoadingIndicatorModule  -->\n\nVcdComponentsModule->VcdLoadingIndicatorModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            DropdownModule\n                        \n                        \n                            QuickSearchModule\n                        \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                        \n                            VcdActionMenuModule\n                        \n                        \n                            VcdActivityReporterModule\n                        \n                        \n                            VcdDataExporterModule\n                        \n                        \n                            VcdDatagridModule\n                        \n                        \n                            VcdErrorBannerModule\n                        \n                        \n                            VcdFormModule\n                        \n                        \n                            VcdLoadingIndicatorModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { VcdActionMenuModule } from './action-menu/index';\nimport { VcdActivityReporterModule } from './common/activity-reporter/activity-reporter.module';\nimport { VcdErrorBannerModule } from './common/error/error-banner.module';\nimport { VcdLoadingIndicatorModule } from './common/loading/loading-indicator.module';\nimport { VcdDataExporterModule } from './data-exporter/data-exporter.module';\nimport { VcdDatagridModule } from './datagrid/datagrid.module';\nimport { DropdownModule } from './dropdown/dropdown.module';\nimport { VcdFormModule } from './form/form.module';\nimport { ShowClippedTextDirectiveModule } from './lib/directives/show-clipped-text.directive.module';\nimport { QuickSearchModule } from './quick-search/quick-search.module';\n\n@NgModule({\n    exports: [\n        VcdDataExporterModule,\n        VcdDatagridModule,\n        ShowClippedTextDirectiveModule,\n        VcdErrorBannerModule,\n        VcdLoadingIndicatorModule,\n        VcdActivityReporterModule,\n        VcdFormModule,\n        QuickSearchModule,\n        VcdActionMenuModule,\n        DropdownModule,\n    ],\n})\nexport class VcdComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdDataExporterModule.html":{"url":"modules/VcdDataExporterModule.html","title":"module - VcdDataExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdDataExporterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdDataExporterModule\n\n\n\ncluster_VcdDataExporterModule_declarations\n\n\n\ncluster_VcdDataExporterModule_exports\n\n\n\n\nDataExporterComponent\n\nDataExporterComponent\n\n\n\nVcdDataExporterModule\n\nVcdDataExporterModule\n\nVcdDataExporterModule -->\n\nDataExporterComponent->VcdDataExporterModule\n\n\n\n\n\nDataExporterComponent \n\nDataExporterComponent \n\nDataExporterComponent  -->\n\nVcdDataExporterModule->DataExporterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataExporterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataExporterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { DataExporterComponent } from './data-exporter.component';\n\n@NgModule({\n    declarations: [DataExporterComponent],\n    imports: [CommonModule, ReactiveFormsModule, ClarityModule, I18nModule],\n    exports: [DataExporterComponent],\n})\nexport class VcdDataExporterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdDatagridModule.html":{"url":"modules/VcdDatagridModule.html","title":"module - VcdDatagridModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdDatagridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdDatagridModule\n\n\n\ncluster_VcdDatagridModule_declarations\n\n\n\ncluster_VcdDatagridModule_imports\n\n\n\ncluster_VcdDatagridModule_exports\n\n\n\n\nBoldTextRendererComponent\n\nBoldTextRendererComponent\n\n\n\nVcdDatagridModule\n\nVcdDatagridModule\n\nVcdDatagridModule -->\n\nBoldTextRendererComponent->VcdDatagridModule\n\n\n\n\n\nComponentRendererOutletDirective\n\nComponentRendererOutletDirective\n\nVcdDatagridModule -->\n\nComponentRendererOutletDirective->VcdDatagridModule\n\n\n\n\n\nDatagridComponent\n\nDatagridComponent\n\nVcdDatagridModule -->\n\nDatagridComponent->VcdDatagridModule\n\n\n\n\n\nDatagridMultiSelectFilterComponent\n\nDatagridMultiSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridMultiSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridNumericFilterComponent\n\nDatagridNumericFilterComponent\n\nVcdDatagridModule -->\n\nDatagridNumericFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridSelectFilterComponent\n\nDatagridSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridStringFilterComponent\n\nDatagridStringFilterComponent\n\nVcdDatagridModule -->\n\nDatagridStringFilterComponent->VcdDatagridModule\n\n\n\n\n\nFunctionRendererPipe\n\nFunctionRendererPipe\n\nVcdDatagridModule -->\n\nFunctionRendererPipe->VcdDatagridModule\n\n\n\n\n\nBoldTextRendererComponent \n\nBoldTextRendererComponent \n\nBoldTextRendererComponent  -->\n\nVcdDatagridModule->BoldTextRendererComponent \n\n\n\n\n\nDatagridComponent \n\nDatagridComponent \n\nDatagridComponent  -->\n\nVcdDatagridModule->DatagridComponent \n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nVcdDatagridModule -->\n\nShowClippedTextDirectiveModule->VcdDatagridModule\n\n\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdDatagridModule -->\n\nVcdActionMenuModule->VcdDatagridModule\n\n\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdDatagridModule -->\n\nVcdActivityReporterModule->VcdDatagridModule\n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdDatagridModule -->\n\nVcdFormModule->VcdDatagridModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoldTextRendererComponent\n                        \n                        \n                            ComponentRendererOutletDirective\n                        \n                        \n                            DatagridComponent\n                        \n                        \n                            DatagridMultiSelectFilterComponent\n                        \n                        \n                            DatagridNumericFilterComponent\n                        \n                        \n                            DatagridSelectFilterComponent\n                        \n                        \n                            DatagridStringFilterComponent\n                        \n                        \n                            FunctionRendererPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            filters\n                        \n                        \n                            renderers\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                        \n                            VcdActionMenuModule\n                        \n                        \n                            VcdActivityReporterModule\n                        \n                        \n                            VcdFormModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoldTextRendererComponent\n                        \n                        \n                            DatagridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdActionMenuModule } from '../action-menu/action-menu.module';\nimport { VcdActivityReporterModule } from '../common/activity-reporter/activity-reporter.module';\nimport { PipesModule } from '../common/pipes/pipes.module';\nimport { VcdFormModule } from '../form/form.module';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { DatagridComponent } from './datagrid.component';\nimport { ComponentRendererOutletDirective } from './directives/component-renderer-outlet.directive';\nimport { DatagridMultiSelectFilterComponent } from './filters/datagrid-multiselect-filter.component';\nimport { DatagridNumericFilterComponent } from './filters/datagrid-numeric-filter.component';\nimport { DatagridSelectFilterComponent } from './filters/datagrid-select-filter.component';\nimport { DatagridStringFilterComponent } from './filters/datagrid-string-filter.component';\nimport { FunctionRendererPipe } from './pipes/function-renderer.pipe';\nimport { BoldTextRendererComponent } from './renderers/bold-text-renderer.component';\n\nconst directives = [ComponentRendererOutletDirective];\nconst pipes = [FunctionRendererPipe];\nconst renderers = [BoldTextRendererComponent];\nconst filters = [\n    DatagridNumericFilterComponent,\n    DatagridStringFilterComponent,\n    DatagridSelectFilterComponent,\n    DatagridMultiSelectFilterComponent,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ClarityModule,\n        RouterModule,\n        PipesModule,\n        ReactiveFormsModule,\n        ShowClippedTextDirectiveModule,\n        FormsModule,\n        I18nModule,\n        VcdActivityReporterModule,\n        VcdFormModule,\n        VcdActionMenuModule,\n    ],\n    declarations: [DatagridComponent, ...directives, ...renderers, ...pipes, ...filters],\n    providers: [],\n    exports: [DatagridComponent, ...renderers],\n    entryComponents: [...renderers, ...filters],\n})\nexport class VcdDatagridModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VcdDatagridWidgetObject.html":{"url":"classes/VcdDatagridWidgetObject.html","title":"class - VcdDatagridWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VcdDatagridWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts\n        \n\n            \n                Description\n            \n            \n                Widget Object for our VCD DataGrid\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gridHeader\n                                \n                                \n                                    clrDatagrid\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `vcd-datagrid`\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gridHeader\n                    \n                \n\n                \n                    \n                        getgridHeader()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:19\n                                \n                            \n                    \n                        \n                                Gives the header above the grid.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        clrDatagrid\n                    \n                \n\n                \n                    \n                        getclrDatagrid()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:26\n                                \n                            \n                    \n                        \n                                Gives the widget object for this clr datagrid.\n\n\n                                \n                                    Returns :         ClrDatagridWidgetObject\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { WidgetObject } from '../widget-object';\nimport { DatagridComponent } from './../../../datagrid/datagrid.component';\nimport { ClrDatagridWidgetObject } from './datagrid.wo';\n\n/**\n * Widget Object for our VCD DataGrid\n */\nexport class VcdDatagridWidgetObject extends WidgetObject> {\n    static tagName = `vcd-datagrid`;\n\n    /**\n     * Gives the header above the grid.\n     */\n    get gridHeader(): string {\n        return this.getText('h3');\n    }\n\n    /**\n     * Gives the widget object for this clr datagrid.\n     */\n    get clrDatagrid(): ClrDatagridWidgetObject {\n        const constElement = this.findElement(ClrDatagridWidgetObject.tagName);\n        return new ClrDatagridWidgetObject(this.fixture, constElement, constElement.componentInstance);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdErrorBannerModule.html":{"url":"modules/VcdErrorBannerModule.html","title":"module - VcdErrorBannerModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdErrorBannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdErrorBannerModule\n\n\n\ncluster_VcdErrorBannerModule_declarations\n\n\n\ncluster_VcdErrorBannerModule_exports\n\n\n\n\nErrorBannerComponent\n\nErrorBannerComponent\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule -->\n\nErrorBannerComponent->VcdErrorBannerModule\n\n\n\n\n\nErrorBannerComponent \n\nErrorBannerComponent \n\nErrorBannerComponent  -->\n\nVcdErrorBannerModule->ErrorBannerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/error/error-banner.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { ErrorBannerComponent } from './error-banner.component';\n\n@NgModule({\n    declarations: [ErrorBannerComponent],\n    imports: [CommonModule, ClarityModule, I18nModule],\n    exports: [ErrorBannerComponent],\n    entryComponents: [ErrorBannerComponent],\n})\nexport class VcdErrorBannerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdFormModule.html":{"url":"modules/VcdFormModule.html","title":"module - VcdFormModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdFormModule\n\n\n\ncluster_VcdFormModule_declarations\n\n\n\ncluster_VcdFormModule_exports\n\n\n\ncluster_VcdFormModule_providers\n\n\n\n\nFormCheckboxComponent\n\nFormCheckboxComponent\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdFormModule -->\n\nFormCheckboxComponent->VcdFormModule\n\n\n\n\n\nFormInputComponent\n\nFormInputComponent\n\nVcdFormModule -->\n\nFormInputComponent->VcdFormModule\n\n\n\n\n\nFormSelectComponent\n\nFormSelectComponent\n\nVcdFormModule -->\n\nFormSelectComponent->VcdFormModule\n\n\n\n\n\nNumberWithUnitFormInputComponent\n\nNumberWithUnitFormInputComponent\n\nVcdFormModule -->\n\nNumberWithUnitFormInputComponent->VcdFormModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nVcdFormModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nVcdFormModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nVcdFormModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nVcdFormModule->NumberWithUnitFormInputComponent \n\n\n\n\n\nUnitFormatter\n\nUnitFormatter\n\nVcdFormModule -->\n\nUnitFormatter->VcdFormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UnitFormatter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { UnitFormatter } from '../utils/unit/unit-formatter';\nimport { FormCheckboxComponent } from './form-checkbox/form-checkbox.component';\nimport { FormInputComponent } from './form-input/form-input.component';\nimport { FormSelectComponent } from './form-select/form-select.component';\nimport { NumberWithUnitFormInputComponent } from './number-with-unit-input/number-with-unit-form-input.component';\n\nconst declarations = [FormInputComponent, FormSelectComponent, FormCheckboxComponent, NumberWithUnitFormInputComponent];\n\n@NgModule({\n    imports: [ClarityModule, FormsModule, ReactiveFormsModule, CommonModule, I18nModule],\n    declarations,\n    providers: [UnitFormatter],\n    exports: [...declarations],\n})\nexport class VcdFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VcdFormlyFieldConfig.html":{"url":"interfaces/VcdFormlyFieldConfig.html","title":"interface - VcdFormlyFieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VcdFormlyFieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration of FormlyForm.fields that is specific to Vcd.\n\n            \n\n            \n                Extends\n            \n            \n                    FormlyFieldConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fieldGroup\n                                \n                                \n                                            Optional\n                                        templateOptions\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldGroup\n                                    \n                                \n                                \n                                    \n                                        fieldGroup:         VcdFormlyFieldConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyFieldConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FormlyForm.fields\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateOptions\n                                    \n                                \n                                \n                                    \n                                        templateOptions:         VcdFormlyTemplateOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyTemplateOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    VcdFormlyTemplateOptions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         VcdFormlyInputTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyInputTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    VcdFormlyInputTypes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ConfigOption, FormlyFieldConfig, FormlyTemplateOptions } from '@ngx-formly/core';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { Unit } from '../../utils/unit/unit';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\n\n/**\n * Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n */\nexport interface VcdFormlyTemplateOptions extends FormlyTemplateOptions {\n    options?: SelectOption[] | Observable;\n    inputValueUnit?: Unit;\n    unlimitedValue?: number;\n    showUnlimitedOption?: boolean;\n    unitOptions?: Unit[];\n    isReadOnly?: boolean;\n    hint?: string;\n    hintPosition?: string;\n    errorLabels?: string[];\n    onEnterClicked?: (field: FormlyFieldConfig) => any;\n    onEscapeClicked?: (field: FormlyFieldConfig) => any;\n}\n\n/**\n * Configuration of {@link FormlyForm.fields} that is specific to Vcd.\n */\nexport interface VcdFormlyFieldConfig extends FormlyFieldConfig {\n    /**\n     * {@link VcdFormlyInputTypes}\n     */\n    type?: VcdFormlyInputTypes;\n    /**\n     * {@link VcdFormlyTemplateOptions}\n     */\n    templateOptions?: VcdFormlyTemplateOptions;\n    /**\n     * {@link FormlyForm.fields}\n     */\n    fieldGroup?: VcdFormlyFieldConfig[];\n}\n\n/**\n * Different of Vcd form inputs that are configurable through Formly\n */\nexport enum VcdFormlyInputTypes {\n    /**\n     * Used for identifying {@link FormlyInputComponent} type\n     */\n    input = 'input',\n    /**\n     * Used for identifying {@link FormlySelectComponent} type\n     */\n    select = 'select',\n    /**\n     * Used for identifying {@link FormlyNumberWithUnitInputComponent} type\n     */\n    number_with_unit_input = 'number_with_unit_input',\n}\n\nexport const VCD_FORMLY_CONFIG: ConfigOption = {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdFormlyModule.html":{"url":"modules/VcdFormlyModule.html","title":"module - VcdFormlyModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdFormlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdFormlyModule\n\n\n\ncluster_VcdFormlyModule_declarations\n\n\n\ncluster_VcdFormlyModule_imports\n\n\n\n\nFormlyInputComponent\n\nFormlyInputComponent\n\n\n\nVcdFormlyModule\n\nVcdFormlyModule\n\nVcdFormlyModule -->\n\nFormlyInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlyNumberWithUnitInputComponent\n\nFormlyNumberWithUnitInputComponent\n\nVcdFormlyModule -->\n\nFormlyNumberWithUnitInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlySelectComponent\n\nFormlySelectComponent\n\nVcdFormlyModule -->\n\nFormlySelectComponent->VcdFormlyModule\n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdFormlyModule -->\n\nVcdFormModule->VcdFormlyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormlyInputComponent\n                        \n                        \n                            FormlyNumberWithUnitInputComponent\n                        \n                        \n                            FormlySelectComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VcdFormModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configOption: ConfigOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/vcd-formly.module.ts:37\n                \n            \n\n\n            \n                \n                    Used for passing configuration in addition to default VCD_FORMLY_CONFIG\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    configOption\n                                    \n                                            ConfigOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Additional Formly configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ConfigOption, FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdFormModule } from '../../form/form.module';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\nimport { VCD_FORMLY_CONFIG } from './vcd-formly.config';\n\nconst VCD_FORMLY_INPUT_COMPONENTS = [FormlyInputComponent, FormlySelectComponent, FormlyNumberWithUnitInputComponent];\n\n@NgModule({\n    declarations: [...VCD_FORMLY_INPUT_COMPONENTS],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormlyModule.forChild(VCD_FORMLY_CONFIG),\n        VcdFormModule,\n        FormlySelectModule,\n        I18nModule,\n    ],\n    exports: [],\n})\nexport class VcdFormlyModule {\n    /**\n     * Used for passing configuration in addition to default {@link VCD_FORMLY_CONFIG}\n     * @param configOption Additional Formly configuration\n     */\n    static forRoot(configOption: ConfigOption): ModuleWithProviders {\n        return {\n            ngModule: VcdFormlyModule,\n            providers: [{ provide: FORMLY_CONFIG, useValue: configOption, multi: true }],\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VcdFormlyTemplateOptions.html":{"url":"interfaces/VcdFormlyTemplateOptions.html","title":"interface - VcdFormlyTemplateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VcdFormlyTemplateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.config.ts\n        \n\n            \n                Description\n            \n            \n                Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n\n            \n\n            \n                Extends\n            \n            \n                    FormlyTemplateOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        errorLabels\n                                \n                                \n                                            Optional\n                                        hint\n                                \n                                \n                                            Optional\n                                        hintPosition\n                                \n                                \n                                            Optional\n                                        inputValueUnit\n                                \n                                \n                                            Optional\n                                        isReadOnly\n                                \n                                \n                                            Optional\n                                        onEnterClicked\n                                \n                                \n                                            Optional\n                                        onEscapeClicked\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        showUnlimitedOption\n                                \n                                \n                                            Optional\n                                        unitOptions\n                                \n                                \n                                            Optional\n                                        unlimitedValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorLabels\n                                    \n                                \n                                \n                                    \n                                        errorLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hintPosition\n                                    \n                                \n                                \n                                    \n                                        hintPosition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputValueUnit\n                                    \n                                \n                                \n                                    \n                                        inputValueUnit:         Unit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isReadOnly\n                                    \n                                \n                                \n                                    \n                                        isReadOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEnterClicked\n                                    \n                                \n                                \n                                    \n                                        onEnterClicked:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEscapeClicked\n                                    \n                                \n                                \n                                    \n                                        onEscapeClicked:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         SelectOption[] | Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOption[] | Observable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showUnlimitedOption\n                                    \n                                \n                                \n                                    \n                                        showUnlimitedOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitOptions\n                                    \n                                \n                                \n                                    \n                                        unitOptions:         Unit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlimitedValue\n                                    \n                                \n                                \n                                    \n                                        unlimitedValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConfigOption, FormlyFieldConfig, FormlyTemplateOptions } from '@ngx-formly/core';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { Unit } from '../../utils/unit/unit';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\n\n/**\n * Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n */\nexport interface VcdFormlyTemplateOptions extends FormlyTemplateOptions {\n    options?: SelectOption[] | Observable;\n    inputValueUnit?: Unit;\n    unlimitedValue?: number;\n    showUnlimitedOption?: boolean;\n    unitOptions?: Unit[];\n    isReadOnly?: boolean;\n    hint?: string;\n    hintPosition?: string;\n    errorLabels?: string[];\n    onEnterClicked?: (field: FormlyFieldConfig) => any;\n    onEscapeClicked?: (field: FormlyFieldConfig) => any;\n}\n\n/**\n * Configuration of {@link FormlyForm.fields} that is specific to Vcd.\n */\nexport interface VcdFormlyFieldConfig extends FormlyFieldConfig {\n    /**\n     * {@link VcdFormlyInputTypes}\n     */\n    type?: VcdFormlyInputTypes;\n    /**\n     * {@link VcdFormlyTemplateOptions}\n     */\n    templateOptions?: VcdFormlyTemplateOptions;\n    /**\n     * {@link FormlyForm.fields}\n     */\n    fieldGroup?: VcdFormlyFieldConfig[];\n}\n\n/**\n * Different of Vcd form inputs that are configurable through Formly\n */\nexport enum VcdFormlyInputTypes {\n    /**\n     * Used for identifying {@link FormlyInputComponent} type\n     */\n    input = 'input',\n    /**\n     * Used for identifying {@link FormlySelectComponent} type\n     */\n    select = 'select',\n    /**\n     * Used for identifying {@link FormlyNumberWithUnitInputComponent} type\n     */\n    number_with_unit_input = 'number_with_unit_input',\n}\n\nexport const VCD_FORMLY_CONFIG: ConfigOption = {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdLoadingIndicatorModule.html":{"url":"modules/VcdLoadingIndicatorModule.html","title":"module - VcdLoadingIndicatorModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdLoadingIndicatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdLoadingIndicatorModule\n\n\n\ncluster_VcdLoadingIndicatorModule_declarations\n\n\n\ncluster_VcdLoadingIndicatorModule_exports\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule -->\n\nLoadingIndicatorComponent->VcdLoadingIndicatorModule\n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nVcdLoadingIndicatorModule->LoadingIndicatorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/loading/loading-indicator.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { LoadingIndicatorComponent } from './loading-indicator.component';\n\n@NgModule({\n    declarations: [LoadingIndicatorComponent],\n    imports: [CommonModule, ClarityModule, I18nModule],\n    exports: [LoadingIndicatorComponent],\n    entryComponents: [LoadingIndicatorComponent],\n})\nexport class VcdLoadingIndicatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WidgetFinder.html":{"url":"classes/WidgetFinder.html","title":"class - WidgetFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WidgetFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Finds instances that implement FindableWidget\nH is the host component's type\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fixture\n                            \n                            \n                                    Public\n                                hostComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detectChanges\n                            \n                            \n                                    Public\n                                find\n                            \n                            \n                                    Public\n                                findWidgets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentConstructor: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object.ts:191\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The host component to be created as the root of the tests's fixture\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:186\n                            \n                        \n\n                \n                    \n                        We don't care or could possibly know the type of fixture\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     H\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:191\n                            \n                        \n\n                \n                    \n                        If you need direct access to manipulate the host\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(params: FindParams | T)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:230\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                        T\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindParams | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     InstanceType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findWidgets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findWidgets(params: FindParams | T, parent?: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:205\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                        T\n                    \n                \n            \n\n            \n                \n                    Finds widgets within a fixture\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindParams | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     InstanceType[]\n\n                    \n                    \n                        A Potentially empty list of widgets matching the given specs\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * Finds instances that implement {@link FindableWidget}\n * H is the host component's type\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WidgetObject.html":{"url":"classes/WidgetObject.html","title":"class - WidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\nThe main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\nqueries the internals of a component from a test.\nSubclass Rules\n\nMethods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\ncallers to query it from the outside creating potential duplicate querying code and abstraction leaks.\nSubclasses also should not have testing assertions. They should only provide the state and the calling test can\nassert code on its own.\n\n\n\nT is the type of the JS/TS object being wrapped\nIt is recommended that files for implementations be named with a .wo.ts extension\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fixture: ComponentFixture, root: DebugElement, component: T)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\nneed to find a widget within the tree, you should use find.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                    ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The test fixture, so we can call {\n\n                                                        \n                                                \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                        DebugElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The root element (host) for the component instance. We typically prefer to interact with the\ncomponent but there are times when we must check the DOM.\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The component instance being managed. Whenever possible, we should access the component's API.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:42\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:73\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:54\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:62\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:128\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:136\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:90\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:114\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * Finds instances that implement {@link FindableWidget}\n * H is the host component's type\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to vcd-ui-common\nThe vcd-ui-common project team welcomes contributions from the community. Before you start working with vcd-ui-common, please\nread our Developer Certificate of Origin. All contributions to this repository must be\nsigned as described on that page. Your signature certifies that you wrote the patch or have the right to pass it on\nas an open-source patch.\nContribution Flow\nThis is a rough outline of what a contributor's workflow looks like:\n\nCreate a topic branch from where you want to base your work\nMake commits of logical units\nMake sure your commit messages are in the proper format (see below)\nPush your changes to a topic branch in your fork of the repository\nSubmit a pull request\n\nContribution Requirements\n\nPublic/exported members must be documented using tsdoc\n\nEvery commit must contain unit tests, striving for full coverage. If full coverage cannot be achieved, the Pull\nRequest should explain why tests could not be written.\n\nDescriptive Pull Requests:\n\nInclude list of steps for manual testing\nExplain alternatives that were considered\nFor bug fixes, explain what was causing the issue, don't repeat the text from the issue\n\n\n\nMerge vs fast-forward\nPRs with single commits should use --fast-forward. Otherwise, pull requests should be merge commits.\nStaying In Sync With Upstream\nWhen your branch gets out of sync with the vmware/master branch, use the following to update:\ngit checkout my-new-feature\ngit fetch -a\ngit pull --rebase upstream master\ngit push --force-with-lease origin my-new-featureUpdating pull requests\nIf your PR fails to pass CI or needs changes based on code review, you'll most likely want to squash these changes into\nexisting commits.\nIf your pull request contains a single commit or your changes are related to the most recent commit, you can simply\namend the commit.\ngit add .\ngit commit --amend\ngit push --force-with-lease origin my-new-featureIf you need to squash changes into an earlier commit, you can use:\ngit add .\ngit commit --fixup \ngit rebase -i --autosquash master\ngit push --force-with-lease origin my-new-featureBe sure to add a comment to the PR indicating your new changes are ready to review, as GitHub does not generate a\nnotification when you git push.\nCode Style\nFormatting Commit Messages\nWe follow the conventions on How to Write a Git Commit Message.\nBe sure to include any related GitHub issue references in the commit message. See\nGFM syntax for referencing issues\nand commits.\nReporting Bugs and Creating Issues\nWhen opening a new issue, try to roughly follow the commit message format conventions above.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 9.1.9\n        \n            @angular/common : 9.1.9\n        \n            @angular/compiler : 9.1.9\n        \n            @angular/core : 9.1.9\n        \n            @angular/forms : 9.1.9\n        \n            @angular/platform-browser : 9.1.9\n        \n            @angular/platform-browser-dynamic : 9.1.9\n        \n            @angular/router : 9.1.9\n        \n            @clr/angular : 3.1.3\n        \n            @clr/core : 3.1.3\n        \n            @clr/icons : 3.1.3\n        \n            @clr/ui : 3.1.3\n        \n            @ngx-formly/core : 5.6.1\n        \n            @stackblitz/sdk : 1.3.0\n        \n            @vmw/ng-live-docs : 0.0.8\n        \n            @vmw/plain-js-live-docs : 0.0.2\n        \n            @webcomponents/webcomponentsjs : 2.0.0\n        \n            @wessberg/ts-evaluator : 0.0.25\n        \n            angular-cli-ghpages : 0.6.2\n        \n            classlist.js : 1.1.20150312\n        \n            codecov.io : 0.1.6\n        \n            karma-coverage : 2.0.2\n        \n            lit-html : 1.1.2\n        \n            messageformat : 1.0.2\n        \n            mousetrap : 1.6.5\n        \n            prismjs : 1.21.0\n        \n            properties : 1.2.1\n        \n            rbradford-compodoc : 1.1.11\n        \n            rxjs : 6.5.5\n        \n            tsickle : 0.38.1\n        \n            tslib : 1.10.0\n        \n            zone.js : 0.10.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : 9.*\n        \n            @angular/common : 9.*\n        \n            @angular/compiler : 9.*\n        \n            @angular/core : 9.*\n        \n            @angular/forms : 9.*\n        \n            @angular/platform-browser : 9.*\n        \n            @angular/platform-browser-dynamic : 9.*\n        \n            @angular/router : 9.*\n        \n            @clr/angular : 3.*\n        \n            @clr/ui : 3.*\n        \n            @clr/icons : 3.*\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionStyling   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ActionType   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ActivatableMenuItemType   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            ActivityIndicatorType   (projects/.../datagrid.component.ts)\n                        \n                        \n                            CheckBoxStyling   (projects/.../form-checkbox.component.ts)\n                        \n                        \n                            ContextualActionPosition   (projects/.../datagrid.component.ts)\n                        \n                        \n                            Direction   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            FormFields   (projects/.../datagrid-numeric-filter.component.ts)\n                        \n                        \n                            GridColumnHideable   (projects/.../datagrid-column.interface.ts)\n                        \n                        \n                            GridSelectionType   (projects/.../datagrid.component.ts)\n                        \n                        \n                            SIZES   (projects/.../loading-indicator.component.ts)\n                        \n                        \n                            TextIcon   (projects/.../action-item.interface.ts)\n                        \n                        \n                            TooltipPosition   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            TooltipSize   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            UserOptions   (projects/.../data-exporter.component.ts)\n                        \n                        \n                            VcdFormlyInputTypes   (projects/.../vcd-formly.config.ts)\n                        \n                        \n                            WildCardPosition   (projects/.../datagrid-string-filter.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/common/interfaces/action-item.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionStyling\n                    \n                \n                    \n                        \n                            Display options for action menu\n\n                        \n                    \n                        \n                            \n                                 INLINE\n                            \n                        \n                        \n                            \n                                Value : INLINE\n                            \n                        \n                        \n                            \n                                 DROPDOWN\n                            \n                        \n                        \n                            \n                                Value : DROPDOWN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                    \n                        \n                            List of different type of action buckets\n\n                        \n                    \n                        \n                            \n                                 STATIC_FEATURED\n                            \n                        \n                        \n                            \n                                Value : STATIC_FEATURED\n                            \n                        \n                        \n                            \n                                 CONTEXTUAL_FEATURED\n                            \n                        \n                        \n                            \n                                Value : CONTEXTUAL_FEATURED\n                            \n                        \n                        \n                            \n                                 CONTEXTUAL\n                            \n                        \n                        \n                            \n                                Value : CONTEXTUAL\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n                        \n                            \n                                Value : STATIC\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TextIcon\n                    \n                \n                    \n                        \n                            An enum that describes the possible ways to display the button title.\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 ICON_AND_TEXT\n                            \n                        \n            \n        \n\n    projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivatableMenuItemType\n                    \n                \n                    \n                        \n                            To filter out the non-activatable separator item type when creating linked menu list #linkMenuItems. Because, we don't\nwant the focus to go to separator item type when navigating using the arrow keys\n\n                        \n                    \n                        \n                            \n                                 BUTTON\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n                        \n                            \n                                 NESTED_VCD_DROPDOWN\n                            \n                        \n                        \n                            \n                                Value : vcd-dropdown\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Direction\n                    \n                \n                    \n                        \n                            Arrow keys directions\n\n                        \n                    \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                Value : up\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                Value : down\n                            \n                        \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/datagrid.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivityIndicatorType\n                    \n                \n                    \n                        \n                            The types of activity indicators that can be displayed on top of the grid.\n\n                        \n                    \n                        \n                            \n                                 SPINNER\n                            \n                        \n                        \n                            \n                                 BANNER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ContextualActionPosition\n                    \n                \n                    \n                        \n                            An enum that describes where the contextual buttons should display.\n\n                        \n                    \n                        \n                            \n                                 TOP\n                            \n                        \n                        \n                            \n                                Value : TOP\n                            \n                        \n                        \n                            \n                                 ROW\n                            \n                        \n                        \n                            \n                                Value : ROW\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GridSelectionType\n                    \n                \n                    \n                        \n                            Different types of row selection on the grid\n\n                        \n                    \n                        \n                            \n                                 Multi\n                            \n                        \n                        \n                            \n                                Value : MULTI\n                            \n                        \n                        \n                            \n                                 Single\n                            \n                        \n                        \n                            \n                                Value : SINGLE\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    projects/components/src/form/form-checkbox/form-checkbox.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CheckBoxStyling\n                    \n                \n                        \n                            \n                                 CHECKBOX\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 TOGGLESWITCH\n                            \n                        \n                        \n                            \n                                Value : toggle-switch\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FormFields\n                    \n                \n                        \n                            \n                                 from\n                            \n                        \n                        \n                            \n                                Value : from\n                            \n                        \n                        \n                            \n                                 to\n                            \n                        \n                        \n                            \n                                Value : to\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        GridColumnHideable\n                    \n                \n                        \n                            \n                                 Never\n                            \n                        \n                        \n                            \n                                Value : NEVER\n                            \n                        \n                        \n                            \n                                 Shown\n                            \n                        \n                        \n                            \n                                Value : SHOWN\n                            \n                        \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : HIDDEN\n                            \n                        \n            \n        \n\n    projects/components/src/common/loading/loading-indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        SIZES\n                    \n                \n                        \n                            \n                                 sm\n                            \n                        \n                        \n                            \n                                Value : sm\n                            \n                        \n                        \n                            \n                                 md\n                            \n                        \n                        \n                            \n                                Value : md\n                            \n                        \n                        \n                            \n                                 lg\n                            \n                        \n                        \n                            \n                                Value : lg\n                            \n                        \n            \n        \n\n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TooltipPosition\n                    \n                \n                        \n                            \n                                 tl\n                            \n                        \n                        \n                            \n                                Value : tooltip-top-left\n                            \n                        \n                        \n                            \n                                 tr\n                            \n                        \n                        \n                            \n                                Value : tooltip-top-right\n                            \n                        \n                        \n                            \n                                 br\n                            \n                        \n                        \n                            \n                                Value : tooltip-bottom-right\n                            \n                        \n                        \n                            \n                                 bl\n                            \n                        \n                        \n                            \n                                Value : tooltip-bottom-left\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TooltipSize\n                    \n                \n                        \n                            \n                                 sm\n                            \n                        \n                        \n                            \n                                Value : 100px\n                            \n                        \n                        \n                            \n                                 md\n                            \n                        \n                        \n                            \n                                Value : 200px\n                            \n                        \n                        \n                            \n                                 lg\n                            \n                        \n                        \n                            \n                                Value : 400px\n                            \n                        \n            \n        \n\n    projects/components/src/data-exporter/data-exporter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        UserOptions\n                    \n                \n                        \n                            \n                                 selectAll\n                            \n                        \n                        \n                            \n                                Value : selectAll\n                            \n                        \n                        \n                            \n                                 friendlyNames\n                            \n                        \n                        \n                            \n                                Value : friendlyNames\n                            \n                        \n                        \n                            \n                                 sanitize\n                            \n                        \n                        \n                            \n                                Value : sanitize\n                            \n                        \n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.config.ts\n    \n        \n            \n                \n                    \n                        \n                        VcdFormlyInputTypes\n                    \n                \n                    \n                        \n                            Different of Vcd form inputs that are configurable through Formly\n\n                        \n                    \n                        \n                            \n                                 input\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 number_with_unit_input\n                            \n                        \n                        \n                            \n                                Value : number_with_unit_input\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        WildCardPosition\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 END\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 WRAP\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nVMware Cloud Director UI Common Components\nRepo Structure\nThis monorepo contains four separate but related projects:\nComponent Library (./projects/components) @vcd/ui-components\nReusable components for vcd-ui and its plugin developers. See its README\nfor further details\nInternalization Library (./projects/i18n) @vcd/i18n\nTranslation code for vcd-ui and its plugin developers. See its README\nfor further details\nExamples App (./projects/examples)\nThe application that showcases @vcd/ui-components using @vmw/ng-live-docs.\nRun npm install first. Then run npm run build:i18n followed by npm run build:components to build.\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if\nyou change any of the source files. This is where you'll see changes made in components.\nRoute Analyzer (./projects/route-analyzer) @vcd/route-analyzer\nRoute Analyzer statically analyzes angular source code and generates a json file with all the available routes,\nincluding the ones from lazy loaded modules. See its README\nfor further details\nPeer Dependencies\nThe component library depends on Clarity and Angular\nwhich must must be installed from your application's package.json. See package.json for version\ninformation.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use\nng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun npm run build:i18n and npm run build:components. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun npm run test:components, or npm run test:i18n to execute the unit tests via Karma.\nRunning end-to-end tests (Examples App)\nRun ng e2e to execute the end-to-end tests via Protractor.\nCloning the repo\nWe typically use git clone https://github.com/vmware/vmware-cloud-director-ui-components ./vcd-ui-common to avoid\nthe extremely long folder name.\nPublishing\nPublishing happens through the CI/CD pipeline. See package.json\nVersioning\nFor all official releases, versioning should be semantic as per NPM's documentation.\nFor all development, nightly builds, the version should be created using npm version prerelease --preid=dev.\nSteps for publishing an @next release:\n\nUpdate version number in projects//package.json\nPush the changes to a remote topic branch and create a pull request into vmware/vmware-cloud-director-ui-components/master\nUpon approval of the PR, merge that PR into master\n\nFollowing the above steps makes the CI-CD pipeline to execute publishing job to npm with @next tag(npm publish --tag next)\nSteps for publishing an @latest release:\n\nUpdate version number in projects//package.json\nPush the changes to a remote topic branch and create a pull request into vmware/vmware-cloud-director-ui-components/master\nUpon approval of the PR, Push the changes to remote repo using Git tag using following commands:\nAdd a Git tag to the HEAD commit that has to be published as latest: git tag -fa -v[0-999].[0-999].[0-999]\nPush to the remote repo(vmware/vmware-cloud-director-ui-components): git push git@github.com:vmware/vmware-cloud-director-ui-components.git refs/tags/-v[0-999].[0-999].[0-999]\n\n\n\nFollowing the above steps makes the CI-CD pipeline to execute publishing job to npm with @latest tag(npm publish)\nAngular CLI\nThis project was generated with Angular CLI version 8.3.20. We attempt to\nkeep the project following CLI guidelines so we can benefit from ng update.\nFurther help\nTo get further help, please file issues on github.\nTo get more help on the Angular CLI use ng help or go check out the\nAngular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuickSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShowClippedTextDirectiveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdActionMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdActivityReporterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdDataExporterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdDatagridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdErrorBannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdFormlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdLoadingIndicatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_DropdownComponent_providers\n\n\n\ncluster_DropdownModule_imports\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_QuickSearchModule\n\n\n\ncluster_QuickSearchModule_declarations\n\n\n\ncluster_QuickSearchModule_exports\n\n\n\ncluster_ShowClippedTextDirectiveModule\n\n\n\ncluster_ShowClippedTextDirectiveModule_declarations\n\n\n\ncluster_ShowClippedTextDirectiveModule_exports\n\n\n\ncluster_VcdActionMenuModule\n\n\n\ncluster_VcdActionMenuModule_declarations\n\n\n\ncluster_VcdActionMenuModule_exports\n\n\n\ncluster_VcdActivityReporterModule\n\n\n\ncluster_VcdActivityReporterModule_declarations\n\n\n\ncluster_VcdActivityReporterModule_imports\n\n\n\ncluster_VcdActivityReporterModule_exports\n\n\n\ncluster_VcdComponentsModule\n\n\n\ncluster_VcdComponentsModule_exports\n\n\n\ncluster_VcdDataExporterModule\n\n\n\ncluster_VcdDataExporterModule_declarations\n\n\n\ncluster_VcdDataExporterModule_exports\n\n\n\ncluster_VcdDatagridModule\n\n\n\ncluster_VcdDatagridModule_declarations\n\n\n\ncluster_VcdDatagridModule_imports\n\n\n\ncluster_VcdDatagridModule_exports\n\n\n\ncluster_VcdErrorBannerModule\n\n\n\ncluster_VcdErrorBannerModule_declarations\n\n\n\ncluster_VcdErrorBannerModule_exports\n\n\n\ncluster_VcdFormlyModule\n\n\n\ncluster_VcdFormlyModule_declarations\n\n\n\ncluster_VcdFormModule\n\n\n\ncluster_VcdFormModule_declarations\n\n\n\ncluster_VcdFormModule_providers\n\n\n\ncluster_VcdLoadingIndicatorModule\n\n\n\ncluster_VcdLoadingIndicatorModule_declarations\n\n\n\ncluster_VcdLoadingIndicatorModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownFocusHandlerDirective\n\nDropdownFocusHandlerDirective\n\nDropdownModule -->\n\nDropdownFocusHandlerDirective->DropdownModule\n\n\n\n\n\nDynamicDropdownPositionDirective\n\nDynamicDropdownPositionDirective\n\nDropdownModule -->\n\nDynamicDropdownPositionDirective->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective  -->\n\nDropdownModule->DropdownFocusHandlerDirective \n\n\n\n\n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective  -->\n\nDropdownModule->DynamicDropdownPositionDirective \n\n\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdActionMenuModule -->\n\nDropdownModule->VcdActionMenuModule\n\n\n\n\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDropdownComponent -->\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER->DropdownComponent\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nDropdownModule -->\n\nShowClippedTextDirectiveModule->DropdownModule\n\n\n\n\n\nShowClippedTextDirective \n\nShowClippedTextDirective \n\nShowClippedTextDirective  -->\n\nShowClippedTextDirectiveModule->ShowClippedTextDirective \n\n\n\nVcdActionMenuModule -->\n\nShowClippedTextDirectiveModule->VcdActionMenuModule\n\n\n\n\n\nVcdDatagridModule\n\nVcdDatagridModule\n\nVcdDatagridModule -->\n\nShowClippedTextDirectiveModule->VcdDatagridModule\n\n\n\n\n\nNestedPropertyPipe\n\nNestedPropertyPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nNestedPropertyPipe->PipesModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nPipesModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nPipesModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nPipesModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nPipesModule->NumberWithUnitFormInputComponent \n\n\n\n\n\nQuickSearchComponent\n\nQuickSearchComponent\n\n\n\nQuickSearchModule\n\nQuickSearchModule\n\nQuickSearchModule -->\n\nQuickSearchComponent->QuickSearchModule\n\n\n\n\n\nQuickSearchComponent \n\nQuickSearchComponent \n\nQuickSearchComponent  -->\n\nQuickSearchModule->QuickSearchComponent \n\n\n\n\n\nShowClippedTextDirective\n\nShowClippedTextDirective\n\nShowClippedTextDirectiveModule -->\n\nShowClippedTextDirective->ShowClippedTextDirectiveModule\n\n\n\n\n\nActionMenuComponent\n\nActionMenuComponent\n\nVcdActionMenuModule -->\n\nActionMenuComponent->VcdActionMenuModule\n\n\n\n\n\nActionMenuComponent \n\nActionMenuComponent \n\nActionMenuComponent  -->\n\nVcdActionMenuModule->ActionMenuComponent \n\n\n\nVcdDatagridModule -->\n\nVcdActionMenuModule->VcdDatagridModule\n\n\n\n\n\nBannerActivityReporterComponent\n\nBannerActivityReporterComponent\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule -->\n\nBannerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nSpinnerActivityReporterComponent\n\nSpinnerActivityReporterComponent\n\nVcdActivityReporterModule -->\n\nSpinnerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent  -->\n\nVcdActivityReporterModule->BannerActivityReporterComponent \n\n\n\n\n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent  -->\n\nVcdActivityReporterModule->SpinnerActivityReporterComponent \n\n\n\nVcdDatagridModule -->\n\nVcdActivityReporterModule->VcdDatagridModule\n\n\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdActivityReporterModule -->\n\nVcdErrorBannerModule->VcdActivityReporterModule\n\n\n\n\n\nErrorBannerComponent \n\nErrorBannerComponent \n\nErrorBannerComponent  -->\n\nVcdErrorBannerModule->ErrorBannerComponent \n\n\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdActivityReporterModule -->\n\nVcdLoadingIndicatorModule->VcdActivityReporterModule\n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nVcdLoadingIndicatorModule->LoadingIndicatorComponent \n\n\n\n\n\nDropdownModule \n\nDropdownModule \n\n\n\nQuickSearchModule \n\nQuickSearchModule \n\n\n\nShowClippedTextDirectiveModule \n\nShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule \n\nVcdActionMenuModule \n\n\n\nVcdActivityReporterModule \n\nVcdActivityReporterModule \n\n\n\nVcdDataExporterModule \n\nVcdDataExporterModule \n\n\n\nVcdDatagridModule \n\nVcdDatagridModule \n\n\n\nVcdErrorBannerModule \n\nVcdErrorBannerModule \n\n\n\nVcdFormModule \n\nVcdFormModule \n\n\n\nVcdLoadingIndicatorModule \n\nVcdLoadingIndicatorModule \n\n\n\nVcdComponentsModule\n\nVcdComponentsModule\n\nDropdownModule  -->\n\nVcdComponentsModule->DropdownModule \n\n\n\nQuickSearchModule  -->\n\nVcdComponentsModule->QuickSearchModule \n\n\n\nShowClippedTextDirectiveModule  -->\n\nVcdComponentsModule->ShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule  -->\n\nVcdComponentsModule->VcdActionMenuModule \n\n\n\nVcdActivityReporterModule  -->\n\nVcdComponentsModule->VcdActivityReporterModule \n\n\n\nVcdDataExporterModule  -->\n\nVcdComponentsModule->VcdDataExporterModule \n\n\n\nVcdDatagridModule  -->\n\nVcdComponentsModule->VcdDatagridModule \n\n\n\nVcdErrorBannerModule  -->\n\nVcdComponentsModule->VcdErrorBannerModule \n\n\n\nVcdFormModule  -->\n\nVcdComponentsModule->VcdFormModule \n\n\n\nVcdLoadingIndicatorModule  -->\n\nVcdComponentsModule->VcdLoadingIndicatorModule \n\n\n\n\n\nDataExporterComponent\n\nDataExporterComponent\n\n\n\nVcdDataExporterModule\n\nVcdDataExporterModule\n\nVcdDataExporterModule -->\n\nDataExporterComponent->VcdDataExporterModule\n\n\n\n\n\nDataExporterComponent \n\nDataExporterComponent \n\nDataExporterComponent  -->\n\nVcdDataExporterModule->DataExporterComponent \n\n\n\n\n\nBoldTextRendererComponent\n\nBoldTextRendererComponent\n\nVcdDatagridModule -->\n\nBoldTextRendererComponent->VcdDatagridModule\n\n\n\n\n\nComponentRendererOutletDirective\n\nComponentRendererOutletDirective\n\nVcdDatagridModule -->\n\nComponentRendererOutletDirective->VcdDatagridModule\n\n\n\n\n\nDatagridComponent\n\nDatagridComponent\n\nVcdDatagridModule -->\n\nDatagridComponent->VcdDatagridModule\n\n\n\n\n\nDatagridMultiSelectFilterComponent\n\nDatagridMultiSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridMultiSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridNumericFilterComponent\n\nDatagridNumericFilterComponent\n\nVcdDatagridModule -->\n\nDatagridNumericFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridSelectFilterComponent\n\nDatagridSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridStringFilterComponent\n\nDatagridStringFilterComponent\n\nVcdDatagridModule -->\n\nDatagridStringFilterComponent->VcdDatagridModule\n\n\n\n\n\nFunctionRendererPipe\n\nFunctionRendererPipe\n\nVcdDatagridModule -->\n\nFunctionRendererPipe->VcdDatagridModule\n\n\n\n\n\nBoldTextRendererComponent \n\nBoldTextRendererComponent \n\nBoldTextRendererComponent  -->\n\nVcdDatagridModule->BoldTextRendererComponent \n\n\n\n\n\nDatagridComponent \n\nDatagridComponent \n\nDatagridComponent  -->\n\nVcdDatagridModule->DatagridComponent \n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nFormCheckboxComponent  -->\n\nVcdFormModule->FormCheckboxComponent \n\n\n\nFormInputComponent  -->\n\nVcdFormModule->FormInputComponent \n\n\n\nFormSelectComponent  -->\n\nVcdFormModule->FormSelectComponent \n\n\n\nNumberWithUnitFormInputComponent  -->\n\nVcdFormModule->NumberWithUnitFormInputComponent \n\n\n\nVcdDatagridModule -->\n\nVcdFormModule->VcdDatagridModule\n\n\n\n\n\nVcdFormlyModule\n\nVcdFormlyModule\n\nVcdFormlyModule -->\n\nVcdFormModule->VcdFormlyModule\n\n\n\n\n\nErrorBannerComponent\n\nErrorBannerComponent\n\nVcdErrorBannerModule -->\n\nErrorBannerComponent->VcdErrorBannerModule\n\n\n\n\n\nFormlyInputComponent\n\nFormlyInputComponent\n\nVcdFormlyModule -->\n\nFormlyInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlyNumberWithUnitInputComponent\n\nFormlyNumberWithUnitInputComponent\n\nVcdFormlyModule -->\n\nFormlyNumberWithUnitInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlySelectComponent\n\nFormlySelectComponent\n\nVcdFormlyModule -->\n\nFormlySelectComponent->VcdFormlyModule\n\n\n\n\n\nFormCheckboxComponent\n\nFormCheckboxComponent\n\nVcdFormModule -->\n\nFormCheckboxComponent->VcdFormModule\n\n\n\n\n\nFormInputComponent\n\nFormInputComponent\n\nVcdFormModule -->\n\nFormInputComponent->VcdFormModule\n\n\n\n\n\nFormSelectComponent\n\nFormSelectComponent\n\nVcdFormModule -->\n\nFormSelectComponent->VcdFormModule\n\n\n\n\n\nNumberWithUnitFormInputComponent\n\nNumberWithUnitFormInputComponent\n\nVcdFormModule -->\n\nNumberWithUnitFormInputComponent->VcdFormModule\n\n\n\n\n\nUnitFormatter\n\nUnitFormatter\n\nVcdFormModule -->\n\nUnitFormatter->VcdFormModule\n\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\nVcdLoadingIndicatorModule -->\n\nLoadingIndicatorComponent->VcdLoadingIndicatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    37 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    49 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionHandlerType   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ComponentRendererConstructor   (projects/.../component-renderer.interface.ts)\n                        \n                        \n                            ConvertGenericOnly   (projects/.../widget-object.ts)\n                        \n                        \n                            CorrectReturnTypes   (projects/.../widget-object.ts)\n                        \n                        \n                            DatagridNumericFilterValue   (projects/.../datagrid-numeric-filter.component.ts)\n                        \n                        \n                            ElementLocator   (projects/.../widget-object.ts)\n                        \n                        \n                            EventHandler   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            LazyString   (projects/.../types.ts)\n                        \n                        \n                            Primitives   (projects/.../filter-builder.ts)\n                        \n                        \n                            QuickSearchResultsType   (projects/.../quick-search-result.ts)\n                        \n                        \n                            SpinnerSize   (projects/.../loading-indicator.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/common/interfaces/action-item.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ActionHandlerType\n                \n            \n            \n                \n                    Type of ActionItem.handler function\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ComponentRendererConstructor\n                \n            \n            \n                \n                    Used for the type safety of ColumnRendererSpec\n\n                \n            \n            \n                \n                            Type>\n\n                \n            \n        \n    \n    projects/components/src/utils/test/widget-object/widget-object.ts\n    \n    \n        \n            \n                \n                    \n                    ConvertGenericOnly\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CorrectReturnTypes\n                \n            \n            \n                \n                    Changes the class so that all functions/getters return R.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ElementLocator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n    \n    \n        \n            \n                \n                    \n                    DatagridNumericFilterValue\n                \n            \n            \n                \n                    The type of value that goes in the DatagridNumericFilterConfig.\n\n                \n            \n            \n                \n                        [number, number]\n\n                \n            \n        \n    \n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n    \n        \n            \n                \n                    \n                    EventHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/utils/types.ts\n    \n    \n        \n            \n                \n                    \n                    LazyString\n                \n            \n            \n                \n                    The result of a call to either TranslationService.translate or TranslationService.translateAsync.\nA duplicate of the @vcd/i18n LazyString.\n\n                \n            \n            \n                \n                        string | Observable | Promise\n\n                \n            \n        \n    \n    projects/components/src/utils/filter-builder.ts\n    \n    \n        \n            \n                \n                    \n                    Primitives\n                \n            \n            \n                \n                        boolean | string | number\n\n                \n            \n        \n    \n    projects/components/src/quick-search/quick-search-result.ts\n    \n    \n        \n            \n                \n                    \n                    QuickSearchResultsType\n                \n            \n            \n                \n                    The type of the quick search result which can be a promise\n\n                \n            \n            \n                \n                            QuickSearchResults | Promise\n\n                \n            \n        \n    \n    projects/components/src/common/loading/loading-indicator.component.ts\n    \n    \n        \n            \n                \n                    \n                    SpinnerSize\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CELL_TAG   (projects/.../datagrid.wo.ts)\n                        \n                        \n                            COLUMN_CSS_SELECTOR   (projects/.../datagrid.wo.ts)\n                        \n                        \n                            COLUMN_SELECTOR   (projects/.../datagrid.wo.ts)\n                        \n                        \n                            CONTENT_AREA_SELECTOR   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            cy   (projects/.../cypress-widget-finder.ts)\n                        \n                        \n                            cy   (projects/.../cypress-widget-object.ts)\n                        \n                        \n                            DATE_OBJECT_CLASS   (projects/.../nested-property.pipe.ts)\n                        \n                        \n                            DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES   (projects/.../datagrid-filter.ts)\n                        \n                        \n                            declarations   (projects/.../form.module.ts)\n                        \n                        \n                            declarations   (projects/.../pipes.module.ts)\n                        \n                        \n                            DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX   (projects/.../action-search.provider.ts)\n                        \n                        \n                            DEFAULT_PAGINATION_TRANSLATION_KEY   (projects/.../datagrid.component.ts)\n                        \n                        \n                            DEFAULT_SIZE   (projects/.../datagrid.component.ts)\n                        \n                        \n                            DEFAULT_SIZE_OPTIONS   (projects/.../datagrid.component.ts)\n                        \n                        \n                            directives   (projects/.../datagrid.module.ts)\n                        \n                        \n                            DROPDOWN_FOCUS_HANDLER_PROVIDER   (projects/.../dropdown.component.ts)\n                        \n                        \n                            DROPDOWN_ITEM_SELECTOR   (projects/.../dropdown.component.ts)\n                        \n                        \n                            FILTER_SELECTOR   (projects/.../datagrid.wo.ts)\n                        \n                        \n                            filters   (projects/.../datagrid.module.ts)\n                        \n                        \n                            fireTipTransitionEndForTests   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            idGenerator   (projects/.../base-form-control.ts)\n                        \n                        \n                            idGenerator   (projects/.../datagrid-multiselect-filter.component.ts)\n                        \n                        \n                            idGenerator   (projects/.../cypress-widget-finder.ts)\n                        \n                        \n                            LEADING_CONTROL_CHAR   (projects/.../csv-exporter.service.ts)\n                        \n                        \n                            MAX_HEADER_HEIGHT   (projects/.../datagrid.component.ts)\n                        \n                        \n                            MENU_BUFFER_SPACE   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            mockData   (projects/.../mock-data.ts)\n                        \n                        \n                            NESTED_DROPDOWN_TRIGGER   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            NESTED_DROPDOWN_TRIGGER_SELECTOR   (projects/.../dropdown.component.ts)\n                        \n                        \n                            NESTED_MENU_HIDE_DELAY   (projects/.../dropdown.component.ts)\n                        \n                        \n                            NO_SCROLLING_CLASSNAME   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            OBJECT_PROPERTY_SEPARATOR   (projects/.../nested-property.pipe.ts)\n                        \n                        \n                            Operators   (projects/.../filter-builder.ts)\n                        \n                        \n                            pipes   (projects/.../datagrid.module.ts)\n                        \n                        \n                            renderers   (projects/.../datagrid.module.ts)\n                        \n                        \n                            ROW_HEIGHT   (projects/.../datagrid.component.ts)\n                        \n                        \n                            ROW_TAG   (projects/.../datagrid.wo.ts)\n                        \n                        \n                            tip   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            UNLIMITED   (projects/.../number-with-unit-form-input.component.ts)\n                        \n                        \n                            VCD_FORMLY_CONFIG   (projects/.../vcd-formly.config.ts)\n                        \n                        \n                            VCD_FORMLY_INPUT_COMPONENTS   (projects/.../vcd-formly.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/utils/test/datagrid/datagrid.wo.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CELL_TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dg-cell'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            COLUMN_CSS_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '.datagrid-column-title'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            COLUMN_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dg-column'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FILTER_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dg-filter'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROW_TAG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dg-row'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTENT_AREA_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '.content-area'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_BUFFER_SPACE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 150\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NO_SCROLLING_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'no-scrolling'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cy\n                            \n                        \n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('cy-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cy\n                            \n                        \n                    \n                \n\n\n            \n        \n\n    projects/components/src/common/pipes/nested-property.pipe.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATE_OBJECT_CLASS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[object Date]'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OBJECT_PROPERTY_SEPARATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '.'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n\n                \n                    \n                        Number of milliseconds delayed before emitting the filter has changed observable\n\n                    \n                \n\n            \n        \n\n    projects/components/src/form/form.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormInputComponent, FormSelectComponent, FormCheckboxComponent, NumberWithUnitFormInputComponent]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/common/pipes/pipes.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [NestedPropertyPipe]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/action-search-provider/action-search.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.action.provider.section.title'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/datagrid.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PAGINATION_TRANSLATION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.grid.default.pagination'\n                        \n                    \n\n                \n                    \n                        Key used for translation of pagination when a translation key is not given as input from the caller\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_SIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n\n                \n                    \n                        The default number of items on a single page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_SIZE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [DEFAULT_SIZE, 20, 50, 100]\n                        \n                    \n\n                \n                    \n                        The default items to show in the page size dropdown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_HEADER_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 40\n                        \n                    \n\n                \n                    \n                        The maximum allowed .datagrid-header element clientHeight in pixels.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROW_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : 37\n                        \n                    \n\n                \n                    \n                        The default clr-dr-row element clientHeight in pixels.\n\n                    \n                \n\n            \n        \n\n    projects/components/src/datagrid/datagrid.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            directives\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ComponentRendererOutletDirective]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    DatagridNumericFilterComponent,\n    DatagridStringFilterComponent,\n    DatagridSelectFilterComponent,\n    DatagridMultiSelectFilterComponent,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pipes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FunctionRendererPipe]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [BoldTextRendererComponent]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/dropdown/dropdown.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_FOCUS_HANDLER_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: DropdownFocusHandlerService,\n    useFactory: dropdownFocusHandlerServiceFactory,\n    deps: [Renderer2, [new Optional(), new SkipSelf(), DropdownFocusHandlerService]],\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEM_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown-menu > button'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_DROPDOWN_TRIGGER_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown clr-dropdown > button'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_MENU_HIDE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 400\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fireTipTransitionEndForTests\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (event: Event) => {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n}\n                        \n                    \n\n                \n                    \n                        Used to call tip.onTransitionEnd from outside this file.\nWe need to expose tip.onTransitionEnd because when the window is not focused\n(as in a headless chrome environment), the transitionend event is not fired.\nAs such, from the tests, you need to manually call this method.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n}\n                        \n                    \n\n                \n                    \n                        Singleton tooltip created by directive\n\n                    \n                \n\n            \n        \n\n    projects/components/src/form/base-form-control.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('base-form-control-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('vcd-multiselect-filter-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/data-exporter/csv-exporter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LEADING_CONTROL_CHAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^[-+=@]/\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/mock-data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockRecord[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Person 1',\n        city: 'Palo Alto',\n        state: 'CA',\n        details: {\n            gender: 'Male',\n        },\n        age: 30,\n    },\n    {\n        name: 'Person 2',\n        city: 'Boston',\n        state: 'MA',\n        details: {\n            gender: 'Female',\n        },\n        age: 60,\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_DROPDOWN_TRIGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown > button'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/filter-builder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Operators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    OR: ',',\n    AND: ';',\n    GT: '=gt=',\n    GE: '=ge=',\n    LT: '=lt=',\n    LE: '=le=',\n    EQ: '==',\n    NEQ: '!=',\n}\n                        \n                    \n\n                \n                    \n                        TODO: Remove FilterBuilder from VCD-UI https://jira.eng.vmware.com/browse/VDUCC-115\n\n                    \n                \n\n            \n        \n\n    projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UNLIMITED\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n\n                \n                    \n                        -1 is the number to specify a value of unlimited.\n\n                    \n                \n\n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VCD_FORMLY_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n}\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VCD_FORMLY_INPUT_COMPONENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormlyInputComponent, FormlySelectComponent, FormlyNumberWithUnitInputComponent]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
