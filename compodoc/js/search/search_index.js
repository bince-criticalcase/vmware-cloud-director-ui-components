var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionDisplayConfig.html",[0,0.175,1,2.255]],["body/interfaces/ActionDisplayConfig.html",[0,0.264,1,3.393,2,1.142,3,0.085,4,0.066,5,0.057,6,3.719,7,3.719,8,0.309,9,2.262,10,4.417,11,6.066,12,0.191,13,0.511,14,0.68,15,4.608,16,7.173,17,3.745,18,0.309,19,0.008,20,2,21,5.198,22,2.797,23,7.173,24,6.817,25,1.996,26,0.14,27,2.675,28,3.903,29,4.244,30,2.165,31,3.358,32,4.635,33,4.613,34,1.918,35,1.52,36,1.569,37,5.554,38,4.036,39,3.669,40,3.114,41,3.358,42,3.806,43,4.205,44,5.554,45,2.765,46,4.635,47,1.983,48,4.244,49,4.244,50,0.844,51,4.244,52,1.01,53,3.501,54,2.675,55,3.144,56,4.034,57,1.948,58,2.082,59,0.645,60,1.538,61,1.807,62,1.936,63,2.605,64,2.467,65,3.022,66,1.881,67,3.574,68,4.635,69,3.291,70,4.635,71,1.588,72,5.554,73,0.514,74,2.442,75,4.983,76,4.244,77,2.031,78,0.165,79,3.358,80,2.592,81,1.428,82,3.524,83,1.936,84,2.797,85,0.722,86,3.782,87,2.031,88,2.658,89,6.066,90,2.374,91,1.767,92,4.635,93,2.309,94,4.635,95,4.635,96,1.299,97,3.524,98,3.903,99,0.992,100,3.884,101,1.399,102,2.135,103,4.244,104,4.635,105,3.358,106,4.635,107,4.244,108,1.655,109,0.771,110,4.635,111,1.849,112,3.084,113,2.031,114,1.316,115,0.985,116,4.635,117,2.967,118,1.728,119,6.348,120,4.441,121,3.719,122,4.635,123,3.952,124,3.213,125,4.635,126,4.244,127,2.082,128,4.635,129,2.248,130,3.358,131,4.635,132,6.066,133,1.552,134,3.358,135,4.635,136,2.082,137,3.501,138,1.655,139,4.244,140,0.625,141,2.135,142,6.066,143,0.675,144,4.244,145,4.395,146,2.967,147,4.244,148,1.767,149,2.765,150,4.635,151,4.613,152,1.585,153,4.395,154,2.419,155,2.442,156,2.592,157,4.244,158,1.097,159,0.004,160,0.006,161,0.004]],["title/interfaces/ActionItem.html",[0,0.175,69,2.187]],["body/interfaces/ActionItem.html",[0,0.243,1,2.294,2,1.011,3,0.075,4,0.059,5,0.051,6,3.291,7,3.291,8,0.273,9,1.53,10,4.386,11,4.102,12,0.169,13,0.471,14,0.797,15,4.257,16,4.102,18,0.324,19,0.008,20,1.931,21,4.051,22,2.18,23,5.59,24,5.823,25,1.769,26,0.135,27,2.547,28,4.434,29,3.756,30,2.226,31,2.972,32,4.102,33,4.251,34,1.86,35,1.345,36,1.476,37,5.119,38,3.719,39,3.706,40,3.146,41,2.972,42,3.881,43,3.875,44,5.119,45,2.447,46,4.102,47,1.755,48,3.756,49,3.756,50,0.778,51,3.756,52,1.19,53,3.942,54,2.368,55,3.132,56,4.502,57,2.042,58,1.842,59,0.571,60,1.677,61,2.18,62,2.336,63,2.662,64,2.607,65,3.403,66,2.052,67,3.925,68,5.59,69,3.878,70,5.59,71,1.788,72,6.254,73,0.56,74,2.946,75,5.131,76,6.254,77,2.45,78,0.201,79,4.051,80,3.127,81,1.722,82,4.251,83,2.336,84,2.995,85,0.639,86,3.557,87,1.872,88,2.45,89,5.59,90,2.101,91,1.564,92,4.102,93,2.044,94,6.83,95,4.102,96,1.38,97,4.251,98,4.434,99,1.196,100,4.373,101,1.687,102,2.575,103,5.119,104,5.59,105,4.051,106,5.59,107,5.119,108,1.996,109,0.93,110,5.59,111,2.23,112,3.719,113,2.45,114,1.587,115,1.041,116,5.59,117,3.579,118,2.085,119,6.642,120,4.399,121,4.485,122,5.59,123,5.824,124,3.875,125,5.59,126,6.254,127,2.511,128,5.59,129,2.712,130,4.051,131,6.83,132,7.375,133,1.872,134,4.051,135,5.59,136,1.842,137,3.227,138,1.464,139,3.756,140,0.576,141,1.889,142,5.59,143,0.598,144,3.756,145,4.051,146,2.626,147,3.756,148,1.564,149,2.447,150,4.102,151,4.251,152,1.403,153,4.051,154,2.23,155,2.161,156,2.294,157,3.756,158,0.971,159,0.004,160,0.005,161,0.004]],["title/classes/ActionSearchProvider.html",[78,0.11,162,3.691]],["body/classes/ActionSearchProvider.html",[3,0.072,4,0.056,5,0.048,10,4.34,12,0.162,13,0.456,14,0.731,18,0.321,19,0.008,26,0.099,36,1.256,47,2.316,50,0.863,52,0.651,54,3.125,55,2.72,58,3.266,59,1.037,60,1.523,63,2.106,67,3.092,69,4.437,73,0.532,76,4.957,78,0.107,96,1.196,98,3.125,99,0.837,101,2.122,111,2.159,113,2.373,115,0.976,133,1.813,143,1.059,158,1.282,159,0.004,160,0.005,161,0.004,162,4.957,163,1.089,164,7,165,3.271,166,7.517,167,3.14,168,1.002,169,5.98,170,1.389,171,3.973,172,1.702,173,3.832,174,7.001,175,7.001,176,7.001,177,7.001,178,7.001,179,2.852,180,4.957,181,0.789,182,6.106,183,6.106,184,6.106,185,7.554,186,8.569,187,7.554,188,4.979,189,8.201,190,2.316,191,2.432,192,0.771,193,4.415,194,3.084,195,5.682,196,0.949,197,4.415,198,1.489,199,0.795,200,4.616,201,0.768,202,4.415,203,2.937,204,2.558,205,0.428,206,8.806,207,5.345,208,7.554,209,2.865,210,3.914,211,3.028,212,4.415,213,7.001,214,4.415,215,4.415,216,4.415,217,1.597,218,3.008,219,4.415,220,4.415,221,4.415,222,6.106,223,4.415,224,3.337,225,0.998,226,4.302,227,6.106,228,4.415,229,6.106,230,4.415,231,6.106,232,4.415,233,4.415,234,1.446,235,2.29,236,7.554,237,4.117,238,4.957,239,6.106,240,4.415,241,5.682,242,4.415,243,6.106,244,2.493,245,3.602,246,2.373,247,3.466,248,1.024,249,4.415,250,6.106,251,3.342,252,5.413,253,4.415,254,2.604,255,4.415,256,4.415,257,4.415,258,4.415,259,3.922,260,0.43,261,1.367,262,3.584,263,2.604,264,1.459,265,2.836,266,3.584,267,0.652,268,3.584,269,3.914,270,2.416,271,2.416,272,7.929,273,1.826,274,4.415,275,4.415,276,1.367,277,4.415,278,7.001,279,6.106,280,6.106,281,0.543,282,0.725,283,3.337,284,4.415,285,3.914,286,2.976,287,2.209,288,4.415,289,4.415,290,4.415,291,4.415,292,4.415,293,3.584,294,4.415,295,4.415,296,4.415,297,4.415,298,6.106,299,4.415,300,6.106,301,4.415,302,4.415,303,4.415,304,4.415,305,4.415,306,4.415,307,4.415,308,4.415,309,4.415,310,4.415,311,4.415,312,4.415,313,4.415]],["title/classes/ActivityPromiseResolver.html",[78,0.11,314,2.794]],["body/classes/ActivityPromiseResolver.html",[0,0.27,3,0.088,4,0.069,5,0.06,8,0.459,12,0.199,14,0.589,18,0.307,19,0.008,26,0.126,34,1.532,50,0.865,57,1.996,58,3.829,60,1.094,66,2.025,73,0.549,78,0.188,82,5.236,85,1.174,136,3.093,159,0.007,160,0.006,161,0.004,163,1.339,181,0.906,196,0.712,198,1.2,199,0.64,225,0.786,234,1.286,235,2.489,259,3.487,281,0.593,287,2.537,314,5.045,315,4.773,316,4.773,317,4.103,318,5.691,319,3.838,320,4.987,321,6.749,322,3.324,323,3.838,324,4.727,325,4.07,326,4.987,327,2.863,328,3.015,329,5.73,330,5.524,331,6.304,332,6.304,333,7.012,334,5.428,335,6.166,336,5.428,337,3.835,338,5.534,339,2.728,340,6.205,341,5.236,342,2.792,343,5.916,344,6.663,345,3.113,346,6.899,347,3.352,348,5.273,349,6.899,350,6.663,351,5.691,352,5.428,353,5.534,354,5.273,355,5.524,356,6.304,357,6.304,358,4.987,359,1.895,360,4.406,361,4.406,362,1.713,363,4.406,364,3.628,365,1.009,366,5.691,367,5.691,368,3.861,369,4.406]],["title/classes/ActivityReporter.html",[78,0.11,370,2.187]],["body/classes/ActivityReporter.html",[3,0.085,4,0.067,5,0.058,8,0.451,12,0.192,14,0.725,18,0.312,19,0.008,26,0.085,34,1.771,39,3.899,50,0.943,57,2.176,58,3.789,59,1.064,62,2.542,64,1.699,65,3.715,73,0.552,78,0.127,85,0.948,108,2.172,111,3.051,129,2.951,136,2.733,159,0.004,160,0.006,161,0.004,163,1.295,181,0.886,188,6.411,190,3.449,192,0.918,196,0.892,198,1.543,199,0.788,225,1.034,235,2.55,248,1.15,259,4.409,260,0.299,267,0.952,276,1.627,281,0.514,286,5.154,314,5.401,315,5.478,316,5.478,321,5.766,322,3.002,325,4.171,335,6.009,339,2.508,340,5.188,341,3.541,342,2.092,343,5.207,353,4.627,354,3.374,359,1.875,370,3.301,371,4.656,372,6.864,373,6.864,374,2.667,375,2.172,376,6.521,377,4.627,378,2.427,379,3.206,380,6.864,381,6.864,382,5.571,383,5.571,384,5.571,385,5.571,386,5.571,387,6.58,388,4.656,389,5.253,390,2.802,391,2.269,392,8.411,393,1.995,394,6.864,395,6.084,396,5.571,397,5.571,398,5.253,399,7.003,400,5.571,401,6.58,402,5.571,403,5.253,404,5.571,405,5.253,406,5.571,407,5.571,408,5.253,409,3.715,410,5.983,411,4.882,412,5.188,413,5.571,414,5.253,415,5.253,416,4.656,417,7.645,418,7.645,419,6.864,420,6.864,421,6.864,422,6.864,423,6.864,424,5.253,425,6.777,426,5.253,427,5.253,428,5.253,429,5.253,430,5.253,431,5.253]],["title/interfaces/ActivityResponse.html",[0,0.175,358,3.234]],["body/interfaces/ActivityResponse.html",[0,0.282,2,1.271,3,0.094,4,0.074,5,0.064,8,0.343,12,0.213,13,0.547,14,0.708,18,0.301,19,0.008,26,0.13,34,1.271,50,0.904,57,2.086,58,3.74,60,1.172,66,1.807,73,0.557,78,0.177,82,4.94,85,1.199,136,2.918,159,0.007,160,0.006,161,0.005,235,2.222,259,3.736,281,0.586,287,2.104,314,4.503,315,3.574,316,3.574,317,4.396,318,4.721,319,3.184,320,4.137,321,6.777,322,3.332,323,3.184,324,3.921,325,3.633,326,4.137,327,2.375,328,2.501,329,5.408,330,5.212,331,5.948,332,4.721,335,5.975,337,3.423,338,4.94,339,2.718,340,5.539,341,4.94,343,5.942,344,5.948,345,2.779,346,6.836,347,2.992,348,4.707,349,6.836,350,5.948,351,4.721,353,5.408,354,5.153,355,5.212,356,5.948,357,5.948,358,5.706,359,2.062,360,5.948,361,4.721,362,1.75,363,4.721,364,3.747,365,1.362,366,5.948,367,5.948,368,4.137,369,4.721,432,5.816]],["title/classes/AngularLocatorDriver.html",[78,0.11,433,3.234]],["body/classes/AngularLocatorDriver.html",[3,0.067,4,0.052,5,0.045,8,0.244,12,0.151,13,0.547,14,0.675,18,0.305,19,0.008,22,2.015,26,0.095,35,2.491,36,0.85,45,2.184,59,0.954,71,1.568,73,0.578,77,3.12,78,0.141,81,1.592,85,1.069,96,0.623,99,0.783,109,0.609,115,0.753,123,3.122,136,1.644,140,0.377,158,0.867,159,0.006,160,0.005,161,0.003,163,1.666,168,0.678,170,1.537,172,1.38,181,0.872,192,0.722,196,0.838,198,1.412,199,0.754,201,0.77,205,0.289,217,1.494,225,1.003,234,0.978,237,3.929,246,2.624,248,0.977,260,0.457,267,0.9,273,0.998,276,1.279,281,0.593,282,1.426,342,1.644,345,1.566,362,1.175,365,1.083,368,5.503,433,6.095,434,3.937,435,5.994,436,2.653,437,1.987,438,3.308,439,2.109,440,4.804,441,5.167,442,1.497,443,3.833,444,5.828,445,4.553,446,4.731,447,4.405,448,4.713,449,4.13,450,6.238,451,5.987,452,4.701,453,4.13,454,5.167,455,4.13,456,4.731,457,3.744,458,5.987,459,3.62,460,2.225,461,5.503,462,1.38,463,4.405,464,1.789,465,3.679,466,3.352,467,3.006,468,3.661,469,2.653,470,3.984,471,3.929,472,4.13,473,3.929,474,4.13,475,4.553,476,3.661,477,4.13,478,5.482,479,0.398,480,3.308,481,2.26,482,2.344,483,2.184,484,2.26,485,2.184,486,2.184,487,2.722,488,5.216,489,5.167,490,5.987,491,3.661,492,5.167,493,4.731,494,5.167,495,5.987,496,6.504,497,3.661,498,3.661,499,3.661,500,3.661,501,3.661,502,5.167,503,3.661,504,3.661,505,3.661,506,3.661,507,3.661,508,2.113,509,2.937,510,2.015,511,2.653,512,3.352,513,3.661,514,1.824,515,3.661,516,3.661,517,5.167,518,3.661,519,1.987,520,3.661,521,3.661,522,3.661,523,0.978,524,3.308,525,2.233,526,3.661,527,3.661,528,4.405,529,3.661,530,2.048,531,2.184,532,3.661,533,3.661,534,4.016,535,3.661,536,3.661,537,5.987,538,3.661,539,3.661,540,2.113,541,3.352,542,3.661,543,3.661,544,5.167,545,3.352,546,1.605,547,2.937,548,1.605,549,1.396,550,3.661,551,3.661,552,4.509,553,2.184,554,3.572,555,2.556,556,3.082,557,3.572,558,2.321,559,2.803,560,2.184,561,1.336,562,2.722,563,1.644,564,2.184,565,2.184,566,1.605,567,2.184,568,2.184,569,2.184,570,1.605,571,1.53,572,2.538,573,3.661,574,2.113,575,2.653,576,2.538,577,2.653,578,2.653,579,2.653,580,3.661,581,2.653,582,3.661,583,2.784,584,1.625,585,2.653,586,3.661,587,3.661,588,4.405,589,3.661,590,3.661,591,3.661,592,3.661,593,3.661,594,5.167,595,3.661,596,3.661,597,3.661,598,5.167,599,1.428,600,1.279,601,3.661,602,3.661,603,3.661,604,3.661,605,3.661,606,3.661,607,5.987,608,0.85,609,1.128,610,3.661]],["title/classes/AngularWidgetObjectFinder.html",[78,0.11,484,2.489]],["body/classes/AngularWidgetObjectFinder.html",[3,0.091,4,0.071,5,0.062,8,0.423,12,0.205,13,0.534,14,0.602,18,0.323,19,0.008,26,0.091,59,0.883,73,0.483,78,0.135,85,1.148,87,2.126,91,1.897,111,1.984,159,0.005,160,0.006,161,0.005,163,1.384,165,2.873,168,0.921,172,1.407,181,0.925,192,1.379,196,0.872,198,1.35,199,0.654,205,0.393,225,0.803,246,2.783,260,0.5,267,0.765,281,0.356,282,1.176,328,3.08,342,2.852,359,1.251,362,1.731,393,2.082,433,3.991,434,4.102,435,6.246,436,2.812,438,4.065,439,3.177,440,5.612,442,1.84,450,5.603,452,4.493,460,2.172,465,3.785,467,3.336,469,3.604,470,4.902,479,0.541,480,5.066,481,3.071,482,3.185,483,2.967,484,3.92,486,2.967,487,3.346,493,4.555,523,2.161,524,4.984,534,3.071,545,5.814,546,2.783,547,5.095,548,3.229,552,4.402,561,1.815,599,3.035,611,4.241,612,4.402,613,5.319,614,7.163,615,7.163,616,7.89,617,5.611,618,2.592,619,4.829,620,4.829,621,4.829,622,2.476,623,4.829,624,3.788,625,4.829,626,2.79,627,5.611,628,5.414,629,4.974,630,5.733,631,5.611,632,6.994,633,6.35,634,5.414,635,3.252,636,3.604,637,3.783,638,3.482,639,3.783,640,5.611,641,5.611,642,3.783,643,3.448,644,3.783,645,2.234,646,3.31,647,4.974,648,5.611,649,2.413,650,5.611,651,4.974,652,5.611]],["title/components/BannerActivityReporterComponent.html",[205,0.319,653,1.439]],["body/components/BannerActivityReporterComponent.html",[3,0.07,4,0.055,5,0.047,8,0.409,12,0.158,13,0.449,14,0.716,18,0.316,19,0.008,21,5.233,26,0.07,30,2.18,34,1.315,39,2.894,57,1.97,58,3.586,59,1.124,60,0.871,63,1.205,65,2.658,72,4.884,73,0.563,78,0.104,85,1.034,96,0.652,99,0.82,101,2.105,108,2.74,109,0.888,111,2.448,113,1.679,133,2.222,136,1.721,140,0.55,143,0.894,159,0.004,160,0.005,161,0.004,168,0.988,172,0.771,181,0.777,188,5.795,190,3.09,192,1.051,194,3.326,196,0.934,198,1.516,199,0.823,201,0.55,205,0.485,209,1.639,218,3.244,225,1.022,235,1.824,248,1.009,259,2.776,260,0.448,261,1.864,264,1.429,273,1.969,314,4.6,315,5.493,322,3.096,325,2.983,335,6.11,339,2.725,341,2.914,342,1.721,343,4.446,353,4.056,354,2.776,359,1.754,365,1.391,370,4.165,375,2.49,376,4.548,382,4.884,383,4.884,384,4.884,385,6.075,386,6.075,387,6.785,391,2.474,396,5.619,397,3.508,399,5.619,400,3.508,401,4.884,402,3.508,404,3.508,406,3.508,407,5.619,409,2.658,410,4.28,411,6.236,412,3.267,413,5.619,442,1.11,462,1.691,464,1.189,479,0.417,600,1.339,653,2.369,654,1.514,655,1.283,656,1.721,657,7.255,658,3.508,659,2.865,660,5.334,661,1.679,662,1.71,663,1.824,664,5.334,665,4.083,666,7.485,667,7.485,668,3.503,669,1.989,670,7.869,671,3.831,672,6.017,673,3.901,674,6.017,675,4.322,676,7.485,677,4.322,678,4.322,679,4.322,680,4.322,681,4.322,682,5.334,683,1.824,684,2.894,685,3.831,686,3.831,687,3.831,688,3.831,689,3.831,690,3.831,691,4.322,692,4.322,693,3.831,694,3.267,695,4.322,696,3.831,697,6.635,698,7.485,699,6.635,700,2.286,701,1.398,702,1.454,703,3.398,704,1.962,705,1.429,706,1.962,707,1.962,708,1.528,709,1.858,710,1.962,711,1.679,712,1.962,713,1.23,714,1.962,715,1.601,716,2.131,717,1.679,718,3.398,719,1.564,720,1.679,721,1.679,722,1.024,723,1.564,724,1.679,725,1.962,726,1.721,727,1.962,728,1.858,729,1.679,730,2.087,731,1.962,732,1.601,733,3.398,734,1.639,735,2.826,736,1.639,737,1.484,738,1.639,739,2.732,740,1.601,741,1.765,742,1.962,743,1.564,744,1.962,745,1.81,746,1.368,747,1.398,748,1.283,749,1.398,750,1.962,751,1.679,752,1.962,753,1.721,754,1.283,755,1.962,756,1.601,757,1.858,758,1.962]],["title/classes/BannerActivityReporterWidgetObject.html",[78,0.11,759,3.691]],["body/classes/BannerActivityReporterWidgetObject.html",[3,0.08,4,0.063,5,0.054,8,0.487,12,0.182,13,0.633,14,0.74,17,3.617,18,0.325,19,0.008,25,1.833,26,0.08,34,1.084,35,1.441,36,1.02,57,1.412,59,0.978,66,1.833,71,1.151,73,0.582,78,0.12,81,2.03,85,1.095,96,0.748,109,0.732,138,2.508,140,0.604,143,1.137,148,2.233,156,2.459,159,0.004,160,0.007,161,0.004,163,1.223,165,2.935,168,1.085,181,0.853,191,2.631,196,0.942,198,1.507,199,0.804,201,0.829,205,0.578,218,3.585,225,1.018,246,1.927,248,1.246,260,0.376,281,0.523,327,3.236,339,2.559,342,2.959,347,2.025,362,1,365,0.922,391,2.457,411,5.286,436,2.353,442,1.274,452,4.769,459,2.025,460,2.826,462,1.326,464,1.834,465,3.687,519,2.385,523,1.565,525,1.639,530,2.459,531,4.191,548,2.887,553,2.622,554,3.93,555,2.812,556,3.494,557,3.93,558,2.631,559,2.385,560,2.622,561,1.604,562,2.316,563,1.975,564,2.622,565,2.622,566,1.927,567,2.622,568,2.622,569,2.622,570,1.927,571,1.837,572,3.047,624,2.622,635,3.374,638,3.113,645,2.631,653,1.569,657,6.891,659,2.137,662,1.203,665,4.383,759,5.364,760,6.891,761,4.025,762,4.423,763,2.826,764,4.218,765,4.455,766,4.455,767,4.218,768,4.455,769,3.617,770,4.455,771,7.432,772,7.432,773,4.959,774,2.815,775,3.527,776,2.316,777,1.472,778,2.815,779,1.676,780,2.622,781,2.714,782,2.815,783,3.527,784,2.815,785,1.472,786,2.815,787,2.077,788,4.056,789,3.803,790,2.887,791,2.815,792,4.818,793,3.527,794,2.815,795,3.527,796,3.178,797,2.815,798,3.527,799,2.768,800,2.815,801,3.527,802,2.815,803,3.527,804,1.881,805,2.815,806,2.815,807,3.527,808,2.815,809,3.527,810,1.536,811,1.472,812,3.276,813,3.75,814,2.815,815,3.527,816,1.536,817,2.815,818,4.396,819,4.959,820,4.396,821,4.959,822,4.959,823,4.959,824,4.959,825,4.396,826,2.459,827,4.396,828,4.396,829,4.959,830,4.396,831,4.959]],["title/classes/BaseFormControl.html",[78,0.11,832,2.794]],["body/classes/BaseFormControl.html",[3,0.076,4,0.06,5,0.051,8,0.493,12,0.172,13,0.475,14,0.681,18,0.322,19,0.008,26,0.076,45,3.367,52,1.144,59,1.099,62,2.359,73,0.55,78,0.113,83,2.871,84,2.201,96,1.329,98,4.146,99,1.208,100,3.614,101,2.235,109,1.315,115,0.822,140,0.582,143,1.046,146,4.85,159,0.004,160,0.005,161,0.004,163,1.783,170,1.449,181,0.822,191,2.536,192,0.82,196,0.949,198,1.387,199,0.781,201,0.781,205,0.446,217,3.224,225,0.937,260,0.441,267,0.501,281,0.491,282,1.045,359,1.863,377,4.293,479,0.452,508,3.259,546,2.474,600,2.588,609,1.739,669,2.105,683,1.931,730,2.658,763,2.191,832,3.913,833,7.613,834,3.81,835,4.09,836,6.368,837,6.368,838,3.423,839,6.368,840,3.756,841,2.304,842,5.274,843,6.368,844,7.227,845,5.463,846,5.463,847,4.143,848,5.463,849,6.124,850,5.463,851,4.813,852,4.813,853,4.813,854,4.813,855,3.956,856,4.642,857,5.463,858,3.733,859,5.867,860,7.227,861,5.645,862,6.062,863,6.368,864,4.694,865,4.694,866,5.858,867,4.694,868,3.157,869,4.529,870,3.157,871,4.813,872,2.474,873,4.694,874,5.858,875,4.694,876,4.813,877,4.813,878,4.928,879,4.694,880,4.813,881,4.694,882,4.813,883,4.293,884,4.694,885,4.293,886,4.813,887,4.694,888,2.482,889,5.858,890,4.694,891,5.858,892,3.063,893,4.813,894,3.063,895,4.694,896,3.913,897,3.367,898,3.259,899,4.694,900,4.813,901,4.694,902,1.739,903,4.694,904,4.813,905,4.161,906,4.694,907,6.368,908,4.694,909,4.694,910,4.694,911,4.694,912,6.368,913,1.552,914,3.485,915,3.338,916,2.768,917,3.015,918,4.694,919,3.015,920,4.694,921,4.161,922,4.694,923,4.694,924,3.164,925,4.694,926,6.368,927,4.694,928,4.694,929,4.694,930,4.694,931,3.81,932,4.694,933,4.694,934,4.694,935,4.694,936,3.338]],["title/classes/BaseWidgetObject.html",[78,0.11,486,2.405]],["body/classes/BaseWidgetObject.html",[0,0.287,3,0.08,4,0.063,5,0.054,8,0.293,10,3.088,12,0.182,13,0.493,14,0.749,18,0.312,19,0.008,25,1.224,26,0.129,55,2.568,57,2.538,73,0.566,78,0.213,81,1.355,114,2.137,115,0.854,143,0.96,152,2.73,159,0.004,160,0.005,161,0.004,163,1.63,168,1.355,192,0.867,196,0.838,198,1.131,199,0.453,201,0.776,217,3.285,225,0.972,234,1.566,246,2.888,247,3.752,248,1.453,281,0.575,282,0.815,319,3.618,338,3.345,362,1.598,365,1.718,434,3.966,436,2.695,437,2.387,438,2.816,439,3.225,442,2.121,443,5.219,445,3.345,448,3.187,459,3.539,460,2.254,461,3.529,464,1.677,465,3.904,467,2.568,469,3.187,470,4.385,471,3.345,473,3.345,475,3.345,485,3.496,486,4.366,487,3.088,599,1.715,612,4.872,635,3.002,762,2.387,763,2.772,776,2.318,785,1.473,841,2.392,878,3.899,937,5.454,938,4.062,939,4.062,940,4.246,941,6.034,942,3.002,943,5.366,944,5.366,945,5.366,946,5.366,947,6.435,948,5.366,949,5.366,950,5.366,951,5.366,952,5.287,953,5.287,954,5.287,955,5.366,956,6.611,957,6.034,958,5.843,959,4.702,960,6.04,961,4.399,962,6.04,963,4.702,964,4.962,965,5.008,966,4.702,967,4.399,968,4.028,969,2.192,970,4.028,971,3.751,972,3.529,973,5.619,974,5.366,975,3.751,976,4.028,977,3.751,978,4.028,979,2.46,980,4.028,981,2.816]],["title/components/BoldTextRendererComponent.html",[205,0.319,708,1.608]],["body/components/BoldTextRendererComponent.html",[0,0.214,3,0.09,4,0.07,5,0.061,8,0.327,12,0.203,18,0.272,19,0.008,26,0.127,30,1.483,50,1.021,52,0.818,55,2.154,60,1.117,63,1.546,73,0.48,78,0.134,90,3.562,109,1.049,115,0.918,140,0.649,159,0.005,160,0.006,161,0.005,170,1.617,196,0.563,199,0.781,205,0.623,209,2.102,234,1.96,248,1.565,260,0.446,264,1.833,281,0.45,339,2.066,359,1.236,375,1.754,390,2.263,391,1.833,442,1.424,462,1.719,464,1.404,479,0.534,600,1.717,653,1.754,654,1.789,655,2.456,656,2.207,659,1.793,661,2.154,662,1.745,669,2.35,701,1.793,702,1.718,703,3.757,704,2.517,705,1.833,706,2.517,707,2.517,708,3.187,709,3.827,710,2.517,711,2.154,712,2.517,713,1.578,714,2.517,715,2.053,716,2.355,717,2.154,718,3.757,719,2.006,720,2.154,721,2.154,722,1.313,723,2.006,724,2.154,725,2.517,726,2.207,727,2.517,728,2.384,729,2.154,730,2.307,731,2.517,732,2.053,733,3.757,734,2.102,735,3.203,736,2.102,737,1.753,738,2.102,739,3.227,740,2.053,741,2.263,742,2.517,743,2.006,744,2.517,745,2.322,746,1.754,747,1.793,748,1.646,749,1.793,750,2.517,751,2.154,752,2.517,753,2.207,754,1.646,755,2.517,756,2.053,757,2.384,758,2.517,982,5.372,983,4.5,984,4.378,985,3.465,986,2.457,987,2.593,988,3.524,989,2.572,990,4.234,991,2.761,992,2.513,993,3.524,994,3.32,995,4.565,996,6.3,997,6.954,998,2.379,999,5.315,1000,5.544,1001,2.59,1002,2.384,1003,5.769,1004,3.203,1005,2.932,1006,2.932,1007,4.19,1008,4.914,1009,4.914,1010,4.5,1011,4.914,1012,4.914,1013,4.914]],["title/interfaces/BoldTextRendererConfig.html",[0,0.175,999,2.921]],["body/interfaces/BoldTextRendererConfig.html",[0,0.249,2,1.413,3,0.105,4,0.082,5,0.071,8,0.382,12,0.237,13,0.584,18,0.303,19,0.008,26,0.136,30,2.093,50,1.078,52,0.954,55,2.513,73,0.535,78,0.156,90,3.552,109,1.154,115,0.835,159,0.005,160,0.006,161,0.005,170,1.471,205,0.612,234,1.853,248,1.589,260,0.479,281,0.496,390,2.64,462,1.153,479,0.623,655,2.322,662,1.177,708,3.164,709,3.848,982,4.888,983,5.249,984,4.304,985,3.455,986,2.235,987,2.586,988,3.206,989,2.34,990,4.003,991,2.513,992,2.287,993,3.206,994,3.19,995,4.154,996,5.733,997,5.733,998,1.961,999,5.614,1001,3.021,1002,2.781,1003,6.35,1004,3.434,1005,3.42,1006,3.42,1007,5.913,1008,6.935,1009,6.935,1010,5.249,1011,5.733,1012,5.733,1013,5.733]],["title/classes/BoldTextRendererWidgetObject.html",[78,0.11,1014,3.691]],["body/classes/BoldTextRendererWidgetObject.html",[3,0.082,4,0.064,5,0.055,8,0.504,12,0.185,13,0.637,14,0.743,17,3.665,18,0.326,19,0.008,25,1.851,26,0.082,34,1.105,35,1.47,36,1.041,57,1.44,59,0.985,66,1.851,71,1.174,73,0.581,78,0.122,81,2.05,85,1.104,109,0.746,138,2.528,140,0.612,143,1.142,148,2.263,156,2.508,159,0.004,160,0.007,161,0.004,163,1.248,165,2.951,168,1.099,181,0.865,191,2.666,196,0.931,198,1.513,199,0.808,201,0.832,205,0.582,218,3.598,225,1.021,246,1.965,248,1.553,260,0.381,281,0.424,327,3.262,342,2.989,347,2.065,362,1.513,365,0.94,436,2.467,442,1.299,452,4.78,459,2.065,460,2.832,462,1.339,464,1.838,465,3.704,519,2.433,523,1.586,525,1.672,530,2.508,531,4.224,548,2.916,553,2.675,554,3.969,555,2.821,556,3.541,557,3.969,558,2.666,559,2.433,560,2.675,561,1.636,562,2.363,563,2.014,564,2.675,565,2.675,566,1.965,567,2.675,568,2.675,569,2.675,570,1.965,571,1.874,572,3.109,624,2.675,635,3.408,638,3.144,645,2.666,662,1.219,708,1.789,709,3.573,762,4.435,763,2.832,764,4.26,765,4.514,766,4.514,767,4.534,768,4.514,769,3.665,770,4.514,774,2.871,775,3.598,776,2.363,777,1.502,778,2.871,779,1.71,780,2.675,781,2.769,782,2.871,783,3.598,784,2.871,785,1.502,786,2.871,787,2.119,788,4.088,789,3.841,790,2.916,791,2.871,792,4.846,793,3.598,794,2.871,795,3.598,796,3.221,797,2.871,798,3.598,799,2.805,800,2.871,801,3.598,802,2.871,803,3.598,804,1.919,805,2.871,806,2.871,807,3.598,808,2.871,809,3.598,810,1.567,811,1.502,812,3.32,813,3.8,814,2.871,815,3.598,816,1.567,817,2.871,982,5.673,994,3.03,1014,5.435,1015,4.484,1016,5.059,1017,5.059,1018,3.824,1019,4.484,1020,5.059]],["title/interfaces/CanBeReadOnly.html",[0,0.175,845,3.437]],["body/interfaces/CanBeReadOnly.html",[0,0.322,2,1.575,3,0.117,4,0.092,5,0.079,8,0.426,12,0.264,13,0.622,18,0.25,19,0.008,26,0.117,60,1.681,96,1.327,99,1.582,159,0.006,160,0.007,161,0.006,654,1.814,777,2.476,838,3.183,845,6.305,856,5.816,919,4.629,1021,6.389,1022,6.389,1023,3.099,1024,3.688,1025,8.342,1026,5.358,1027,8.342,1028,6.305,1029,8.342,1030,6.305]],["title/interfaces/CliptextConfig.html",[0,0.175,1031,2.921]],["body/interfaces/CliptextConfig.html",[0,0.162,2,0.916,3,0.068,4,0.053,5,0.046,8,0.248,9,1.947,12,0.153,13,0.439,14,0.678,18,0.256,19,0.008,25,1.034,26,0.12,27,1.947,30,2.082,36,0.862,38,2.472,50,0.517,52,1.005,59,1.125,74,2.751,78,0.101,81,1.609,83,1.553,85,0.814,87,1.244,96,1.114,98,4.241,99,0.795,101,1.822,102,2.78,108,1.327,109,0.619,115,0.541,118,1.386,140,0.737,158,1.236,159,0.003,160,0.005,161,0.003,170,0.954,172,1.215,248,1.141,260,0.239,267,0.885,273,2.078,276,1.298,281,0.552,345,1.59,378,1.482,393,1.218,442,1.077,459,1.712,462,0.748,464,1.537,479,0.404,519,2.016,523,0.993,525,1.386,555,1.298,561,1.905,574,4.241,583,3.971,600,2.499,608,1.66,618,1.517,626,2.751,646,2.472,662,0.763,683,1.786,702,1.013,756,2.181,757,1.803,790,2.288,804,2.801,840,2.472,902,1.145,936,5.534,988,2.92,998,2.065,1031,4.374,1032,2.472,1033,2.751,1034,2.826,1035,2.751,1036,5.739,1037,2.601,1038,2.036,1039,5.439,1040,3.3,1041,2.036,1042,3.727,1043,5.527,1044,4.189,1045,3.871,1046,6.248,1047,2.467,1048,1.712,1049,2.234,1050,4.59,1051,5.582,1052,2.689,1053,3.469,1054,5.881,1055,3.858,1056,5.881,1057,4.356,1058,5.881,1059,3.169,1060,3.403,1061,3.169,1062,3.403,1063,2.693,1064,3.403,1065,3.403,1066,3.169,1067,3.169,1068,3.403,1069,3.403,1070,1.669,1071,3.403,1072,3.403,1073,1.712,1074,4.781,1075,3.403,1076,2.928,1077,5.527,1078,3.403,1079,3.971,1080,3.403,1081,3.403,1082,3.403,1083,2.826,1084,3.403,1085,2.982,1086,1.852,1087,6.316,1088,3.403,1089,4.781,1090,3.403,1091,3.403,1092,1.517,1093,5.527,1094,4.781,1095,3.403,1096,4.781,1097,3.403,1098,4.781,1099,2.693,1100,3.403,1101,2.145,1102,5.527,1103,3.403,1104,3.403,1105,3.403,1106,4.781,1107,4.781,1108,3.403,1109,3.403,1110,4.189,1111,3.403,1112,3.403,1113,3.403,1114,3.403,1115,3.403,1116,5.527,1117,3.403,1118,5.995,1119,3.403,1120,3.403,1121,5.995,1122,2.982,1123,4.781,1124,4.781,1125,3.403,1126,3.403,1127,3.403,1128,3.403,1129,3.403,1130,3.403,1131,2.833,1132,1.712,1133,3.403,1134,3.403,1135,4.781,1136,3.403,1137,4.781,1138,5.995,1139,4.781,1140,3.181,1141,4.781,1142,2.079,1143,4.781,1144,3.403,1145,2.693,1146,3.403,1147,2.693,1148,4.781,1149,3.403,1150,3.403,1151,3.403,1152,3.403,1153,2.294,1154,3.403,1155,2.982,1156,3.169,1157,3.403,1158,3.403,1159,3.403,1160,4.781,1161,5.527,1162,3.169,1163,3.403,1164,3.403,1165,2.359,1166,3.403,1167,2.833,1168,3.403,1169,4.781,1170,5.995,1171,2.982,1172,2.982,1173,2.982,1174,2.982,1175,6.316,1176,4.452,1177,4.189,1178,3.716,1179,6.547,1180,3.716,1181,3.716,1182,3.716,1183,3.716,1184,3.716,1185,3.716,1186,2.826,1187,3.716,1188,3.403,1189,2.693,1190,3.716,1191,1.553,1192,3.716,1193,3.716,1194,3.716,1195,5.221,1196,3.716,1197,5.221,1198,6.036,1199,3.716,1200,5.221,1201,5.221,1202,3.716,1203,3.716,1204,3.716,1205,3.716,1206,3.716,1207,1.629,1208,3.716,1209,6.036,1210,3.716,1211,3.716,1212,5.221,1213,5.221,1214,2.145,1215,2.693,1216,5.221,1217,3.716,1218,3.716,1219,3.716,1220,3.716,1221,3.716,1222,3.716,1223,1.298,1224,3.169,1225,3.716,1226,3.716,1227,3.716,1228,3.716,1229,3.716,1230,5.221,1231,3.716,1232,3.716,1233,3.716,1234,3.403,1235,1.756,1236,3.716,1237,3.716,1238,3.403,1239,2.079,1240,1.803,1241,3.403,1242,3.403]],["title/interfaces/ColumnConfigInternal.html",[0,0.175,1243,2.405]],["body/interfaces/ColumnConfigInternal.html",[0,0.277,1,2.166,2,0.451,3,0.033,4,0.026,5,0.023,8,0.122,9,1.678,10,3.252,12,0.289,13,0.379,14,0.539,15,3.435,18,0.255,19,0.008,20,1.179,22,0.713,25,1.077,26,0.126,27,1.678,28,1.056,30,1.796,34,1.674,36,1.681,39,0.992,40,2.475,42,0.911,47,0.782,50,0.974,52,0.504,53,1.747,54,1.056,55,3.176,56,1.805,59,0.908,60,1.222,61,2.218,62,0.764,63,1.69,64,2.075,66,0.842,67,0.911,69,2.916,71,0.793,73,0.495,74,1.595,77,1.326,78,0.105,80,1.023,81,0.932,83,1.265,84,1.944,85,0.603,86,2.789,87,1.507,88,0.801,90,3.777,91,0.697,93,3.489,96,1.05,99,0.963,101,2.012,102,0.842,108,1.78,109,1.274,111,1.989,114,0.519,115,0.95,118,1.86,120,1.091,127,1.739,129,1.878,133,1.013,136,0.821,137,2.235,138,1.08,140,0.82,141,1.394,143,0.829,148,1.901,149,1.091,152,1.946,154,1.989,155,0.964,158,1.506,159,0.003,160,0.003,161,0.002,168,0.56,170,0.469,172,1.541,173,1.129,181,0.564,192,0.36,194,1.783,196,0.209,199,0.399,201,0.399,203,0.992,204,0.864,205,0.515,211,2.166,225,0.569,234,0.809,235,1.035,244,0.842,248,0.346,251,1.129,260,0.443,261,0.639,267,0.927,270,1.129,271,1.869,273,0.825,281,0.569,282,1.053,287,2.858,322,0.764,328,0.887,337,0.964,339,1.27,345,2.546,359,0.46,362,1.023,365,1.424,370,1.642,375,0.653,378,1.989,379,2.372,391,1.129,393,1.27,439,1.235,460,1.035,462,0.368,464,0.674,479,0.199,510,1.51,514,0.911,523,1.035,525,1.86,540,1.747,546,0.801,548,1.326,549,0.697,555,1.353,563,0.821,571,0.764,584,0.952,599,1.18,608,1.247,609,0.563,622,1.51,645,2.414,653,0.653,654,0.859,655,1.507,659,0.667,662,0.795,663,0.625,669,1.129,673,1.693,683,1.706,684,2.442,700,1.091,702,1.227,705,1.129,713,0.587,716,0.587,722,0.489,746,0.653,747,0.667,748,1.013,754,0.612,777,0.612,779,1.154,785,1.905,787,1.83,790,0.801,811,1.297,816,1.057,826,1.023,841,0.746,868,1.023,872,0.801,894,0.992,902,0.563,985,1.929,986,1.755,987,2.533,989,0.746,990,3.102,991,2.921,992,2.537,998,1.324,1001,0.964,1002,0.887,1004,2.297,1005,1.091,1006,1.091,1023,2.183,1033,0.729,1035,3.135,1037,0.911,1038,2.898,1040,2.857,1041,1.18,1045,2.04,1047,1.43,1048,0.992,1049,1.295,1052,2.218,1070,1.359,1073,0.842,1076,0.887,1086,0.911,1092,1.58,1131,0.992,1132,1.394,1140,0.964,1142,3.452,1191,0.764,1207,0.801,1223,0.639,1235,0.864,1240,1.468,1243,3.205,1244,1.056,1245,2.479,1246,1.929,1247,2.479,1248,2.688,1249,2.235,1250,2.419,1251,2.882,1252,2.685,1253,2.882,1254,2.628,1255,1.747,1256,2.235,1257,2.554,1258,1.171,1259,2.269,1260,1.938,1261,1.938,1262,0.821,1263,1.171,1264,1.869,1265,2.479,1266,1.938,1267,0.6,1268,1.938,1269,1.171,1270,1.171,1271,1.171,1272,1.171,1273,1.43,1274,0.887,1275,1.056,1276,1.129,1277,1.056,1278,1.056,1279,0.729,1280,0.887,1281,0.937,1282,0.964,1283,1.235,1284,1.023,1285,0.639,1286,1.83,1287,2.297,1288,2.166,1289,2.391,1290,3.469,1291,3.304,1292,2.975,1293,1.129,1294,2.31,1295,1.091,1296,1.056,1297,0.864,1298,1.023,1299,0.964,1300,2.812,1301,1.869,1302,2.235,1303,1.091,1304,1.129,1305,1.129,1306,2.685,1307,1.056,1308,1.394,1309,4.429,1310,2.022,1311,1.805,1312,1.129,1313,3.456,1314,2.391,1315,1.805,1316,3.102,1317,1.508,1318,1.171,1319,1.693,1320,1.171,1321,1.747,1322,1.171,1323,2.442,1324,2.598,1325,2.442,1326,1.805,1327,1.171,1328,1.171,1329,1.938,1330,1.129,1331,2.779,1332,1.171,1333,2.101,1334,1.805,1335,1.938,1336,1.171,1337,1.938,1338,1.938,1339,2.685,1340,2.479,1341,1.023,1342,0.992,1343,1.129,1344,1.171,1345,1.171,1346,0.911,1347,1.83,1348,3.193,1349,1.642,1350,3.891,1351,2.479,1352,0.821,1353,1.171,1354,1.171,1355,4.323,1356,1.091,1357,2.297,1358,3.44,1359,3.81,1360,1.091,1361,1.171,1362,2.31,1363,1.056,1364,0.729,1365,1.171,1366,1.171,1367,1.056,1368,2.789,1369,0.964,1370,1.171,1371,0.992,1372,2.31,1373,0.864,1374,0.911,1375,1.171,1376,2.04,1377,1.171,1378,1.091,1379,1.938,1380,1.747,1381,1.171,1382,1.171,1383,1.642,1384,1.056,1385,1.171,1386,1.171,1387,0.801,1388,1.171,1389,1.869,1390,2.479,1391,1.171,1392,1.171,1393,1.129,1394,1.805,1395,1.091,1396,1.805,1397,1.091,1398,2.479,1399,1.171,1400,1.023,1401,1.091,1402,1.171,1403,1.938,1404,1.171,1405,1.171,1406,1.171,1407,1.171,1408,1.171,1409,1.171,1410,1.869,1411,1.171,1412,2.479,1413,1.171,1414,1.171,1415,1.129,1416,2.882,1417,2.235,1418,1.171,1419,1.129,1420,1.091,1421,1.129,1422,1.171,1423,1.171,1424,1.129,1425,1.938,1426,1.171,1427,1.171,1428,1.938,1429,1.171,1430,1.171,1431,0.964,1432,1.171,1433,1.171,1434,1.171,1435,1.171,1436,3.809,1437,1.938,1438,1.171,1439,1.171,1440,1.171,1441,1.938,1442,1.171,1443,1.938,1444,1.938,1445,1.171,1446,1.171,1447,1.171,1448,1.938,1449,1.171,1450,2.882,1451,1.938,1452,1.938,1453,1.171,1454,1.171,1455,1.023,1456,1.171,1457,1.171,1458,1.171,1459,1.171,1460,1.171,1461,1.171,1462,1.938,1463,1.938,1464,1.938,1465,1.938,1466,2.479,1467,1.171,1468,1.171,1469,1.171,1470,1.171,1471,1.938,1472,1.938,1473,2.882,1474,1.171,1475,1.171,1476,1.171,1477,1.171,1478,1.171,1479,2.554,1480,3.44,1481,3.193,1482,1.938,1483,1.171,1484,1.938,1485,2.479,1486,1.171,1487,2.479,1488,1.171,1489,2.882,1490,1.938,1491,1.171,1492,1.171,1493,1.171,1494,1.938,1495,1.129,1496,1.171,1497,1.023,1498,1.171,1499,1.171,1500,1.171,1501,1.171,1502,1.938,1503,2.372,1504,1.171,1505,1.171,1506,1.171,1507,1.171,1508,1.171,1509,1.508,1510,1.171,1511,1.171,1512,1.171,1513,2.479,1514,1.171,1515,1.171,1516,1.129,1517,1.747,1518,1.171,1519,1.171,1520,1.171,1521,1.171,1522,1.171,1523,1.171,1524,1.171,1525,1.468,1526,1.171,1527,1.171,1528,1.171,1529,1.171,1530,1.091,1531,1.171,1532,1.171,1533,1.938,1534,1.171,1535,1.171,1536,1.171,1537,1.171,1538,1.171,1539,0.992,1540,1.171,1541,1.023,1542,1.056,1543,1.171,1544,0.992,1545,1.171,1546,1.171,1547,1.171,1548,1.171,1549,1.171,1550,1.171,1551,1.171,1552,1.171,1553,1.171,1554,1.171,1555,1.171,1556,0.801,1557,1.171,1558,1.171,1559,1.869,1560,1.171,1561,1.171,1562,1.171,1563,1.171,1564,1.171,1565,1.171,1566,1.171,1567,1.171,1568,1.938,1569,1.938,1570,1.938,1571,1.171,1572,2.31,1573,2.882,1574,1.938,1575,1.171,1576,1.171,1577,1.171,1578,1.171,1579,1.171,1580,1.171,1581,1.091,1582,1.938,1583,1.171,1584,1.171,1585,1.171,1586,1.154,1587,1.171,1588,1.171,1589,1.171,1590,1.938,1591,1.171,1592,2.479,1593,1.171,1594,1.171,1595,1.171,1596,1.938,1597,1.171,1598,1.171,1599,1.938,1600,1.938,1601,1.171,1602,1.171,1603,1.091,1604,1.129,1605,1.171,1606,1.171,1607,1.171,1608,1.938,1609,1.938,1610,1.171,1611,1.171,1612,1.938,1613,1.171,1614,1.171,1615,1.171,1616,1.171,1617,1.171,1618,1.171,1619,1.171,1620,1.129,1621,1.171,1622,1.171,1623,1.171,1624,1.171,1625,1.171,1626,1.938,1627,1.171,1628,1.171,1629,1.171,1630,1.171,1631,1.171,1632,1.171,1633,1.171,1634,1.171,1635,1.171,1636,1.938,1637,2.882,1638,2.479,1639,1.171,1640,1.171,1641,1.938,1642,1.171,1643,1.171,1644,1.171,1645,1.171,1646,1.171,1647,1.171,1648,1.171,1649,1.265,1650,1.938,1651,1.171,1652,1.171,1653,1.171,1654,1.129,1655,1.171,1656,1.171,1657,1.171,1658,1.171,1659,1.171,1660,1.171,1661,1.129,1662,1.171,1663,1.171,1664,1.171,1665,1.171,1666,1.171,1667,1.171,1668,2.882,1669,1.171,1670,1.171,1671,1.171,1672,1.171,1673,1.171,1674,1.171,1675,1.129,1676,1.171,1677,1.171,1678,1.938,1679,1.171,1680,1.938,1681,1.171,1682,1.171,1683,1.938,1684,1.171,1685,1.171,1686,1.171,1687,1.171,1688,1.171,1689,2.479,1690,1.171,1691,1.171,1692,1.171,1693,1.171,1694,1.171,1695,0.842,1696,1.171,1697,1.171,1698,1.171,1699,1.171,1700,1.171,1701,1.171,1702,1.171,1703,1.171,1704,1.023,1705,1.129,1706,1.171,1707,1.171,1708,0.992,1709,1.171,1710,1.171,1711,1.938,1712,3.193,1713,0.937,1714,1.171,1715,1.171,1716,1.171,1717,1.171,1718,1.171,1719,1.171,1720,1.938,1721,1.171,1722,1.171,1723,1.747,1724,1.171,1725,1.171,1726,1.091,1727,1.171,1728,1.171,1729,1.091,1730,1.171,1731,1.171,1732,1.171,1733,1.171,1734,1.171]],["title/interfaces/ColumnRendererSpec.html",[0,0.175,1004,1.857]],["body/interfaces/ColumnRendererSpec.html",[0,0.287,2,1.089,3,0.081,4,0.063,5,0.055,8,0.294,9,2.811,12,0.182,13,0.593,18,0.317,19,0.008,21,5.101,22,2.858,26,0.134,27,1.648,30,1.334,35,1.449,38,2.94,47,2.826,50,1.07,52,1.316,55,2.576,57,1.419,60,1.005,61,2.292,64,1.612,65,2.929,66,1.838,73,0.546,78,0.12,83,2.456,85,0.916,90,3.94,91,1.685,96,0.751,99,0.945,102,3.042,112,2.94,115,1.068,133,1.48,138,1.577,141,3.042,143,0.644,148,2.241,151,3.36,153,3.202,159,0.004,160,0.005,161,0.004,165,1.723,168,1.088,192,0.871,196,0.673,201,0.681,204,2.777,205,0.636,234,1.765,235,1.511,245,2.94,248,1.331,260,0.452,267,0.708,273,1.205,281,0.42,322,1.846,345,1.89,362,1.667,364,2.328,390,2.707,467,3.086,510,1.723,514,2.202,566,1.937,571,1.846,584,1.849,618,1.803,622,2.292,654,1.254,683,2.259,702,1.998,708,1.762,749,2.144,777,1.48,804,1.89,810,1.544,835,3.202,872,1.937,892,2.398,902,1.361,969,3.291,979,2.471,984,2.551,987,3.138,988,3.938,989,1.803,991,2.895,992,2.808,993,3.288,994,3.384,998,2.732,999,3.202,1002,2.143,1004,3.471,1023,2.143,1031,4.786,1033,1.762,1036,4.716,1037,2.929,1038,1.723,1039,3.36,1040,1.985,1052,1.723,1063,3.202,1092,1.803,1167,3.189,1191,2.759,1248,2.088,1249,2.551,1254,3.48,1277,2.551,1278,2.551,1281,2.263,1282,2.328,1284,2.471,1285,2.054,1286,2.777,1287,3.243,1288,3.288,1290,2.707,1300,3.121,1310,1.985,1347,2.088,1367,2.551,1369,2.328,1517,2.551,1525,3.731,1695,2.707,1735,3.545,1736,3.545,1737,5.023,1738,2.202,1739,2.851,1740,4.684,1741,6.048,1742,5.632,1743,4.046,1744,3.545,1745,4.046,1746,6.048,1747,5.382,1748,5.382,1749,5.382,1750,4.046,1751,4.046,1752,4.046,1753,4.716,1754,2.551,1755,3.063,1756,2.829,1757,4.046,1758,3.767,1759,4.046,1760,4.046,1761,4.046,1762,2.94,1763,4.046,1764,3.545,1765,4.046,1766,2.471,1767,3.36,1768,4.046,1769,2.829,1770,4.046,1771,3.767,1772,3.767,1773,3.202,1774,5.382,1775,4.046,1776,3.063,1777,2.94,1778,4.046,1779,3.36,1780,2.471,1781,2.471,1782,2.636,1783,3.202,1784,3.36,1785,3.063,1786,3.36,1787,3.36,1788,2.728,1789,4.046]],["title/classes/CommonUtil.html",[78,0.11,265,2.921]],["body/classes/CommonUtil.html",[3,0.088,4,0.069,5,0.059,8,0.413,12,0.198,14,0.651,18,0.311,19,0.008,25,2.234,26,0.088,52,1.407,57,2.332,58,3.638,60,1.408,66,2.02,78,0.13,85,1.172,113,3.183,114,2.062,136,2.782,140,0.853,141,2.852,143,1.058,159,0.004,160,0.006,161,0.004,163,1.331,181,0.902,196,0.786,198,1.452,199,0.708,201,0.85,204,2.926,217,3.07,225,0.869,265,4.488,267,0.746,273,1.98,281,0.561,282,0.886,283,4.08,285,4.785,348,5.583,354,4.488,364,3.263,365,1.298,390,2.852,549,2.361,561,2.259,608,1.11,609,1.908,622,2.415,799,3.431,878,4.121,902,1.908,981,3.965,1023,3.004,1041,2.831,1042,3.824,1073,2.204,1076,3.004,1085,4.969,1086,3.086,1165,2.484,1176,5.281,1250,2.321,1649,1.999,1780,3.464,1790,7.262,1791,4.382,1792,6.288,1793,6.986,1794,6.986,1795,5.398,1796,7.705,1797,6.686,1798,5.398,1799,6.986,1800,7.277,1801,9.202,1802,6.986,1803,6.986,1804,6.986,1805,4.71,1806,8.192,1807,8.192,1808,4.488,1809,4.488,1810,4.121,1811,6.986,1812,6.986,1813,5.398,1814,6.986,1815,6.986,1816,7.705,1817,5.398,1818,6.986,1819,6.986,1820,8.192,1821,6.986,1822,6.193,1823,6.193,1824,5.398,1825,8.484,1826,8.484,1827,5.281,1828,5.398,1829,5.398,1830,3.639,1831,4.382,1832,6.986,1833,5.398,1834,5.398,1835,5.398,1836,5.398,1837,5.398]],["title/interfaces/ComponentRenderer.html",[0,0.175,984,2.327]],["body/interfaces/ComponentRenderer.html",[0,0.306,2,1.447,3,0.107,4,0.084,5,0.073,8,0.391,12,0.242,13,0.592,18,0.323,19,0.008,26,0.138,50,1.128,52,0.977,57,2.419,64,2.141,88,2.572,109,0.977,115,1.097,159,0.005,160,0.007,161,0.005,192,1.386,205,0.648,217,2.395,225,0.743,260,0.377,327,2.703,337,3.092,362,1.816,467,3.083,479,0.638,558,2.636,654,1.997,655,2.355,702,1.918,749,2.141,780,3.501,969,2.924,984,4.348,986,2.743,998,2.773,1004,2.703,1007,5.997,1286,3.324,1287,2.703,1310,2.636,1357,2.703,1525,3.788,1708,4.237,1726,3.501,1744,4.709,1777,3.905,1838,5.004,1839,5.004,1840,7.034,1841,5.938,1842,5.869,1843,5.004,1844,6.44,1845,5.869,1846,5.869,1847,4.068,1848,5.869]],["title/directives/ComponentRendererOutletDirective.html",[600,1.408,749,1.471]],["body/directives/ComponentRendererOutletDirective.html",[3,0.087,4,0.068,5,0.059,8,0.318,9,2.706,12,0.197,13,0.521,14,0.65,17,4.236,18,0.319,19,0.008,26,0.087,33,6.105,36,1.108,50,1.01,52,0.795,55,3.375,57,2.33,59,1.046,66,1.721,78,0.13,88,2.711,109,1.208,112,4.115,159,0.004,160,0.006,161,0.004,172,1.678,181,0.901,191,2.778,192,0.941,196,0.91,198,1.324,199,0.707,205,0.666,225,0.918,234,1.653,235,2.115,260,0.397,267,0.575,273,1.302,276,1.668,281,0.442,337,3.259,462,1.245,464,1.617,479,0.519,514,2.379,600,2.535,626,3.126,661,2.093,669,2.306,748,1.599,749,2.256,779,2.358,816,2.397,939,4.288,984,2.756,985,3.082,989,2.524,990,4.188,994,3.464,998,2.346,1001,2.516,1002,2.316,1004,2.849,1035,3.615,1070,2.778,1167,3.356,1286,3.241,1287,3.61,1357,3.698,1384,4.188,1389,4.48,1516,2.948,1525,3,1713,2.446,1849,8.028,1850,4.775,1851,6.977,1852,5.274,1853,6.977,1854,6.977,1855,6.977,1856,7.256,1857,4.115,1858,8.687,1859,8.961,1860,8.185,1861,6.977,1862,8.185,1863,8.185,1864,5.387,1865,8.687,1866,7.739,1867,8.185,1868,6.977,1869,6.977,1870,7.739,1871,5.849,1872,5.504,1873,6.977,1874,5.387,1875,5.387,1876,5.387,1877,5.387,1878,5.387,1879,5.387,1880,6.977,1881,6.977,1882,5.387,1883,5.387,1884,5.387,1885,8.185,1886,5.387,1887,5.387,1888,5.387,1889,5.387,1890,5.387,1891,5.387,1892,5.387,1893,5.387,1894,5.387,1895,5.387,1896,5.387]],["title/interfaces/ComponentRendererSpec.html",[0,0.175,1287,1.857]],["body/interfaces/ComponentRendererSpec.html",[0,0.301,2,1.405,3,0.104,4,0.082,5,0.071,8,0.38,12,0.235,13,0.582,18,0.33,19,0.008,26,0.136,50,1.12,52,1.15,57,1.83,64,2.521,88,3.029,109,1.15,115,1.007,159,0.005,160,0.006,161,0.005,192,1.524,205,0.65,217,2.326,225,0.874,260,0.366,327,3.183,337,3.642,362,1.853,467,3.389,479,0.62,558,3.104,654,1.618,655,1.909,702,1.554,749,2.521,780,4.123,969,3.443,984,4.293,986,2.222,998,2.787,1004,3.183,1007,6.593,1286,3.654,1287,3.183,1310,3.104,1357,3.183,1525,3.842,1708,3.75,1726,4.123,1744,4.573,1777,3.792,1838,4.86,1839,4.86,1840,5.7,1841,6.023,1842,5.7,1843,5.893,1844,7.08,1845,5.7,1846,6.911,1847,4.791,1848,5.7,1897,6.43]],["title/injectables/CsvExporterService.html",[1898,2.255,1899,3.234]],["body/injectables/CsvExporterService.html",[3,0.082,4,0.065,5,0.091,8,0.444,12,0.186,14,0.632,18,0.277,19,0.008,20,1.18,26,0.122,35,2.326,36,1.045,50,0.627,52,1.181,57,1.447,59,0.828,60,1.723,73,0.577,74,3.137,78,0.123,83,2.786,85,1.237,96,1.255,101,2.013,102,2.075,115,0.867,124,3.123,127,2.023,143,0.656,156,3.73,158,1.067,159,0.007,160,0.006,161,0.004,181,0.867,196,0.764,198,1.287,199,0.76,201,0.687,217,2.722,225,0.933,260,0.289,267,0.888,273,1.228,281,0.561,282,1.102,323,3.676,362,1.024,365,0.944,390,2.742,416,6.668,479,0.49,509,3.614,510,2.766,523,2.121,570,3.321,608,1.045,638,2.129,842,4.542,969,3.323,988,3.968,1037,2.245,1092,2.43,1290,3.49,1316,4.095,1649,1.882,1713,2.307,1754,2.6,1758,3.841,1898,3.33,1899,4.777,1900,3.264,1901,4.918,1902,6.496,1903,4.125,1904,6.716,1905,6.716,1906,5.954,1907,6.716,1908,7.27,1909,5.082,1910,7.522,1911,7.447,1912,8.003,1913,6.049,1914,7.094,1915,8.719,1916,7.522,1917,5.35,1918,8.851,1919,6.716,1920,6.939,1921,5.082,1922,3.961,1923,5.451,1924,5.451,1925,6.755,1926,6.716,1927,5.082,1928,7.522,1929,3.841,1930,5.082,1931,5.082,1932,3.123,1933,5.082,1934,2.884,1935,3.841,1936,5.954,1937,3.264,1938,5.082,1939,5.082,1940,6.716,1941,5.082,1942,5.082,1943,6.716,1944,5.082,1945,5.082,1946,5.082,1947,2.884,1948,4.125,1949,5.082,1950,5.082,1951,5.082,1952,5.082,1953,6.716,1954,5.082,1955,5.082,1956,5.082,1957,5.082,1958,5.082,1959,5.082,1960,5.082,1961,4.125,1962,4.125,1963,5.082,1964,5.082,1965,5.082,1966,5.082,1967,5.082,1968,5.082,1969,5.082,1970,5.082,1971,5.082,1972,8.851,1973,6.716,1974,6.716,1975,5.082,1976,7.522,1977,3.426,1978,4.505,1979,5.076,1980,5.082,1981,7.522,1982,5.082,1983,3.614,1984,5.082,1985,5.082,1986,5.082,1987,5.082,1988,5.082,1989,4.505,1990,5.082,1991,5.082,1992,5.082,1993,4.125,1994,5.082,1995,5.082,1996,5.082,1997,5.082,1998,5.082,1999,5.082]],["title/classes/CypressLocatorDriver.html",[78,0.11,2000,3.437]],["body/classes/CypressLocatorDriver.html",[3,0.087,4,0.068,5,0.059,8,0.317,12,0.197,14,0.712,18,0.311,19,0.008,26,0.087,57,2.599,60,1.405,73,0.579,78,0.13,96,1.166,101,2.188,113,2.707,152,2.819,159,0.004,160,0.006,161,0.004,163,1.326,168,0.882,170,1.585,172,1.511,181,0.9,192,0.939,196,0.897,198,1.486,199,0.774,201,0.747,217,3.276,225,0.974,260,0.397,267,0.905,276,1.665,281,0.56,282,1.342,324,4.697,325,3.455,342,3.257,362,1.405,374,2.089,409,3.078,410,4.956,434,4.184,436,2.746,437,2.586,438,3.955,439,2.959,442,1.79,443,4.388,445,5.212,446,5.656,447,5.267,448,5.577,465,3.702,466,4.363,467,3.292,469,3.453,470,4.824,471,4.697,473,4.697,475,4.697,476,4.765,485,2.843,486,2.843,487,3.255,488,5.712,525,2.303,546,2.707,599,2.827,638,3.238,811,2.068,942,3.164,1250,2.996,1259,2.464,1661,3.814,1764,4.956,1796,6.177,1800,5.656,2000,6.77,2001,6.77,2002,6.878,2003,6.968,2004,6.177,2005,6.177,2006,6.177,2007,6.177,2008,6.177,2009,6.177,2010,4.063,2011,8.179,2012,5.376,2013,7.731,2014,6.853,2015,5.376,2016,6.968,2017,5.376,2018,5.376,2019,4.765,2020,6.968,2021,5.376,2022,5.376,2023,4.063,2024,4.765,2025,4.063,2026,4.765,2027,4.363,2028,4.363,2029,4.765,2030,7.731,2031,5.376,2032,8.473,2033,6.968,2034,5.376,2035,5.376,2036,5.376,2037,6.968,2038,5.376,2039,5.376,2040,4.765]],["title/classes/CypressWidgetObjectFinder.html",[78,0.11,2023,3.437]],["body/classes/CypressWidgetObjectFinder.html",[3,0.098,4,0.077,5,0.066,8,0.443,12,0.221,14,0.508,18,0.296,19,0.008,26,0.098,29,6.094,57,2.499,60,1.513,66,1.851,73,0.548,77,2.917,78,0.146,81,2.05,85,1.128,87,2.228,99,1.147,113,2.917,159,0.005,160,0.006,161,0.005,163,1.491,165,3.136,168,0.992,181,0.97,192,1.312,196,0.614,198,1.285,199,0.552,225,0.678,246,2.917,260,0.465,267,0.955,281,0.383,282,1.232,324,5.061,342,2.989,362,1.721,374,2.349,393,2.182,409,3.316,434,3.507,436,2.79,438,4.261,439,3.177,442,1.928,448,4.822,460,2.276,465,3.841,467,3.411,469,3.884,470,5.036,486,3.197,487,3.507,523,1.934,599,2.595,611,4.57,612,4.613,629,5.36,630,5.64,632,7.238,633,6.655,634,5.674,635,3.877,638,2.533,647,5.36,651,5.36,847,4.234,914,4.109,916,3.566,917,3.884,924,4.076,1250,3.228,1259,2.654,1764,5.34,2000,4.57,2001,5.674,2002,7.127,2004,6.655,2005,6.655,2006,6.655,2007,6.655,2008,6.655,2009,6.655,2010,4.57,2014,6.655,2023,5.674,2024,5.36,2025,4.57,2026,5.36,2027,4.908,2028,4.908,2029,5.36,2040,6.655,2041,6.046,2042,5.36,2043,6.046,2044,6.046,2045,6.046,2046,6.046]],["title/interfaces/DataExportRequestEvent.html",[0,0.175,2047,3.437]],["body/interfaces/DataExportRequestEvent.html",[0,0.215,2,0.849,3,0.106,4,0.049,5,0.078,8,0.229,12,0.142,13,0.416,18,0.226,19,0.008,20,1.515,26,0.134,27,1.284,30,2.105,34,1.427,35,1.129,36,1.343,40,3.086,50,0.805,52,1.053,58,2.841,59,1,60,1.783,62,1.438,66,1.376,73,0.463,75,4.466,78,0.094,83,1.438,85,0.771,86,3.747,96,1.222,97,2.618,99,1.434,101,2.26,108,2.258,109,1.351,113,2.772,114,1.796,115,0.502,129,2.399,133,1.153,140,0.69,143,0.502,146,3.166,148,1.313,154,1.972,158,1.37,159,0.003,160,0.005,161,0.003,170,0.883,172,1.529,194,2.665,199,0.652,201,0.69,205,0.391,238,5.299,248,1.47,260,0.448,261,1.203,267,0.84,276,1.203,281,0.584,282,1.473,283,2.935,322,3.072,326,2.762,342,2.221,348,2.494,359,0.866,362,1.125,364,1.814,365,0.722,374,1.509,393,1.621,462,0.693,479,0.374,525,1.284,546,2.167,549,1.313,561,1.256,562,1.814,608,1.343,609,1.949,622,1.928,662,0.707,663,1.177,673,4.499,684,3.14,711,1.509,722,1.546,785,1.153,811,1.153,816,1.203,841,1.405,858,3.395,870,3.747,892,2.683,902,1.061,913,1.284,972,2.762,987,2.498,991,3.222,993,3.237,1026,2.494,1035,2.606,1041,1.342,1048,1.621,1049,2.116,1073,2.665,1079,2.618,1207,1.509,1223,1.203,1252,3.773,1257,2.964,1259,2.308,1262,1.546,1267,1.129,1279,1.972,1280,1.67,1290,1.586,1299,1.814,1300,1.627,1310,2.599,1316,1.987,1387,1.509,1394,2.054,1395,2.054,1396,2.95,1397,2.054,1401,2.95,1455,1.925,1556,1.509,1572,2.054,1581,2.054,1766,1.925,1857,2.29,1899,4.643,1901,2.386,1908,4.528,1911,6.386,1913,5.394,1920,3.152,1923,4.528,1924,3.152,1925,3.152,1934,3.705,1962,4.528,2047,4.216,2048,2.494,2049,2.935,2050,4.528,2051,6.7,2052,6.975,2053,6.7,2054,4.945,2055,4.945,2056,4.216,2057,4.945,2058,6.627,2059,5.787,2060,5.694,2061,3.152,2062,3.24,2063,4.528,2064,3.443,2065,3.443,2066,3.152,2067,2.95,2068,3.443,2069,1.868,2070,3.152,2071,4.528,2072,4.528,2073,6.135,2074,3.152,2075,3.152,2076,3.443,2077,2.494,2078,3.443,2079,5.787,2080,3.443,2081,2.935,2082,3.152,2083,3.443,2084,3.443,2085,3.443,2086,3.443,2087,3.443,2088,3.443,2089,3.968,2090,5.787,2091,3.443,2092,3.443,2093,2.494,2094,3.443,2095,3.443,2096,3.443,2097,3.443,2098,3.443,2099,3.152,2100,3.443,2101,3.443,2102,3.443,2103,3.443,2104,3.443,2105,3.443,2106,3.443,2107,3.443,2108,3.443,2109,3.443,2110,3.443,2111,3.443,2112,5.299,2113,4.161,2114,3.443,2115,3.443,2116,3.443,2117,3.443,2118,3.583,2119,3.443,2120,3.443,2121,3.443,2122,3.443,2123,3.443,2124,3.443,2125,3.443,2126,3.443,2127,3.443,2128,3.443,2129,3.443,2130,3.443,2131,3.443,2132,3.443,2133,3.443,2134,3.968,2135,3.443,2136,3.968,2137,3.443,2138,4.945,2139,2.762,2140,2.762,2141,4.945,2142,3.443,2143,3.443,2144,3.443,2145,5.787,2146,3.443,2147,4.945,2148,3.443,2149,3.443,2150,2.935,2151,3.443,2152,3.443,2153,3.443,2154,6.326,2155,3.443,2156,3.443,2157,3.443,2158,3.443,2159,4.945,2160,3.443,2161,3.443,2162,3.443,2163,3.443,2164,3.443,2165,3.443,2166,3.443,2167,3.443,2168,3.443,2169,3.443,2170,3.443,2171,3.443,2172,3.443,2173,4.945,2174,3.443,2175,3.443,2176,3.443,2177,3.443,2178,3.443,2179,3.443,2180,3.443,2181,3.443,2182,3.443,2183,3.443,2184,3.443,2185,1.925,2186,3.443,2187,3.443,2188,3.443,2189,3.443,2190,3.443,2191,3.968,2192,3.443,2193,3.443,2194,3.443,2195,3.443,2196,3.443,2197,3.443,2198,3.443,2199,3.443,2200,3.443,2201,3.443,2202,3.443,2203,3.443,2204,3.443,2205,3.443,2206,3.443,2207,3.443,2208,3.443,2209,3.443,2210,3.443,2211,3.443,2212,3.443,2213,3.443,2214,3.443,2215,3.443,2216,3.443,2217,4.945,2218,3.443,2219,3.443,2220,3.443]],["title/classes/DataExporterWidgetObject.html",[78,0.11,2221,3.691]],["body/classes/DataExporterWidgetObject.html",[3,0.082,4,0.064,5,0.055,8,0.395,12,0.304,13,0.499,14,0.752,18,0.323,19,0.008,25,1.849,26,0.143,50,0.623,57,1.904,60,1.348,73,0.508,75,4.94,78,0.122,84,2.759,85,0.698,114,1.887,117,5.3,140,0.685,143,1.191,146,4.256,152,2.273,154,2.365,158,1.06,159,0.004,160,0.006,161,0.004,163,1.245,168,1.098,181,0.864,196,0.944,198,0.864,199,0.461,201,0.842,217,2.713,218,3.178,225,0.895,248,1.257,260,0.287,281,0.506,362,1.511,365,1.543,439,2.713,443,4.256,460,1.531,464,1.481,465,3.574,486,4.603,576,4.109,608,1.376,609,1.826,635,3.404,662,1.218,711,2.598,763,2.68,870,3.316,937,3.243,952,4.756,953,4.756,954,4.756,958,5.055,959,3.591,960,5.333,962,5.333,963,3.591,965,3.944,966,3.591,987,3.098,1018,3.816,1037,3.312,1070,2.986,1132,2.73,1455,3.316,1830,4.508,1901,5.633,1913,6.277,2048,5.887,2060,4.508,2082,5.428,2099,5.428,2112,5.428,2113,4.512,2221,5.428,2222,4.476,2223,3.66,2224,7.498,2225,7.498,2226,7.498,2227,7.498,2228,7.498,2229,7.498,2230,7.498,2231,7.498,2232,7.498,2233,6.687,2234,7.498,2235,5.049,2236,7.498,2237,5.049,2238,7.982,2239,7.498,2240,5.049,2241,4.756,2242,7.498,2243,5.049,2244,6.687,2245,7.498,2246,5.049,2247,7.498,2248,5.049,2249,7.498,2250,5.049,2251,5.753,2252,7.498,2253,5.049,2254,6.687,2255,7.498,2256,5.049,2257,5.049,2258,4.476,2259,4.476,2260,4.476,2261,4.476,2262,6.687,2263,5.049,2264,5.049,2265,5.049,2266,5.049,2267,5.049]],["title/classes/DatagridFilter.html",[78,0.11,1283,1.645]],["body/classes/DatagridFilter.html",[0,0.221,3,0.066,4,0.051,5,0.044,8,0.239,9,2.771,12,0.148,13,0.498,14,0.611,18,0.321,19,0.008,26,0.125,35,1.176,36,0.832,45,4.06,47,1.535,50,1.09,52,0.986,59,1.052,60,0.816,61,2.513,66,1.417,73,0.529,78,0.139,96,1.096,99,1.267,109,1.073,111,2.031,112,2.387,114,1.446,115,1.141,118,1.899,140,0.701,143,0.992,158,0.849,159,0.003,160,0.005,161,0.003,163,2.023,168,1.096,170,1.307,172,1.191,181,0.939,190,3.443,191,2.287,192,1.004,196,0.937,198,1.244,199,0.664,201,0.843,205,0.587,225,0.981,234,0.958,235,2.328,260,0.477,267,0.713,281,0.52,282,1.193,323,3.144,325,2.848,362,1.158,374,3.099,378,2.031,436,2.489,467,3.486,479,0.39,488,2.728,558,2.287,561,1.858,566,1.572,584,1.128,585,2.599,599,1.399,618,2.079,649,1.74,654,1.932,669,2.403,713,1.635,716,1.635,719,1.464,723,1.464,730,1.602,737,1.417,749,2.351,754,1.705,763,2.653,777,1.201,779,1.942,785,2.435,810,1.779,816,1.779,835,2.599,841,1.464,870,2.848,888,3.038,892,1.946,902,1.986,913,1.338,969,2.95,979,2.006,984,3.72,986,2.513,987,2.208,989,1.464,992,1.431,994,2.179,998,2.679,1001,1.89,1002,1.74,1041,1.986,1042,3.144,1048,1.941,1049,2.533,1165,1.227,1167,2.763,1191,2.128,1207,2.825,1214,2.071,1223,2.252,1246,2.537,1259,2.031,1267,1.176,1273,1.695,1274,1.74,1279,2.715,1280,1.74,1283,2.417,1285,2.885,1286,2.406,1287,2.727,1313,2.66,1341,2.006,1347,2.798,1369,1.89,1373,3.216,1374,2.95,1376,1.89,1509,2.537,1525,3.302,1556,2.232,1737,2.728,1738,2.95,1739,3.126,1754,2.94,1776,2.487,1777,2.387,1779,2.728,1780,2.006,1781,4.229,1782,2.14,1783,2.599,1784,2.728,1785,2.487,1786,2.728,1787,2.728,1788,2.215,1808,2.599,1841,3.873,1857,2.387,1922,3.939,1932,2.487,2062,3.806,2069,2.763,2268,4.177,2269,2.878,2270,4.663,2271,3.53,2272,4.663,2273,4.67,2274,6.475,2275,5.421,2276,4.29,2277,4.468,2278,3.72,2279,3.979,2280,3.946,2281,3.72,2282,4.086,2283,3.69,2284,3.72,2285,5.745,2286,2.215,2287,4.046,2288,3.26,2289,4.67,2290,4.046,2291,4.29,2292,4.046,2293,4.046,2294,3.388,2295,4.046,2296,3.53,2297,4.046,2298,3.69,2299,4.046,2300,3.144,2301,2.763,2302,4.046,2303,3.26,2304,3.69,2305,4.046,2306,4.046,2307,3.144,2308,4.046,2309,3.53,2310,3.388,2311,3.69,2312,4.67,2313,3.388,2314,4.046,2315,2.94,2316,5.745,2317,4.046,2318,4.046,2319,4.046,2320,4.046,2321,4.046,2322,3.284,2323,3.284,2324,3.284,2325,2.728,2326,3.058,2327,3.058,2328,4.086,2329,3.284,2330,3.284,2331,3.284,2332,3.284,2333,3.284,2334,3.284,2335,5.421,2336,3.284,2337,3.284,2338,3.284,2339,3.284,2340,3.284,2341,3.284,2342,3.284,2343,3.284,2344,3.284,2345,2.215,2346,2.848,2347,4.663,2348,3.284,2349,3.284,2350,3.284,2351,2.599,2352,3.284,2353,3.284]],["title/components/DatagridMultiSelectFilterComponent.html",[205,0.319,715,1.684]],["body/components/DatagridMultiSelectFilterComponent.html",[0,0.245,3,0.06,4,0.047,5,0.041,8,0.219,9,1.782,12,0.136,13,0.402,14,0.623,18,0.307,19,0.008,20,1.621,26,0.113,31,2.38,34,1.526,36,1.109,45,2.851,50,0.861,52,0.547,59,1.046,60,0.747,61,1.28,63,1.033,65,2.381,73,0.537,78,0.089,79,3.463,81,1.473,85,0.745,91,1.822,96,1.053,99,0.703,109,0.547,114,0.932,115,1.057,118,2.101,127,1.475,133,2.072,140,0.678,143,0.958,152,2.733,159,0.003,160,0.004,161,0.003,163,1.568,168,1.218,170,1.227,172,0.962,181,0.696,190,3.217,192,0.647,196,0.944,198,1.27,199,0.794,201,0.843,205,0.489,209,1.405,218,3.521,225,1.005,234,1.277,235,1.123,248,0.621,260,0.455,264,1.225,267,0.679,276,1.147,281,0.491,282,1.344,323,2.028,325,1.837,339,1.567,359,0.826,365,0.688,374,2.47,375,1.172,378,1.31,390,1.513,391,1.225,436,2.202,442,0.952,462,1.67,464,1.065,467,2.712,479,0.357,549,2.148,558,1.475,561,1.198,584,1.503,600,1.147,618,1.34,626,1.31,649,1.593,653,1.172,654,1.357,655,1.1,656,1.475,659,1.198,661,1.439,662,1.685,663,1.635,669,2.101,701,1.198,702,1.871,703,3.17,704,1.682,705,1.225,706,1.682,707,1.682,708,1.31,709,1.593,710,1.682,711,1.439,712,1.682,713,1.809,714,1.682,715,2.96,716,2.204,717,3.482,718,3.17,719,1.34,720,1.439,721,1.439,722,1.977,723,1.34,724,1.439,725,1.682,726,1.475,727,1.682,728,1.593,729,1.439,730,2.228,731,1.682,732,1.372,733,3.17,734,1.405,735,2.595,736,1.405,737,1.33,738,1.405,739,2.448,740,1.372,741,1.513,742,1.682,743,1.34,744,1.682,745,1.552,746,1.172,747,1.198,748,1.1,749,1.744,750,1.682,751,1.439,752,1.682,753,1.475,754,1.1,755,1.682,756,1.372,757,1.593,758,1.682,763,2.531,779,1.252,785,2.072,799,1.552,810,1.147,816,1.147,847,3.152,858,2.663,896,2.277,902,1.473,913,1.225,914,2.951,915,2.635,916,2.185,917,2.38,924,2.497,939,2.277,986,2.564,987,1.782,989,1.951,991,2.095,992,1.906,993,2.673,994,2.045,998,2.634,1026,4.484,1038,2.197,1041,1.28,1042,2.028,1048,1.848,1101,1.896,1167,1.782,1191,1.372,1207,2.47,1223,2.475,1240,1.593,1246,1.636,1259,1.31,1267,1.077,1279,2.248,1283,3.277,1285,2.792,1310,2.147,1313,2.147,1317,2.381,1347,1.552,1352,3.083,1357,2.201,1364,1.31,1373,2.258,1374,1.636,1509,1.636,1556,1.439,1586,1.252,1704,1.837,1738,2.381,1739,3.19,1754,1.896,1756,3.06,1781,2.673,1922,2.185,2062,3.945,2069,1.782,2113,3.692,2185,1.837,2241,3.835,2268,3.851,2273,4.484,2276,3.463,2277,3.906,2278,4.089,2279,4.374,2280,3.938,2281,4.089,2282,4.965,2283,2.38,2284,3.572,2286,2.951,2288,2.103,2289,3.463,2291,3.463,2294,2.185,2296,2.277,2298,2.38,2300,2.028,2301,2.593,2303,2.103,2304,2.38,2307,3.479,2309,2.277,2310,2.185,2311,2.38,2312,3.463,2313,2.185,2315,1.896,2354,1.837,2355,3.692,2356,3.635,2357,4.075,2358,4.706,2359,4.075,2360,4.075,2361,3.06,2362,3.284,2363,2.8,2364,3.705,2365,3.705,2366,3.705,2367,3.705,2368,3.705,2369,4.706,2370,3.705,2371,4.075,2372,3.835,2373,3.635,2374,3.705,2375,2.8,2376,2.8,2377,2.8,2378,2.8,2379,2.8,2380,2.8,2381,2.8,2382,2.8,2383,2.8,2384,4.285,2385,3.284,2386,4.075,2387,2.8,2388,2.8,2389,2.8,2390,2.8,2391,3.057,2392,2.103,2393,1.837,2394,2.103,2395,2.028,2396,4.706,2397,2.8,2398,2.8,2399,3.835,2400,2.8,2401,2.497,2402,2.103,2403,2.635,2404,2.8,2405,2.8,2406,2.8,2407,2.8,2408,2.8,2409,2.8,2410,2.8,2411,4.075,2412,2.8,2413,2.8,2414,2.8,2415,2.8,2416,2.8,2417,2.8,2418,2.8,2419,2.8,2420,2.8,2421,2.8,2422,2.8,2423,2.8,2424,2.8,2425,2.8,2426,2.635,2427,4.376,2428,5.667,2429,3.463]],["title/interfaces/DatagridMultiSelectFilterConfig.html",[0,0.175,2369,3.065]],["body/interfaces/DatagridMultiSelectFilterConfig.html",[0,0.297,2,1.163,3,0.086,4,0.068,5,0.058,12,0.195,13,0.516,18,0.267,19,0.008,20,1.891,26,0.132,31,3.418,34,1.512,36,1.094,50,1.005,52,0.785,59,0.949,65,2.35,73,0.53,78,0.128,79,4.446,81,1.453,85,0.956,91,1.798,96,0.802,109,0.785,115,1.052,118,1.759,127,2.119,133,2.055,140,0.486,143,0.687,152,2.848,159,0.004,160,0.006,161,0.004,168,1.386,170,1.21,196,0.54,199,0.486,201,0.839,205,0.485,234,1.26,260,0.502,267,0.821,276,1.648,281,0.535,282,1.421,365,0.989,390,2.172,436,1.579,462,0.949,479,0.513,549,2.339,584,1.484,626,1.881,649,2.288,662,0.969,663,1.613,702,1.859,713,1.515,715,2.849,716,1.515,717,3.165,722,2.088,730,1.93,763,1.613,799,2.229,847,3.814,858,2.899,896,3.27,902,1.453,913,1.759,914,3.788,915,3.784,916,3.138,917,3.418,924,3.587,939,3.27,986,2.392,987,1.759,989,1.925,991,2.067,992,1.881,993,2.638,994,2.018,998,2.561,1026,4.941,1038,2.392,1048,2.012,1101,2.723,1223,1.648,1240,2.288,1267,1.547,1283,2.504,1285,2.768,1310,2.119,1313,2.119,1317,3.057,1352,3.363,1357,2.172,1364,1.881,1586,1.798,1704,2.638,1738,3.398,1739,3.503,1756,3.02,2062,3.835,2113,4.068,2185,2.638,2241,3.784,2268,2.416,2278,2.723,2279,2.912,2280,2.559,2281,2.723,2284,3.542,2286,2.912,2307,2.912,2354,2.638,2355,4.068,2356,3.587,2357,4.022,2358,4.666,2359,4.022,2360,4.022,2361,3.02,2369,5.186,2371,4.022,2372,3.784,2373,3.587,2384,4.666,2386,4.022,2391,3.7,2392,3.02,2393,2.638,2394,3.02,2395,2.912,2396,5.837,2397,4.022,2398,4.022,2399,4.923,2400,4.022,2401,3.587,2402,3.02,2403,3.784,2404,4.022,2405,4.022,2406,4.022,2407,4.022,2408,4.022,2409,4.022,2410,4.022,2411,5.232,2412,4.022,2413,4.022,2414,4.022,2415,4.022,2416,4.022,2417,4.022,2418,4.022,2419,4.022,2420,4.022,2421,4.022,2422,4.022,2423,4.022,2424,4.022,2425,4.022,2426,3.784]],["title/components/DatagridNumericFilterComponent.html",[205,0.319,719,1.645]],["body/components/DatagridNumericFilterComponent.html",[0,0.141,3,0.059,4,0.046,5,0.04,9,2.082,12,0.133,13,0.47,14,0.668,18,0.317,19,0.008,26,0.112,27,1.205,36,1.096,40,2.572,45,2.818,50,0.657,52,0.538,59,1.088,60,0.735,61,1.26,63,1.016,73,0.471,78,0.088,85,0.87,87,1.082,96,1.045,99,0.691,101,0.975,109,1.203,114,0.918,115,0.688,118,1.205,140,0.811,143,0.994,152,1.91,154,1.289,159,0.003,160,0.004,161,0.003,163,1.553,168,1.034,170,1.212,172,1.454,181,0.688,190,3.205,191,2.122,192,0.637,196,0.957,198,1.361,199,0.791,201,0.811,205,0.485,209,1.383,218,3.512,225,1.014,235,1.105,248,0.611,260,0.453,264,1.205,267,0.672,276,1.129,281,0.543,282,1.264,323,1.995,325,1.808,339,1.549,359,0.813,365,0.678,374,2.692,375,1.154,378,1.289,390,1.489,391,1.205,436,2.057,442,0.936,462,1.667,464,1.053,467,2.692,479,0.351,558,1.452,561,1.179,600,1.129,608,0.75,618,1.319,626,1.289,653,1.154,654,1.341,655,1.082,656,1.452,659,1.179,661,1.416,662,1.687,663,1.616,669,2.082,701,1.179,702,1.288,703,3.146,704,1.655,705,1.205,706,1.655,707,1.655,708,1.289,709,1.568,710,1.655,711,1.416,712,1.655,713,1.038,714,1.655,715,1.35,716,2.192,717,1.416,718,3.146,719,2.667,720,3.638,721,1.416,722,1.641,723,1.319,724,1.416,725,1.655,726,1.452,727,1.655,728,1.568,729,1.416,730,2.273,731,1.655,732,1.35,733,3.146,734,1.383,735,2.572,736,1.383,737,2.309,738,1.383,739,2.42,740,1.35,741,1.489,742,1.655,743,2.786,744,1.655,745,1.527,746,1.154,747,1.179,748,1.082,749,1.723,750,1.655,751,1.416,752,1.655,753,1.452,754,1.87,755,1.655,756,1.35,757,1.568,758,1.655,763,2.521,779,1.232,785,2.057,810,1.129,816,1.129,842,2.069,858,1.527,872,1.416,888,3.898,902,0.996,913,1.205,942,2.42,986,1.26,998,2.334,1038,2.661,1041,1.26,1042,1.995,1048,1.831,1049,2.389,1052,1.26,1167,1.754,1191,1.35,1207,2.447,1215,2.342,1223,2.463,1246,1.61,1259,1.289,1262,1.452,1267,1.06,1279,2.227,1283,3.27,1285,2.653,1347,1.527,1363,1.866,1364,1.289,1373,2.232,1374,1.61,1387,2.07,1431,3.236,1509,1.61,1556,1.416,1649,3.13,1738,2.782,1739,2.708,1754,1.866,1781,2.642,1922,2.15,2062,3.701,2067,2.818,2069,1.754,2185,1.808,2268,4.14,2273,4.45,2276,3.423,2277,3.87,2278,4.069,2279,3.447,2280,3.921,2281,4.069,2282,4.928,2283,2.342,2284,3.545,2286,2.917,2288,2.069,2289,3.423,2291,3.423,2294,2.15,2296,2.24,2298,2.342,2300,1.995,2301,3.03,2303,2.069,2304,2.342,2307,3.447,2309,2.24,2310,2.15,2311,2.342,2312,3.423,2313,2.15,2315,1.866,2354,1.808,2355,2.818,2361,3.025,2362,3.232,2363,2.756,2373,3.592,2375,2.756,2376,2.756,2377,2.756,2378,2.756,2379,2.756,2380,2.756,2381,2.756,2382,2.756,2383,2.756,2385,3.232,2387,2.756,2388,2.756,2389,2.756,2390,2.756,2393,2.642,2394,2.069,2395,1.995,2402,2.069,2430,5.583,2431,5.583,2432,4.761,2433,5.583,2434,5.583,2435,5.583,2436,5.605,2437,5.329,2438,4.724,2439,3.646,2440,3.646,2441,3.646,2442,3.646,2443,3.646,2444,5.243,2445,3.646,2446,5.983,2447,3.646,2448,3.646,2449,3.664,2450,3.646,2451,4.326,2452,4.724,2453,3.646,2454,5.583,2455,3.646,2456,4.724,2457,3.232,2458,3.646,2459,3.646,2460,3.646,2461,3.646,2462,3.646,2463,2.24,2464,2.24,2465,2.959,2466,2.959,2467,3.232,2468,4.028,2469,5.583,2470,4.761,2471,4.028,2472,4.028,2473,3.232,2474,5.583,2475,3.232,2476,4.724,2477,3.232,2478,3.232,2479,3.232,2480,2.959,2481,3.232,2482,3.232,2483,2.959,2484,3.232,2485,3.232,2486,2.458,2487,4.724,2488,4.724,2489,3.232,2490,3.232,2491,3.232,2492,3.232,2493,3.232,2494,2.959,2495,4.326,2496,4.724,2497,3.646,2498,2.959]],["title/interfaces/DatagridNumericFilterConfig.html",[0,0.175,2444,3.234]],["body/interfaces/DatagridNumericFilterConfig.html",[0,0.206,2,1.167,3,0.087,4,0.068,5,0.059,8,0.315,9,2.293,12,0.195,13,0.609,14,0.685,18,0.293,19,0.008,26,0.132,27,1.765,36,1.427,40,2.832,50,0.856,52,0.788,59,1.006,73,0.327,78,0.129,85,1.065,87,2.059,96,0.805,101,1.428,109,1.279,140,0.844,143,0.69,152,2.103,154,1.888,159,0.004,160,0.006,161,0.004,168,1.265,170,1.215,172,1.237,201,0.792,205,0.486,260,0.502,267,0.823,276,1.654,281,0.578,282,1.339,365,0.992,374,2.695,390,2.18,436,2.059,462,0.952,479,0.514,626,1.888,662,0.972,663,1.619,716,1.52,719,2.51,720,3.428,722,1.643,730,1.489,737,2.364,743,2.788,763,1.619,858,2.236,872,2.074,888,4.075,913,1.765,942,2.424,998,2.103,1038,2.663,1048,2.016,1049,2.631,1223,1.654,1262,2.126,1267,1.552,1283,2.51,1285,2.619,1363,2.732,1364,1.888,1387,2.074,1431,2.494,1649,3.378,1738,3.734,1739,3.313,2062,3.499,2067,2.823,2185,2.647,2268,2.424,2278,2.732,2280,2.568,2281,2.732,2284,3.55,2286,2.922,2301,2.568,2307,2.922,2354,2.647,2355,3.668,2361,3.03,2373,3.599,2393,3.439,2394,3.03,2395,2.922,2402,3.03,2430,4.733,2431,4.733,2432,4.035,2433,4.733,2434,4.733,2435,4.733,2436,6.03,2444,5.802,2446,6.255,2449,3.668,2452,4.733,2454,4.733,2456,4.733,2463,3.281,2464,3.281,2465,4.334,2466,5.631,2467,4.733,2468,5.243,2469,6.831,2470,5.824,2471,5.243,2472,5.243,2473,4.733,2474,6.831,2475,4.733,2476,6.149,2477,4.733,2478,4.733,2479,4.733,2480,4.334,2481,4.733,2482,4.733,2483,4.334,2484,4.733,2485,4.733,2486,3.599,2487,6.149,2488,6.149,2489,4.733,2490,4.733,2491,4.733,2492,4.733,2493,4.733,2494,4.334]],["title/components/DatagridSelectFilterComponent.html",[205,0.319,721,1.767]],["body/components/DatagridSelectFilterComponent.html",[0,0.149,3,0.062,4,0.049,5,0.042,8,0.227,9,1.834,12,0.141,13,0.414,14,0.597,18,0.306,19,0.008,20,1.509,26,0.105,30,1.484,34,1.715,35,1.612,36,1.141,45,2.933,50,0.877,52,0.568,59,1.021,60,0.777,61,1.332,63,1.074,65,2.45,66,0.95,73,0.524,78,0.093,81,1.515,85,0.898,96,1.183,99,1.052,109,0.959,114,0.97,115,0.973,118,2.149,140,0.77,143,1.013,152,2.594,159,0.003,160,0.005,161,0.003,163,1.603,168,1.067,170,1.262,172,1.159,181,0.716,190,3.245,192,0.673,196,0.941,198,1.217,199,0.77,201,0.859,205,0.498,209,1.461,218,3.545,225,1.005,234,1.314,235,1.168,244,1.573,248,0.646,260,0.447,264,1.274,267,0.592,276,1.193,281,0.513,282,1.237,323,2.109,325,1.91,339,1.612,359,0.859,365,0.716,374,2.525,375,1.219,378,1.362,390,1.573,391,1.274,436,2.237,442,0.99,462,1.675,464,1.096,467,2.762,479,0.371,558,1.534,561,1.246,600,1.193,608,0.792,618,1.394,626,1.362,649,1.657,653,1.219,654,1.396,655,1.144,656,1.534,659,1.246,661,1.497,662,1.692,663,1.682,669,2.149,701,1.246,702,1.341,703,3.228,704,1.749,705,1.274,706,1.749,707,1.749,708,1.362,709,1.657,710,1.749,711,1.497,712,1.749,713,1.85,714,1.749,715,1.427,716,2.234,717,1.497,718,3.228,719,1.394,720,1.497,721,3.142,722,2.195,723,1.394,724,1.497,725,1.749,726,1.534,727,1.749,728,1.657,729,1.497,730,2.101,731,1.749,732,1.427,733,3.228,734,1.461,735,2.654,736,1.461,737,1.368,738,1.461,739,2.518,740,1.427,741,1.573,742,1.749,743,1.394,744,1.749,745,1.614,746,1.219,747,1.246,748,1.144,749,1.794,750,1.749,751,1.497,752,1.749,753,1.534,754,1.144,755,1.749,756,1.427,757,1.657,758,1.749,763,2.556,777,1.144,779,1.302,785,2.111,810,1.193,816,1.193,858,2.323,872,1.497,902,1.052,913,1.274,986,1.332,987,1.834,989,2.007,991,2.155,992,1.961,993,2.75,994,2.104,998,2.452,1038,2.247,1041,1.332,1042,2.109,1048,1.889,1049,2.465,1167,1.853,1191,1.427,1207,2.525,1223,2.505,1224,4.193,1246,1.702,1259,1.362,1267,1.12,1279,2.298,1283,3.295,1285,2.832,1313,2.209,1315,2.933,1347,1.614,1352,3,1357,2.265,1364,1.362,1373,2.722,1374,1.702,1509,1.702,1556,1.497,1738,2.45,1739,3.24,1754,1.971,1756,3.148,1773,3.563,1781,2.75,1922,2.272,2062,3.758,2069,1.853,2185,2.75,2251,2.597,2268,3.827,2273,4.567,2276,3.563,2277,3.994,2278,4.138,2279,4.426,2280,3.981,2281,4.138,2282,3.945,2283,2.475,2284,3.638,2286,3.036,2288,2.187,2289,3.563,2291,3.563,2294,2.272,2296,2.368,2298,2.475,2300,2.109,2301,1.853,2303,2.187,2304,2.475,2307,2.109,2309,2.368,2310,2.272,2311,2.475,2312,3.563,2313,3.833,2315,1.971,2354,1.91,2355,3.76,2361,3.148,2363,2.912,2375,2.912,2376,2.912,2377,2.912,2378,2.912,2379,2.912,2380,2.912,2381,2.912,2382,2.912,2383,2.912,2387,2.912,2388,2.912,2389,2.912,2390,2.912,2391,3.624,2392,2.187,2393,2.75,2394,2.187,2395,2.109,2402,2.187,2427,4.502,2428,5.771,2429,3.563,2463,4.369,2486,2.597,2499,5.374,2500,4.193,2501,4.917,2502,5.057,2503,4.917,2504,5.761,2505,4.623,2506,3.853,2507,3.853,2508,3.415,2509,3.853,2510,3.853,2511,3.853,2512,3.853,2513,3.853,2514,4.917,2515,2.912,2516,3.415,2517,4.917,2518,6.303,2519,5.761,2520,2.912,2521,3.415,2522,3.127,2523,3.415,2524,3.127,2525,2.912,2526,3.415,2527,5.761,2528,2.912,2529,3.127,2530,3.127,2531,5.547]],["title/interfaces/DatagridSelectFilterConfig.html",[0,0.175,2515,3.437]],["body/interfaces/DatagridSelectFilterConfig.html",[0,0.211,2,1.198,3,0.089,4,0.07,5,0.06,8,0.324,12,0.201,13,0.526,14,0.593,18,0.286,19,0.008,20,1.979,26,0.127,30,1.467,34,1.705,35,1.593,36,1.451,50,1.016,52,0.809,59,0.87,65,2.421,66,1.74,73,0.478,78,0.132,81,1.497,85,1.078,96,1.285,99,1.04,109,1.041,115,1.008,118,1.812,140,0.713,143,0.708,152,2.838,159,0.005,160,0.006,161,0.005,168,1.281,170,1.247,172,0.978,201,0.863,205,0.494,234,1.298,244,2.881,260,0.497,267,0.753,276,1.698,281,0.553,282,1.281,365,1.019,390,2.238,436,1.627,462,0.978,479,0.528,608,1.128,626,1.938,649,2.357,662,0.998,663,1.662,713,1.56,716,1.56,721,3.201,722,2.197,763,1.662,777,1.627,858,2.956,872,2.741,913,1.812,987,1.812,989,1.983,991,2.13,992,1.938,993,2.718,994,2.079,998,2.366,1038,2.439,1048,2.051,1049,2.676,1223,1.698,1224,4.143,1267,1.593,1283,2.553,1285,2.857,1313,2.183,1315,2.899,1352,3.107,1357,2.238,1364,1.938,1373,2.956,1738,3.447,1739,3.543,1756,3.111,1773,5.012,2062,3.543,2185,3.499,2251,4.757,2268,2.489,2278,2.805,2279,3,2280,2.637,2281,2.805,2284,3.611,2286,3,2313,3.233,2354,2.718,2355,4.126,2361,3.111,2391,4.198,2392,3.111,2393,3.499,2394,3.111,2395,3,2402,3.111,2463,4.336,2486,3.695,2499,5.333,2500,4.143,2501,4.859,2502,5.019,2503,4.859,2504,4.859,2505,3.899,2514,4.859,2515,5.333,2516,6.255,2517,6.255,2518,7.87,2519,6.917,2520,4.143,2521,4.859,2522,4.449,2523,4.859,2524,4.449,2525,4.143,2526,4.859,2527,6.917,2528,4.143,2529,4.449,2530,4.449]],["title/components/DatagridStringFilterComponent.html",[205,0.319,723,1.645]],["body/components/DatagridStringFilterComponent.html",[0,0.163,3,0.068,4,0.054,5,0.046,9,1.957,12,0.155,13,0.442,14,0.656,18,0.306,19,0.008,26,0.12,27,1.396,45,3.131,50,0.521,52,0.874,59,1.045,60,0.851,61,1.46,63,1.178,66,1.042,73,0.584,78,0.102,85,0.818,96,1.117,99,0.801,109,0.623,114,1.063,115,0.765,118,1.396,140,0.625,143,1.045,158,0.887,159,0.003,160,0.005,161,0.003,163,1.686,168,1.122,170,1.347,172,1.392,181,0.765,190,3.31,192,0.738,196,0.947,198,1.335,199,0.797,201,0.838,205,0.519,209,1.602,218,3.597,225,1.019,235,1.281,248,0.708,260,0.444,264,1.396,267,0.73,276,1.308,281,0.537,282,1.281,323,2.312,325,2.094,339,1.721,347,1.725,359,0.942,365,1.271,374,2.656,375,1.337,378,1.493,390,1.725,391,1.396,436,2.03,442,1.085,462,1.688,464,1.17,467,2.879,479,0.407,558,1.682,561,1.366,600,1.308,608,0.869,618,1.528,626,1.493,653,1.337,654,1.49,655,1.254,656,1.682,659,1.366,661,1.641,662,1.707,663,1.795,669,2.26,683,1.281,701,1.366,702,1.431,703,3.364,704,1.918,705,1.396,706,1.918,707,1.918,708,1.493,709,1.816,710,1.918,711,1.641,712,1.918,713,1.202,714,1.918,715,1.564,716,2.302,717,1.641,718,3.364,719,1.528,720,1.641,721,1.641,722,1,723,2.823,724,1.641,725,1.918,726,1.682,727,1.918,728,1.816,729,1.641,730,2.175,731,1.918,732,1.564,733,3.364,734,1.602,735,2.792,736,1.602,737,1.46,738,1.602,739,2.688,740,1.564,741,1.725,742,1.918,743,1.528,744,1.918,745,1.769,746,1.337,747,1.366,748,1.254,749,1.915,750,1.918,751,1.641,752,1.918,753,1.682,754,1.254,755,1.918,756,1.564,757,1.816,758,1.918,763,2.452,779,1.428,785,2.2,796,2.848,810,1.308,816,1.308,840,4.898,858,2.48,902,1.154,913,1.396,986,1.46,998,2.366,1038,2.363,1041,1.46,1042,2.312,1048,1.987,1165,1.281,1167,2.032,1191,1.564,1207,2.656,1223,2.572,1246,1.866,1259,2.418,1267,1.228,1279,2.418,1283,3.333,1285,2.703,1319,2.094,1347,1.769,1364,1.493,1373,3.104,1374,1.866,1509,1.866,1556,1.641,1738,2.615,1739,2.94,1754,2.161,1781,2.936,1922,2.491,2062,3.848,2069,2.032,2185,2.094,2268,3.848,2273,4.76,2276,3.803,2277,4.201,2278,4.25,2279,3.742,2280,4.077,2281,4.25,2282,4.212,2283,2.713,2284,3.792,2286,3.241,2288,2.397,2289,3.803,2291,3.803,2294,2.491,2296,2.596,2298,2.713,2300,2.312,2301,2.032,2303,2.397,2304,2.713,2307,2.312,2309,2.596,2310,2.491,2311,2.713,2312,3.803,2313,4.033,2315,2.161,2354,2.094,2355,3.131,2361,3.361,2363,3.193,2375,3.193,2376,3.193,2377,3.193,2378,3.193,2379,3.193,2380,3.193,2381,3.193,2382,3.193,2383,3.193,2387,3.193,2388,3.193,2389,3.193,2390,3.193,2393,2.936,2394,2.397,2395,2.312,2402,2.397,2438,3.744,2457,3.744,2463,2.596,2486,2.847,2508,3.744,2525,3.193,2528,3.193,2532,5.921,2533,4.224,2534,5.249,2535,6.729,2536,6.569,2537,4.224,2538,4.476,2539,6.061,2540,4.224,2541,4.224,2542,3.803,2543,3.193,2544,5.249,2545,4.806,2546,3.744,2547,3.193,2548,5.249,2549,5.249,2550,3.744,2551,5.249,2552,3.744,2553,5.249,2554,3.744,2555,3.004,2556,3.744,2557,5.249,2558,3.744,2559,3.428]],["title/interfaces/DatagridStringFilterConfig.html",[0,0.175,2547,3.437]],["body/interfaces/DatagridStringFilterConfig.html",[0,0.229,2,1.3,3,0.096,4,0.076,5,0.065,8,0.351,12,0.218,13,0.555,14,0.624,18,0.258,19,0.008,26,0.138,27,1.967,50,0.734,52,1.097,59,0.917,66,1.467,73,0.578,78,0.144,85,1.027,96,0.897,143,0.768,158,1.249,159,0.005,160,0.006,161,0.005,168,1.33,170,1.353,172,1.061,201,0.826,205,0.521,260,0.497,267,0.865,276,1.843,281,0.573,282,1.33,347,2.429,365,1.381,390,2.429,462,1.061,479,0.573,608,1.224,626,2.104,662,1.083,663,1.804,683,1.804,716,1.694,723,2.689,796,3.575,840,5.154,858,3.113,913,1.967,998,2.253,1038,2.569,1048,2.16,1165,1.804,1223,1.843,1259,2.866,1267,1.729,1283,2.689,1285,2.511,1319,2.95,1364,2.104,1373,3.395,1738,3.58,1739,3.485,2062,3.68,2185,2.95,2268,2.701,2278,3.044,2280,2.862,2281,3.044,2284,3.803,2286,3.256,2313,3.509,2354,2.95,2355,3.93,2361,3.377,2393,3.685,2394,3.377,2395,3.256,2402,3.377,2463,3.656,2486,4.011,2525,4.497,2528,4.497,2534,5.274,2535,7.165,2536,6.588,2538,4.497,2539,6.588,2542,4.774,2543,4.497,2544,6.588,2545,6.033,2546,6.588,2547,5.618,2548,6.588,2549,6.588,2550,5.274,2551,6.588,2552,5.274,2553,6.588,2554,5.274,2555,4.231,2556,5.274,2557,6.588,2558,5.274,2559,4.829]],["title/interfaces/DetailPane.html",[0,0.175,1362,2.405]],["body/interfaces/DetailPane.html",[0,0.277,1,2.169,2,0.452,3,0.034,4,0.026,5,0.023,8,0.122,9,1.862,10,3.254,12,0.289,13,0.379,14,0.174,15,3.438,18,0.249,19,0.008,20,1.18,22,0.715,25,1.079,26,0.126,27,1.681,28,1.058,30,1.797,34,1.675,36,1.682,39,0.994,40,2.477,42,0.913,47,0.784,50,0.975,52,0.75,53,1.75,54,1.058,55,3.177,56,1.809,59,0.908,60,1.223,61,2.22,62,0.766,63,1.692,64,2.077,66,0.844,67,0.913,69,2.919,71,0.794,73,0.484,74,2.043,77,1.329,78,0.106,80,1.025,81,1.195,83,1.267,84,1.947,85,0.604,86,2.792,87,1.509,88,0.803,90,3.779,91,0.699,93,3.491,96,1.05,99,0.964,101,2.013,102,0.844,108,1.782,109,1.275,111,1.991,114,0.52,115,0.972,118,1.862,120,1.093,127,1.742,129,1.471,133,1.015,136,0.823,137,2.238,138,1.082,140,0.82,141,1.396,143,0.83,148,1.903,149,1.093,152,1.947,154,1.991,155,0.966,158,1.507,159,0.003,160,0.003,161,0.002,168,0.339,170,0.47,172,1.541,173,1.131,181,0.565,192,0.361,194,1.786,196,0.21,199,0.4,201,0.4,203,0.994,204,0.866,205,0.546,211,2.169,225,0.57,234,0.81,235,1.037,244,0.844,248,0.346,251,1.131,260,0.443,261,0.64,267,0.927,270,1.131,271,1.872,273,0.827,281,0.569,282,1.054,287,2.86,322,0.766,328,0.889,337,0.966,339,1.272,345,2.548,359,0.461,362,1.025,365,1.425,370,1.645,375,0.654,378,1.991,379,2.375,391,1.131,393,1.272,439,1.237,460,1.037,462,0.369,464,0.676,479,0.199,510,1.512,514,0.913,523,1.036,525,1.862,540,1.75,546,0.803,548,1.329,549,0.699,555,1.355,563,0.823,571,0.766,584,0.954,599,1.182,608,1.248,609,0.565,622,1.512,645,2.416,653,0.654,654,0.861,655,1.299,659,0.669,662,0.796,663,0.627,669,1.131,673,1.696,683,1.708,684,2.445,700,1.093,702,1.057,705,1.131,713,0.588,716,0.588,722,0.49,746,0.654,747,0.669,748,1.015,754,0.614,777,0.614,779,1.156,785,1.907,787,1.832,790,0.803,811,1.299,816,1.059,826,1.025,841,0.748,868,1.025,872,0.803,894,0.994,902,0.565,985,1.932,986,1.512,987,2.534,989,0.748,990,3.105,991,2.923,992,2.463,998,1.326,1001,0.966,1002,0.889,1004,1.786,1005,1.093,1006,1.093,1023,2.186,1033,0.731,1035,3.138,1037,0.913,1038,2.919,1040,2.859,1041,1.182,1045,2.043,1047,1.433,1048,0.994,1049,1.297,1052,2.322,1070,1.362,1073,0.844,1076,0.889,1086,0.913,1092,1.839,1131,0.994,1132,1.396,1140,0.966,1142,3.454,1191,0.766,1207,0.803,1223,0.64,1235,0.866,1240,1.471,1243,2.978,1244,1.058,1245,1.941,1246,1.511,1247,1.941,1248,2.542,1249,1.75,1250,2.186,1251,1.173,1252,1.093,1253,1.173,1254,2.043,1255,1.75,1256,2.238,1257,2.557,1258,1.173,1259,2.271,1260,1.941,1261,1.941,1262,0.823,1263,1.173,1264,1.872,1265,2.483,1266,1.941,1267,0.601,1268,1.941,1269,1.173,1270,1.173,1271,1.173,1272,1.173,1273,1.433,1274,0.889,1275,1.058,1276,1.131,1277,1.058,1278,1.058,1279,0.731,1280,0.889,1281,0.939,1282,0.966,1283,1.237,1284,1.025,1285,0.64,1286,2.359,1287,2.299,1288,2.169,1289,2.394,1290,3.47,1291,3.305,1292,2.978,1293,1.131,1294,2.313,1295,1.093,1296,1.058,1297,0.866,1298,1.025,1299,0.966,1300,3.152,1301,1.872,1302,2.238,1303,1.093,1304,1.131,1305,1.131,1306,2.688,1307,1.058,1308,1.396,1309,4.431,1310,2.024,1311,1.809,1312,1.131,1313,3.457,1314,2.394,1315,1.809,1316,3.105,1317,1.511,1318,1.173,1319,1.696,1320,1.173,1321,1.75,1322,1.173,1323,2.445,1324,2.601,1325,2.445,1326,1.809,1327,1.173,1328,1.173,1329,1.941,1330,1.131,1331,2.783,1332,1.173,1333,2.104,1334,1.809,1335,1.941,1336,1.173,1337,1.941,1338,1.941,1339,2.688,1340,2.483,1341,1.025,1342,0.994,1343,1.131,1344,1.173,1345,1.173,1346,0.913,1347,1.832,1348,3.196,1349,1.645,1350,3.894,1351,2.483,1352,0.823,1353,1.173,1354,1.173,1355,4.476,1356,1.093,1357,2.299,1358,3.444,1359,4.118,1360,1.093,1361,1.941,1362,2.688,1363,1.75,1364,1.209,1365,1.173,1366,1.173,1367,1.058,1368,2.792,1369,0.966,1370,1.173,1371,0.994,1372,2.313,1373,0.866,1374,0.913,1375,1.173,1376,2.043,1377,1.173,1378,1.093,1379,1.941,1380,1.75,1381,1.173,1382,1.173,1383,1.645,1384,1.058,1385,1.173,1386,1.173,1387,0.803,1388,1.173,1389,1.872,1390,2.483,1391,1.173,1392,1.173,1393,1.131,1394,1.809,1395,1.093,1396,1.809,1397,1.093,1398,2.483,1399,1.173,1400,1.025,1401,1.093,1402,1.173,1403,1.941,1404,1.173,1405,1.173,1406,1.173,1407,1.173,1408,1.173,1409,1.173,1410,1.872,1411,1.173,1412,2.483,1413,1.173,1414,1.173,1415,1.131,1416,2.885,1417,2.238,1418,1.173,1419,1.131,1420,1.093,1421,1.131,1422,1.173,1423,1.173,1424,1.131,1425,1.941,1426,1.173,1427,1.173,1428,1.941,1429,1.173,1430,1.173,1431,0.966,1432,1.173,1433,1.173,1434,1.173,1435,1.173,1436,3.813,1437,1.941,1438,1.173,1439,1.173,1440,1.173,1441,1.941,1442,1.173,1443,1.941,1444,1.941,1445,1.173,1446,1.173,1447,1.173,1448,1.941,1449,1.173,1450,2.885,1451,1.941,1452,1.941,1453,1.173,1454,1.173,1455,1.025,1456,1.173,1457,1.173,1458,1.173,1459,1.173,1460,1.173,1461,1.173,1462,1.941,1463,1.941,1464,1.941,1465,1.941,1466,2.483,1467,1.173,1468,1.173,1469,1.173,1470,1.173,1471,1.941,1472,1.941,1473,2.885,1474,1.173,1475,1.173,1476,1.173,1477,1.173,1478,1.173,1479,2.557,1480,3.444,1481,3.196,1482,1.941,1483,1.173,1484,1.941,1485,2.483,1486,1.173,1487,2.483,1488,1.173,1489,2.885,1490,1.941,1491,1.173,1492,1.173,1493,1.173,1494,1.941,1495,1.131,1496,1.173,1497,1.025,1498,1.173,1499,1.173,1500,1.173,1501,1.173,1502,1.941,1503,2.375,1504,1.173,1505,1.173,1506,1.173,1507,1.173,1508,1.173,1509,1.511,1510,1.173,1511,1.173,1512,1.173,1513,2.483,1514,1.173,1515,1.173,1516,1.131,1517,1.75,1518,1.173,1519,1.173,1520,1.173,1521,1.173,1522,1.173,1523,1.173,1524,1.173,1525,1.471,1526,1.173,1527,1.173,1528,1.173,1529,1.173,1530,1.093,1531,1.173,1532,1.173,1533,1.941,1534,1.173,1535,1.173,1536,1.173,1537,1.173,1538,1.173,1539,0.994,1540,1.173,1541,1.025,1542,1.058,1543,1.173,1544,0.994,1545,1.173,1546,1.173,1547,1.173,1548,1.173,1549,1.173,1550,1.173,1551,1.173,1552,1.173,1553,1.173,1554,1.173,1555,1.173,1556,0.803,1557,1.173,1558,1.173,1559,1.872,1560,1.173,1561,1.173,1562,1.173,1563,1.173,1564,1.173,1565,1.173,1566,1.173,1567,1.173,1568,1.941,1569,1.941,1570,1.941,1571,1.173,1572,2.313,1573,2.885,1574,1.941,1575,1.173,1576,1.173,1577,1.173,1578,1.173,1579,1.173,1580,1.173,1581,1.093,1582,1.941,1583,1.173,1584,1.173,1585,1.173,1586,1.156,1587,1.173,1588,1.173,1589,1.173,1590,1.941,1591,1.173,1592,2.483,1593,1.173,1594,1.173,1595,1.173,1596,1.941,1597,1.173,1598,1.173,1599,1.941,1600,1.941,1601,1.173,1602,1.173,1603,1.093,1604,1.131,1605,1.173,1606,1.173,1607,1.173,1608,1.941,1609,1.941,1610,1.173,1611,1.173,1612,1.941,1613,1.173,1614,1.173,1615,1.173,1616,1.173,1617,1.173,1618,1.173,1619,1.173,1620,1.131,1621,1.173,1622,1.173,1623,1.173,1624,1.173,1625,1.173,1626,1.941,1627,1.173,1628,1.173,1629,1.173,1630,1.173,1631,1.173,1632,1.173,1633,1.173,1634,1.173,1635,1.173,1636,1.941,1637,2.885,1638,2.483,1639,1.173,1640,1.173,1641,1.941,1642,1.173,1643,1.173,1644,1.173,1645,1.173,1646,1.173,1647,1.173,1648,1.173,1649,1.267,1650,1.941,1651,1.173,1652,1.173,1653,1.173,1654,1.131,1655,1.173,1656,1.173,1657,1.173,1658,1.173,1659,1.173,1660,1.173,1661,1.131,1662,1.173,1663,1.173,1664,1.173,1665,1.173,1666,1.173,1667,1.173,1668,2.885,1669,1.173,1670,1.173,1671,1.173,1672,1.173,1673,1.173,1674,1.173,1675,1.131,1676,1.173,1677,1.173,1678,1.941,1679,1.173,1680,1.941,1681,1.173,1682,1.173,1683,1.941,1684,1.173,1685,1.173,1686,1.173,1687,1.173,1688,1.173,1689,2.483,1690,1.173,1691,1.173,1692,1.173,1693,1.173,1694,1.173,1695,0.844,1696,1.173,1697,1.173,1698,1.173,1699,1.173,1700,1.173,1701,1.173,1702,1.173,1703,1.173,1704,1.025,1705,1.131,1706,1.173,1707,1.173,1708,0.994,1709,1.173,1710,1.173,1711,1.941,1712,3.196,1713,0.939,1714,1.173,1715,1.173,1716,1.173,1717,1.173,1718,1.173,1719,1.173,1720,1.941,1721,1.173,1722,1.173,1723,1.75,1724,1.173,1725,1.173,1726,1.093,1727,1.173,1728,1.173,1729,1.093,1730,1.173,1731,1.173,1732,1.173,1733,1.173,1734,1.173]],["title/interfaces/DetailPaneConfig.html",[0,0.175,1360,2.405]],["body/interfaces/DetailPaneConfig.html",[0,0.277,1,2.175,2,0.453,3,0.034,4,0.026,5,0.023,8,0.123,9,1.866,10,3.259,12,0.29,13,0.38,14,0.174,15,3.443,18,0.242,19,0.008,20,1.183,22,0.717,25,1.082,26,0.126,27,1.684,28,1.062,30,1.8,34,1.677,36,1.684,39,0.998,40,2.482,42,0.916,47,0.787,50,0.976,52,0.506,53,1.755,54,1.062,55,3.236,56,1.814,59,0.909,60,1.225,61,2.224,62,0.768,63,1.695,64,2.081,66,1.082,67,0.916,69,2.924,71,0.796,73,0.484,74,1.603,77,1.333,78,0.106,80,1.029,81,0.937,83,1.271,84,1.951,85,0.606,86,2.798,87,1.513,88,0.806,90,3.884,91,0.701,93,3.494,96,1.052,99,0.966,101,2.015,102,0.847,108,1.786,109,1.276,111,1.995,114,0.522,115,0.952,118,1.866,120,1.097,127,1.746,129,1.475,133,1.018,136,0.826,137,2.244,138,1.086,140,0.821,141,1.401,143,0.831,148,1.907,149,1.097,152,1.951,154,1.995,155,0.969,158,1.509,159,0.003,160,0.003,161,0.002,168,0.341,170,0.472,172,1.542,173,1.136,181,0.566,192,0.363,194,1.791,196,0.211,199,0.401,201,0.401,203,0.998,204,0.869,205,0.528,211,2.175,225,0.571,234,0.813,235,1.04,244,0.847,248,0.348,251,1.136,260,0.444,261,0.643,267,0.927,270,1.136,271,1.878,273,0.829,281,0.569,282,1.056,287,2.862,322,0.768,328,0.892,337,0.969,339,1.275,345,2.552,359,0.463,362,1.138,365,1.426,370,1.65,375,0.657,378,1.995,379,2.38,391,1.134,393,1.275,439,1.241,460,1.04,462,0.37,464,0.678,479,0.2,510,1.516,514,0.916,523,1.039,525,1.866,540,1.755,546,0.806,548,1.333,549,0.701,555,1.358,563,0.826,571,0.768,584,0.957,599,1.186,608,1.25,609,0.567,622,1.516,645,2.42,653,0.657,654,0.863,655,1.302,659,0.671,662,0.799,663,0.629,669,1.134,673,1.701,683,1.711,684,2.451,700,1.097,702,1.06,705,1.134,713,0.591,716,0.591,722,0.491,746,0.657,747,0.671,748,1.018,754,0.616,777,0.616,779,1.16,785,1.91,787,1.837,790,0.806,811,1.302,816,1.063,826,1.029,841,0.751,868,1.029,872,0.806,894,0.998,902,0.567,985,1.937,986,1.516,987,2.537,989,0.751,990,3.111,991,2.926,992,2.467,998,1.33,1001,0.969,1002,0.892,1004,1.791,1005,1.097,1006,1.097,1023,2.191,1033,0.734,1035,3.143,1037,0.916,1038,2.901,1040,2.862,1041,1.186,1045,2.049,1047,1.437,1048,0.997,1049,1.301,1052,2.224,1070,1.366,1073,0.847,1076,0.892,1086,0.916,1092,1.587,1131,0.998,1132,1.401,1140,0.969,1142,3.459,1191,0.768,1207,0.806,1223,0.643,1235,0.869,1240,1.475,1243,2.984,1244,1.062,1245,1.947,1246,1.515,1247,1.947,1248,2.546,1249,1.755,1250,2.191,1251,1.178,1252,1.097,1253,1.178,1254,2.049,1255,1.755,1256,2.244,1257,2.562,1258,1.178,1259,2.275,1260,1.947,1261,1.947,1262,0.826,1263,1.178,1264,1.878,1265,2.489,1266,1.947,1267,0.603,1268,1.947,1269,1.178,1270,1.178,1271,1.178,1272,1.178,1273,1.437,1274,0.892,1275,1.062,1276,1.136,1277,1.062,1278,1.062,1279,0.734,1280,0.892,1281,0.942,1282,0.969,1283,1.241,1284,1.029,1285,0.643,1286,1.837,1287,2.304,1288,2.175,1289,2.401,1290,3.473,1291,3.308,1292,2.984,1293,1.136,1294,2.319,1295,1.097,1296,1.062,1297,0.869,1298,1.029,1299,0.969,1300,2.818,1301,1.878,1302,2.244,1303,1.097,1304,1.136,1305,1.136,1306,2.695,1307,1.062,1308,1.401,1309,4.435,1310,2.029,1311,1.814,1312,1.136,1313,3.459,1314,2.401,1315,1.814,1316,3.111,1317,1.515,1318,1.178,1319,1.701,1320,1.178,1321,1.755,1322,1.178,1323,2.451,1324,2.607,1325,2.451,1326,1.814,1327,1.178,1328,1.178,1329,1.947,1330,1.136,1331,2.789,1332,1.178,1333,2.11,1334,1.814,1335,1.947,1336,1.178,1337,1.947,1338,1.947,1339,2.695,1340,2.489,1341,1.029,1342,0.998,1343,1.136,1344,1.178,1345,1.178,1346,0.916,1347,1.837,1348,3.203,1349,1.65,1350,3.898,1351,2.489,1352,0.826,1353,1.178,1354,1.178,1355,4.435,1356,1.097,1357,2.482,1358,3.45,1359,4.035,1360,1.814,1361,1.178,1362,2.319,1363,1.062,1364,0.734,1365,1.178,1366,1.178,1367,1.062,1368,2.798,1369,0.969,1370,1.178,1371,0.998,1372,2.319,1373,0.869,1374,0.916,1375,1.178,1376,2.049,1377,1.178,1378,1.097,1379,1.947,1380,1.755,1381,1.178,1382,1.178,1383,1.65,1384,1.062,1385,1.178,1386,1.178,1387,0.806,1388,1.178,1389,1.878,1390,2.489,1391,1.178,1392,1.178,1393,1.136,1394,1.814,1395,1.097,1396,1.814,1397,1.097,1398,2.489,1399,1.178,1400,1.029,1401,1.097,1402,1.178,1403,1.947,1404,1.178,1405,1.178,1406,1.178,1407,1.178,1408,1.178,1409,1.178,1410,1.878,1411,1.178,1412,2.489,1413,1.178,1414,1.178,1415,1.136,1416,2.892,1417,2.244,1418,1.178,1419,1.136,1420,1.097,1421,1.136,1422,1.178,1423,1.178,1424,1.136,1425,1.947,1426,1.178,1427,1.178,1428,1.947,1429,1.178,1430,1.178,1431,0.969,1432,1.178,1433,1.178,1434,1.178,1435,1.178,1436,3.819,1437,1.947,1438,1.178,1439,1.178,1440,1.178,1441,1.947,1442,1.178,1443,1.947,1444,1.947,1445,1.178,1446,1.178,1447,1.178,1448,1.947,1449,1.178,1450,2.892,1451,1.947,1452,1.947,1453,1.178,1454,1.178,1455,1.029,1456,1.178,1457,1.178,1458,1.178,1459,1.178,1460,1.178,1461,1.178,1462,1.947,1463,1.947,1464,1.947,1465,1.947,1466,2.489,1467,1.178,1468,1.178,1469,1.178,1470,1.178,1471,1.947,1472,1.947,1473,2.892,1474,1.178,1475,1.178,1476,1.178,1477,1.178,1478,1.178,1479,2.562,1480,3.45,1481,3.203,1482,1.947,1483,1.178,1484,1.947,1485,2.489,1486,1.178,1487,2.489,1488,1.178,1489,2.892,1490,1.947,1491,1.178,1492,1.178,1493,1.178,1494,1.947,1495,1.136,1496,1.178,1497,1.029,1498,1.178,1499,1.178,1500,1.178,1501,1.178,1502,1.947,1503,2.38,1504,1.178,1505,1.178,1506,1.178,1507,1.178,1508,1.178,1509,1.515,1510,1.178,1511,1.178,1512,1.178,1513,2.489,1514,1.178,1515,1.178,1516,1.136,1517,1.755,1518,1.178,1519,1.178,1520,1.178,1521,1.178,1522,1.178,1523,1.178,1524,1.178,1525,1.475,1526,1.178,1527,1.178,1528,1.178,1529,1.178,1530,1.097,1531,1.178,1532,1.178,1533,1.947,1534,1.178,1535,1.178,1536,1.178,1537,1.178,1538,1.178,1539,0.998,1540,1.178,1541,1.029,1542,1.062,1543,1.178,1544,0.998,1545,1.178,1546,1.178,1547,1.178,1548,1.178,1549,1.178,1550,1.178,1551,1.178,1552,1.178,1553,1.178,1554,1.178,1555,1.178,1556,0.806,1557,1.178,1558,1.178,1559,1.878,1560,1.178,1561,1.178,1562,1.178,1563,1.178,1564,1.178,1565,1.178,1566,1.178,1567,1.178,1568,1.947,1569,1.947,1570,1.947,1571,1.178,1572,2.319,1573,2.892,1574,1.947,1575,1.178,1576,1.178,1577,1.178,1578,1.178,1579,1.178,1580,1.178,1581,1.097,1582,1.947,1583,1.178,1584,1.178,1585,1.178,1586,1.16,1587,1.178,1588,1.178,1589,1.178,1590,1.947,1591,1.178,1592,2.489,1593,1.178,1594,1.178,1595,1.178,1596,1.947,1597,1.178,1598,1.178,1599,1.947,1600,1.947,1601,1.178,1602,1.178,1603,1.097,1604,1.136,1605,1.178,1606,1.178,1607,1.178,1608,1.947,1609,1.947,1610,1.178,1611,1.178,1612,1.947,1613,1.178,1614,1.178,1615,1.178,1616,1.178,1617,1.178,1618,1.178,1619,1.178,1620,1.136,1621,1.178,1622,1.178,1623,1.178,1624,1.178,1625,1.178,1626,1.947,1627,1.178,1628,1.178,1629,1.178,1630,1.178,1631,1.178,1632,1.178,1633,1.178,1634,1.178,1635,1.178,1636,1.947,1637,2.892,1638,2.489,1639,1.178,1640,1.178,1641,1.947,1642,1.178,1643,1.178,1644,1.178,1645,1.178,1646,1.178,1647,1.178,1648,1.178,1649,1.271,1650,1.947,1651,1.178,1652,1.178,1653,1.178,1654,1.136,1655,1.178,1656,1.178,1657,1.178,1658,1.178,1659,1.178,1660,1.178,1661,1.136,1662,1.178,1663,1.178,1664,1.178,1665,1.178,1666,1.178,1667,1.178,1668,2.892,1669,1.178,1670,1.178,1671,1.178,1672,1.178,1673,1.178,1674,1.178,1675,1.136,1676,1.178,1677,1.178,1678,1.947,1679,1.178,1680,1.947,1681,1.178,1682,1.178,1683,1.947,1684,1.178,1685,1.178,1686,1.178,1687,1.178,1688,1.178,1689,2.489,1690,1.178,1691,1.178,1692,1.178,1693,1.178,1694,1.178,1695,0.847,1696,1.178,1697,1.178,1698,1.178,1699,1.178,1700,1.178,1701,1.178,1702,1.178,1703,1.178,1704,1.029,1705,1.136,1706,1.178,1707,1.178,1708,0.998,1709,1.178,1710,1.178,1711,1.947,1712,3.203,1713,0.942,1714,1.178,1715,1.178,1716,1.178,1717,1.178,1718,1.178,1719,1.178,1720,1.947,1721,1.178,1722,1.178,1723,1.755,1724,1.178,1725,1.178,1726,1.097,1727,1.178,1728,1.178,1729,1.097,1730,1.178,1731,1.178,1732,1.178,1733,1.178,1734,1.178]],["title/interfaces/DetailRowConfig.html",[0,0.175,1356,2.405]],["body/interfaces/DetailRowConfig.html",[0,0.277,1,2.166,2,0.451,3,0.033,4,0.026,5,0.023,8,0.122,9,1.86,10,3.252,12,0.302,13,0.379,14,0.173,15,3.435,18,0.255,19,0.008,20,1.179,22,0.713,25,1.077,26,0.126,27,1.678,28,1.056,30,1.796,34,1.674,36,1.681,39,0.992,40,2.475,42,0.911,47,0.782,50,0.974,52,0.504,53,1.747,54,1.056,55,3.232,56,1.805,59,0.908,60,1.222,61,2.218,62,0.764,63,1.69,64,2.075,66,1.077,67,0.911,69,2.916,71,0.793,73,0.483,74,1.595,77,1.326,78,0.105,80,1.023,81,0.932,83,1.265,84,1.944,85,0.603,86,2.789,87,1.507,88,0.801,90,3.88,91,0.697,93,3.489,96,1.05,99,0.963,101,2.012,102,0.842,108,1.78,109,1.274,111,1.989,114,0.519,115,0.95,118,1.86,120,1.091,127,1.739,129,1.468,133,1.013,136,0.821,137,2.235,138,1.08,140,0.829,141,1.394,143,0.829,148,1.901,149,1.091,152,1.946,154,1.989,155,0.964,158,1.506,159,0.003,160,0.003,161,0.002,168,0.339,170,0.469,172,1.541,173,1.129,181,0.564,192,0.36,194,1.783,196,0.209,199,0.399,201,0.399,203,0.992,204,0.864,205,0.527,211,2.166,225,0.569,234,0.809,235,1.035,244,0.842,248,0.346,251,1.129,260,0.443,261,0.639,267,0.927,270,1.129,271,1.869,273,0.825,281,0.569,282,1.053,287,2.858,322,0.764,328,0.887,337,0.964,339,1.27,345,2.546,359,0.46,362,1.134,365,1.424,370,1.642,375,0.653,378,1.989,379,2.372,391,1.129,393,1.27,439,1.235,460,1.035,462,0.368,464,0.674,479,0.199,510,1.51,514,0.911,523,1.035,525,1.86,540,1.747,546,0.801,548,1.326,549,0.697,555,1.353,563,0.821,571,0.764,584,0.952,599,1.18,608,1.247,609,0.563,622,1.51,645,2.414,653,0.653,654,0.859,655,1.297,659,0.667,662,0.795,663,0.625,669,1.129,673,1.693,683,1.706,684,2.442,700,1.091,702,1.056,705,1.129,713,0.587,716,0.587,722,0.489,746,0.653,747,0.667,748,1.013,754,0.612,777,0.612,779,1.154,785,1.905,787,1.83,790,0.801,811,1.297,816,1.057,826,1.023,841,0.746,868,1.023,872,0.801,894,0.992,902,0.563,985,1.929,986,1.51,987,2.533,989,0.746,990,3.102,991,2.921,992,2.461,998,1.324,1001,0.964,1002,0.887,1004,1.783,1005,1.091,1006,1.091,1023,2.183,1033,0.729,1035,3.135,1037,0.911,1038,2.937,1040,2.857,1041,1.18,1045,2.04,1047,1.43,1048,0.992,1049,1.295,1052,2.218,1070,1.359,1073,0.842,1076,0.887,1086,0.911,1092,1.58,1131,0.992,1132,1.394,1140,0.964,1142,3.452,1191,0.764,1207,0.801,1223,0.639,1235,0.864,1240,1.468,1243,2.975,1244,1.056,1245,1.938,1246,1.508,1247,1.938,1248,2.539,1249,1.747,1250,2.183,1251,1.171,1252,1.091,1253,1.171,1254,2.04,1255,1.747,1256,2.235,1257,2.554,1258,1.171,1259,2.269,1260,1.938,1261,1.938,1262,0.821,1263,1.171,1264,1.869,1265,2.479,1266,1.938,1267,0.6,1268,1.938,1269,1.171,1270,1.171,1271,1.171,1272,1.171,1273,1.43,1274,0.887,1275,1.056,1276,1.129,1277,1.056,1278,1.056,1279,0.729,1280,0.887,1281,0.937,1282,0.964,1283,1.235,1284,1.023,1285,0.639,1286,1.83,1287,2.297,1288,2.166,1289,2.391,1290,3.527,1291,3.304,1292,2.975,1293,1.129,1294,2.31,1295,1.091,1296,1.056,1297,0.864,1298,1.023,1299,0.964,1300,2.812,1301,1.869,1302,2.235,1303,1.091,1304,1.129,1305,1.129,1306,2.685,1307,1.056,1308,1.394,1309,4.429,1310,2.022,1311,1.805,1312,1.129,1313,3.456,1314,2.391,1315,1.805,1316,3.284,1317,1.508,1318,1.171,1319,1.693,1320,1.171,1321,1.747,1322,1.171,1323,2.706,1324,2.598,1325,2.442,1326,1.805,1327,1.171,1328,1.171,1329,1.938,1330,1.129,1331,2.779,1332,1.171,1333,2.101,1334,1.805,1335,1.938,1336,1.171,1337,1.938,1338,1.938,1339,2.685,1340,2.479,1341,1.023,1342,0.992,1343,1.129,1344,1.171,1345,1.171,1346,0.911,1347,1.83,1348,3.193,1349,1.642,1350,3.891,1351,2.479,1352,0.821,1353,1.171,1354,1.171,1355,4.474,1356,1.805,1357,2.475,1358,3.951,1359,3.81,1360,1.091,1361,1.171,1362,2.31,1363,1.056,1364,0.729,1365,1.171,1366,1.171,1367,1.056,1368,2.789,1369,0.964,1370,1.171,1371,0.992,1372,2.31,1373,0.864,1374,0.911,1375,1.171,1376,2.04,1377,1.171,1378,1.091,1379,1.938,1380,1.747,1381,1.171,1382,1.171,1383,1.642,1384,1.056,1385,1.171,1386,1.171,1387,0.801,1388,1.171,1389,1.869,1390,2.479,1391,1.171,1392,1.171,1393,1.129,1394,1.805,1395,1.091,1396,1.805,1397,1.091,1398,2.479,1399,1.171,1400,1.023,1401,1.091,1402,1.171,1403,1.938,1404,1.171,1405,1.171,1406,1.171,1407,1.171,1408,1.171,1409,1.171,1410,1.869,1411,1.171,1412,2.479,1413,1.171,1414,1.171,1415,1.129,1416,2.882,1417,2.235,1418,1.171,1419,1.129,1420,1.091,1421,1.129,1422,1.171,1423,1.171,1424,1.129,1425,1.938,1426,1.171,1427,1.171,1428,1.938,1429,1.171,1430,1.171,1431,0.964,1432,1.171,1433,1.171,1434,1.171,1435,1.171,1436,3.809,1437,1.938,1438,1.171,1439,1.171,1440,1.171,1441,1.938,1442,1.171,1443,1.938,1444,1.938,1445,1.171,1446,1.171,1447,1.171,1448,1.938,1449,1.171,1450,2.882,1451,1.938,1452,1.938,1453,1.171,1454,1.171,1455,1.023,1456,1.171,1457,1.171,1458,1.171,1459,1.171,1460,1.171,1461,1.171,1462,1.938,1463,1.938,1464,1.938,1465,1.938,1466,2.479,1467,1.171,1468,1.171,1469,1.171,1470,1.171,1471,1.938,1472,1.938,1473,2.882,1474,1.171,1475,1.171,1476,1.171,1477,1.171,1478,1.171,1479,2.554,1480,3.44,1481,3.193,1482,1.938,1483,1.171,1484,1.938,1485,2.479,1486,1.171,1487,2.479,1488,1.171,1489,2.882,1490,1.938,1491,1.171,1492,1.171,1493,1.171,1494,1.938,1495,1.129,1496,1.171,1497,1.023,1498,1.171,1499,1.171,1500,1.171,1501,1.171,1502,1.938,1503,2.372,1504,1.171,1505,1.171,1506,1.171,1507,1.171,1508,1.171,1509,1.508,1510,1.171,1511,1.171,1512,1.171,1513,2.479,1514,1.171,1515,1.171,1516,1.129,1517,1.747,1518,1.171,1519,1.171,1520,1.171,1521,1.171,1522,1.171,1523,1.171,1524,1.171,1525,1.468,1526,1.171,1527,1.171,1528,1.171,1529,1.171,1530,1.091,1531,1.171,1532,1.171,1533,1.938,1534,1.171,1535,1.171,1536,1.171,1537,1.171,1538,1.171,1539,0.992,1540,1.171,1541,1.023,1542,1.056,1543,1.171,1544,0.992,1545,1.171,1546,1.171,1547,1.171,1548,1.171,1549,1.171,1550,1.171,1551,1.171,1552,1.171,1553,1.171,1554,1.171,1555,1.171,1556,0.801,1557,1.171,1558,1.171,1559,1.869,1560,1.171,1561,1.171,1562,1.171,1563,1.171,1564,1.171,1565,1.171,1566,1.171,1567,1.171,1568,1.938,1569,1.938,1570,1.938,1571,1.171,1572,2.31,1573,2.882,1574,1.938,1575,1.171,1576,1.171,1577,1.171,1578,1.171,1579,1.171,1580,1.171,1581,1.091,1582,1.938,1583,1.171,1584,1.171,1585,1.171,1586,1.154,1587,1.171,1588,1.171,1589,1.171,1590,1.938,1591,1.171,1592,2.479,1593,1.171,1594,1.171,1595,1.171,1596,1.938,1597,1.171,1598,1.171,1599,1.938,1600,1.938,1601,1.171,1602,1.171,1603,1.091,1604,1.129,1605,1.171,1606,1.171,1607,1.171,1608,1.938,1609,1.938,1610,1.171,1611,1.171,1612,1.938,1613,1.171,1614,1.171,1615,1.171,1616,1.171,1617,1.171,1618,1.171,1619,1.171,1620,1.129,1621,1.171,1622,1.171,1623,1.171,1624,1.171,1625,1.171,1626,1.938,1627,1.171,1628,1.171,1629,1.171,1630,1.171,1631,1.171,1632,1.171,1633,1.171,1634,1.171,1635,1.171,1636,1.938,1637,2.882,1638,2.479,1639,1.171,1640,1.171,1641,1.938,1642,1.171,1643,1.171,1644,1.171,1645,1.171,1646,1.171,1647,1.171,1648,1.171,1649,1.265,1650,1.938,1651,1.171,1652,1.171,1653,1.171,1654,1.129,1655,1.171,1656,1.171,1657,1.171,1658,1.171,1659,1.171,1660,1.171,1661,1.129,1662,1.171,1663,1.171,1664,1.171,1665,1.171,1666,1.171,1667,1.171,1668,2.882,1669,1.171,1670,1.171,1671,1.171,1672,1.171,1673,1.171,1674,1.171,1675,1.129,1676,1.171,1677,1.171,1678,1.938,1679,1.171,1680,1.938,1681,1.171,1682,1.171,1683,1.938,1684,1.171,1685,1.171,1686,1.171,1687,1.171,1688,1.171,1689,2.479,1690,1.171,1691,1.171,1692,1.171,1693,1.171,1694,1.171,1695,0.842,1696,1.171,1697,1.171,1698,1.171,1699,1.171,1700,1.171,1701,1.171,1702,1.171,1703,1.171,1704,1.023,1705,1.129,1706,1.171,1707,1.171,1708,0.992,1709,1.171,1710,1.171,1711,1.938,1712,3.193,1713,0.937,1714,1.171,1715,1.171,1716,1.171,1717,1.171,1718,1.171,1719,1.171,1720,1.938,1721,1.171,1722,1.171,1723,1.747,1724,1.171,1725,1.171,1726,1.091,1727,1.171,1728,1.171,1729,1.091,1730,1.171,1731,1.171,1732,1.171,1733,1.171,1734,1.171]],["title/classes/DomUtil.html",[78,0.11,2560,3.065]],["body/classes/DomUtil.html",[3,0.105,4,0.082,5,0.071,8,0.383,12,0.237,14,0.545,18,0.225,19,0.008,25,2.077,26,0.105,38,4.621,59,0.966,73,0.515,77,3.608,78,0.157,85,1.082,159,0.005,160,0.006,161,0.005,163,1.599,181,1.012,196,0.658,198,1.11,199,0.592,225,0.727,260,0.369,267,0.837,281,0.411,342,2.581,410,4.611,460,2.376,462,1.657,464,1.9,479,0.625,519,3.769,523,1.536,574,4.009,583,6.135,702,1.894,810,2.877,847,3.885,1047,3.664,1384,4.009,1791,5.262,2372,5.573,2560,5.282,2561,6.946,2562,7.835,2563,7.835,2564,8.956,2565,6.483,2566,7.835,2567,7.835,2568,8.067,2569,6.946,2570,4.815,2571,7.464,2572,7.835,2573,7.835,2574,7.835,2575,6.483,2576,6.483,2577,5.747,2578,6.483,2579,6.483]],["title/directives/DropdownFocusHandlerDirective.html",[600,1.408,751,1.767]],["body/directives/DropdownFocusHandlerDirective.html",[0,0.145,3,0.061,4,0.048,5,0.041,8,0.222,12,0.257,13,0.406,14,0.627,18,0.305,19,0.008,20,1.731,22,2.214,26,0.104,27,1.8,35,1.862,42,4.205,50,0.99,52,0.554,59,1.114,63,1.047,64,2.935,71,1.264,75,3.987,78,0.091,80,3.483,88,1.459,100,2.131,101,1.457,105,2.412,111,1.328,113,1.459,114,0.945,118,1.8,129,2.341,138,1.188,140,0.585,143,0.827,154,3.223,158,1.344,159,0.003,160,0.004,161,0.004,170,1.239,172,1.712,181,0.703,191,2.168,192,0.951,196,0.932,198,0.932,199,0.497,201,0.585,203,1.806,205,0.381,225,0.939,237,2.531,245,5.083,260,0.4,267,0.75,273,1.316,281,0.493,282,0.894,287,3.078,362,0.757,390,2.223,442,1.645,459,1.533,460,1.942,462,0.971,464,1.623,479,0.362,546,1.459,547,2.67,549,2.521,555,2.409,566,1.459,574,4.205,600,2.176,608,0.772,609,1.025,618,1.358,622,1.298,626,1.925,628,2.838,638,2.28,661,1.459,662,1.358,668,3.021,702,1.316,724,3.117,748,1.114,751,2.898,754,1.114,777,1.616,812,4.36,898,2.786,965,2.214,994,2.429,1048,1.862,1053,3.021,1055,3.978,1073,1.533,1086,2.829,1122,2.67,1153,2.055,1223,2.176,1255,3.278,1279,2.637,1280,1.614,1285,1.686,1364,1.328,1431,1.754,1497,3.856,1556,2.115,1723,3.816,1740,4.143,1830,5.243,1843,4.115,1934,2.131,2089,5.532,2140,2.67,2300,2.055,2580,6.212,2581,6.019,2582,2.67,2583,5.199,2584,6.611,2585,6.313,2586,6.513,2587,5.409,2588,5.678,2589,4.826,2590,5.678,2591,5.678,2592,5.678,2593,5.678,2594,6.228,2595,6.611,2596,5.678,2597,5.678,2598,5.444,2599,6.054,2600,6.228,2601,6.228,2602,6.228,2603,6.228,2604,5.678,2605,5.678,2606,3.754,2607,5.678,2608,5.678,2609,5.678,2610,4.997,2611,3.754,2612,4.826,2613,4.826,2614,3.754,2615,3.754,2616,3.754,2617,3.754,2618,4.419,2619,3.67,2620,4.826,2621,6.228,2622,6.228,2623,4.826,2624,5.678,2625,4.826,2626,4.826,2627,3.67,2628,4.826,2629,3.754,2630,3.754,2631,6.304,2632,3.346,2633,4.826,2634,4.419,2635,3.754,2636,3.754,2637,3.754,2638,4.826,2639,3.754,2640,3.754,2641,3.754,2642,6.228,2643,3.754,2644,3.754,2645,5.678,2646,3.754,2647,3.754,2648,3.754,2649,3.754,2650,3.754,2651,3.754,2652,3.754,2653,3.754,2654,4.841,2655,3.328,2656,3.048,2657,1.358,2658,3.048,2659,4.419,2660,2.838,2661,3.048,2662,3.048,2663,3.328,2664,3.048,2665,2.838,2666,4.318,2667,3.328,2668,3.328,2669,3.328,2670,4.826,2671,3.328,2672,5.678,2673,3.328,2674,3.328,2675,3.328,2676,3.328,2677,4.826,2678,3.328,2679,4.826,2680,3.328,2681,2.214,2682,3.048,2683,5.678,2684,6.611,2685,3.328,2686,3.328,2687,3.328,2688,3.328,2689,3.328,2690,5.678,2691,3.328,2692,3.328,2693,3.048,2694,3.328,2695,3.048,2696,4.826,2697,3.328,2698,3.328,2699,3.328,2700,4.419,2701,3.328,2702,2.531,2703,3.328,2704,3.328,2705,3.328,2706,3.328,2707,3.328,2708,2.838,2709,3.328,2710,3.328,2711,3.328,2712,4.826,2713,3.328,2714,3.328,2715,3.328,2716,3.328,2717,3.328,2718,3.328,2719,3.328,2720,3.328,2721,5.678,2722,3.328,2723,4.826,2724,3.328,2725,3.328,2726,3.328,2727,3.328,2728,3.328,2729,3.328,2730,3.328,2731,3.328,2732,4.826,2733,3.328]],["title/injectables/DropdownFocusHandlerService.html",[1898,2.255,2587,3.065]],["body/injectables/DropdownFocusHandlerService.html",[3,0.079,4,0.062,5,0.054,8,0.289,12,0.179,13,0.489,14,0.662,18,0.293,19,0.008,26,0.079,35,1.904,42,4.137,50,0.808,52,0.722,59,1.065,64,2.875,66,1.615,71,1.963,78,0.118,81,1.789,88,3.063,91,1.654,96,1.189,99,1.559,101,2.263,111,1.73,113,1.901,115,0.846,117,2.777,118,2.165,143,0.632,154,3.104,159,0.004,160,0.005,161,0.004,170,1.113,181,0.846,192,0.855,196,0.891,198,1.349,199,0.72,201,0.447,225,0.997,235,1.986,245,5.297,260,0.373,276,1.516,281,0.536,362,1.32,365,1.217,378,2.316,442,1.682,460,1.986,464,1.671,478,5.316,479,0.472,555,2.719,574,3.778,638,3.762,702,2.044,724,2.545,779,2.214,799,2.743,810,2.029,812,2.426,892,2.354,898,2.504,902,1.789,986,2.264,994,2.484,1030,4.951,1048,1.904,1053,3.39,1055,4.283,1070,3.139,1145,5.064,1153,4.916,1223,2.442,1246,2.893,1291,1.998,1393,3.585,1415,3.585,1431,3.059,1497,3.909,1767,4.415,1800,5.316,1830,6.054,1844,5.316,1856,5.806,1898,3.248,1900,3.143,1917,3.481,1922,4.65,1993,5.316,2251,3.299,2555,5.607,2580,5.993,2581,6.118,2587,4.415,2610,5.607,2618,3.972,2619,5.823,2631,6.016,2632,4.025,2634,6.399,2660,3.699,2693,5.992,2695,3.972,2708,4.951,2734,4.338,2735,4.951,2736,6.55,2737,5.316,2738,7.285,2739,7.382,2740,7.382,2741,7.884,2742,6.55,2743,6.55,2744,6.55,2745,4.894,2746,6.55,2747,4.894,2748,5.806,2749,9.122,2750,6.55,2751,4.894,2752,6.55,2753,6.55,2754,4.659,2755,4.894,2756,6.55,2757,4.894,2758,6.55,2759,4.894,2760,4.894,2761,4.894,2762,4.338,2763,4.894,2764,4.894,2765,4.894,2766,4.894,2767,4.894,2768,4.894,2769,4.894,2770,4.894,2771,4.894,2772,6.55,2773,2.886,2774,4.894,2775,4.894,2776,4.894,2777,4.894,2778,5.959,2779,3.972,2780,4.338,2781,7.382,2782,7.382,2783,4.894,2784,4.894,2785,4.894,2786,4.894,2787,4.894,2788,6.55,2789,6.55,2790,6.55,2791,6.55]],["title/modules/DropdownModule.html",[2792,1.572,2793,3.065]],["body/modules/DropdownModule.html",[3,0.106,4,0.083,5,0.071,19,0.008,26,0.106,78,0.157,154,2.779,159,0.005,160,0.006,161,0.005,260,0.533,261,2.018,479,0.628,668,2.802,701,2.107,724,3.709,751,3.687,753,3.778,913,2.154,1033,2.304,1165,1.975,1267,1.894,1281,2.958,1586,2.202,1852,4.925,2581,4.185,2656,5.289,2657,2.357,2762,5.776,2792,2.252,2793,6.45,2794,2.958,2795,2.958,2796,3.831,2797,3.231,2798,2.594,2799,4.184,2800,5.776,2801,5.776,2802,5.776,2803,5.776,2804,5.776,2805,6.378,2806,5.599,2807,3.897,2808,6.515,2809,4.301,2810,3.231,2811,4.634,2812,3.134,2813,3.231,2814,3.231,2815,3.231,2816,3.231,2817,3.231,2818,4.46,2819,3.334,2820,4.021,2821,5.298,2822,4.635,2823,4.46,2824,4.925,2825,6.515]],["title/directives/DynamicDropdownPositionDirective.html",[600,1.408,753,1.811]],["body/directives/DynamicDropdownPositionDirective.html",[3,0.071,4,0.056,5,0.048,8,0.259,12,0.16,13,0.52,14,0.664,18,0.297,19,0.008,22,1.514,25,1.08,26,0.071,36,1.249,42,3.614,50,0.928,59,0.928,63,2.099,64,1.417,75,2.486,78,0.106,84,2.099,96,0.66,99,0.831,101,1.865,108,1.386,118,1.448,129,1.883,138,1.386,140,0.747,143,0.9,154,3.372,158,1.66,159,0.004,160,0.005,161,0.004,170,1.382,172,1.684,181,0.784,191,2.418,192,1.061,196,0.916,198,1.193,199,0.637,201,0.4,205,0.307,225,0.782,234,1.439,260,0.397,267,0.957,281,0.501,282,0.719,359,0.977,462,1.083,464,1.377,479,0.422,514,1.935,558,2.776,574,4.444,584,1.221,600,2.332,608,1.249,622,1.514,624,3.212,649,1.883,661,1.702,683,1.841,694,3.311,748,1.3,753,3.148,754,1.803,777,2.235,781,3.816,804,2.303,812,3.011,840,5.239,894,3.935,897,2.316,986,1.514,994,2.644,1033,2.662,1047,3.153,1052,2.733,1053,3.607,1055,3.457,1057,4.112,1079,2.953,1099,2.814,1132,2.846,1162,5.269,1165,2.282,1167,2.107,1176,3.311,1235,1.835,1239,3.011,1267,1.273,1300,2.544,1302,2.241,1420,3.212,1431,2.046,1497,2.172,1603,2.316,1705,2.397,1740,2.583,1762,2.583,1767,4.094,1782,2.316,1841,4.094,1852,4.59,1857,3.582,1917,3.115,1934,3.447,1989,5.384,2063,6.641,2089,3.115,2429,3.901,2555,3.115,2568,5.384,2570,2.692,2571,5.384,2610,5.354,2654,4.59,2666,5.766,2700,6.111,2779,3.555,2780,3.883,2819,2.241,2826,7.372,2827,3.555,2828,6.073,2829,6.641,2830,6.073,2831,6.073,2832,6.073,2833,6.971,2834,6.073,2835,6.073,2836,6.971,2837,6.971,2838,7.528,2839,6.971,2840,7.528,2841,6.971,2842,7.528,2843,6.073,2844,6.073,2845,6.971,2846,6.073,2847,6.971,2848,6.073,2849,4.38,2850,5.766,2851,6.971,2852,6.971,2853,4.38,2854,4.38,2855,4.38,2856,6.073,2857,3.555,2858,6.073,2859,4.38,2860,3.311,2861,4.38,2862,4.38,2863,4.38,2864,4.38,2865,3.555,2866,4.38,2867,4.38,2868,4.38,2869,7.528,2870,4.38,2871,4.38,2872,4.38,2873,4.38,2874,4.38,2875,4.38,2876,4.38,2877,4.38,2878,4.38,2879,4.38,2880,4.38,2881,4.38,2882,3.555,2883,5.384,2884,3.555,2885,6.673,2886,7.528,2887,4.38,2888,3.555,2889,3.883,2890,4.38,2891,4.38,2892,4.38,2893,4.38,2894,4.38,2895,4.38,2896,4.38,2897,4.38,2898,4.38,2899,4.38,2900,4.38,2901,6.073,2902,4.38,2903,6.073,2904,4.38,2905,6.073,2906,4.38,2907,4.38,2908,4.38,2909,4.38,2910,6.971,2911,4.38,2912,3.883,2913,4.38,2914,4.38,2915,4.38,2916,6.971,2917,4.38,2918,6.073,2919,4.38,2920,6.971,2921,4.38,2922,6.971,2923,7.528,2924,7.528,2925,4.38,2926,4.38,2927,4.38,2928,4.38,2929,4.38,2930,4.38,2931,6.073,2932,4.38,2933,6.073,2934,4.38,2935,4.38,2936,6.971,2937,4.38,2938,6.971,2939,4.38,2940,4.38,2941,2.814,2942,4.38,2943,4.38,2944,3.883,2945,4.38,2946,4.38,2947,4.38,2948,4.38,2949,4.38,2950,4.38,2951,6.073,2952,4.38,2953,4.38,2954,4.38,2955,4.38]],["title/components/ErrorBannerComponent.html",[205,0.319,726,1.811]],["body/components/ErrorBannerComponent.html",[3,0.121,4,0.063,5,0.054,8,0.293,12,0.182,13,0.493,14,0.556,18,0.315,19,0.008,26,0.081,30,1.77,36,1.021,59,0.917,60,1.001,63,1.384,66,1.631,73,0.531,78,0.12,96,1.245,99,1.504,100,3.754,108,2.093,109,1.17,140,0.604,143,1.024,159,0.004,160,0.005,161,0.004,172,1.326,181,0.854,191,2.633,196,0.905,198,1.132,199,0.792,201,0.724,205,0.579,209,1.883,225,0.742,248,0.832,260,0.283,264,1.641,281,0.315,282,1.086,322,3.261,339,1.922,343,4.248,347,2.7,359,2.103,375,1.571,391,1.641,395,5.863,412,6.806,442,1.275,462,1.707,464,1.306,479,0.478,540,3.384,555,2.048,600,1.538,608,1.36,653,1.571,654,1.664,655,1.474,656,1.977,659,2.804,661,1.929,662,1.731,663,2.005,669,2.186,701,1.606,702,1.598,703,3.6,704,2.254,705,1.641,706,2.254,707,2.254,708,1.756,709,2.135,710,2.254,711,1.929,712,2.254,713,1.413,714,2.254,715,1.839,716,2.257,717,1.929,718,3.6,719,1.797,720,1.929,721,1.929,722,1.176,723,1.797,724,1.929,725,2.254,726,3.157,727,2.254,728,2.135,729,1.929,730,2.211,731,2.254,732,1.839,733,3.6,734,1.883,735,3.036,736,1.883,737,1.631,738,1.883,739,3.003,740,1.839,741,2.027,742,2.254,743,1.797,744,2.254,745,2.08,746,1.571,747,1.606,748,1.474,749,1.606,750,2.254,751,1.929,752,2.254,753,1.977,754,2.521,755,2.254,756,1.839,757,2.135,758,2.254,816,2.456,888,3.932,1053,2.135,1055,2.462,1165,1.505,1188,5.368,1215,3.189,1257,3.75,1259,2.629,1383,3.181,1387,2.569,1509,3.502,1586,1.678,1857,3.901,1947,2.818,2495,4.03,2496,4.402,2498,5.368,2702,4.458,2748,7.529,2810,2.462,2812,2.388,2813,2.462,2814,2.462,2815,2.462,2816,2.462,2817,2.462,2956,6.806,2957,4.402,2958,9.079,2959,7.436,2960,6.614,2961,7.436,2962,6.614,2963,7.436,2964,7.436,2965,8.258,2966,7.436,2967,4.965,2968,6.614,2969,6.614,2970,7.93,2971,6.614,2972,4.965,2973,4.965,2974,4.458,2975,6.614,2976,5.368,2977,6.614,2978,4.965,2979,4.965,2980,6.614,2981,4.965,2982,4.965,2983,4.965,2984,4.965,2985,4.965,2986,7.436,2987,4.965,2988,4.965,2989,4.965,2990,4.965]],["title/classes/ErrorBannerWidgetObject.html",[78,0.11,2991,3.691]],["body/classes/ErrorBannerWidgetObject.html",[3,0.082,4,0.064,5,0.055,8,0.504,12,0.184,13,0.636,14,0.742,17,3.655,18,0.326,19,0.008,25,1.848,26,0.082,34,1.101,35,1.465,36,1.037,50,0.622,57,1.434,59,0.984,66,1.848,71,1.17,73,0.582,78,0.122,81,2.046,85,1.102,109,0.744,138,2.524,140,0.61,143,1.141,148,2.257,156,2.499,159,0.004,160,0.007,161,0.004,163,1.243,165,2.948,168,1.096,181,0.863,191,2.659,196,0.93,198,1.512,199,0.807,201,0.831,205,0.609,218,3.595,225,1.028,246,1.958,248,1.256,260,0.38,281,0.423,327,3.257,342,2.983,347,2.057,359,1.67,362,1.51,365,0.936,436,2.463,442,1.294,452,4.778,459,2.057,460,2.831,462,1.336,464,1.837,465,3.7,519,2.424,523,1.582,525,1.666,530,2.499,531,4.218,548,2.91,553,2.665,554,3.961,555,2.819,556,3.532,557,3.961,558,2.659,559,2.424,560,2.665,561,1.63,562,2.354,563,2.006,564,2.665,565,2.665,566,1.958,567,2.665,568,2.665,569,2.665,570,1.958,571,1.866,572,3.097,624,2.665,635,3.401,638,3.138,645,2.659,659,2.16,662,1.216,726,2.983,762,4.433,763,2.831,764,4.252,765,4.502,766,4.502,767,4.252,768,4.502,769,3.655,770,4.502,774,2.86,775,3.584,776,2.354,777,1.496,778,2.86,779,1.703,780,2.665,781,2.758,782,2.86,783,3.584,784,2.86,785,1.496,786,2.86,787,2.111,788,4.081,789,3.833,790,2.91,791,2.86,792,4.84,793,3.584,794,2.86,795,3.584,796,3.212,797,2.86,798,3.584,799,2.797,800,2.86,801,3.584,802,2.86,803,3.584,804,1.911,805,2.86,806,2.86,807,3.584,808,2.86,809,3.584,810,1.561,811,1.496,812,3.311,813,3.79,814,2.86,815,3.584,816,1.561,817,2.86,830,4.467,1018,3.809,2223,3.655,2956,5.662,2991,5.421,2992,4.467,2993,7.491,2994,5.039,2995,5.039,2996,5.039,2997,6.679,2998,6.679,2999,4.467,3000,5.039]],["title/interfaces/ExportColumn.html",[0,0.175,2058,3.437]],["body/interfaces/ExportColumn.html",[0,0.216,2,0.853,3,0.106,4,0.05,5,0.078,8,0.231,12,0.143,13,0.418,14,0.471,18,0.194,19,0.008,20,1.661,26,0.135,27,1.291,30,2.109,34,1.431,35,1.135,36,1.347,40,2.921,50,0.808,58,2.849,59,1.001,60,1.751,62,1.446,66,0.963,73,0.518,75,4.474,78,0.094,83,1.446,85,0.774,86,3.547,96,1.224,97,2.632,99,1.437,101,2.263,108,2.264,109,1.351,113,2.176,114,1.648,115,0.504,129,2.408,133,1.159,140,0.692,143,0.723,146,3.179,148,1.32,154,1.98,158,1.374,159,0.003,160,0.005,161,0.003,170,0.888,172,1.531,194,2.674,199,0.692,201,0.692,205,0.392,238,4.546,248,1.471,260,0.449,261,1.209,267,0.842,276,1.209,281,0.585,282,1.464,283,2.951,322,3.076,326,2.777,342,2.23,348,2.508,359,0.871,362,1.129,364,2.616,365,0.726,374,1.517,393,1.628,462,0.696,479,0.376,525,1.291,546,2.176,549,1.893,561,1.263,562,1.824,608,1.347,609,1.954,622,1.936,662,0.711,663,1.184,673,4.502,684,2.694,711,1.517,722,1.694,785,1.159,811,1.159,816,1.209,841,1.413,858,3.401,870,3.908,892,2.694,902,1.066,913,1.291,972,2.777,987,2.606,991,3.227,993,4.026,1026,2.508,1035,1.824,1041,1.35,1048,1.628,1049,2.124,1073,2.674,1079,2.632,1207,1.517,1223,1.209,1252,4.392,1257,2.973,1259,2.315,1262,1.555,1267,1.135,1279,1.98,1280,1.679,1290,1.594,1299,2.616,1300,1.636,1310,2.23,1316,1.998,1387,1.517,1394,2.065,1395,2.065,1396,2.962,1397,2.065,1401,2.065,1455,1.936,1556,1.517,1572,2.065,1581,2.065,1766,1.936,1857,2.303,1899,4.658,1901,2.4,1908,4.546,1911,6.148,1913,5.407,1920,3.169,1923,4.546,1924,3.169,1925,3.169,1934,3.717,1962,4.546,2047,2.951,2048,2.508,2049,2.951,2050,3.169,2051,4.965,2052,5.805,2053,4.965,2054,3.461,2055,3.461,2056,2.951,2057,3.461,2058,6.566,2059,4.965,2060,5.599,2061,3.169,2062,3.248,2063,4.546,2064,3.461,2065,4.965,2066,4.546,2067,3.463,2068,4.965,2069,2.694,2070,3.169,2071,4.546,2072,4.546,2073,6.148,2074,3.169,2075,3.169,2076,3.461,2077,2.508,2078,3.461,2079,5.805,2080,3.461,2081,2.951,2082,3.169,2083,3.461,2084,3.461,2085,3.461,2086,3.461,2087,3.461,2088,3.461,2089,3.983,2090,5.805,2091,3.461,2092,3.461,2093,2.508,2094,3.461,2095,3.461,2096,3.461,2097,3.461,2098,3.461,2099,3.169,2100,3.461,2101,3.461,2102,3.461,2103,3.461,2104,3.461,2105,3.461,2106,3.461,2107,3.461,2108,3.461,2109,3.461,2110,3.461,2111,3.461,2112,5.315,2113,4.168,2114,3.461,2115,3.461,2116,3.461,2117,3.461,2118,3.597,2119,3.461,2120,3.461,2121,3.461,2122,3.461,2123,3.461,2124,3.461,2125,3.461,2126,3.461,2127,3.461,2128,3.461,2129,3.461,2130,3.461,2131,3.461,2132,3.461,2133,3.461,2134,3.983,2135,3.461,2136,3.983,2137,3.461,2138,4.965,2139,2.777,2140,2.777,2141,4.965,2142,3.461,2143,3.461,2144,3.461,2145,5.805,2146,3.461,2147,4.965,2148,3.461,2149,3.461,2150,2.951,2151,3.461,2152,3.461,2153,3.461,2154,6.342,2155,3.461,2156,3.461,2157,3.461,2158,3.461,2159,4.965,2160,3.461,2161,3.461,2162,3.461,2163,3.461,2164,3.461,2165,3.461,2166,3.461,2167,3.461,2168,3.461,2169,3.461,2170,3.461,2171,3.461,2172,3.461,2173,4.965,2174,3.461,2175,3.461,2176,3.461,2177,3.461,2178,3.461,2179,3.461,2180,3.461,2181,3.461,2182,3.461,2183,3.461,2184,3.461,2185,1.936,2186,3.461,2187,3.461,2188,3.461,2189,3.461,2190,3.461,2191,3.983,2192,3.461,2193,3.461,2194,3.461,2195,3.461,2196,3.461,2197,3.461,2198,3.461,2199,3.461,2200,3.461,2201,3.461,2202,3.461,2203,3.461,2204,3.461,2205,3.461,2206,3.461,2207,3.461,2208,3.461,2209,3.461,2210,3.461,2211,3.461,2212,3.461,2213,3.461,2214,3.461,2215,3.461,2216,3.461,2217,4.965,2218,3.461,2219,3.461,2220,3.461]],["title/classes/FilterBuilder.html",[78,0.11,2393,2.255]],["body/classes/FilterBuilder.html",[3,0.055,4,0.043,5,0.037,8,0.199,12,0.123,13,0.375,14,0.742,18,0.313,19,0.008,26,0.098,35,1.939,59,0.62,61,1.738,71,0.782,73,0.552,78,0.081,82,3.39,96,0.508,115,0.649,129,2.162,139,6.469,140,0.816,143,0.435,159,0.005,160,0.004,161,0.003,163,0.831,172,1.594,181,0.649,192,0.589,196,0.927,198,1.511,199,0.816,201,0.851,225,1.052,247,5.073,267,0.92,273,1.454,281,0.569,282,1.095,348,3.23,460,2.163,523,2.254,541,5.414,561,1.626,566,1.954,584,1.86,599,2.587,776,4.344,810,1.558,811,1.493,888,1.782,902,1.822,989,1.819,1052,2.305,1092,1.819,1186,5.746,1235,3.135,1248,2.106,1285,2.88,1649,1.862,1767,4.496,1776,3.09,1822,4.458,1983,6.062,2296,3.09,2301,1.621,2393,4.798,2395,3.65,2480,4.082,2483,4.082,2505,3.577,2524,6.731,2543,5.656,2974,3.39,3001,6.924,3002,2.547,3003,5.029,3004,5.029,3005,5.029,3006,7.483,3007,5.029,3008,5.029,3009,5.029,3010,5.029,3011,5.029,3012,5.029,3013,5.029,3014,5.029,3015,5.029,3016,6.015,3017,5.029,3018,6.669,3019,5.029,3020,6.669,3021,5.029,3022,5.029,3023,5.029,3024,5.029,3025,5.029,3026,5.029,3027,5.029,3028,3.37,3029,3.37,3030,5.029,3031,3.37,3032,9.213,3033,3.37,3034,3.37,3035,7.754,3036,8.524,3037,3.37,3038,3.37,3039,5.029,3040,3.37,3041,3.37,3042,5.029,3043,3.37,3044,5.029,3045,3.37,3046,4.082,3047,7.483,3048,5.029,3049,5.029,3050,3.37,3051,3.37,3052,5.029,3053,7.964,3054,8.417,3055,3.37,3056,5.029,3057,3.37,3058,3.37,3059,5.029,3060,5.029,3061,3.37,3062,5.029,3063,3.37,3064,5.029,3065,3.37,3066,5.029,3067,3.37,3068,5.029,3069,3.37,3070,5.029,3071,3.37,3072,3.37,3073,3.37,3074,5.029,3075,3.37,3076,2.736,3077,4.458,3078,4.458,3079,4.458,3080,4.458,3081,2.988,3082,2.988,3083,7.97,3084,3.37,3085,3.37,3086,3.37,3087,3.37,3088,6.669,3089,7.754,3090,7.754,3091,5.029,3092,6.669,3093,8.887,3094,5.029,3095,7.483,3096,6.669,3097,6.669,3098,6.669,3099,6.669,3100,3.37,3101,3.37,3102,3.37,3103,3.37,3104,3.37,3105,3.37,3106,3.37,3107,5.029,3108,3.37,3109,5.029,3110,3.37,3111,5.029,3112,3.37,3113,5.029,3114,3.37,3115,3.37,3116,3.37,3117,3.37,3118,3.37,3119,3.37,3120,3.37]],["title/interfaces/FilterConfig.html",[0,0.175,1738,2.008]],["body/interfaces/FilterConfig.html",[0,0.249,2,1.048,3,0.078,4,0.061,5,0.053,8,0.283,9,2.699,12,0.176,13,0.583,14,0.657,18,0.317,19,0.008,26,0.132,35,1.394,36,0.987,45,3.865,47,1.82,50,1.122,52,1.078,59,0.965,60,1.303,61,2.703,66,1.183,73,0.535,78,0.156,96,0.974,99,1.226,109,1.078,111,1.696,112,2.83,114,1.207,115,1.143,118,1.586,140,0.714,143,0.62,158,1.007,159,0.004,160,0.005,161,0.004,163,1.803,168,1.061,170,1.091,172,0.856,181,0.835,190,3.189,192,0.838,196,0.487,201,0.84,205,0.589,234,1.136,235,2.216,260,0.497,267,0.78,281,0.533,282,1.061,323,2.626,325,2.379,362,1.303,374,2.84,378,1.696,436,2.423,467,3.44,479,0.462,488,3.234,558,1.91,561,1.552,566,1.864,584,1.338,585,3.082,599,2.234,618,1.736,649,2.063,654,1.839,669,1.586,713,1.366,716,1.366,719,1.736,723,1.736,730,1.338,737,1.594,749,2.09,754,1.424,763,2.371,777,1.918,779,1.621,785,2.17,810,1.486,816,1.486,835,3.082,841,1.736,870,3.624,888,2.537,892,2.308,902,2.136,913,1.586,969,2.855,979,2.379,984,3.74,986,2.234,987,2.585,989,1.736,992,1.696,994,2.451,998,2.606,1001,2.241,1002,2.063,1041,1.658,1042,2.626,1048,1.879,1049,2.451,1165,1.455,1167,2.308,1191,1.777,1207,1.864,1214,2.455,1223,1.486,1246,2.119,1259,1.696,1267,1.394,1273,2.01,1274,2.063,1279,2.285,1280,2.063,1283,1.736,1285,2.834,1286,2.707,1287,2.984,1313,3.348,1341,3.204,1347,3.061,1369,2.241,1373,3.061,1374,2.855,1376,3.019,1509,2.119,1525,3.51,1556,1.864,1737,3.234,1738,3.228,1739,3.363,1754,2.455,1776,2.948,1777,2.83,1779,3.234,1780,2.379,1781,4.261,1782,2.537,1783,3.082,1784,3.234,1785,2.948,1786,3.234,1787,3.234,1788,2.626,1808,3.082,1841,3.234,1857,2.83,1922,4.311,1932,2.948,2062,3.551,2069,2.308,2268,2.178,2269,3.412,2270,3.894,2271,2.948,2272,3.894,2273,3.082,2274,6.826,2275,5.246,2276,3.082,2277,2.948,2278,2.455,2279,2.626,2280,3.516,2281,2.455,2283,3.082,2284,3.307,2288,2.723,2289,4.151,2291,3.082,2294,2.83,2296,2.948,2298,3.082,2300,2.626,2301,2.308,2303,2.723,2304,3.082,2307,2.626,2309,2.948,2310,2.83,2311,3.082,2312,4.151,2313,2.83,2315,2.455,2322,3.894,2323,3.894,2324,3.894,2325,3.234,2326,3.626,2327,3.626,2328,4.597,2329,5.246,2330,5.246,2331,3.894,2332,3.894,2333,3.894,2334,3.894,2335,5.932,2336,3.894,2337,3.894,2338,3.894,2339,3.894,2340,3.894,2341,3.894,2342,3.894,2343,3.894,2344,3.894,2345,2.626,2346,3.204,2347,5.246,2348,3.894,2349,3.894,2350,3.894,2351,3.082,2352,3.894,2353,3.894]],["title/interfaces/FilterRendererSpec.html",[0,0.175,1739,1.955]],["body/interfaces/FilterRendererSpec.html",[0,0.25,2,1.053,3,0.078,4,0.061,5,0.053,8,0.285,9,2.844,12,0.176,13,0.546,18,0.317,19,0.008,26,0.133,35,1.401,36,0.991,45,3.873,47,1.827,50,1.122,52,1.081,59,0.966,60,0.971,61,2.708,66,1.188,73,0.515,78,0.156,96,0.977,99,1.229,109,1.081,111,1.704,112,2.842,114,1.213,115,1.144,118,1.593,140,0.716,143,0.622,158,1.011,159,0.004,160,0.005,161,0.004,163,1.806,168,1.202,170,1.096,172,0.859,181,0.837,190,3.193,192,0.842,196,0.489,201,0.818,205,0.621,234,1.141,235,2.221,260,0.498,267,0.782,281,0.534,282,1.064,323,2.637,325,2.389,362,1.477,374,2.846,378,1.704,436,2.554,467,3.51,479,0.464,488,3.248,558,1.919,561,1.558,566,1.872,584,1.343,585,3.095,599,1.665,618,1.743,649,2.072,654,1.843,669,1.593,713,1.372,716,1.372,719,1.743,723,1.743,730,1.343,737,1.599,749,2.369,754,1.43,763,2.375,777,1.43,779,1.629,785,2.174,810,1.492,816,1.492,835,3.095,841,1.743,870,3.214,888,2.548,892,2.318,902,2,913,1.593,969,3.235,979,2.389,984,3.748,986,2.24,987,2.703,989,1.743,992,1.704,994,2.778,998,2.739,1001,2.251,1002,2.072,1041,1.665,1042,2.637,1048,1.884,1049,2.458,1165,1.461,1167,2.318,1191,1.785,1207,1.872,1214,2.466,1223,1.492,1246,2.128,1259,1.704,1267,1.401,1273,2.018,1274,2.072,1279,2.292,1280,2.072,1283,1.743,1285,2.865,1286,2.715,1287,3.199,1313,2.917,1341,2.389,1347,2.715,1369,2.251,1373,3.068,1374,2.863,1376,2.251,1509,2.128,1525,3.62,1556,1.872,1737,4.37,1738,2.863,1739,3.515,1754,2.466,1776,2.961,1777,2.842,1779,3.248,1780,2.389,1781,4.054,1782,2.548,1783,3.095,1784,3.248,1785,2.961,1786,3.248,1787,3.248,1788,2.637,1808,3.095,1841,3.248,1857,2.842,1922,3.823,1932,2.961,2062,3.557,2069,2.318,2268,2.188,2269,3.427,2270,3.911,2271,2.961,2272,3.911,2273,3.095,2274,5.945,2275,5.261,2276,3.095,2277,2.961,2278,2.466,2279,2.637,2280,3.523,2281,2.466,2283,3.095,2284,3.317,2288,2.735,2289,4.163,2291,3.095,2294,2.842,2296,2.961,2298,3.095,2300,2.637,2301,2.318,2303,2.735,2304,3.095,2307,2.637,2309,2.961,2310,2.842,2311,3.095,2312,4.163,2313,2.842,2315,2.466,2322,3.911,2323,3.911,2324,3.911,2325,3.248,2326,3.642,2327,3.642,2328,4.61,2329,3.911,2330,3.911,2331,3.911,2332,3.911,2333,3.911,2334,3.911,2335,5.945,2336,3.911,2337,3.911,2338,3.911,2339,3.911,2340,3.911,2341,3.911,2342,3.911,2343,3.911,2344,3.911,2345,2.637,2346,3.214,2347,5.261,2348,3.911,2349,3.911,2350,3.911,2351,3.095,2352,3.911,2353,3.911]],["title/components/FilterTestHostComponent.html",[205,0.319,728,1.955]],["body/components/FilterTestHostComponent.html",[3,0.075,4,0.058,5,0.05,8,0.272,9,1.521,12,0.168,13,0.469,14,0.387,18,0.315,19,0.008,25,1.985,26,0.116,47,2.713,50,0.775,52,1.187,58,1.833,59,0.882,60,1.267,63,1.283,73,0.438,78,0.111,85,0.868,87,2.282,114,1.581,115,0.993,127,2.502,140,0.574,143,0.924,158,0.966,159,0.004,160,0.005,161,0.004,181,0.811,188,3.273,194,2.565,196,0.78,198,1.075,199,0.759,201,0.759,205,0.564,209,1.745,225,0.705,234,1.09,248,0.771,260,0.505,261,1.425,264,1.521,267,0.821,281,0.453,282,1.174,286,3.103,287,2.273,339,1.826,359,1.026,362,0.928,365,1.168,375,1.456,390,3.139,391,1.521,409,2.775,435,4.469,436,2.282,442,1.182,450,4.236,462,1.694,464,1.241,467,3.362,479,0.444,481,2.519,482,2.612,483,2.434,484,4.405,485,4.739,512,5.1,561,2.032,600,1.425,622,1.591,626,2.222,636,2.956,653,1.456,654,1.581,655,2.282,656,1.833,659,1.488,661,1.788,662,1.713,701,1.488,702,1.858,703,3.49,704,2.09,705,1.521,706,2.09,707,2.09,708,1.627,709,1.979,710,2.09,711,1.788,712,2.09,713,1.31,714,2.09,715,1.705,716,2.188,717,1.788,718,3.49,719,1.665,720,1.788,721,1.788,722,1.09,723,2.273,724,1.788,725,2.09,726,1.833,727,2.09,728,3.721,729,1.788,730,2.143,731,2.09,732,1.705,733,3.49,734,1.745,735,2.921,736,1.745,737,1.896,738,1.745,739,2.853,740,1.705,741,1.879,742,2.09,743,1.665,744,2.09,745,1.928,746,1.456,747,1.488,748,1.366,749,1.488,750,2.09,751,1.788,752,2.09,753,1.833,754,1.366,755,2.09,756,1.705,757,1.979,758,2.09,776,2.15,799,1.928,816,1.425,841,2.273,847,3.116,892,3.022,914,3.439,916,2.714,917,2.956,986,2.473,987,3.039,992,2.53,993,3.116,994,2.383,995,2.956,998,2.661,1023,2.702,1038,1.591,1214,2.355,1283,2.782,1285,2.872,1313,3.307,1321,3.661,1373,2.632,1383,3.022,1604,3.439,1739,2.702,1756,4.714,1780,3.116,1781,2.282,1831,3.736,2223,4.546,2346,3.812,2355,3.323,2401,3.103,2535,3.479,2545,3.736,2708,3.479,2792,2.172,2796,2.09,2798,1.833,2809,2.519,3121,7.134,3122,4.08,3123,6.283,3124,7.155,3125,7.155,3126,6.283,3127,6.283,3128,4.602,3129,8.654,3130,7.155,3131,4.602,3132,6.283,3133,4.602,3134,4.602,3135,6.283,3136,4.236,3137,4.602,3138,3.736,3139,4.08,3140,4.602,3141,4.602,3142,6.342,3143,4.602,3144,4.602,3145,4.08,3146,4.602,3147,4.602,3148,4.602,3149,2.956,3150,4.602,3151,4.602,3152,4.602,3153,4.602,3154,5.57,3155,4.602,3156,6.283,3157,6.283,3158,6.283,3159,6.283,3160,6.283,3161,6.283,3162,4.08,3163,4.602,3164,4.602]],["title/interfaces/FindParams.html",[0,0.175,3165,2.921]],["body/interfaces/FindParams.html",[0,0.287,2,0.813,3,0.06,4,0.047,5,0.041,8,0.22,12,0.136,13,0.597,14,0.652,18,0.304,19,0.008,20,0.864,22,1.287,25,0.918,26,0.126,34,0.813,35,1.082,36,1.113,41,2.391,50,1.031,52,0.549,57,2.379,59,0.917,66,1.726,71,1.256,73,0.557,77,2.102,78,0.169,81,2.319,85,1.279,87,1.606,91,2.365,99,0.706,109,0.549,113,1.446,114,0.937,115,0.823,133,1.105,134,2.391,138,2.214,140,0.34,148,2.87,156,1.846,158,0.781,159,0.003,160,0.006,161,0.003,165,2.834,168,0.611,172,0.664,179,1.739,181,0.481,190,1.412,192,1.299,199,0.582,201,0.639,204,1.559,205,0.586,217,1.347,225,0.607,246,2.718,248,1.068,260,0.363,267,0.937,273,0.9,281,0.538,282,0.888,327,2.857,328,2.741,347,2.209,359,0.83,362,1.563,365,1.005,393,2.034,409,1.644,434,1.739,436,2.52,437,1.79,439,2.532,442,1.637,452,4.615,457,2.391,459,1.52,460,2.76,462,1.248,464,1.798,465,3.556,479,0.359,480,3.617,481,2.037,482,2.113,483,1.968,484,2.037,485,3.37,487,2.977,508,1.905,511,2.391,523,1.76,524,4.744,525,1.231,530,1.846,531,2.861,534,2.961,548,2.102,552,2.287,553,1.968,554,3.7,555,2.719,556,3.37,557,3.37,558,2.154,559,2.602,560,2.861,561,1.75,562,1.739,563,2.538,564,1.968,565,1.968,566,2.476,567,1.968,568,1.968,569,1.968,570,2.718,571,1.379,575,2.391,576,3.325,577,2.391,578,2.391,579,2.391,581,4.094,584,1.038,599,2.569,608,0.766,609,1.017,613,2.509,618,1.347,619,2.509,620,2.509,621,3.647,622,2.203,623,2.509,624,3.37,625,2.509,626,2.474,630,4.981,635,2.456,636,2.391,637,2.509,638,3.707,639,2.509,642,2.509,643,2.287,644,2.509,645,3.186,646,4.127,649,2.326,656,2.538,737,0.918,762,2.602,763,2.574,764,2.113,767,2.113,769,2.037,774,2.113,776,3.268,777,1.892,778,2.113,779,1.258,780,2.861,781,2.037,782,2.113,784,2.113,785,1.105,786,2.113,787,1.559,788,3.58,789,3.261,790,2.476,791,2.113,792,4.401,794,2.113,796,2.602,797,2.113,799,2.266,800,2.113,802,2.113,804,1.412,805,2.113,806,2.113,808,2.113,810,2.402,811,1.105,812,2.683,813,3.071,814,2.113,816,1.153,817,2.113,838,1.644,841,1.347,897,2.861,938,2.287,979,1.846,985,1.644,1024,2.768,1070,2.154,1092,1.347,1239,1.846,1291,1.52,1333,1.79,1342,1.79,1346,1.644,1544,3.575,1649,2.004,1755,2.287,1766,1.846,1780,1.846,1782,1.968,1788,2.961,1805,2.509,1809,2.391,1810,3.191,1847,2.287,1977,3.647,2077,2.391,2223,2.037,2315,1.905,2346,2.683,2681,2.195,2773,2.195,2850,2.509,3149,4.094,3165,4.981,3166,4.774,3167,5.266,3168,5.516,3169,3.848,3170,2.647,3171,2.647,3172,2.647,3173,5.516,3174,2.647,3175,3.848,3176,2.647,3177,2.647,3178,4.533,3179,2.647,3180,4.533,3181,2.509,3182,2.647,3183,4.533,3184,2.647,3185,2.647,3186,2.509,3187,2.647,3188,2.647,3189,2.647,3190,2.647,3191,2.647,3192,3.848,3193,2.647,3194,2.509,3195,2.647,3196,2.391,3197,2.647,3198,2.647,3199,2.509,3200,2.647,3201,2.647,3202,2.509,3203,2.647,3204,2.647,3205,2.509,3206,2.287,3207,2.647,3208,3.848,3209,3.848,3210,2.647,3211,2.647,3212,4.533,3213,3.848,3214,4.533,3215,2.647,3216,2.647,3217,2.647,3218,2.647,3219,2.647,3220,2.647,3221,2.647,3222,2.647,3223,2.509,3224,2.647,3225,2.647,3226,2.647,3227,2.647,3228,2.647,3229,2.647,3230,2.195,3231,2.287,3232,2.647,3233,2.647,3234,2.647,3235,2.647,3236,2.647,3237,2.647,3238,2.647,3239,2.647,3240,2.647,3241,2.113,3242,2.647,3243,2.647,3244,2.647,3245,2.647,3246,4.976,3247,2.647,3248,4.533,3249,2.647,3250,2.647,3251,2.647,3252,2.647,3253,2.647,3254,2.647,3255,2.647,3256,2.647,3257,2.647,3258,2.647,3259,2.647,3260,2.647,3261,4.533,3262,2.647,3263,2.647,3264,2.647,3265,2.647,3266,2.647,3267,2.647,3268,2.647,3269,2.647,3270,2.391]],["title/interfaces/FindableWidget.html",[0,0.175,487,2.124]],["body/interfaces/FindableWidget.html",[0,0.309,2,0.822,3,0.061,4,0.048,5,0.041,8,0.222,12,0.138,13,0.599,14,0.316,18,0.302,19,0.008,20,0.873,22,1.3,25,1.344,26,0.126,34,0.822,35,1.093,36,1.121,41,2.415,50,1.033,52,0.555,57,2.285,59,0.92,66,1.734,71,1.265,73,0.558,77,1.461,78,0.155,81,2.289,85,1.281,87,1.618,91,2.167,99,0.713,109,0.555,113,1.461,114,0.946,115,0.704,133,1.116,134,2.415,138,2.225,140,0.343,148,2.832,156,1.864,158,0.789,159,0.003,160,0.006,161,0.003,165,2.775,168,0.895,172,0.671,179,1.756,181,0.486,190,1.426,192,1.304,199,0.498,201,0.642,204,1.575,205,0.587,217,1.36,225,0.611,246,2.731,248,1.074,260,0.365,267,0.939,273,0.909,281,0.539,282,0.895,327,2.87,328,2.756,347,2.225,359,0.838,362,1.504,365,1.013,393,2.043,409,1.661,434,1.756,436,2.487,437,1.809,439,2.544,442,1.646,452,4.537,457,2.415,459,1.535,460,2.764,462,1.254,464,1.801,465,3.565,479,0.362,480,3.638,481,2.058,482,2.134,483,1.988,484,2.058,485,3.39,487,3.486,508,1.924,511,2.415,523,1.768,524,4.666,525,1.243,530,1.864,531,2.882,534,2.983,548,2.117,552,2.311,553,1.988,554,3.717,555,2.724,556,3.39,557,3.39,558,2.17,559,3.083,560,2.882,561,1.763,562,1.756,563,2.553,564,1.988,565,1.988,566,2.731,567,1.988,568,1.988,569,1.988,570,2.731,571,1.393,575,2.415,576,3.349,577,2.415,578,2.415,579,2.415,581,4.118,584,1.52,599,2.579,608,0.773,609,1.027,613,2.535,618,1.36,619,2.535,620,2.535,621,3.674,622,2.216,623,2.535,624,3.39,625,2.535,626,2.486,630,4.118,635,3.388,636,2.415,637,2.535,638,3.684,639,2.535,642,2.535,643,2.311,644,2.535,645,3.196,646,3.781,649,2.343,656,2.17,737,0.927,762,3.083,763,2.58,764,2.134,767,2.134,769,2.058,774,2.134,776,3.635,777,1.903,778,2.134,779,1.271,780,2.882,781,2.058,782,2.134,784,2.134,785,1.116,786,2.134,787,1.575,788,3.597,789,3.28,790,2.491,791,2.134,792,4.417,794,2.134,796,2.621,797,2.134,799,2.283,800,2.134,802,2.134,804,1.426,805,2.134,806,2.134,808,2.134,810,2.311,811,1.116,812,2.702,813,3.093,814,2.134,816,1.165,817,2.134,838,1.661,841,1.36,897,2.882,938,2.311,979,1.864,985,1.661,1024,3.28,1070,1.497,1092,1.36,1239,1.864,1291,1.535,1333,1.809,1342,1.809,1346,1.661,1544,3.589,1649,2.018,1755,2.311,1766,1.864,1780,1.864,1782,2.882,1788,2.058,1805,2.535,1809,2.415,1810,3.214,1847,2.311,1977,2.535,2077,2.415,2223,2.058,2315,1.924,2346,2.702,2681,2.218,2773,2.218,2850,2.535,3149,4.118,3165,4.793,3166,4.515,3167,4.793,3168,4.559,3169,2.674,3170,2.674,3171,2.674,3172,2.674,3173,5.535,3174,2.674,3175,3.876,3176,2.674,3177,2.674,3178,5,3179,2.674,3180,5,3181,2.535,3182,2.674,3183,4.559,3184,2.674,3185,2.674,3186,2.535,3187,2.674,3188,2.674,3189,2.674,3190,2.674,3191,2.674,3192,3.876,3193,2.674,3194,2.535,3195,2.674,3196,2.415,3197,2.674,3198,2.674,3199,2.535,3200,2.674,3201,2.674,3202,2.535,3203,2.674,3204,2.674,3205,2.535,3206,2.311,3207,2.674,3208,3.876,3209,3.876,3210,2.674,3211,2.674,3212,4.559,3213,3.876,3214,4.559,3215,2.674,3216,2.674,3217,2.674,3218,2.674,3219,2.674,3220,2.674,3221,2.674,3222,2.674,3223,2.535,3224,2.674,3225,2.674,3226,2.674,3227,2.674,3228,2.674,3229,2.674,3230,2.218,3231,2.311,3232,2.674,3233,2.674,3234,2.674,3235,2.674,3236,2.674,3237,3.876,3238,3.876,3239,2.674,3240,2.674,3241,2.134,3242,2.674,3243,2.674,3244,2.674,3245,2.674,3246,5,3247,2.674,3248,4.559,3249,2.674,3250,2.674,3251,2.674,3252,2.674,3253,2.674,3254,2.674,3255,2.674,3256,2.674,3257,2.674,3258,2.674,3259,2.674,3260,2.674,3261,4.559,3262,2.674,3263,2.674,3264,2.674,3265,2.674,3266,2.674,3267,2.674,3268,2.674,3269,2.674,3270,2.415,3271,3.76]],["title/interfaces/FindableWidget-1.html",[0,0.146,158,0.794,487,1.768]],["body/interfaces/FindableWidget-1.html",[0,0.32,2,1.224,3,0.091,4,0.071,5,0.061,8,0.331,10,2.616,12,0.205,13,0.534,18,0.304,19,0.008,25,1.764,26,0.135,55,2.779,57,2.539,73,0.569,78,0.207,81,1.529,114,1.984,115,0.723,152,2.705,159,0.005,160,0.006,161,0.005,163,1.764,168,1.363,198,0.958,201,0.72,217,3.268,225,0.931,234,1.326,246,3.062,247,4.06,248,1.392,281,0.556,282,0.919,319,3.065,338,3.775,362,1.589,365,1.709,434,2.616,436,2.648,437,2.693,438,3.178,439,3.105,442,2.024,443,5.126,445,3.775,448,3.597,459,3.504,460,2.169,461,3.983,464,1.557,465,3.851,467,2.779,469,3.597,470,4.649,471,3.775,473,3.775,475,3.775,485,2.961,486,4.392,487,3.682,599,1.935,612,4.396,635,3.985,762,3.441,763,2.518,776,2.616,785,1.662,841,2.026,878,4.219,937,3.597,938,3.441,939,3.441,940,3.597,941,6.398,942,2.542,943,4.545,944,4.545,945,4.545,946,4.545,947,5.806,948,4.545,949,4.545,950,4.545,951,4.545,952,3.983,953,3.983,954,3.983,955,4.545,957,5.806,958,5.599,959,3.983,960,5.606,962,5.606,963,3.983,965,4.898,966,3.983,968,4.545,969,2.473,970,4.545,971,4.232,972,3.983,973,5.958,974,5.806,975,4.232,976,4.545,977,4.232,978,4.545,979,2.776,980,5.806,981,4.06]],["title/components/FormCheckboxComponent.html",[205,0.319,729,1.767]],["body/components/FormCheckboxComponent.html",[3,0.071,4,0.056,5,0.048,8,0.484,12,0.161,13,0.455,14,0.706,18,0.325,19,0.008,26,0.099,27,1.456,34,1.332,50,0.752,52,1.113,59,1.011,60,0.888,62,2.795,63,1.228,71,1.415,73,0.539,78,0.106,83,2.258,96,1.291,98,3.578,99,0.835,100,2.5,101,2.12,109,1.333,115,1.023,119,4.608,140,0.639,143,1.085,144,6.82,146,5.187,159,0.004,160,0.005,161,0.004,168,1.001,181,0.787,191,2.428,192,0.77,196,0.949,198,1.356,199,0.804,201,0.804,205,0.529,209,1.671,217,2.206,218,3.639,225,0.846,234,1.444,248,1.475,260,0.398,264,1.456,281,0.279,339,1.772,359,1.559,374,2.369,375,1.394,391,1.456,393,1.772,442,1.131,462,1.693,464,1.491,479,0.424,508,3.12,509,4.337,546,1.711,584,1.7,600,1.888,609,2.164,653,1.394,654,1.534,655,1.308,656,1.754,659,1.425,661,1.711,662,1.713,663,1.849,669,2.016,683,1.336,701,1.425,702,1.824,703,3.426,704,2,705,1.456,706,2,707,2,708,1.558,709,1.894,710,2,711,1.711,712,2,713,1.254,714,2,715,1.631,716,2.148,717,1.711,718,3.426,719,1.594,720,1.711,721,1.711,722,1.043,723,1.594,724,1.711,725,2,726,1.754,727,2,728,1.894,729,2.932,730,2.5,731,2,732,1.631,733,3.426,734,1.671,735,2.855,736,1.671,737,1.504,738,1.671,739,2.768,740,1.631,741,1.798,742,2,743,1.594,744,2,745,1.845,746,1.394,747,1.425,748,1.308,749,1.425,750,2,751,1.711,752,2,753,1.754,754,1.308,755,2,756,1.631,757,1.894,758,2,763,1.849,832,5.726,838,1.946,842,4.861,846,4.608,847,3.467,848,4.608,849,5.285,850,4.608,851,4.608,852,4.608,853,4.608,854,4.608,855,3.337,856,3.916,857,4.608,858,2.554,862,5.525,866,3.329,868,2.184,869,3.133,870,3.467,871,3.329,872,1.711,874,4.608,876,3.329,877,3.329,878,3.596,880,3.329,882,3.329,883,2.97,885,2.97,886,3.329,888,2.329,889,4.608,891,6.195,892,2.119,893,3.329,894,2.119,896,2.707,897,2.329,898,2.254,900,3.329,902,1.203,904,3.329,913,1.456,942,2,1049,1.671,1053,2.622,1055,3.742,1740,4.673,2113,4.856,2251,5.341,2429,3.916,3272,5.976,3273,6.351,3274,3.575,3275,6.097,3276,6.992,3277,6.992,3278,6.992,3279,3.905,3280,4.405,3281,4.608,3282,4.405,3283,6.097,3284,4.405,3285,6.097,3286,6.198,3287,6.992,3288,4.405,3289,4.405,3290,3.575,3291,3.575,3292,3.575,3293,3.575,3294,3.575,3295,3.575,3296,3.575,3297,3.575,3298,3.575,3299,3.575,3300,3.575,3301,3.575,3302,3.575,3303,3.575,3304,3.575,3305,4.405,3306,4.405,3307,3.133,3308,3.905,3309,4.405,3310,3.575,3311,3.329,3312,4.608]],["title/components/FormInputComponent.html",[205,0.319,732,1.684]],["body/components/FormInputComponent.html",[3,0.055,4,0.043,5,0.037,8,0.459,12,0.124,13,0.378,14,0.671,18,0.324,19,0.008,25,1.248,26,0.098,34,1.321,35,0.988,50,0.624,52,1.179,57,0.968,59,1.053,60,0.685,61,1.175,62,1.875,63,0.948,71,1.743,73,0.548,78,0.082,83,1.875,96,1.132,98,3.094,99,1.147,100,1.929,101,1.618,108,1.602,109,1.392,111,1.79,114,0.856,115,0.439,140,0.822,143,1.103,146,4.535,158,1.269,159,0.003,160,0.004,161,0.003,168,0.831,170,1.151,179,2.364,181,0.654,192,0.594,196,0.946,198,1.285,199,0.77,201,0.856,205,0.56,209,1.289,217,1.831,218,3.496,225,0.872,234,1.199,248,1.013,260,0.344,264,1.124,267,0.646,273,1.814,281,0.425,282,1.099,339,1.471,345,1.289,359,1.348,365,1.124,374,1.966,375,1.076,391,1.124,436,1.502,442,0.873,462,1.663,464,1.536,479,0.328,483,2.676,546,1.321,555,2.075,570,1.966,585,4.302,599,1.749,600,1.568,608,1.041,609,0.928,626,1.202,628,2.57,653,1.076,654,1.274,655,1.009,656,1.354,659,1.099,661,1.321,662,1.679,663,1.535,669,1.673,683,1.031,701,1.099,702,1.731,703,3.041,704,1.544,705,1.124,706,1.544,707,1.544,708,1.202,709,1.462,710,1.544,711,1.321,712,1.544,713,0.968,714,1.544,715,1.259,716,1.907,717,1.321,718,3.041,719,1.23,720,1.321,721,1.321,722,0.805,723,1.23,724,1.321,725,1.544,726,1.354,727,1.544,728,1.462,729,1.321,730,2.508,731,1.544,732,2.481,733,3.041,734,1.289,735,2.469,736,1.289,737,1.248,738,1.289,739,2.298,740,1.259,741,1.388,742,1.544,743,1.23,744,1.544,745,1.424,746,1.076,747,1.099,748,1.009,749,1.099,750,1.544,751,1.321,752,1.544,753,1.354,754,1.502,755,1.544,756,1.259,757,1.462,758,1.544,763,1.535,777,1.502,804,2.293,832,5.499,838,1.502,842,4.535,846,3.826,847,2.998,848,3.826,849,4.57,850,3.826,851,3.826,852,3.826,853,3.826,854,5.877,855,2.77,856,3.251,857,3.826,858,2.12,862,5.061,866,2.57,868,1.686,869,2.418,870,4.121,871,2.57,872,1.966,874,3.826,876,2.57,877,2.57,878,2.985,880,2.57,882,2.57,883,2.292,885,2.292,886,2.57,888,1.798,889,3.826,891,3.826,892,1.635,893,2.57,894,1.635,896,2.089,897,1.798,898,1.74,900,2.57,902,0.928,904,2.57,913,1.124,942,1.544,965,3.566,969,2.235,986,1.749,1040,2.851,1041,1.175,1047,2.533,1052,2.315,1053,3.079,1057,2.985,1140,2.364,1153,2.77,1215,2.184,1234,4.108,1250,2.176,1255,3.094,1257,2.745,1259,2.138,1262,2.408,1285,1.568,1297,2.12,1298,3.321,1299,3.129,1346,1.502,1368,3.321,1383,2.434,1384,2.59,1387,1.966,1420,2.676,1503,2.824,1649,1.259,1723,3.427,1754,2.59,1809,4.302,1914,4.487,1935,3.826,1937,3.251,1948,4.108,1983,3.6,1993,4.108,2069,1.635,2118,5.245,2288,2.873,2429,3.251,2449,2.676,2451,2.759,2498,5.437,2682,2.759,3272,6.29,3279,3.014,3281,3.826,3290,2.759,3291,2.759,3292,2.759,3293,2.759,3294,2.759,3295,2.759,3296,2.759,3297,2.759,3298,2.759,3299,2.759,3300,2.759,3301,2.759,3302,2.759,3303,2.759,3304,2.759,3307,2.418,3310,2.759,3311,2.57,3313,6.29,3314,2.184,3315,5.061,3316,6.698,3317,6.698,3318,3.014,3319,4.908,3320,4.108,3321,7.161,3322,6.698,3323,3.884,3324,4.908,3325,4.076,3326,4.6,3327,6.046,3328,6.046,3329,5.061,3330,3.4,3331,4.908,3332,3.014,3333,3.6,3334,3.4,3335,6.698,3336,3.014,3337,4.108,3338,4.116,3339,4.487,3340,3.4,3341,4.108,3342,3.4,3343,3.4,3344,3.014,3345,3.4,3346,6.698,3347,6.698,3348,5.061,3349,5.061,3350,3.4,3351,3.4,3352,4.108,3353,3.4,3354,4.487,3355,5.061,3356,5.061,3357,3.4,3358,4.487,3359,3.826,3360,3.014,3361,3.014,3362,3.4,3363,2.57,3364,4.108,3365,3.4,3366,3.4,3367,6.046,3368,5.061,3369,5.061,3370,3.4,3371,3.4,3372,5.061,3373,3.4,3374,3.4,3375,3.4,3376,3.4,3377,3.4,3378,3.4,3379,3.4,3380,3.4,3381,3.4,3382,3.4,3383,3.4,3384,3.4,3385,5.061,3386,3.014,3387,2.759,3388,3.014,3389,4.487,3390,3.014,3391,3.412,3392,6.046,3393,5.061,3394,5.36,3395,5.061,3396,3.014,3397,3.4,3398,3.4,3399,3.4]],["title/components/FormSelectComponent.html",[205,0.319,740,1.684]],["body/components/FormSelectComponent.html",[3,0.074,4,0.058,5,0.05,8,0.451,12,0.166,13,0.464,14,0.711,18,0.322,19,0.008,26,0.074,30,1.664,34,0.991,50,0.559,52,1.127,59,1.02,60,0.914,61,1.567,63,1.264,71,1.443,73,0.518,78,0.109,83,2.303,87,1.346,96,1.247,98,3.632,99,0.86,100,2.573,101,1.899,102,1.851,109,1.127,115,0.585,140,0.698,143,1.068,146,4.806,152,2.427,159,0.004,160,0.005,161,0.004,168,1.021,181,0.803,191,2.476,192,0.792,196,0.943,198,1.37,199,0.809,201,0.773,205,0.535,209,1.719,217,2.25,218,3.653,225,0.857,248,0.76,260,0.435,264,1.498,273,1.096,281,0.394,339,1.807,345,2.358,359,1.703,375,1.434,391,1.498,442,1.164,462,1.699,464,1.633,479,0.437,508,3.182,509,4.423,546,1.761,600,1.926,608,0.932,609,1.238,653,1.434,654,1.565,655,1.346,656,1.805,659,1.466,661,1.761,662,1.718,663,1.885,669,2.056,683,1.374,701,1.466,702,1.846,703,3.468,704,2.058,705,1.498,706,2.058,707,2.058,708,1.603,709,1.949,710,2.058,711,1.761,712,2.058,713,1.29,714,2.058,715,1.679,716,2.174,717,1.761,718,3.468,719,1.64,720,1.761,721,1.761,722,2.006,723,1.64,724,1.761,725,2.058,726,1.805,727,2.058,728,1.949,729,1.761,730,2.545,731,2.058,732,1.679,733,3.468,734,1.719,735,2.898,736,1.719,737,1.534,738,1.719,739,2.823,740,2.829,741,1.851,742,2.058,743,1.64,744,2.058,745,1.899,746,1.434,747,1.466,748,1.346,749,1.466,750,2.058,751,1.761,752,2.058,753,1.805,754,1.346,755,2.058,756,1.679,757,1.949,758,2.058,763,1.885,804,2.358,832,5.708,838,2.002,842,4.693,846,4.7,847,3.519,848,4.7,849,5.365,850,4.7,851,4.7,852,4.7,853,4.7,854,4.7,855,3.404,856,3.994,857,4.7,858,2.605,861,4.018,862,5.813,866,3.426,868,2.247,869,3.224,870,2.247,871,3.426,872,1.761,874,4.7,876,3.426,877,3.426,878,3.668,880,3.426,882,3.426,883,3.056,885,3.056,886,3.426,888,2.397,889,4.7,891,4.7,892,2.18,893,3.426,894,2.991,896,2.785,897,2.397,898,2.319,900,3.426,902,1.238,904,3.426,913,1.498,942,2.058,965,2.673,1053,2.674,1147,2.912,1215,2.912,1319,2.247,1352,1.805,1387,2.416,1785,2.785,2391,3.674,2392,2.573,2403,3.224,2427,5.047,2428,6.2,2429,5.311,2522,3.679,3272,5.433,3290,3.679,3291,3.679,3292,3.679,3293,3.679,3294,3.679,3295,3.679,3296,3.679,3297,3.679,3298,3.679,3299,3.679,3300,3.679,3301,3.679,3302,3.679,3303,3.679,3304,3.679,3307,3.224,3310,3.679,3312,5.365,3318,4.018,3358,5.512,3386,4.018,3387,3.679,3388,4.018,3389,5.512,3390,4.018,3396,5.512,3400,5.433,3401,3.679,3402,7.098,3403,6.218,3404,7.098,3405,6.218,3406,4.533,3407,4.533,3408,4.533,3409,6.218,3410,4.533,3411,4.533,3412,4.533,3413,6.218,3414,7.639,3415,4.533,3416,4.533,3417,4.533,3418,4.533]],["title/classes/FormValidators.html",[78,0.11,3419,3.234]],["body/classes/FormValidators.html",[3,0.102,4,0.08,5,0.069,8,0.454,12,0.23,14,0.646,18,0.267,19,0.008,25,2.228,26,0.102,34,1.68,52,1.31,59,0.775,71,1.785,73,0.471,78,0.152,81,2.1,85,0.868,115,0.993,140,0.844,143,0.812,159,0.005,160,0.006,161,0.005,163,1.55,181,0.993,196,0.917,198,1.316,199,0.702,201,0.836,217,2.274,225,0.862,260,0.358,267,0.887,273,1.519,281,0.549,359,1.714,463,5.811,508,3.934,665,4.535,720,2.987,730,2.144,842,4.715,858,3.22,878,4.535,902,2.1,913,2.078,1092,2.782,1308,3.139,1503,3.88,2277,4.725,3205,5.183,3325,5.183,3419,5.468,3420,5.571,3421,8.307,3422,7.688,3423,7.688,3424,7.688,3425,7.688,3426,6.285,3427,7.688,3428,8.655,3429,9.236,3430,6.816,3431,7.206,3432,7.688,3433,8.307,3434,6.285,3435,7.688,3436,6.816,3437,7.688,3438,7.688,3439,6.743,3440,6.285,3441,6.285,3442,5.101,3443,5.101,3444,6.285,3445,5.101,3446,6.241]],["title/components/FormlyInputComponent.html",[205,0.319,734,1.725]],["body/components/FormlyInputComponent.html",[3,0.091,4,0.071,5,0.061,12,0.204,18,0.273,19,0.008,26,0.091,50,1.1,60,1.125,63,1.557,73,0.546,78,0.135,109,1.053,140,0.801,159,0.005,160,0.006,161,0.005,168,1.172,181,0.922,191,2.843,196,0.905,199,0.783,205,0.551,209,2.118,225,1,248,1.197,260,0.406,264,1.846,281,0.565,339,2.075,359,1.245,375,1.767,391,1.846,442,1.434,462,1.72,464,1.41,479,0.538,600,1.729,653,1.767,654,1.797,655,2.119,656,2.223,659,1.806,661,2.169,662,1.746,701,1.806,702,1.726,703,3.767,704,2.535,705,1.846,706,2.535,707,2.535,708,1.974,709,2.401,710,2.535,711,2.169,712,2.535,713,1.589,714,2.535,715,2.068,716,2.362,717,2.169,718,3.767,719,2.02,720,2.169,721,2.169,722,1.322,723,2.02,724,2.169,725,2.535,726,2.223,727,2.535,728,2.401,729,2.169,730,2.313,731,2.535,732,2.068,733,3.767,734,3.146,735,3.501,736,2.118,737,1.761,738,2.118,739,3.242,740,2.068,741,2.28,742,2.535,743,2.02,744,2.535,745,2.339,746,1.767,747,1.806,748,1.657,749,1.806,750,2.535,751,2.169,752,2.535,753,2.223,754,1.657,755,2.535,756,2.068,757,2.401,758,2.535,855,4.308,1052,1.93,1053,2.401,1503,3.677,3314,3.586,3323,5.056,3325,5.306,3333,3.971,3336,4.95,3339,4.95,3447,8.002,3448,6.389,3449,6.734,3450,6.734,3451,7.14,3452,5.583,3453,7.14,3454,4.95,3455,5.583,3456,7.14,3457,4.95,3458,5.583,3459,7.14,3460,5.583,3461,5.583,3462,7.14,3463,4.95,3464,5.583,3465,7.14,3466,4.532,3467,5.583,3468,7.14,3469,3.586,3470,3.586,3471,4.95,3472,4.95,3473,5.583,3474,4.95,3475,4.532,3476,5.583,3477,5.583,3478,5.583,3479,5.583]],["title/components/FormlyNumberWithUnitInputComponent.html",[205,0.319,736,1.725]],["body/components/FormlyNumberWithUnitInputComponent.html",[3,0.089,4,0.07,5,0.06,12,0.201,19,0.008,26,0.089,50,1.077,60,1.106,63,1.529,73,0.522,78,0.132,96,1.177,99,1.04,109,1.042,140,0.863,159,0.005,160,0.006,161,0.005,168,1.159,191,2.811,196,0.886,199,0.779,205,0.547,209,2.08,225,0.979,248,0.919,260,0.444,264,1.813,281,0.563,339,2.052,359,1.223,375,1.736,391,1.813,442,1.409,462,1.718,464,1.394,479,0.529,600,1.699,653,1.736,654,1.777,655,2.095,656,2.184,659,1.774,661,2.131,662,1.744,701,1.774,702,1.706,703,3.742,704,2.49,705,1.813,706,2.49,707,2.49,708,1.94,709,2.359,710,2.49,711,2.131,712,2.49,713,1.561,714,2.49,715,2.032,716,2.346,717,2.131,718,3.742,719,1.985,720,2.131,721,2.131,722,1.299,723,1.985,724,2.131,725,2.49,726,2.184,727,2.49,728,2.359,729,2.131,730,2.377,731,2.49,732,2.032,733,3.742,734,2.08,735,3.482,736,3.126,737,2.347,738,2.08,739,3.205,740,2.032,741,2.24,742,2.49,743,1.985,744,2.49,745,2.298,746,1.736,747,1.774,748,1.628,749,1.774,750,2.49,751,2.131,752,2.49,753,2.184,754,1.628,755,2.49,756,2.032,757,2.359,758,2.49,855,4.272,1052,1.896,1053,2.359,1503,3.646,1649,2.032,3314,3.523,3323,5.014,3325,5.262,3332,4.863,3333,3.901,3344,4.863,3448,6.336,3454,4.863,3457,4.863,3463,4.863,3466,4.452,3469,3.523,3470,3.523,3471,4.863,3472,4.863,3474,4.863,3475,4.452,3480,7.871,3481,6.315,3482,5.552,3483,5.552,3484,5.485,3485,7.059,3486,5.485,3487,7.059,3488,5.485,3489,7.059,3490,7.059,3491,5.485,3492,5.485,3493,7.059,3494,5.485,3495,7.059,3496,5.552,3497,5.485,3498,3.523,3499,3.371,3500,7.059,3501,5.485]],["title/components/FormlySelectComponent.html",[205,0.319,738,1.725]],["body/components/FormlySelectComponent.html",[3,0.099,4,0.077,5,0.067,12,0.223,19,0.008,26,0.099,60,1.229,63,1.7,73,0.462,78,0.147,140,0.689,159,0.005,160,0.006,161,0.005,168,1.239,191,3.005,196,0.766,199,0.804,205,0.574,209,2.313,248,1.022,260,0.487,264,2.016,281,0.52,339,2.194,359,1.36,375,1.93,391,2.016,442,1.566,462,1.729,464,1.491,479,0.588,600,1.889,653,1.93,654,1.899,655,2.24,656,2.428,659,1.972,661,2.369,662,1.757,701,1.972,702,1.824,703,3.889,704,2.769,705,2.016,706,2.769,707,2.769,708,2.156,709,2.622,710,2.769,711,2.369,712,2.769,713,1.736,714,2.769,715,2.259,716,2.438,717,2.369,718,3.889,719,2.206,720,2.369,721,2.369,722,1.941,723,2.206,724,2.369,725,2.769,726,2.428,727,2.769,728,2.622,729,2.369,730,2.388,731,2.769,732,2.259,733,3.889,734,2.313,735,3.594,736,2.313,737,1.861,738,3.248,739,3.427,740,2.259,741,2.49,742,2.769,743,2.206,744,2.769,745,2.554,746,1.93,747,1.972,748,1.81,749,1.972,750,2.769,751,2.369,752,2.769,753,2.428,754,1.81,755,2.769,756,2.259,757,2.622,758,2.769,855,4.486,1273,3.433,1274,2.622,1352,2.428,1713,2.769,2391,2.933,2392,3.461,3401,4.95,3448,6.653,3466,4.95,3469,3.917,3470,3.917,3475,4.95,3502,7.266,3503,8.196,3504,6.098,3505,6.098,3506,6.098,3507,7.547,3508,6.098]],["title/interfaces/FunctionRenderer.html",[0,0.175,1254,2.124]],["body/interfaces/FunctionRenderer.html",[0,0.288,2,1.096,3,0.081,4,0.064,5,0.055,8,0.296,9,2.632,12,0.184,13,0.618,18,0.313,19,0.008,21,5.114,22,2.864,26,0.134,27,1.658,30,1.342,35,1.458,38,2.959,47,2.835,50,1.072,52,1.282,55,2.587,57,1.895,60,1.011,61,1.734,64,1.622,65,2.941,66,1.843,73,0.552,78,0.121,83,2.466,85,0.92,90,4.007,91,1.695,96,0.756,99,0.951,102,3.052,112,2.959,115,1.028,133,1.489,138,1.588,141,3.052,143,0.648,148,2.251,151,3.382,153,3.222,159,0.004,160,0.005,161,0.004,165,1.734,168,0.823,192,0.876,196,0.759,201,0.727,204,3.131,205,0.626,225,0.563,234,1.77,235,1.521,245,2.959,248,1.335,260,0.453,267,0.711,273,1.212,281,0.422,322,1.858,345,1.903,362,1.605,364,2.343,390,2.048,467,3.093,510,1.734,514,2.216,566,1.949,571,1.858,584,2.084,618,1.815,622,2.302,654,1.263,683,2.266,702,2.003,708,1.774,749,1.622,777,1.489,804,1.903,810,1.554,835,3.222,872,1.949,892,2.413,902,1.37,969,2.941,979,2.487,984,2.567,987,3.134,988,3.948,989,1.815,991,2.904,992,2.815,993,3.302,994,3.388,998,2.583,999,3.222,1002,2.157,1004,3.383,1023,2.157,1031,4.801,1033,1.774,1036,4.736,1037,2.941,1038,1.734,1039,3.382,1040,1.997,1052,1.734,1063,3.222,1092,1.815,1167,3.203,1191,2.768,1248,2.789,1249,2.567,1254,3.719,1277,2.567,1278,2.567,1281,2.278,1282,2.343,1284,2.487,1285,2.062,1286,2.789,1287,3.052,1288,3.302,1290,2.719,1300,3.131,1310,1.997,1347,2.101,1367,2.567,1369,2.343,1517,2.567,1525,3.563,1695,3.052,1735,3.568,1736,3.568,1737,4.489,1738,2.216,1739,2.863,1740,4.696,1741,6.067,1742,5.649,1743,4.072,1744,3.568,1745,4.072,1746,6.067,1747,5.405,1748,5.405,1749,5.405,1750,4.072,1751,4.072,1752,4.072,1753,4.736,1754,2.567,1755,3.083,1756,2.847,1757,4.072,1758,3.792,1759,4.072,1760,4.072,1761,4.072,1762,2.959,1763,4.072,1764,3.568,1765,4.072,1766,2.487,1767,3.382,1768,4.072,1769,2.847,1770,4.072,1771,3.792,1772,3.792,1773,3.222,1774,5.405,1775,4.072,1776,3.083,1777,2.959,1778,4.072,1779,3.382,1780,2.487,1781,2.487,1782,2.653,1783,3.222,1784,3.382,1785,3.083,1786,3.382,1787,3.382,1788,2.746,1789,4.072,3509,4.447,3510,4.072]],["title/pipes/FunctionRendererPipe.html",[3511,3.234,3512,3.065]],["body/pipes/FunctionRendererPipe.html",[3,0.112,4,0.088,5,0.076,8,0.408,13,0.607,14,0.58,18,0.239,19,0.008,26,0.112,52,1.019,59,0.852,64,2.632,73,0.498,78,0.167,99,1.543,115,1.051,159,0.006,160,0.007,161,0.006,170,1.571,181,0.892,196,0.701,198,1.182,199,0.79,211,4.035,225,0.775,260,0.393,273,1.669,281,0.516,362,1.64,393,2.365,479,0.666,523,1.927,661,2.684,888,4.303,987,2.69,994,3.388,1037,3.594,1248,3.408,1254,3.801,1831,7.25,2301,3.914,2662,6.605,2865,5.607,3511,5.788,3512,5.486,3513,4.657,3514,7.213,3515,6.123,3516,7.213,3517,7.213,3518,6.907,3519,7.213,3520,6.907]],["title/interfaces/GridColumn.html",[0,0.175,992,1.608]],["body/interfaces/GridColumn.html",[0,0.269,2,0.961,3,0.071,4,0.056,5,0.048,8,0.26,9,2.708,12,0.161,13,0.591,14,0.764,18,0.323,19,0.008,21,5.262,22,2.903,26,0.128,27,1.454,30,1.177,35,1.278,38,2.594,47,3.003,50,1.036,52,1.209,55,2.366,57,1.252,60,1.228,61,1.52,64,1.97,65,3.331,66,1.953,73,0.572,78,0.147,83,2.793,85,0.841,90,3.813,91,2.058,96,1.053,99,1.155,102,2.852,112,2.594,115,1.058,133,1.808,138,1.927,141,3.079,143,0.786,148,2.549,151,2.964,153,3.912,159,0.004,160,0.005,161,0.004,165,2.105,168,0.722,192,0.768,196,0.709,201,0.689,204,2.551,205,0.609,234,1.786,235,1.333,245,3.592,248,1.408,260,0.429,267,0.746,273,1.472,281,0.386,322,2.255,345,2.31,362,1.596,364,2.054,390,1.795,467,2.93,510,2.105,514,2.69,566,1.709,571,2.255,584,2.102,618,2.203,622,2.607,654,1.107,683,2.401,702,2.127,708,1.555,749,1.422,777,1.305,804,2.31,810,1.886,835,2.825,872,2.366,892,2.115,902,1.663,969,3.086,979,2.18,984,2.25,987,3.156,988,3.464,989,1.591,991,3.183,992,2.97,993,4.062,994,3.447,998,2.484,999,2.825,1002,1.891,1004,3.495,1023,2.619,1031,5.499,1033,1.555,1036,5.363,1037,3.331,1038,2.105,1039,4.105,1040,2.425,1052,2.105,1063,3.912,1092,2.203,1167,3.36,1191,3.034,1248,1.842,1249,2.25,1254,3.826,1277,2.25,1278,2.25,1281,1.997,1282,2.054,1284,2.18,1285,2.452,1286,2.551,1287,2.852,1288,3.739,1290,2.852,1300,3.431,1310,2.425,1347,2.551,1367,3.116,1369,2.845,1517,2.25,1525,3.611,1695,2.852,1735,3.128,1736,3.128,1737,4.105,1738,1.942,1739,3.242,1740,4.67,1741,5.671,1742,5.7,1743,3.569,1744,3.128,1745,4.943,1746,6.649,1747,6.121,1748,6.649,1749,6.121,1750,4.943,1751,4.943,1752,4.943,1753,5.363,1754,3.116,1755,3.742,1756,4.28,1757,4.943,1758,4.603,1759,4.943,1760,4.943,1761,4.943,1762,3.592,1763,4.943,1764,4.331,1765,6.121,1766,3.019,1767,4.105,1768,4.943,1769,3.456,1770,4.943,1771,4.603,1772,4.603,1773,3.912,1774,6.649,1775,6.121,1776,2.702,1777,2.594,1778,3.569,1779,2.964,1780,2.18,1781,2.18,1782,2.325,1783,2.825,1784,2.964,1785,2.702,1786,2.964,1787,2.964,1788,2.407,1789,3.569]],["title/interfaces/GridDataFetchResult.html",[0,0.175,1321,2.327]],["body/interfaces/GridDataFetchResult.html",[0,0.277,1,2.169,2,0.452,3,0.034,4,0.026,5,0.023,8,0.122,9,1.681,10,3.255,12,0.289,13,0.379,14,0.368,15,3.438,18,0.249,19,0.008,20,1.18,22,0.715,25,1.079,26,0.126,27,1.681,28,1.058,30,1.798,34,1.675,36,1.682,39,0.995,40,2.478,42,0.913,47,0.784,50,0.975,52,0.505,53,1.75,54,1.058,55,3.234,56,1.809,59,0.908,60,1.295,61,2.322,62,0.766,63,1.692,64,2.077,66,0.844,67,0.913,69,2.919,71,0.794,73,0.484,74,2.044,77,1.329,78,0.106,80,1.025,81,0.934,83,1.267,84,1.947,85,0.604,86,2.793,87,1.509,88,0.803,90,3.779,91,0.699,93,3.491,96,1.05,99,0.964,101,2.013,102,0.844,108,1.783,109,1.275,111,1.992,114,0.52,115,0.951,118,1.862,120,1.093,127,1.742,129,1.471,133,1.015,136,0.823,137,2.239,138,1.083,140,0.826,141,1.397,143,0.83,148,1.904,149,1.093,152,1.948,154,1.992,155,0.966,158,1.507,159,0.003,160,0.003,161,0.002,168,0.339,170,0.47,172,1.541,173,1.132,181,0.565,192,0.361,194,1.786,196,0.21,199,0.4,201,0.4,203,0.995,204,0.866,205,0.516,211,2.169,225,0.57,234,0.81,235,1.037,244,0.844,248,0.347,251,1.132,260,0.443,261,0.64,267,0.927,270,1.132,271,1.872,273,0.827,281,0.569,282,1.054,287,3.012,322,0.766,328,0.889,337,0.966,339,1.272,345,2.548,359,0.461,362,1.025,365,1.425,370,1.645,375,0.654,378,1.992,379,2.375,391,1.131,393,1.272,439,1.238,460,1.037,462,0.369,464,0.676,479,0.199,510,1.512,514,0.913,523,1.036,525,1.862,540,1.75,546,0.803,548,1.329,549,0.699,555,1.355,563,0.823,571,0.766,584,0.954,599,1.182,608,1.248,609,0.565,622,1.512,645,2.416,653,0.654,654,0.861,655,1.299,659,0.669,662,0.797,663,0.627,669,1.131,673,1.696,683,1.708,684,2.446,700,1.093,702,1.057,705,1.131,713,0.589,716,0.589,722,0.49,746,0.654,747,0.669,748,1.015,754,0.614,777,0.614,779,1.156,785,1.907,787,1.833,790,0.803,811,1.299,816,1.06,826,1.025,841,0.748,868,1.025,872,0.803,894,0.995,902,0.565,985,2.246,986,1.512,987,2.534,989,0.748,990,3.105,991,2.923,992,2.464,998,1.327,1001,0.966,1002,0.889,1004,1.786,1005,1.093,1006,1.093,1023,2.186,1033,0.731,1035,3.255,1037,1.511,1038,2.899,1040,2.859,1041,1.182,1045,2.044,1047,1.433,1048,0.994,1049,1.297,1052,2.22,1070,1.362,1073,0.844,1076,0.889,1086,0.913,1092,1.583,1131,0.995,1132,1.397,1140,0.966,1142,3.455,1191,0.766,1207,0.803,1223,0.64,1235,0.866,1240,1.471,1243,2.979,1244,1.058,1245,1.942,1246,1.511,1247,1.942,1248,2.542,1249,1.75,1250,2.186,1251,1.174,1252,1.093,1253,1.174,1254,2.044,1255,1.75,1256,2.239,1257,2.557,1258,1.174,1259,2.271,1260,1.942,1261,1.942,1262,0.823,1263,1.174,1264,1.872,1265,2.483,1266,1.942,1267,0.601,1268,1.942,1269,1.174,1270,1.174,1271,1.174,1272,1.174,1273,1.433,1274,0.889,1275,1.058,1276,1.132,1277,1.058,1278,1.058,1279,0.731,1280,0.889,1281,0.939,1282,0.966,1283,1.238,1284,1.025,1285,0.64,1286,1.833,1287,2.3,1288,2.169,1289,2.395,1290,3.47,1291,3.305,1292,2.979,1293,1.132,1294,2.314,1295,1.093,1296,1.058,1297,0.866,1298,1.025,1299,0.966,1300,2.814,1301,1.872,1302,2.239,1303,1.093,1304,1.132,1305,1.132,1306,2.689,1307,1.058,1308,1.397,1309,4.476,1310,2.025,1311,1.809,1312,1.132,1313,3.472,1314,2.395,1315,1.809,1316,3.105,1317,1.511,1318,1.174,1319,1.696,1320,1.942,1321,2.239,1322,1.942,1323,2.709,1324,3.287,1325,2.446,1326,1.809,1327,1.174,1328,1.174,1329,1.942,1330,1.132,1331,2.783,1332,1.174,1333,2.105,1334,1.809,1335,1.942,1336,1.174,1337,1.942,1338,1.942,1339,2.689,1340,2.483,1341,1.025,1342,0.995,1343,1.132,1344,1.174,1345,1.174,1346,0.913,1347,1.833,1348,3.197,1349,1.645,1350,3.894,1351,2.483,1352,0.823,1353,1.174,1354,1.174,1355,4.326,1356,1.093,1357,2.3,1358,3.444,1359,3.814,1360,1.093,1361,1.174,1362,2.314,1363,1.058,1364,0.731,1365,1.174,1366,1.174,1367,1.058,1368,2.793,1369,0.966,1370,1.174,1371,0.995,1372,2.314,1373,0.866,1374,0.913,1375,1.174,1376,2.044,1377,1.174,1378,1.093,1379,1.942,1380,1.75,1381,1.174,1382,1.174,1383,1.645,1384,1.058,1385,1.174,1386,1.174,1387,0.803,1388,1.174,1389,1.872,1390,2.483,1391,1.174,1392,1.174,1393,1.132,1394,1.809,1395,1.093,1396,1.809,1397,1.093,1398,2.483,1399,1.174,1400,1.025,1401,1.093,1402,1.174,1403,1.942,1404,1.174,1405,1.174,1406,1.174,1407,1.174,1408,1.174,1409,1.174,1410,1.872,1411,1.174,1412,2.483,1413,1.174,1414,1.174,1415,1.132,1416,2.886,1417,2.239,1418,1.174,1419,1.132,1420,1.093,1421,1.132,1422,1.174,1423,1.174,1424,1.132,1425,1.942,1426,1.174,1427,1.174,1428,1.942,1429,1.174,1430,1.174,1431,0.966,1432,1.174,1433,1.174,1434,1.174,1435,1.174,1436,3.813,1437,1.942,1438,1.174,1439,1.174,1440,1.174,1441,1.942,1442,1.174,1443,1.942,1444,1.942,1445,1.174,1446,1.174,1447,1.174,1448,1.942,1449,1.174,1450,2.886,1451,1.942,1452,1.942,1453,1.174,1454,1.174,1455,1.025,1456,1.174,1457,1.174,1458,1.174,1459,1.174,1460,1.174,1461,1.174,1462,1.942,1463,1.942,1464,1.942,1465,1.942,1466,2.483,1467,1.174,1468,1.174,1469,1.174,1470,1.174,1471,1.942,1472,1.942,1473,2.886,1474,1.174,1475,1.174,1476,1.174,1477,1.174,1478,1.174,1479,2.557,1480,3.444,1481,3.197,1482,1.942,1483,1.174,1484,1.942,1485,2.483,1486,1.174,1487,2.483,1488,1.174,1489,2.886,1490,1.942,1491,1.174,1492,1.174,1493,1.174,1494,1.942,1495,1.132,1496,1.174,1497,1.025,1498,1.174,1499,1.174,1500,1.174,1501,1.174,1502,1.942,1503,2.375,1504,1.174,1505,1.174,1506,1.174,1507,1.174,1508,1.174,1509,1.511,1510,1.174,1511,1.174,1512,1.174,1513,2.483,1514,1.174,1515,1.174,1516,1.132,1517,1.75,1518,1.174,1519,1.174,1520,1.174,1521,1.174,1522,1.174,1523,1.174,1524,1.174,1525,1.471,1526,1.174,1527,1.174,1528,1.174,1529,1.174,1530,1.093,1531,1.174,1532,1.174,1533,1.942,1534,1.174,1535,1.174,1536,1.174,1537,1.174,1538,1.174,1539,0.995,1540,1.174,1541,1.025,1542,1.058,1543,1.174,1544,0.995,1545,1.174,1546,1.174,1547,1.174,1548,1.174,1549,1.174,1550,1.174,1551,1.174,1552,1.174,1553,1.174,1554,1.174,1555,1.174,1556,0.803,1557,1.174,1558,1.174,1559,1.872,1560,1.174,1561,1.174,1562,1.174,1563,1.174,1564,1.174,1565,1.174,1566,1.174,1567,1.174,1568,1.942,1569,1.942,1570,1.942,1571,1.174,1572,2.314,1573,2.886,1574,1.942,1575,1.174,1576,1.174,1577,1.174,1578,1.174,1579,1.174,1580,1.174,1581,1.093,1582,1.942,1583,1.174,1584,1.174,1585,1.174,1586,1.156,1587,1.174,1588,1.174,1589,1.174,1590,1.942,1591,1.174,1592,2.483,1593,1.174,1594,1.174,1595,1.174,1596,1.942,1597,1.174,1598,1.174,1599,1.942,1600,1.942,1601,1.174,1602,1.174,1603,1.093,1604,1.132,1605,1.174,1606,1.174,1607,1.174,1608,1.942,1609,1.942,1610,1.174,1611,1.174,1612,1.942,1613,1.174,1614,1.174,1615,1.174,1616,1.174,1617,1.174,1618,1.174,1619,1.174,1620,1.132,1621,1.174,1622,1.174,1623,1.174,1624,1.174,1625,1.174,1626,1.942,1627,1.174,1628,1.174,1629,1.174,1630,1.174,1631,1.174,1632,1.174,1633,1.174,1634,1.174,1635,1.174,1636,1.942,1637,2.886,1638,2.483,1639,1.174,1640,1.174,1641,1.942,1642,1.174,1643,1.174,1644,1.174,1645,1.174,1646,1.174,1647,1.174,1648,1.174,1649,1.267,1650,1.942,1651,1.174,1652,1.174,1653,1.174,1654,1.132,1655,1.174,1656,1.174,1657,1.174,1658,1.174,1659,1.174,1660,1.174,1661,1.132,1662,1.174,1663,1.174,1664,1.174,1665,1.174,1666,1.174,1667,1.174,1668,2.886,1669,1.174,1670,1.174,1671,1.174,1672,1.174,1673,1.174,1674,1.174,1675,1.132,1676,1.174,1677,1.174,1678,1.942,1679,1.174,1680,1.942,1681,1.174,1682,1.174,1683,1.942,1684,1.174,1685,1.174,1686,1.174,1687,1.174,1688,1.174,1689,2.483,1690,1.174,1691,1.174,1692,1.174,1693,1.174,1694,1.174,1695,0.844,1696,1.174,1697,1.174,1698,1.174,1699,1.174,1700,1.174,1701,1.174,1702,1.174,1703,1.174,1704,1.025,1705,1.132,1706,1.174,1707,1.174,1708,0.995,1709,1.174,1710,1.174,1711,1.942,1712,3.197,1713,0.939,1714,1.174,1715,1.174,1716,1.174,1717,1.174,1718,1.174,1719,1.174,1720,1.942,1721,1.174,1722,1.174,1723,1.75,1724,1.174,1725,1.174,1726,1.093,1727,1.174,1728,1.174,1729,1.093,1730,1.174,1731,1.174,1732,1.174,1733,1.174,1734,1.174]],["title/interfaces/GridState.html",[0,0.175,1372,2.405]],["body/interfaces/GridState.html",[0,0.276,1,2.158,2,0.449,3,0.033,4,0.026,5,0.023,8,0.121,9,1.673,10,3.246,12,0.289,13,0.378,14,0.538,15,3.428,18,0.255,19,0.008,20,1.302,22,0.709,25,1.073,26,0.126,27,1.673,28,1.05,30,1.792,34,1.672,36,1.68,39,0.987,40,2.469,42,0.907,47,0.778,50,0.973,52,0.502,53,1.74,54,1.05,55,3.172,56,1.798,59,0.906,60,1.219,61,2.213,62,0.76,63,1.686,64,2.071,66,0.839,67,1.502,69,2.908,71,0.789,73,0.495,74,1.588,77,1.321,78,0.105,80,1.018,81,0.929,83,1.259,84,1.939,85,0.601,86,2.782,87,1.503,88,0.797,90,3.773,91,0.694,93,3.484,96,1.048,99,0.96,101,2.009,102,0.838,108,1.775,109,1.273,111,1.984,114,0.517,115,0.97,118,1.855,120,1.085,127,1.733,129,1.462,133,1.292,136,0.817,137,2.227,138,1.076,140,0.82,141,1.388,143,0.827,148,1.896,149,1.085,152,1.941,154,1.984,155,0.959,158,1.503,159,0.003,160,0.003,161,0.002,168,0.337,170,0.467,172,1.539,173,1.123,181,0.562,192,0.359,194,1.777,196,0.208,199,0.398,201,0.398,203,0.987,204,0.86,205,0.515,211,2.158,225,0.568,234,0.805,235,1.031,244,0.838,248,0.344,251,1.123,260,0.443,261,0.636,267,0.926,270,1.123,271,1.861,273,0.822,281,0.569,282,1.051,287,2.854,322,0.76,328,0.883,337,0.959,339,1.265,345,2.54,359,0.458,362,1.219,365,1.422,370,1.635,375,0.65,378,2.138,379,2.364,391,1.124,393,1.265,439,1.23,460,1.031,462,0.366,464,0.672,479,0.198,510,1.504,514,0.907,523,1.031,525,1.855,540,1.74,546,0.797,548,1.321,549,0.694,555,1.568,563,0.817,571,0.76,584,0.948,599,1.504,608,1.244,609,0.561,622,1.504,645,2.408,653,0.65,654,0.856,655,1.292,659,0.664,662,0.792,663,0.622,669,1.124,673,1.686,683,1.833,684,2.435,700,1.085,702,1.052,705,1.124,713,0.584,716,0.584,722,0.486,746,0.65,747,0.664,748,1.009,754,0.609,777,0.609,779,1.149,785,1.901,787,1.823,790,0.797,811,1.503,816,1.053,826,1.018,841,0.743,868,1.018,872,0.797,894,0.987,902,0.561,985,1.922,986,1.504,987,2.571,989,0.743,990,3.094,991,2.917,992,2.457,998,1.32,1001,0.959,1002,0.883,1004,1.777,1005,1.085,1006,1.085,1023,2.176,1033,0.726,1035,3.246,1037,0.907,1038,2.934,1040,2.852,1041,1.175,1045,2.033,1047,1.424,1048,0.988,1049,1.29,1052,2.213,1070,1.354,1073,0.838,1076,0.883,1086,0.907,1092,1.575,1131,0.987,1132,1.388,1140,0.959,1142,3.445,1191,0.76,1207,0.797,1223,0.636,1235,0.86,1240,1.462,1243,2.967,1244,1.05,1245,1.93,1246,1.502,1247,1.93,1248,2.533,1249,1.74,1250,2.176,1251,1.165,1252,1.085,1253,1.165,1254,2.033,1255,1.74,1256,2.227,1257,2.547,1258,1.165,1259,2.264,1260,1.93,1261,1.93,1262,0.817,1263,1.165,1264,1.861,1265,2.47,1266,1.93,1267,0.597,1268,1.93,1269,1.165,1270,1.165,1271,1.165,1272,1.165,1273,1.424,1274,0.883,1275,1.05,1276,1.123,1277,1.05,1278,1.05,1279,0.726,1280,0.883,1281,0.932,1282,0.959,1283,1.23,1284,1.018,1285,0.636,1286,1.823,1287,2.29,1288,2.158,1289,2.382,1290,3.466,1291,3.3,1292,2.967,1293,1.123,1294,2.302,1295,1.085,1296,1.05,1297,0.86,1298,1.018,1299,0.959,1300,2.806,1301,1.861,1302,2.227,1303,1.085,1304,1.123,1305,1.123,1306,2.677,1307,1.05,1308,1.388,1309,4.616,1310,2.015,1311,1.798,1312,1.123,1313,3.468,1314,2.382,1315,1.798,1316,3.094,1317,1.502,1318,1.165,1319,1.686,1320,1.165,1321,1.74,1322,1.165,1323,2.435,1324,2.59,1325,2.698,1326,2.677,1327,1.165,1328,1.165,1329,1.93,1330,1.123,1331,2.77,1332,1.165,1333,2.094,1334,2.677,1335,1.93,1336,1.165,1337,1.93,1338,1.93,1339,2.677,1340,2.47,1341,1.018,1342,0.987,1343,1.123,1344,1.165,1345,1.165,1346,0.907,1347,2.12,1348,3.184,1349,1.635,1350,3.885,1351,2.47,1352,0.817,1353,1.165,1354,1.165,1355,4.318,1356,1.085,1357,2.29,1358,3.432,1359,3.803,1360,1.085,1361,1.165,1362,2.302,1363,1.05,1364,0.726,1365,1.93,1366,1.93,1367,1.74,1368,2.998,1369,1.588,1370,1.93,1371,1.635,1372,2.677,1373,1.424,1374,1.502,1375,1.93,1376,2.991,1377,2.873,1378,1.085,1379,1.93,1380,1.74,1381,1.165,1382,1.165,1383,1.635,1384,1.05,1385,1.165,1386,1.165,1387,0.797,1388,1.165,1389,1.861,1390,2.47,1391,1.165,1392,1.165,1393,1.123,1394,1.798,1395,1.085,1396,1.798,1397,1.085,1398,2.47,1399,1.165,1400,1.018,1401,1.085,1402,1.165,1403,1.93,1404,1.165,1405,1.165,1406,1.165,1407,1.165,1408,1.165,1409,1.165,1410,1.861,1411,1.165,1412,2.47,1413,1.165,1414,1.165,1415,1.123,1416,2.873,1417,2.227,1418,1.165,1419,1.123,1420,1.085,1421,1.123,1422,1.165,1423,1.165,1424,1.123,1425,1.93,1426,1.165,1427,1.165,1428,1.93,1429,1.165,1430,1.165,1431,0.959,1432,1.165,1433,1.165,1434,1.165,1435,1.165,1436,3.802,1437,1.93,1438,1.165,1439,1.165,1440,1.165,1441,1.93,1442,1.165,1443,1.93,1444,1.93,1445,1.165,1446,1.165,1447,1.165,1448,1.93,1449,1.165,1450,2.873,1451,1.93,1452,1.93,1453,1.165,1454,1.165,1455,1.018,1456,1.165,1457,1.165,1458,1.165,1459,1.165,1460,1.165,1461,1.165,1462,1.93,1463,1.93,1464,1.93,1465,1.93,1466,2.47,1467,1.165,1468,1.165,1469,1.165,1470,1.165,1471,1.93,1472,1.93,1473,2.873,1474,1.165,1475,1.165,1476,1.165,1477,1.165,1478,1.165,1479,2.547,1480,3.432,1481,3.184,1482,1.93,1483,1.165,1484,1.93,1485,2.47,1486,1.165,1487,2.47,1488,1.165,1489,2.873,1490,1.93,1491,1.165,1492,1.165,1493,1.165,1494,1.93,1495,1.123,1496,1.165,1497,1.018,1498,1.165,1499,1.165,1500,1.165,1501,1.165,1502,1.93,1503,2.364,1504,1.165,1505,1.165,1506,1.165,1507,1.165,1508,1.165,1509,1.502,1510,1.165,1511,1.165,1512,1.165,1513,2.47,1514,1.165,1515,1.165,1516,1.123,1517,1.74,1518,1.165,1519,1.165,1520,1.165,1521,1.165,1522,1.165,1523,1.165,1524,1.165,1525,1.462,1526,1.165,1527,1.165,1528,1.165,1529,1.165,1530,1.085,1531,1.165,1532,1.165,1533,1.93,1534,1.165,1535,1.165,1536,1.165,1537,1.165,1538,1.165,1539,0.987,1540,1.165,1541,1.018,1542,1.05,1543,1.165,1544,0.987,1545,1.165,1546,1.165,1547,1.165,1548,1.165,1549,1.165,1550,1.165,1551,1.165,1552,1.165,1553,1.165,1554,1.165,1555,1.165,1556,0.797,1557,1.165,1558,1.165,1559,1.861,1560,1.165,1561,1.165,1562,1.165,1563,1.165,1564,1.165,1565,1.165,1566,1.165,1567,1.165,1568,1.93,1569,1.93,1570,1.93,1571,1.165,1572,2.302,1573,2.873,1574,1.93,1575,1.165,1576,1.165,1577,1.165,1578,1.165,1579,1.165,1580,1.165,1581,1.085,1582,1.93,1583,1.165,1584,1.165,1585,1.165,1586,1.149,1587,1.165,1588,1.165,1589,1.165,1590,1.93,1591,1.165,1592,2.47,1593,1.165,1594,1.165,1595,1.165,1596,1.93,1597,1.165,1598,1.165,1599,1.93,1600,1.93,1601,1.165,1602,1.165,1603,1.085,1604,1.123,1605,1.165,1606,1.165,1607,1.165,1608,1.93,1609,1.93,1610,1.165,1611,1.165,1612,1.93,1613,1.165,1614,1.165,1615,1.165,1616,1.165,1617,1.165,1618,1.165,1619,1.165,1620,1.123,1621,1.165,1622,1.165,1623,1.165,1624,1.165,1625,1.165,1626,1.93,1627,1.165,1628,1.165,1629,1.165,1630,1.165,1631,1.165,1632,1.165,1633,1.165,1634,1.165,1635,1.165,1636,1.93,1637,2.873,1638,2.47,1639,1.165,1640,1.165,1641,1.93,1642,1.165,1643,1.165,1644,1.165,1645,1.165,1646,1.165,1647,1.165,1648,1.165,1649,1.259,1650,1.93,1651,1.165,1652,1.165,1653,1.165,1654,1.123,1655,1.165,1656,1.165,1657,1.165,1658,1.165,1659,1.165,1660,1.165,1661,1.123,1662,1.165,1663,1.165,1664,1.165,1665,1.165,1666,1.165,1667,1.165,1668,2.873,1669,1.165,1670,1.165,1671,1.165,1672,1.165,1673,1.165,1674,1.165,1675,1.123,1676,1.165,1677,1.165,1678,1.93,1679,1.165,1680,1.93,1681,1.165,1682,1.165,1683,1.93,1684,1.165,1685,1.165,1686,1.165,1687,1.165,1688,1.165,1689,2.47,1690,1.165,1691,1.165,1692,1.165,1693,1.165,1694,1.165,1695,0.838,1696,1.165,1697,1.165,1698,1.165,1699,1.165,1700,1.165,1701,1.165,1702,1.165,1703,1.165,1704,1.018,1705,1.123,1706,1.165,1707,1.165,1708,0.987,1709,1.165,1710,1.165,1711,1.93,1712,3.184,1713,0.932,1714,1.165,1715,1.165,1716,1.165,1717,1.165,1718,1.165,1719,1.165,1720,1.93,1721,1.165,1722,1.165,1723,1.74,1724,1.165,1725,1.165,1726,1.085,1727,1.165,1728,1.165,1729,1.085,1730,1.165,1731,1.165,1732,1.165,1733,1.165,1734,1.165]],["title/interfaces/HasFinder.html",[0,0.175,3270,2.921]],["body/interfaces/HasFinder.html",[0,0.288,2,0.827,3,0.061,4,0.048,5,0.041,8,0.223,12,0.138,13,0.6,14,0.318,18,0.299,19,0.008,20,0.878,22,1.308,25,0.933,26,0.126,34,0.827,35,1.1,36,1.126,41,2.43,50,1.035,52,0.558,57,2.289,59,0.923,66,1.739,71,1.271,73,0.553,77,1.47,78,0.155,81,2.292,85,1.281,87,1.625,91,2.174,99,0.718,109,0.558,113,1.47,114,0.952,115,0.831,133,1.123,134,2.43,138,2.231,140,0.346,148,2.836,156,1.876,158,0.794,159,0.003,160,0.006,161,0.003,165,2.78,168,0.621,172,0.675,179,1.767,181,0.489,190,1.435,192,1.232,199,0.5,201,0.644,204,1.585,205,0.588,217,1.369,225,0.614,246,2.739,248,1.078,260,0.366,267,0.94,273,0.914,281,0.54,282,0.899,327,2.879,328,2.766,347,2.235,359,0.844,362,1.508,365,1.017,393,2.175,409,1.671,434,1.767,436,2.491,437,1.82,439,2.551,442,1.652,452,4.541,457,2.43,459,1.545,460,2.766,462,1.258,464,1.802,465,3.57,479,0.365,480,3.651,481,2.071,482,2.147,483,2.001,484,2.071,485,4.253,487,3.005,508,1.936,511,2.43,523,1.772,524,4.674,525,1.251,530,1.876,531,2.895,534,2.997,548,2.127,552,2.325,553,2.001,554,3.728,555,2.727,556,3.402,557,3.402,558,2.18,559,2.633,560,2.895,561,1.771,562,1.767,563,2.562,564,2.001,565,2.001,566,2.499,567,2.001,568,2.001,569,2.001,570,2.739,571,1.401,575,2.43,576,3.364,577,2.43,578,2.43,579,2.43,581,4.132,584,1.055,599,2.586,608,0.778,609,1.033,613,2.551,618,1.369,619,2.551,620,2.551,621,3.691,622,2.224,623,2.551,624,3.402,625,2.551,626,2.493,630,4.132,635,2.486,636,2.43,637,2.551,638,3.688,639,2.551,642,2.551,643,2.325,644,2.551,645,3.105,646,3.794,649,2.354,656,2.18,737,0.933,762,2.633,763,2.584,764,2.147,767,2.147,769,2.071,774,2.147,776,3.293,777,1.91,778,2.147,779,1.279,780,2.895,781,2.071,782,2.147,784,2.147,785,1.123,786,2.147,787,1.585,788,3.608,789,3.292,790,2.499,791,2.147,792,4.426,794,2.147,796,2.633,797,2.147,799,2.293,800,2.147,802,2.147,804,1.435,805,2.147,806,2.147,808,2.147,810,2.317,811,1.123,812,2.715,813,3.107,814,2.147,816,1.172,817,2.147,838,1.671,841,1.369,897,3.402,938,2.325,979,1.876,985,1.671,1024,2.801,1070,1.507,1092,1.369,1239,1.876,1291,1.545,1333,1.82,1342,1.82,1346,1.671,1544,3.598,1649,2.028,1755,2.325,1766,1.876,1780,1.876,1782,2.001,1788,2.071,1805,2.551,1809,2.43,1810,3.229,1847,2.325,1977,2.551,2077,2.43,2223,2.071,2315,1.936,2346,3.19,2681,2.232,2773,2.232,2850,2.551,3149,4.132,3165,4.805,3166,4.805,3167,4.805,3168,4.576,3169,2.691,3170,2.691,3171,2.691,3172,2.691,3173,5.547,3174,2.691,3175,3.894,3176,2.691,3177,2.691,3178,4.576,3179,2.691,3180,4.576,3181,2.551,3182,2.691,3183,4.576,3184,2.691,3185,2.691,3186,2.551,3187,2.691,3188,2.691,3189,2.691,3190,2.691,3191,2.691,3192,3.894,3193,2.691,3194,2.551,3195,2.691,3196,2.43,3197,2.691,3198,2.691,3199,2.551,3200,2.691,3201,2.691,3202,2.551,3203,2.691,3204,2.691,3205,2.551,3206,2.325,3207,2.691,3208,3.894,3209,3.894,3210,2.691,3211,2.691,3212,4.576,3213,3.894,3214,4.576,3215,2.691,3216,2.691,3217,2.691,3218,2.691,3219,2.691,3220,2.691,3221,2.691,3222,2.691,3223,2.551,3224,2.691,3225,2.691,3226,2.691,3227,2.691,3228,2.691,3229,2.691,3230,2.232,3231,2.325,3232,2.691,3233,2.691,3234,2.691,3235,2.691,3236,2.691,3237,2.691,3238,2.691,3239,2.691,3240,2.691,3241,2.147,3242,2.691,3243,2.691,3244,2.691,3245,2.691,3246,5.015,3247,2.691,3248,4.576,3249,2.691,3250,2.691,3251,2.691,3252,2.691,3253,2.691,3254,2.691,3255,2.691,3256,2.691,3257,2.691,3258,2.691,3259,2.691,3260,2.691,3261,4.576,3262,2.691,3263,2.691,3264,2.691,3265,2.691,3266,3.894,3267,3.894,3268,3.894,3269,3.894,3270,3.517]],["title/interfaces/ISubscriptionTracker.html",[0,0.175,3521,3.437]],["body/interfaces/ISubscriptionTracker.html",[0,0.309,2,1.268,3,0.094,4,0.074,5,0.064,8,0.343,12,0.212,14,0.615,18,0.278,19,0.008,26,0.119,50,0.988,52,1.08,57,2.281,59,1.147,78,0.14,85,1.278,113,3.114,114,1.461,158,1.536,159,0.005,160,0.006,161,0.005,170,1.32,172,1.035,181,0.945,196,0.813,198,1.372,199,0.668,201,0.668,205,0.407,225,0.899,260,0.456,267,0.856,281,0.464,282,0.953,342,3.191,359,2.062,365,1.646,377,4.933,393,1.687,438,4.153,479,0.559,649,2.495,654,1.461,1030,4.386,1048,2.127,1273,3.873,1274,2.495,1279,2.052,1539,4.415,2632,4.497,2754,4.128,3521,6.057,3522,6.83,3523,4.711,3524,7.852,3525,7.459,3526,6.487,3527,7.852,3528,5.145,3529,7.852,3530,7.69,3531,5.803,3532,6.487,3533,6.487,3534,6.487,3535,8.461,3536,7.104,3537,5.803,3538,7.459,3539,5.803,3540,7.459,3541,6.487,3542,5.145,3543,5.145,3544,5.145,3545,4.711,3546,5.145,3547,4.386,3548,5.145,3549,5.145,3550,5.145,3551,6.487,3552,5.145,3553,5.145,3554,5.145,3555,5.145,3556,6.487,3557,6.487,3558,5.145,3559,5.145,3560,5.145,3561,5.145,3562,5.145,3563,5.145]],["title/classes/IdGenerator.html",[78,0.11,914,2.489]],["body/classes/IdGenerator.html",[3,0.112,4,0.088,5,0.076,8,0.407,12,0.252,13,0.606,14,0.579,18,0.282,19,0.008,25,2.131,26,0.112,50,0.85,73,0.57,78,0.166,79,5.55,140,0.629,143,0.89,159,0.006,160,0.007,161,0.006,163,1.699,172,1.541,181,1.049,192,1.204,196,0.877,198,1.179,199,0.629,201,0.629,225,0.969,276,2.134,281,0.437,329,6.016,355,4.9,364,3.795,608,1.671,847,4.028,914,4.73,916,5.264,1978,7.202,2399,4.9,3564,7.911,3565,6.107,3566,8.641,3567,6.889,3568,6.889,3569,8.124,3570,6.889,3571,6.889,3572,8.124,3573,6.889,3574,6.889,3575,6.889]],["title/components/LoadingIndicatorComponent.html",[205,0.319,741,1.857]],["body/components/LoadingIndicatorComponent.html",[3,0.075,4,0.059,5,0.051,8,0.273,12,0.262,13,0.47,14,0.388,18,0.295,19,0.008,26,0.116,27,1.527,30,1.685,34,1.376,36,1.474,47,2.92,59,0.57,60,0.931,61,2.661,63,1.288,73,0.439,78,0.112,81,1.72,96,1.081,99,1.195,109,1.189,115,0.813,140,0.575,143,1.188,153,4.046,158,0.969,159,0.004,160,0.005,161,0.004,172,1.483,191,2.508,196,0.879,198,0.79,199,0.76,201,0.777,205,0.502,209,1.752,225,0.706,248,1.201,260,0.263,264,1.527,273,1.522,281,0.293,287,1.671,339,1.831,359,1.03,375,2.924,391,1.527,442,1.186,462,1.699,464,1.244,479,0.445,523,1.698,525,2.082,585,4.604,600,1.431,608,1.584,609,1.72,626,2.227,653,1.462,654,1.585,655,1.371,656,1.839,659,1.494,661,1.794,662,1.72,663,1.91,669,2.082,683,1.91,684,4.225,701,1.494,702,1.522,703,3.496,704,2.097,705,1.527,706,2.097,707,2.097,708,1.633,709,1.986,710,2.097,711,1.794,712,2.097,713,1.315,714,2.097,715,1.711,716,2.192,717,1.794,718,3.496,719,1.671,720,1.794,721,1.794,722,1.094,723,1.671,724,1.794,725,2.097,726,1.839,727,2.097,728,1.986,729,1.794,730,2.147,731,2.097,732,1.711,733,3.496,734,1.752,735,2.927,736,1.752,737,1.553,738,1.752,739,2.86,740,1.711,741,3.143,742,2.097,743,1.671,744,2.097,745,1.935,746,1.462,747,2.923,748,1.371,749,1.494,750,2.097,751,1.794,752,2.097,753,1.839,754,1.371,755,2.097,756,1.711,757,1.986,758,2.097,804,1.752,810,2.22,816,2.22,838,3.166,840,3.715,977,3.491,1040,3.747,1052,1.596,1053,1.986,1055,2.29,1057,2.724,1059,4.761,1061,5.819,1063,4.046,1070,1.839,1099,2.967,1142,3.554,1153,2.528,1156,4.761,1189,4.604,1215,2.967,1290,1.886,1291,2.572,1302,3.94,1387,2.447,1541,3.554,1603,2.442,1649,1.711,1654,4.214,1675,2.528,2309,4.405,2345,4.214,2429,4.046,2577,4.094,2885,7.371,2941,2.967,3387,6.749,3394,5.584,3576,6.247,3577,3.491,3578,6.299,3579,7.699,3580,7.168,3581,6.299,3582,7.168,3583,7.168,3584,8.057,3585,7.168,3586,4.619,3587,4.619,3588,4.619,3589,8.662,3590,7.787,3591,6.299,3592,7.168,3593,7.168,3594,4.619,3595,8.662,3596,6.299,3597,6.825,3598,6.299,3599,6.299,3600,6.299,3601,6.299,3602,6.299,3603,7.699,3604,6.299,3605,6.299,3606,6.299,3607,6.299,3608,4.619,3609,4.619,3610,4.619,3611,4.619,3612,4.619,3613,4.619,3614,7.168,3615,8.315,3616,4.619,3617,6.299,3618,5.584,3619,4.619,3620,6.299,3621,4.619,3622,4.619,3623,4.48,3624,6.299,3625,4.619,3626,4.619,3627,4.619]],["title/interfaces/LocatorDriver.html",[0,0.175,443,2.581]],["body/interfaces/LocatorDriver.html",[0,0.29,2,1.114,3,0.083,4,0.065,5,0.056,8,0.301,10,2.381,12,0.187,14,0.673,18,0.318,19,0.008,25,1.257,26,0.13,55,2.615,57,2.576,73,0.579,78,0.201,81,1.838,114,1.896,115,0.658,152,2.799,159,0.004,160,0.006,161,0.004,163,1.257,168,1.315,181,0.869,196,0.846,198,1.464,199,0.732,201,0.797,217,3.356,225,1.015,234,1.208,246,3.324,247,4.548,248,1.396,281,0.542,282,0.837,319,2.791,338,4.537,342,3.191,362,1.679,365,1.737,434,3.997,436,2.686,437,2.452,438,3.82,439,3.096,442,2.058,443,5.21,445,5.079,446,5.463,447,5.087,448,5.147,459,3.616,460,2.284,461,4.787,464,1.488,465,3.941,466,4.138,467,3.237,469,4.323,470,4.726,471,4.537,473,4.537,475,4.537,485,2.696,486,3.984,487,3.144,599,2.326,612,4.136,635,3.056,762,2.452,763,2.43,776,3.144,785,1.513,841,1.845,878,3.97,937,5.496,938,3.133,939,3.133,940,3.275,941,5.463,942,2.315,943,4.138,944,4.138,945,4.138,946,4.138,947,5.463,948,4.138,949,4.138,950,4.138,951,4.138,952,3.626,953,3.626,954,3.626,955,4.138,957,5.463,958,5.402,959,3.626,960,5.359,962,5.359,963,3.626,965,5.047,966,3.626,968,4.138,969,2.973,970,5.463,971,5.087,972,4.787,973,5.695,974,5.463,975,3.854,976,4.138,977,3.854,978,4.138,979,2.528,980,4.138,981,2.894,3628,5.098,3629,5.098,3630,5.098,3631,5.098,3632,5.098]],["title/interfaces/MenuItem.html",[0,0.175,2631,3.234]],["body/interfaces/MenuItem.html",[0,0.169,2,0.956,3,0.071,4,0.056,5,0.048,8,0.258,12,0.275,13,0.453,14,0.758,18,0.296,19,0.008,20,1.617,22,2.827,26,0.113,27,2.006,35,1.764,42,4.211,50,1.009,52,0.895,59,1.071,63,1.22,64,2.967,71,1.016,75,4.271,78,0.106,80,3.009,88,1.7,100,2.483,101,1.171,105,2.81,111,1.547,113,2.358,114,1.527,118,1.446,129,1.881,138,1.385,140,0.554,154,3.258,158,1.462,159,0.004,160,0.005,161,0.005,170,0.995,172,1.67,192,0.764,203,2.105,205,0.306,237,2.95,245,4.947,260,0.428,267,0.803,273,1.467,281,0.518,282,0.718,287,3.035,362,1.223,390,1.786,442,1.559,459,2.478,460,2.112,462,0.78,464,1.736,479,0.422,546,1.7,547,3.112,549,2.543,555,2.331,566,1.7,574,4.292,600,2.158,608,0.9,609,1.195,618,1.583,622,1.512,626,2.146,628,3.307,638,1.833,662,1.269,668,1.881,702,1.819,724,2.707,751,2.358,754,1.299,777,1.299,812,4.358,898,3.105,965,2.581,994,1.659,1048,1.764,1053,3.606,1055,4.239,1073,1.786,1086,3.077,1122,3.112,1153,2.395,1223,1.355,1255,3.105,1279,2.146,1280,1.881,1285,1.88,1364,1.547,1431,2.835,1497,3.731,1556,1.7,1723,3.105,1740,3.579,1830,5.072,1843,3.307,1934,2.483,2089,5.352,2140,3.112,2300,2.395,2580,2.95,2581,5.253,2582,3.112,2583,4.926,2584,6.67,2585,6.639,2586,6.808,2587,5.328,2588,5.38,2589,3.879,2590,3.879,2591,3.879,2592,3.879,2593,3.879,2594,5.38,2595,6.176,2596,3.879,2597,3.879,2599,4.926,2600,3.879,2601,3.879,2602,3.879,2603,3.879,2604,3.879,2605,3.879,2607,3.879,2608,3.879,2609,3.879,2610,4.316,2612,3.879,2613,3.879,2618,3.551,2619,2.95,2620,3.879,2621,5.38,2622,5.38,2623,3.879,2624,5.38,2625,3.879,2626,3.879,2627,2.95,2628,3.879,2631,6.623,2632,2.689,2633,3.879,2634,3.551,2638,3.879,2642,5.38,2645,6.176,2654,5.266,2655,3.879,2656,3.551,2657,1.583,2658,3.551,2659,4.926,2660,3.307,2661,3.551,2662,3.551,2663,3.879,2664,3.551,2665,3.307,2666,5.513,2667,5.38,2668,5.38,2669,5.38,2670,7.006,2671,3.879,2672,6.176,2673,3.879,2674,3.879,2675,3.879,2676,3.879,2677,5.38,2678,3.879,2679,5.38,2680,3.879,2681,2.581,2682,3.551,2683,6.176,2684,7.006,2685,3.879,2686,3.879,2687,3.879,2688,3.879,2689,3.879,2690,6.176,2691,3.879,2692,3.879,2693,3.551,2694,3.879,2695,3.551,2696,5.38,2697,3.879,2698,3.879,2699,3.879,2700,4.926,2701,3.879,2702,2.95,2703,3.879,2704,3.879,2705,3.879,2706,3.879,2707,3.879,2708,3.307,2709,3.879,2710,3.879,2711,3.879,2712,5.38,2713,3.879,2714,3.879,2715,3.879,2716,3.879,2717,3.879,2718,3.879,2719,3.879,2720,3.879,2721,6.176,2722,3.879,2723,5.38,2724,3.879,2725,3.879,2726,3.879,2727,3.879,2728,3.879,2729,3.879,2730,3.879,2731,3.879,2732,5.38,2733,3.879]],["title/interfaces/MockRecord.html",[0,0.175,995,2.921]],["body/interfaces/MockRecord.html",[0,0.265,2,1.501,3,0.111,4,0.087,5,0.075,12,0.251,13,0.605,17,4.44,18,0.323,19,0.008,26,0.132,73,0.58,133,2.738,140,0.788,158,1.442,159,0.006,160,0.007,161,0.006,199,0.842,267,0.734,995,5.544,1165,2.083,1871,6.971,2356,4.632,2358,4.632,2499,6.971,2500,5.193,2502,4.887,3633,5.577,3634,5.577,3635,8.175,3636,7.652,3637,5.577,3638,7.191,3639,6.091,3640,6.091,3641,6.091,3642,6.091,3643,6.091]],["title/interfaces/MultiSelectOption.html",[0,0.175,2396,3.065]],["body/interfaces/MultiSelectOption.html",[0,0.296,2,1.16,3,0.086,4,0.067,5,0.058,8,0.314,12,0.194,13,0.516,18,0.266,19,0.008,20,1.784,26,0.132,31,4.44,34,1.51,36,1.092,50,1.004,52,0.783,59,0.948,65,2.345,73,0.553,78,0.128,79,4.44,81,1.45,85,0.955,91,1.795,96,0.801,109,0.783,115,1.051,118,1.755,127,2.114,133,2.052,140,0.485,143,0.686,152,2.8,159,0.004,160,0.006,161,0.004,168,1.385,170,1.208,196,0.539,199,0.485,201,0.855,205,0.484,234,1.258,260,0.501,267,0.821,276,1.645,281,0.535,282,1.42,365,0.987,390,2.168,436,1.576,462,0.947,479,0.512,549,2.336,584,1.48,626,1.878,649,2.283,662,0.967,663,1.61,702,1.857,713,1.512,715,2.846,716,1.512,717,3.163,722,2.05,730,1.927,763,1.61,799,2.895,847,3.811,858,2.895,896,3.263,902,1.45,913,1.755,914,3.783,915,3.777,916,3.132,917,3.411,924,3.58,939,3.263,986,2.389,987,1.755,989,1.921,991,2.063,992,1.878,993,2.633,994,2.014,998,2.559,1026,4.936,1038,2.389,1048,2.009,1101,2.717,1223,1.645,1240,2.283,1267,1.543,1283,2.501,1285,2.767,1310,2.114,1313,2.114,1317,3.053,1352,3.361,1357,2.168,1364,1.878,1586,1.795,1704,2.633,1738,3.053,1739,3.5,1756,3.014,2062,3.832,2113,4.064,2185,2.633,2241,3.777,2268,2.411,2278,2.717,2279,2.906,2280,2.554,2281,2.717,2284,3.537,2286,2.906,2307,2.906,2354,2.633,2355,4.064,2356,3.58,2357,4.013,2358,4.66,2359,4.013,2360,4.013,2361,3.014,2369,4.66,2371,4.013,2372,3.777,2373,3.58,2384,4.66,2386,4.013,2391,4.06,2392,3.014,2393,2.633,2394,3.014,2395,2.906,2396,5.69,2397,4.013,2398,4.013,2399,4.916,2400,4.013,2401,3.58,2402,3.014,2403,3.777,2404,4.013,2405,4.013,2406,4.013,2407,4.013,2408,4.013,2409,4.013,2410,4.013,2411,5.225,2412,4.013,2413,4.013,2414,4.013,2415,4.013,2416,4.013,2417,4.013,2418,4.013,2419,4.013,2420,4.013,2421,4.013,2422,4.013,2423,4.013,2424,4.013,2425,4.013,2426,3.777]],["title/interfaces/MultiSelectOptionInternal.html",[0,0.175,2384,3.065]],["body/interfaces/MultiSelectOptionInternal.html",[0,0.295,2,1.147,3,0.085,4,0.067,5,0.058,8,0.31,12,0.192,13,0.512,18,0.265,19,0.008,20,1.774,26,0.131,31,3.372,34,1.499,36,1.08,50,1,52,0.775,59,0.943,65,2.318,73,0.545,78,0.127,79,5.206,81,1.434,85,0.948,91,1.774,96,0.791,109,0.775,115,1.114,118,1.735,127,2.732,133,2.037,140,0.479,143,0.678,152,2.823,159,0.004,160,0.006,161,0.004,168,1.38,170,1.194,196,0.533,199,0.479,201,0.837,205,0.481,234,1.243,260,0.5,267,0.816,276,1.626,281,0.533,282,1.416,365,0.976,390,2.143,436,1.558,462,0.936,479,0.506,549,2.583,584,1.464,626,1.856,649,2.257,662,0.956,663,1.592,702,2.033,713,1.494,715,2.831,716,1.494,717,3.149,722,2.043,730,1.913,763,1.592,799,2.199,847,4.277,858,2.874,896,4.216,902,1.434,913,1.735,914,3.755,915,3.734,916,3.096,917,3.372,924,3.539,939,4.216,986,2.371,987,1.735,989,1.899,991,2.039,992,1.856,993,2.603,994,1.991,998,2.55,1026,4.909,1038,2.371,1048,1.994,1101,2.686,1223,1.626,1240,2.257,1267,1.526,1283,2.482,1285,2.791,1310,2.09,1313,2.09,1317,3.03,1352,3.435,1357,2.143,1364,1.856,1586,2.319,1704,2.603,1738,3.03,1739,3.485,1756,2.979,2062,3.818,2113,4.447,2185,2.603,2241,3.734,2268,2.383,2278,2.686,2279,2.873,2280,2.525,2281,2.686,2284,3.511,2286,2.873,2307,2.873,2354,2.603,2355,4.041,2356,3.539,2357,3.968,2358,4.625,2359,3.968,2360,3.968,2361,2.979,2369,4.625,2371,3.968,2372,3.734,2373,3.539,2384,5.152,2386,3.968,2391,3.676,2392,2.979,2393,2.603,2394,2.979,2395,2.873,2396,5.669,2397,5.186,2398,5.186,2399,5.764,2400,5.186,2401,3.539,2402,2.979,2403,3.734,2404,3.968,2405,3.968,2406,3.968,2407,3.968,2408,3.968,2409,3.968,2410,3.968,2411,5.186,2412,3.968,2413,3.968,2414,3.968,2415,3.968,2416,3.968,2417,3.968,2418,3.968,2419,3.968,2420,3.968,2421,3.968,2422,3.968,2423,3.968,2424,3.968,2425,3.968,2426,3.734]],["title/pipes/NestedPropertyPipe.html",[3511,3.234,3644,3.065]],["body/pipes/NestedPropertyPipe.html",[3,0.099,4,0.077,5,0.067,8,0.359,14,0.511,18,0.261,19,0.008,26,0.099,52,0.897,57,1.73,64,2.647,73,0.548,78,0.147,96,0.917,99,1.429,115,0.973,140,0.555,158,1.276,159,0.005,160,0.006,161,0.005,170,1.383,172,1.084,181,0.785,196,0.617,198,1.289,199,0.748,201,0.845,217,2.2,225,0.682,234,1.784,235,1.843,245,4.443,260,0.429,267,0.957,273,2.196,281,0.568,282,1.236,345,2.857,362,1.65,425,7.944,463,4.595,467,3.482,479,0.586,523,1.784,584,2.498,655,2.236,661,2.362,694,4.595,1479,3.42,1649,2.251,1713,2.76,1776,3.736,1983,5.358,2819,3.111,2865,4.934,3511,5.358,3513,4.098,3516,6.677,3517,6.677,3519,6.677,3644,5.078,3645,6.114,3646,4.934,3647,7.533,3648,8.555,3649,7.533,3650,8.555,3651,7.533,3652,7.533,3653,6.079,3654,6.079,3655,6.079,3656,6.079,3657,4.934,3658,4.934,3659,6.079,3660,6.079,3661,7.533,3662,6.079,3663,6.079,3664,6.079,3665,7.533,3666,6.079,3667,6.079,3668,6.079,3669,6.079,3670,6.079,3671,6.079,3672,6.079,3673,6.079]],["title/classes/NoUnit.html",[78,0.11,3674,3.691]],["body/classes/NoUnit.html",[3,0.048,4,0.037,5,0.032,8,0.327,12,0.108,13,0.339,14,0.597,18,0.257,19,0.008,20,1.446,22,1.019,25,1.536,26,0.09,30,1.215,34,1.361,35,0.857,36,1.702,40,2.543,50,0.988,52,0.435,59,0.988,61,1.019,62,2.307,65,1.302,71,1.446,73,0.506,78,0.11,84,2.325,85,0.407,87,1.348,88,2.42,93,2.448,96,0.836,98,1.508,99,1.404,101,2.143,108,1.438,109,1.335,113,1.145,115,0.804,124,1.811,127,1.174,133,0.875,138,1.438,140,0.842,141,1.204,143,0.804,152,0.894,154,2.202,158,1.492,159,0.002,160,0.004,161,0.002,163,0.727,168,0.746,170,0.671,172,1.539,181,0.587,190,2.695,192,0.794,194,2.263,196,0.851,198,1.151,199,0.569,201,0.868,203,1.418,205,0.498,211,1.462,218,3.123,225,0.94,234,1.313,247,1.673,260,0.464,261,0.913,262,2.393,267,0.921,273,1.97,276,0.913,281,0.573,282,0.91,319,1.613,322,1.683,347,1.855,359,0.657,365,0.844,377,4.198,378,1.606,379,2.589,393,0.857,409,2.006,459,1.204,462,0.526,464,1.23,479,0.284,510,2.643,523,1.897,528,2.228,559,1.418,561,0.953,570,1.765,584,0.822,608,1.14,609,1.241,638,1.235,662,0.537,663,0.894,668,1.267,683,0.894,722,1.076,730,2.406,732,1.683,737,2.366,740,1.683,743,1.067,776,2.122,788,1.508,804,1.118,810,1.717,811,0.875,832,2.792,838,3.139,842,3.146,855,2.486,858,1.235,859,2.393,862,3.062,870,2.252,872,1.765,883,1.987,885,3.062,897,1.559,902,0.805,913,0.974,931,2.393,936,3.942,942,2.516,1023,1.267,1040,1.809,1041,1.57,1048,1.32,1049,1.723,1052,1.019,1053,1.267,1076,1.953,1101,1.508,1132,2.263,1153,1.613,1165,0.894,1207,1.765,1214,1.508,1223,0.913,1235,1.235,1262,1.174,1279,1.042,1280,1.267,1290,1.204,1297,1.903,1298,2.748,1299,2.122,1308,2.263,1317,1.302,1346,1.302,1357,1.204,1387,1.145,1479,1.338,1503,2.589,1556,1.145,1695,2.543,1729,1.559,1769,1.673,1773,1.893,1827,3.434,1898,2.252,1917,2.097,1929,2.228,1935,2.228,1937,1.893,2056,2.228,2062,3.227,2067,3.293,2069,2.666,2113,3.557,2118,3.56,2150,4.189,2185,3.335,2271,1.811,2280,1.418,2301,1.418,2310,1.739,2345,1.613,2391,3.236,2432,2.228,2436,4.791,2449,4.148,2463,2.792,2464,2.792,2468,3.434,2470,4.707,2471,4.189,2472,3.434,2505,2.097,2520,3.434,2657,1.644,2666,1.987,2681,1.739,2829,2.393,2857,2.393,2941,1.893,2976,2.393,3196,1.893,3241,1.673,3281,2.228,3307,3.231,3311,2.228,3312,2.228,3313,2.097,3314,1.893,3319,2.393,3320,2.393,3323,1.893,3324,2.393,3325,3.736,3326,2.918,3331,2.393,3333,3.231,3337,2.393,3338,1.811,3341,3.687,3352,2.393,3364,3.687,3391,1.987,3400,2.097,3419,2.097,3431,3.687,3439,2.393,3442,2.393,3443,3.687,3445,2.393,3446,2.393,3482,2.097,3483,2.097,3496,6.085,3498,4.321,3499,1.811,3547,2.228,3674,3.687,3675,4.784,3676,3.062,3677,3.062,3678,4.198,3679,4.791,3680,4.791,3681,3.062,3682,3.736,3683,2.918,3684,3.56,3685,2.948,3686,2.948,3687,2.097,3688,2.097,3689,3.062,3690,4.134,3691,2.948,3692,2.948,3693,2.948,3694,2.097,3695,4.55,3696,1.987,3697,1.987,3698,2.097,3699,2.097,3700,1.987,3701,3.56,3702,2.097,3703,2.097,3704,2.097,3705,1.893,3706,2.918,3707,3.56,3708,3.062,3709,1.987,3710,2.097,3711,1.893,3712,4.027,3713,4.027,3714,4.027,3715,4.027,3716,2.613,3717,4.321,3718,2.393,3719,1.987,3720,2.393,3721,2.613,3722,4.027,3723,2.097,3724,2.613,3725,1.987,3726,5.084,3727,2.613,3728,2.613,3729,4.027,3730,2.613,3731,2.613,3732,2.613,3733,2.613,3734,2.613,3735,2.613,3736,2.613,3737,2.613,3738,2.613,3739,2.613,3740,2.613,3741,2.613,3742,2.097,3743,2.613,3744,2.613,3745,2.613,3746,4.027,3747,2.613,3748,2.613,3749,2.613,3750,2.613,3751,2.613,3752,1.893,3753,2.613,3754,2.613,3755,2.613,3756,2.613,3757,2.613,3758,2.097,3759,2.613,3760,2.613,3761,2.613,3762,2.613,3763,2.613,3764,2.613,3765,2.613,3766,2.613,3767,2.613,3768,2.613,3769,4.027,3770,6.3,3771,7.428,3772,2.613,3773,2.613,3774,1.987,3775,2.613,3776,5.521,3777,4.913,3778,6.564,3779,4.027,3780,5.521,3781,3.231,3782,4.027,3783,5.521,3784,2.613,3785,4.027,3786,4.027,3787,2.613,3788,2.613,3789,4.027,3790,2.613,3791,5.521,3792,2.613,3793,2.613,3794,2.613,3795,4.913,3796,4.027,3797,2.613,3798,2.613,3799,2.613,3800,2.613,3801,2.613,3802,2.613,3803,2.613,3804,2.613,3805,2.613,3806,2.613,3807,2.613,3808,4.027,3809,4.027,3810,3.687,3811,2.613,3812,2.613,3813,2.613,3814,2.613,3815,2.613,3816,4.913,3817,2.613,3818,2.613,3819,6.3,3820,2.613,3821,2.613,3822,2.613,3823,2.613,3824,2.613,3825,2.613,3826,2.613,3827,2.613,3828,2.613,3829,2.613,3830,4.027,3831,2.613,3832,2.393,3833,4.027,3834,2.613,3835,4.027,3836,3.687,3837,3.687,3838,4.027,3839,4.027,3840,6.011,3841,2.613,3842,2.613,3843,2.613,3844,2.613,3845,2.613,3846,2.613,3847,2.613,3848,2.613,3849,2.613,3850,2.393,3851,2.613,3852,2.613,3853,2.613,3854,2.613,3855,4.499,3856,2.613,3857,4.913,3858,2.613,3859,2.613,3860,2.613,3861,4.913,3862,2.613,3863,2.613,3864,4.027,3865,2.613,3866,2.613,3867,2.613,3868,2.613,3869,2.613,3870,2.613,3871,2.613,3872,3.231,3873,4.027,3874,2.613,3875,2.613,3876,5.521,3877,2.613,3878,2.613,3879,2.613,3880,2.613,3881,2.228,3882,2.613,3883,2.613]],["title/classes/NumberUnit.html",[78,0.11,3884,2.921]],["body/classes/NumberUnit.html",[3,0.077,4,0.06,5,0.052,8,0.479,12,0.173,13,0.477,14,0.653,18,0.297,19,0.008,20,1.484,26,0.077,34,1.698,62,2.878,71,1.804,73,0.54,78,0.154,84,3.009,85,1.219,109,1.146,115,1.081,130,4.107,140,0.865,143,0.61,159,0.004,160,0.005,161,0.004,163,1.165,168,1.05,172,1.527,179,2.206,181,0.826,190,3.499,196,0.921,198,1.33,199,0.742,201,0.878,218,3.514,225,1.043,234,1.118,246,2.484,267,0.683,276,1.463,281,0.492,365,1.444,374,3.019,510,2.686,523,2.148,549,1.596,608,0.971,609,1.29,737,2.399,763,1.939,811,1.898,838,3.697,898,2.416,942,3.292,988,3.852,1101,3.272,1165,1.939,1235,3.255,1297,2.678,1308,3.315,1325,3.076,1349,3.076,1371,2.271,1479,2.903,1695,2.611,2067,4.426,2449,4.604,2657,3.028,3676,4.887,3677,4.887,3678,5.238,3679,5.238,3680,5.238,3681,4.31,3682,5.238,3683,4.107,3684,4.991,3687,3.359,3688,3.359,3689,5.238,3690,5.532,3694,3.359,3695,5.482,3696,5.238,3697,4.31,3698,3.359,3699,3.359,3700,4.31,3701,5.376,3702,3.359,3703,3.359,3704,3.359,3705,5.215,3706,4.991,3707,4.991,3708,5.238,3709,4.31,3710,3.359,3711,4.107,3742,3.359,3752,4.107,3884,5.376,3885,3.183,3886,3.929,3887,5.526,3888,5.885,3889,5.885,3890,4.722,3891,4.548,3892,4.548,3893,4.548,3894,5.953,3895,4.722,3896,4.722,3897,3.833,3898,3.833,3899,3.359,3900,4.548,3901,4.548,3902,4.548,3903,3.359,3904,3.359,3905,4.548,3906,4.548,3907,4.548,3908,3.359]],["title/classes/NumberWithUnitFormInputWidgetObject.html",[78,0.11,3909,3.691]],["body/classes/NumberWithUnitFormInputWidgetObject.html",[3,0.066,4,0.051,5,0.044,8,0.471,12,0.148,13,0.595,14,0.735,17,3.142,18,0.321,19,0.008,25,1.646,26,0.066,34,0.883,35,1.175,36,0.831,43,3.528,57,1.151,59,1.089,66,1.646,71,0.938,73,0.581,78,0.098,81,1.823,85,1.004,87,1.704,96,0.609,109,1.132,138,2.3,140,0.766,143,1.082,148,1.94,152,1.226,156,2.004,159,0.003,160,0.006,161,0.003,163,0.997,165,2.756,168,0.942,181,0.741,191,2.286,196,0.952,198,1.497,199,0.799,201,0.799,205,0.575,218,3.443,225,1.042,246,1.57,248,1.218,260,0.414,267,0.432,281,0.56,327,2.967,342,2.658,347,3.134,362,0.815,365,0.751,436,2.278,437,1.944,442,1.038,452,4.645,459,1.65,460,2.752,462,1.191,464,1.802,465,3.572,468,3.583,508,2.937,519,1.944,523,1.36,525,1.336,530,2.004,531,3.843,534,3.142,548,2.594,553,2.138,554,3.53,555,2.709,556,3.036,557,3.53,558,2.286,559,1.944,560,2.138,561,1.307,562,1.888,563,1.61,564,2.138,565,2.138,566,1.57,567,2.138,568,2.138,569,2.138,570,1.57,571,1.497,572,2.484,574,2.937,609,1.104,624,2.138,635,3.031,638,2.796,645,2.286,662,1.323,702,1.387,730,2.59,737,2.374,743,1.463,762,4.284,763,2.752,764,3.789,765,3.87,766,3.87,767,3.789,768,3.87,769,3.142,770,3.87,774,2.294,775,2.875,776,1.888,777,1.2,778,2.294,779,1.366,780,2.138,781,2.212,782,2.294,783,2.875,784,2.294,785,1.2,786,2.294,787,1.693,788,3.719,789,3.416,790,2.594,791,2.294,792,4.526,793,2.875,794,2.294,795,2.875,796,2.761,797,2.294,798,2.875,799,2.405,800,2.294,801,2.875,802,2.294,803,2.875,804,1.533,805,2.294,806,2.294,807,2.875,808,2.294,809,2.875,810,1.252,811,1.2,812,2.846,813,3.258,814,2.294,815,2.875,816,1.252,817,2.294,838,3.21,858,2.796,905,3.583,913,1.336,967,3.583,1018,3.055,1352,1.61,1827,3.055,2019,3.583,2061,6.23,2464,2.484,3149,3.687,3223,2.725,3498,5.859,3499,2.484,3675,6.488,3684,2.596,3810,3.281,3832,3.281,3836,3.281,3837,3.281,3840,5.418,3850,5.418,3909,4.66,3910,8.086,3911,5.74,3912,5.74,3913,5.74,3914,7.267,3915,7.267,3916,6.675,3917,6.675,3918,6.675,3919,6.675,3920,6.675,3921,6.675,3922,6.675,3923,4.042,3924,5.74,3925,5.74,3926,4.042,3927,5.74,3928,4.042,3929,4.042,3930,4.042,3931,4.042,3932,4.042,3933,4.042,3934,4.042,3935,5.74,3936,4.042,3937,4.042,3938,4.042,3939,4.042,3940,4.042,3941,4.042,3942,4.042,3943,4.042,3944,4.042,3945,4.042,3946,4.042,3947,4.042,3948,3.055,3949,4.042,3950,4.042,3951,4.042,3952,4.042,3953,4.042,3954,4.042,3955,4.042,3956,4.042,3957,5.74,3958,4.042,3959,6.675,3960,4.042,3961,4.042,3962,4.042,3963,4.042,3964,4.042,3965,4.042,3966,4.042,3967,4.042,3968,4.042]],["title/injectables/NumberWithUnitsFormValidatorsFactory.html",[1898,2.255,3881,3.437]],["body/injectables/NumberWithUnitsFormValidatorsFactory.html",[3,0.052,4,0.041,5,0.035,12,0.118,14,0.548,18,0.169,19,0.008,20,1.361,22,1.116,25,1.201,26,0.095,30,1.303,34,1.426,35,0.938,36,1.737,40,2.665,50,1.012,52,0.476,59,1.012,61,1.116,62,1.803,65,1.426,71,1.13,73,0.451,78,0.118,84,2.026,85,0.446,87,1.445,88,2.536,93,2.589,96,0.884,98,1.652,99,1.45,101,2.195,108,1.541,109,1.349,113,1.254,115,0.629,124,1.984,127,1.285,133,0.958,138,1.541,140,0.838,141,1.318,143,0.843,152,0.979,154,2.308,158,1.604,159,0.003,160,0.004,161,0.003,168,0.53,170,0.734,172,1.506,181,0.629,192,1.024,194,2.393,196,0.494,198,1.003,199,0.445,201,0.863,203,1.553,205,0.516,211,1.601,225,0.362,234,1.388,247,1.832,260,0.474,261,1,262,2.62,267,0.936,273,2.014,276,1,281,0.58,282,0.799,319,1.767,322,1.803,347,1.988,359,0.72,365,0.6,377,4.4,378,1.721,379,2.738,393,0.938,409,2.15,459,1.318,462,0.576,464,1.289,479,0.311,510,2.719,523,1.546,528,2.44,559,1.553,561,1.044,570,1.892,584,0.9,608,1.206,609,1.33,638,1.352,662,0.588,663,0.979,668,1.388,683,0.979,722,1.153,730,2.405,732,1.803,737,2.33,740,1.803,743,1.168,788,1.652,804,1.224,810,1.816,832,2.992,842,3.327,855,2.665,858,1.352,859,2.62,862,3.282,870,2.414,872,1.892,883,2.176,885,3.282,897,1.707,902,0.882,913,1.067,931,2.62,936,4.169,942,2.211,1023,1.388,1040,1.939,1041,1.683,1048,1.415,1049,1.846,1052,1.116,1053,1.388,1076,2.093,1132,2.393,1153,1.767,1207,1.892,1214,1.652,1223,1,1262,1.285,1279,1.141,1280,1.388,1290,1.318,1297,1.352,1298,2.906,1299,2.274,1308,1.318,1317,1.426,1346,1.426,1357,1.318,1387,1.254,1503,3.272,1556,1.254,1695,2.393,1729,1.707,1769,1.832,1773,2.074,1827,3.68,1898,2.414,1900,2.074,1917,2.296,1929,2.44,1935,2.44,1937,2.074,2056,2.44,2062,3.343,2067,2.575,2069,2.819,2113,3.704,2118,3.765,2150,4.43,2185,3.473,2271,1.984,2280,1.553,2301,1.553,2310,1.904,2345,1.767,2391,3.369,2432,2.44,2436,4.964,2449,4.042,2463,2.992,2464,2.992,2468,3.68,2470,4.934,2471,4.43,2472,3.68,2505,2.296,2520,3.68,2666,2.176,2681,1.904,2829,2.62,2857,2.62,2941,2.074,2976,2.62,3196,2.074,3241,1.832,3281,2.44,3307,3.463,3311,2.44,3312,2.44,3313,2.296,3314,2.074,3319,2.62,3320,2.62,3323,2.074,3324,2.62,3325,4.4,3326,3.127,3331,2.62,3333,3.463,3337,2.62,3338,1.984,3341,3.952,3352,2.62,3364,3.952,3391,2.176,3400,2.296,3419,2.296,3431,4.758,3439,2.62,3442,2.62,3443,3.952,3445,2.62,3446,2.62,3482,2.296,3483,2.296,3496,6.278,3498,3.765,3499,1.984,3547,2.44,3675,4.169,3690,3.602,3695,4.011,3707,2.074,3712,4.316,3713,4.316,3714,4.316,3715,4.316,3716,2.862,3717,5.053,3718,2.62,3719,2.176,3720,2.62,3721,2.862,3722,4.316,3723,2.296,3724,2.862,3725,2.176,3726,5.294,3727,2.862,3728,2.862,3729,4.316,3730,2.862,3731,2.862,3732,2.862,3733,2.862,3734,2.862,3735,2.862,3736,2.862,3737,2.862,3738,2.862,3739,2.862,3740,2.862,3741,2.862,3742,2.296,3743,2.862,3744,2.862,3745,2.862,3746,4.316,3747,2.862,3748,2.862,3749,2.862,3750,2.862,3751,2.862,3752,2.074,3753,2.862,3754,2.862,3755,2.862,3756,2.862,3757,2.862,3758,2.296,3759,2.862,3760,2.862,3761,2.862,3762,2.862,3763,2.862,3764,2.862,3765,2.862,3766,2.862,3767,2.862,3768,2.862,3769,4.316,3770,6.527,3771,7.572,3772,2.862,3773,2.862,3774,2.176,3775,2.862,3776,5.786,3777,5.196,3778,6.775,3779,4.316,3780,5.786,3781,3.463,3782,4.316,3783,5.786,3784,2.862,3785,4.316,3786,4.316,3787,2.862,3788,2.862,3789,4.316,3790,2.862,3791,5.786,3792,2.862,3793,2.862,3794,2.862,3795,5.196,3796,4.316,3797,2.862,3798,2.862,3799,2.862,3800,2.862,3801,2.862,3802,2.862,3803,2.862,3804,2.862,3805,2.862,3806,2.862,3807,2.862,3808,4.316,3809,4.316,3810,3.952,3811,2.862,3812,2.862,3813,2.862,3814,2.862,3815,2.862,3816,5.196,3817,2.862,3818,2.862,3819,6.527,3820,2.862,3821,2.862,3822,2.862,3823,2.862,3824,2.862,3825,2.862,3826,2.862,3827,2.862,3828,2.862,3829,2.862,3830,4.316,3831,2.862,3832,2.62,3833,4.316,3834,2.862,3835,4.316,3836,3.952,3837,3.952,3838,4.316,3839,4.316,3840,6.204,3841,2.862,3842,2.862,3843,2.862,3844,2.862,3845,2.862,3846,2.862,3847,2.862,3848,2.862,3849,2.862,3850,2.62,3851,2.862,3852,2.862,3853,2.862,3854,2.862,3855,5.685,3856,2.862,3857,5.196,3858,2.862,3859,2.862,3860,2.862,3861,5.196,3862,2.862,3863,2.862,3864,4.316,3865,2.862,3866,2.862,3867,2.862,3868,2.862,3869,2.862,3870,2.862,3871,2.862,3872,3.463,3873,4.316,3874,2.862,3875,2.862,3876,5.786,3877,2.862,3878,2.862,3879,2.862,3880,2.862,3881,3.68,3882,4.316,3883,2.862,3969,4.869,3970,3.228,3971,3.228,3972,3.228]],["title/interfaces/ObjectAndResponse.html",[0,0.175,330,3.234]],["body/interfaces/ObjectAndResponse.html",[0,0.283,2,1.275,3,0.095,4,0.074,5,0.064,8,0.344,12,0.214,13,0.548,14,0.617,18,0.301,19,0.008,26,0.13,34,1.275,50,0.905,57,2.4,58,3.741,60,1.48,66,1.811,73,0.516,78,0.177,82,4.949,85,1.2,136,2.923,159,0.007,160,0.006,161,0.005,235,2.226,259,3.747,281,0.587,287,2.111,314,4.511,315,3.585,316,3.585,317,4.409,318,4.735,319,3.193,320,4.149,321,6.804,322,3.218,323,3.193,324,3.933,325,3.64,326,4.149,327,2.382,328,2.508,329,5.416,330,5.714,331,5.959,332,4.735,335,5.979,337,3.429,338,4.949,339,2.72,340,5.549,341,4.949,343,5.783,344,5.959,345,2.784,346,6.521,347,2.997,348,4.716,349,6.521,350,5.959,351,4.735,353,5.416,354,5.16,355,5.222,356,5.959,357,5.959,358,5.996,359,1.937,360,4.735,361,5.959,362,1.866,363,5.959,364,4.058,365,1.364,366,5.959,367,5.959,368,4.149,369,4.735]],["title/interfaces/PaginationCallback.html",[0,0.175,1378,2.405]],["body/interfaces/PaginationCallback.html",[0,0.277,1,2.173,2,0.453,3,0.034,4,0.026,5,0.023,8,0.122,9,1.683,10,3.257,12,0.289,13,0.38,14,0.174,15,3.441,18,0.233,19,0.008,20,1.182,22,0.716,25,1.081,26,0.126,27,1.683,28,1.061,30,1.799,34,1.676,36,1.683,39,0.997,40,2.481,42,0.915,47,0.786,50,0.975,52,0.647,53,1.754,54,1.061,55,3.179,56,1.813,59,0.909,60,1.296,61,2.223,62,0.768,63,1.694,64,2.08,66,0.845,67,0.915,69,2.922,71,0.796,73,0.49,74,1.601,77,1.332,78,0.106,80,1.028,81,0.936,83,1.27,84,1.949,85,0.606,86,2.796,87,1.512,88,0.805,90,3.781,91,0.701,93,3.493,96,1.051,99,0.966,101,2.015,102,0.846,108,1.785,109,1.275,111,1.994,114,0.522,115,0.972,118,1.864,120,1.096,127,1.745,129,1.474,133,1.017,136,0.825,137,2.243,138,1.085,140,0.826,141,1.399,143,0.83,148,1.906,149,1.096,152,1.95,154,1.994,155,0.968,158,1.508,159,0.003,160,0.003,161,0.002,168,0.34,170,0.472,172,1.542,173,1.134,181,0.566,192,0.362,194,1.789,196,0.21,199,0.4,201,0.4,203,0.997,204,0.868,205,0.516,211,2.173,225,0.633,234,0.812,235,1.039,244,0.846,248,0.347,251,1.134,260,0.444,261,0.642,267,0.927,270,1.134,271,1.876,273,0.828,281,0.569,282,1.056,287,2.861,322,0.768,328,0.891,337,0.968,339,1.274,345,2.551,359,0.462,362,1.026,365,1.426,370,1.649,375,0.656,378,1.994,379,2.379,391,1.133,393,1.274,439,1.24,460,1.039,462,0.37,464,0.677,479,0.2,510,1.515,514,0.915,523,1.038,525,1.864,540,1.754,546,0.805,548,1.332,549,0.701,555,1.357,563,0.825,571,0.768,584,1.222,599,1.185,608,1.25,609,0.566,622,1.515,645,2.419,653,0.656,654,0.863,655,1.301,659,0.67,662,0.798,663,0.628,669,1.133,673,1.7,683,1.71,684,2.449,700,1.096,702,1.059,705,1.133,713,0.59,716,0.59,722,0.491,746,0.656,747,0.67,748,1.017,754,0.615,777,0.615,779,1.159,785,1.909,787,1.836,790,0.805,811,1.301,816,1.062,826,1.028,841,0.75,868,1.028,872,0.805,894,0.997,902,0.566,985,1.936,986,1.515,987,2.536,989,0.75,990,3.109,991,2.926,992,2.466,998,1.329,1001,0.968,1002,0.891,1004,1.789,1005,1.096,1006,1.096,1023,2.19,1033,0.733,1035,3.141,1037,0.915,1038,2.9,1040,2.861,1041,1.185,1045,2.047,1047,1.436,1048,0.996,1049,1.3,1052,2.223,1070,1.365,1073,0.846,1076,0.891,1086,0.915,1092,1.586,1131,0.997,1132,1.399,1140,0.968,1142,3.458,1191,0.768,1207,0.805,1223,0.642,1235,0.868,1240,1.474,1243,2.982,1244,1.061,1245,1.945,1246,1.514,1247,1.945,1248,2.545,1249,1.754,1250,2.19,1251,1.176,1252,1.096,1253,1.176,1254,2.047,1255,1.754,1256,2.243,1257,2.561,1258,1.176,1259,2.274,1260,1.945,1261,1.945,1262,0.825,1263,1.176,1264,1.876,1265,2.487,1266,1.945,1267,0.602,1268,1.945,1269,1.176,1270,1.176,1271,1.176,1272,1.176,1273,1.836,1274,0.891,1275,1.061,1276,1.134,1277,1.061,1278,1.061,1279,0.733,1280,0.891,1281,0.941,1282,0.968,1283,1.24,1284,1.028,1285,0.642,1286,1.836,1287,2.303,1288,2.173,1289,2.399,1290,3.472,1291,3.307,1292,2.982,1293,1.134,1294,2.318,1295,1.096,1296,1.061,1297,0.868,1298,1.028,1299,0.968,1300,2.817,1301,1.876,1302,2.243,1303,1.096,1304,1.134,1305,1.134,1306,2.693,1307,1.061,1308,1.399,1309,4.479,1310,2.028,1311,1.813,1312,1.134,1313,3.473,1314,2.399,1315,1.813,1316,3.109,1317,1.514,1318,1.176,1319,1.7,1320,1.176,1321,1.754,1322,1.176,1323,2.449,1324,2.886,1325,2.449,1326,1.813,1327,1.176,1328,1.176,1329,1.945,1330,1.134,1331,2.787,1332,1.176,1333,2.108,1334,1.813,1335,1.945,1336,1.176,1337,1.945,1338,1.945,1339,2.693,1340,2.487,1341,1.028,1342,0.997,1343,1.134,1344,1.176,1345,1.176,1346,0.915,1347,1.836,1348,3.201,1349,1.649,1350,3.897,1351,2.487,1352,0.825,1353,1.176,1354,1.176,1355,4.329,1356,1.096,1357,2.481,1358,3.448,1359,3.817,1360,1.096,1361,1.176,1362,2.318,1363,1.061,1364,0.733,1365,1.176,1366,1.176,1367,1.061,1368,2.796,1369,0.968,1370,1.176,1371,0.997,1372,2.318,1373,0.868,1374,0.915,1375,1.176,1376,2.047,1377,1.176,1378,1.813,1379,2.487,1380,2.243,1381,1.176,1382,1.176,1383,1.649,1384,1.061,1385,1.176,1386,1.176,1387,0.805,1388,1.176,1389,1.876,1390,2.487,1391,1.176,1392,1.176,1393,1.134,1394,1.813,1395,1.096,1396,1.813,1397,1.096,1398,2.487,1399,1.176,1400,1.028,1401,1.096,1402,1.176,1403,1.945,1404,1.176,1405,1.176,1406,1.176,1407,1.176,1408,1.176,1409,1.176,1410,1.876,1411,1.176,1412,2.487,1413,1.176,1414,1.176,1415,1.134,1416,2.89,1417,2.243,1418,1.176,1419,1.134,1420,1.096,1421,1.134,1422,1.176,1423,1.176,1424,1.134,1425,1.945,1426,1.176,1427,1.176,1428,1.945,1429,1.176,1430,1.176,1431,0.968,1432,1.176,1433,1.176,1434,1.176,1435,1.176,1436,3.817,1437,1.945,1438,1.176,1439,1.176,1440,1.176,1441,1.945,1442,1.176,1443,1.945,1444,1.945,1445,1.176,1446,1.176,1447,1.176,1448,1.945,1449,1.176,1450,2.89,1451,1.945,1452,1.945,1453,1.176,1454,1.176,1455,1.028,1456,1.176,1457,1.176,1458,1.176,1459,1.176,1460,1.176,1461,1.176,1462,1.945,1463,1.945,1464,1.945,1465,1.945,1466,2.487,1467,1.176,1468,1.176,1469,1.176,1470,1.176,1471,1.945,1472,1.945,1473,2.89,1474,1.176,1475,1.176,1476,1.176,1477,1.176,1478,1.176,1479,2.561,1480,3.448,1481,3.201,1482,1.945,1483,1.176,1484,1.945,1485,2.487,1486,1.176,1487,2.487,1488,1.176,1489,2.89,1490,1.945,1491,1.176,1492,1.176,1493,1.176,1494,1.945,1495,1.134,1496,1.176,1497,1.028,1498,1.176,1499,1.176,1500,1.176,1501,1.176,1502,1.945,1503,2.379,1504,1.176,1505,1.176,1506,1.176,1507,1.176,1508,1.176,1509,1.514,1510,1.176,1511,1.176,1512,1.176,1513,2.487,1514,1.176,1515,1.176,1516,1.134,1517,1.754,1518,1.176,1519,1.176,1520,1.176,1521,1.176,1522,1.176,1523,1.176,1524,1.176,1525,1.474,1526,1.176,1527,1.176,1528,1.176,1529,1.176,1530,1.096,1531,1.176,1532,1.176,1533,1.945,1534,1.176,1535,1.176,1536,1.176,1537,1.176,1538,1.176,1539,0.997,1540,1.176,1541,1.028,1542,1.061,1543,1.176,1544,0.997,1545,1.176,1546,1.176,1547,1.176,1548,1.176,1549,1.176,1550,1.176,1551,1.176,1552,1.176,1553,1.176,1554,1.176,1555,1.176,1556,0.805,1557,1.176,1558,1.176,1559,1.876,1560,1.176,1561,1.176,1562,1.176,1563,1.176,1564,1.176,1565,1.176,1566,1.176,1567,1.176,1568,1.945,1569,1.945,1570,1.945,1571,1.176,1572,2.318,1573,2.89,1574,1.945,1575,1.176,1576,1.176,1577,1.176,1578,1.176,1579,1.176,1580,1.176,1581,1.096,1582,1.945,1583,1.176,1584,1.176,1585,1.176,1586,1.159,1587,1.176,1588,1.176,1589,1.176,1590,1.945,1591,1.176,1592,2.487,1593,1.176,1594,1.176,1595,1.176,1596,1.945,1597,1.176,1598,1.176,1599,1.945,1600,1.945,1601,1.176,1602,1.176,1603,1.096,1604,1.134,1605,1.176,1606,1.176,1607,1.176,1608,1.945,1609,1.945,1610,1.176,1611,1.176,1612,1.945,1613,1.176,1614,1.176,1615,1.176,1616,1.176,1617,1.176,1618,1.176,1619,1.176,1620,1.134,1621,1.176,1622,1.176,1623,1.176,1624,1.176,1625,1.176,1626,1.945,1627,1.176,1628,1.176,1629,1.176,1630,1.176,1631,1.176,1632,1.176,1633,1.176,1634,1.176,1635,1.176,1636,1.945,1637,2.89,1638,2.487,1639,1.176,1640,1.176,1641,1.945,1642,1.176,1643,1.176,1644,1.176,1645,1.176,1646,1.176,1647,1.176,1648,1.176,1649,1.27,1650,1.945,1651,1.176,1652,1.176,1653,1.176,1654,1.134,1655,1.176,1656,1.176,1657,1.176,1658,1.176,1659,1.176,1660,1.176,1661,1.134,1662,1.176,1663,1.176,1664,1.176,1665,1.176,1666,1.176,1667,1.176,1668,2.89,1669,1.176,1670,1.176,1671,1.176,1672,1.176,1673,1.176,1674,1.176,1675,1.134,1676,1.176,1677,1.176,1678,1.945,1679,1.176,1680,1.945,1681,1.176,1682,1.176,1683,1.945,1684,1.176,1685,1.176,1686,1.176,1687,1.176,1688,1.176,1689,2.487,1690,1.176,1691,1.176,1692,1.176,1693,1.176,1694,1.176,1695,0.846,1696,1.176,1697,1.176,1698,1.176,1699,1.176,1700,1.176,1701,1.176,1702,1.176,1703,1.176,1704,1.028,1705,1.134,1706,1.176,1707,1.176,1708,0.997,1709,1.176,1710,1.176,1711,1.945,1712,3.201,1713,0.941,1714,1.176,1715,1.176,1716,1.176,1717,1.176,1718,1.176,1719,1.176,1720,1.945,1721,1.176,1722,1.176,1723,1.754,1724,1.176,1725,1.176,1726,1.096,1727,1.176,1728,1.176,1729,1.096,1730,1.176,1731,1.176,1732,1.176,1733,1.176,1734,1.176,3509,1.837,3510,1.682]],["title/interfaces/PaginationConfiguration.html",[0,0.175,1339,2.405]],["body/interfaces/PaginationConfiguration.html",[0,0.275,1,2.136,2,0.442,3,0.033,4,0.026,5,0.022,8,0.119,9,1.658,10,3.228,12,0.288,13,0.374,14,0.581,15,3.407,18,0.264,19,0.008,20,1.164,22,0.699,25,1.062,26,0.126,27,1.658,28,1.035,30,1.849,34,1.665,36,1.704,39,0.973,40,2.451,42,0.893,47,0.767,50,0.969,52,0.496,53,1.719,54,1.035,55,3.162,56,1.776,59,0.902,60,1.21,61,2.199,62,0.749,63,1.674,64,2.057,66,0.828,67,0.893,69,2.888,71,0.78,73,0.481,74,1.569,77,1.305,78,0.104,80,1.003,81,0.917,83,1.244,84,2.199,85,0.595,86,2.759,87,1.489,88,1.305,90,3.762,91,0.684,93,3.471,96,1.149,99,0.951,101,2.072,102,0.826,108,1.9,109,1.277,111,1.968,114,0.509,115,0.944,118,1.84,120,1.07,127,1.715,129,1.444,133,0.997,136,0.805,137,2.204,138,1.063,140,0.835,141,2.048,143,0.86,148,2.15,149,1.07,152,2.095,154,2.249,155,0.945,158,1.495,159,0.004,160,0.003,161,0.002,168,0.332,170,0.46,172,1.536,173,1.107,181,0.556,192,0.353,194,1.759,196,0.341,199,0.393,201,0.393,203,0.973,204,0.847,205,0.512,211,2.136,225,0.563,234,0.796,235,1.018,244,0.826,248,0.339,251,1.107,260,0.441,261,0.626,267,0.924,270,1.107,271,1.839,273,0.812,281,0.569,282,1.044,287,2.914,322,0.749,328,0.87,337,0.945,339,1.252,345,2.525,359,0.451,362,1.011,365,1.416,370,1.616,375,0.64,378,1.968,379,2.6,391,1.11,393,1.458,439,1.215,460,1.018,462,0.361,464,0.664,479,0.195,510,1.489,514,0.893,523,1.02,525,1.985,540,1.719,546,0.786,548,1.305,549,0.684,555,1.334,563,0.805,571,1.244,584,0.937,599,1.161,608,1.235,609,0.552,622,1.489,645,2.39,653,0.64,654,0.845,655,1.279,659,0.654,662,0.784,663,0.613,669,1.11,673,1.666,683,1.82,684,2.413,700,1.07,702,1.041,705,1.11,713,0.576,716,0.576,722,0.479,746,0.64,747,0.654,748,0.997,754,0.6,777,0.6,779,1.135,785,1.888,787,1.804,790,0.786,811,1.279,816,1.04,826,1.003,841,0.732,868,1.666,872,0.786,894,0.973,902,0.552,985,1.903,986,1.489,987,2.518,989,0.732,990,3.072,991,2.904,992,2.443,998,1.306,1001,0.945,1002,0.87,1004,1.759,1005,1.07,1006,1.07,1023,2.157,1033,0.715,1035,3.228,1037,0.893,1038,2.907,1040,3.129,1041,1.161,1045,2.012,1047,1.407,1048,0.976,1049,1.274,1052,2.199,1070,1.715,1073,0.826,1076,1.444,1086,0.893,1092,1.559,1131,0.973,1132,1.759,1140,0.945,1142,3.625,1191,0.749,1207,0.786,1223,0.626,1235,0.847,1240,1.444,1243,2.943,1244,1.035,1245,1.906,1246,1.484,1247,1.906,1248,2.515,1249,1.719,1250,2.157,1251,1.148,1252,1.07,1253,1.148,1254,2.012,1255,1.719,1256,2.204,1257,2.527,1258,1.148,1259,2.249,1260,1.906,1261,1.906,1262,0.805,1263,1.148,1264,1.839,1265,2.445,1266,1.906,1267,0.588,1268,1.906,1269,1.148,1270,1.148,1271,1.148,1272,1.148,1273,1.407,1274,0.87,1275,1.035,1276,1.107,1277,1.035,1278,1.035,1279,0.715,1280,0.87,1281,0.918,1282,0.945,1283,1.215,1284,1.003,1285,0.626,1286,1.804,1287,2.272,1288,2.136,1289,2.358,1290,3.478,1291,3.478,1292,2.943,1293,1.107,1294,2.278,1295,1.07,1296,1.035,1297,0.847,1298,1.003,1299,0.945,1300,2.789,1301,1.839,1302,2.204,1303,1.07,1304,1.107,1305,1.107,1306,2.943,1307,1.035,1308,1.371,1309,4.455,1310,1.997,1311,1.776,1312,1.107,1313,3.445,1314,2.358,1315,1.776,1316,3.072,1317,1.484,1318,1.148,1319,1.666,1320,1.148,1321,1.719,1322,1.148,1323,2.413,1324,2.567,1325,2.413,1326,1.776,1327,1.148,1328,1.148,1329,1.906,1330,1.107,1331,2.746,1332,1.148,1333,2.072,1334,1.776,1335,1.906,1336,1.148,1337,1.906,1338,2.445,1339,2.943,1340,3.407,1341,1.666,1342,1.616,1343,1.839,1344,1.906,1345,1.906,1346,1.484,1347,2.101,1348,3.779,1349,2.072,1350,4.096,1351,3.407,1352,1.338,1353,2.847,1354,2.847,1355,4.302,1356,1.07,1357,2.272,1358,3.407,1359,3.782,1360,1.07,1361,1.148,1362,2.278,1363,1.035,1364,0.715,1365,1.148,1366,1.148,1367,1.035,1368,2.759,1369,0.945,1370,1.148,1371,0.973,1372,2.278,1373,0.847,1374,0.893,1375,1.148,1376,2.012,1377,1.148,1378,1.07,1379,1.906,1380,1.719,1381,1.148,1382,1.148,1383,1.616,1384,1.035,1385,1.148,1386,1.148,1387,0.786,1388,1.148,1389,1.839,1390,2.445,1391,1.148,1392,1.148,1393,1.107,1394,1.776,1395,1.07,1396,1.776,1397,1.07,1398,2.445,1399,1.148,1400,1.003,1401,1.07,1402,1.148,1403,1.906,1404,1.148,1405,1.148,1406,1.148,1407,1.148,1408,1.148,1409,1.148,1410,1.839,1411,1.148,1412,2.445,1413,1.148,1414,1.148,1415,1.107,1416,2.847,1417,2.204,1418,1.148,1419,1.107,1420,1.07,1421,1.107,1422,1.148,1423,1.148,1424,1.107,1425,1.906,1426,1.148,1427,1.148,1428,1.906,1429,1.148,1430,1.148,1431,0.945,1432,1.148,1433,1.148,1434,1.148,1435,1.148,1436,3.779,1437,1.906,1438,1.148,1439,1.148,1440,1.148,1441,1.906,1442,1.148,1443,1.906,1444,1.906,1445,1.148,1446,1.148,1447,1.148,1448,1.906,1449,1.148,1450,2.847,1451,1.906,1452,1.906,1453,1.148,1454,1.148,1455,1.003,1456,1.148,1457,1.148,1458,1.148,1459,1.148,1460,1.148,1461,1.148,1462,1.906,1463,1.906,1464,1.906,1465,1.906,1466,2.445,1467,1.148,1468,1.148,1469,1.148,1470,1.148,1471,1.906,1472,1.906,1473,2.847,1474,1.148,1475,1.148,1476,1.148,1477,1.148,1478,1.148,1479,2.527,1480,3.407,1481,3.159,1482,1.906,1483,1.148,1484,1.906,1485,2.445,1486,1.148,1487,2.445,1488,1.148,1489,2.847,1490,1.906,1491,1.148,1492,1.148,1493,1.148,1494,1.906,1495,1.107,1496,1.148,1497,1.003,1498,1.148,1499,1.148,1500,1.148,1501,1.148,1502,1.906,1503,2.343,1504,1.148,1505,1.148,1506,1.148,1507,1.148,1508,1.148,1509,1.484,1510,1.148,1511,1.148,1512,1.148,1513,2.445,1514,1.148,1515,1.148,1516,1.107,1517,1.719,1518,1.148,1519,1.148,1520,1.148,1521,1.148,1522,1.148,1523,1.148,1524,1.148,1525,1.444,1526,1.148,1527,1.148,1528,1.148,1529,1.148,1530,1.07,1531,1.148,1532,1.148,1533,1.906,1534,1.148,1535,1.148,1536,1.148,1537,1.148,1538,1.148,1539,0.973,1540,1.148,1541,1.003,1542,1.035,1543,1.148,1544,0.973,1545,1.148,1546,1.148,1547,1.148,1548,1.148,1549,1.148,1550,1.148,1551,1.148,1552,1.148,1553,1.148,1554,1.148,1555,1.148,1556,0.786,1557,1.148,1558,1.148,1559,1.839,1560,1.148,1561,1.148,1562,1.148,1563,1.148,1564,1.148,1565,1.148,1566,1.148,1567,1.148,1568,1.906,1569,1.906,1570,1.906,1571,1.148,1572,2.278,1573,2.847,1574,1.906,1575,1.148,1576,1.148,1577,1.148,1578,1.148,1579,1.148,1580,1.148,1581,1.07,1582,1.906,1583,1.148,1584,1.148,1585,1.148,1586,1.135,1587,1.148,1588,1.148,1589,1.148,1590,1.906,1591,1.148,1592,2.445,1593,1.148,1594,1.148,1595,1.148,1596,1.906,1597,1.148,1598,1.148,1599,1.906,1600,1.906,1601,1.148,1602,1.148,1603,1.07,1604,1.107,1605,1.148,1606,1.148,1607,1.148,1608,1.906,1609,1.906,1610,1.148,1611,1.148,1612,1.906,1613,1.148,1614,1.148,1615,1.148,1616,1.148,1617,1.148,1618,1.148,1619,1.148,1620,1.107,1621,1.148,1622,1.148,1623,1.148,1624,1.148,1625,1.148,1626,1.906,1627,1.148,1628,1.148,1629,1.148,1630,1.148,1631,1.148,1632,1.148,1633,1.148,1634,1.148,1635,1.148,1636,1.906,1637,2.847,1638,2.445,1639,1.148,1640,1.148,1641,1.906,1642,1.148,1643,1.148,1644,1.148,1645,1.148,1646,1.148,1647,1.148,1648,1.148,1649,1.244,1650,1.906,1651,1.148,1652,1.148,1653,1.148,1654,1.107,1655,1.148,1656,1.148,1657,1.148,1658,1.148,1659,1.148,1660,1.148,1661,1.107,1662,1.148,1663,1.148,1664,1.148,1665,1.148,1666,1.148,1667,1.148,1668,2.847,1669,1.148,1670,1.148,1671,1.148,1672,1.148,1673,1.148,1674,1.148,1675,1.107,1676,1.148,1677,1.148,1678,1.906,1679,1.148,1680,1.906,1681,1.148,1682,1.148,1683,1.906,1684,1.148,1685,1.148,1686,1.148,1687,1.148,1688,1.148,1689,2.445,1690,1.148,1691,1.148,1692,1.148,1693,1.148,1694,1.148,1695,0.826,1696,1.148,1697,1.148,1698,1.148,1699,1.148,1700,1.148,1701,1.148,1702,1.148,1703,1.148,1704,1.003,1705,1.107,1706,1.148,1707,1.148,1708,0.973,1709,1.148,1710,1.148,1711,1.906,1712,3.159,1713,0.918,1714,1.148,1715,1.148,1716,1.148,1717,1.148,1718,1.148,1719,1.148,1720,1.906,1721,1.148,1722,1.148,1723,1.719,1724,1.148,1725,1.148,1726,1.07,1727,1.148,1728,1.148,1729,1.07,1730,1.148,1731,1.148,1732,1.148,1733,1.148,1734,1.148]],["title/interfaces/PagionationInformation.html",[0,0.175,1334,2.405]],["body/interfaces/PagionationInformation.html",[0,0.277,1,2.172,2,0.453,3,0.034,4,0.026,5,0.023,8,0.122,9,1.683,10,3.256,12,0.289,13,0.38,14,0.174,15,3.44,18,0.249,19,0.008,20,1.181,22,0.716,25,1.08,26,0.126,27,1.683,28,1.06,30,1.799,34,1.676,36,1.683,39,0.996,40,2.625,42,0.915,47,0.785,50,0.975,52,0.505,53,1.753,54,1.06,55,3.179,56,1.811,59,0.909,60,1.224,61,2.222,62,0.767,63,1.693,64,2.079,66,0.845,67,0.915,69,2.921,71,0.795,73,0.484,74,1.6,77,1.331,78,0.106,80,1.027,81,0.936,83,1.269,84,1.949,85,0.605,86,2.795,87,1.511,88,0.805,90,3.78,91,0.7,93,3.492,96,1.051,99,0.965,101,2.014,102,0.846,108,1.784,109,1.275,111,1.993,114,0.521,115,0.952,118,1.864,120,1.095,127,1.744,129,1.473,133,1.017,136,1.364,137,2.241,138,1.084,140,0.828,141,1.399,143,0.83,148,1.905,149,1.095,152,1.949,154,1.993,155,0.967,158,1.508,159,0.003,160,0.003,161,0.002,168,0.34,170,0.471,172,1.542,173,1.134,181,0.566,192,0.362,194,1.788,196,0.21,199,0.4,201,0.4,203,0.996,204,0.867,205,0.516,211,2.172,225,0.571,234,0.811,235,1.039,244,0.846,248,0.347,251,1.134,260,0.444,261,0.641,267,0.927,270,1.134,271,1.875,273,0.828,281,0.569,282,1.055,287,2.897,322,0.767,328,0.891,337,0.967,339,1.273,345,2.55,359,0.462,362,1.026,365,1.425,370,1.648,375,0.655,378,2.147,379,2.377,391,1.132,393,1.273,439,1.239,460,1.039,462,0.369,464,0.677,479,0.2,510,1.514,514,0.915,523,1.038,525,1.864,540,1.753,546,0.805,548,1.331,549,0.7,555,1.357,563,0.825,571,0.767,584,0.955,599,1.184,608,1.249,609,0.566,622,1.514,645,2.418,653,0.655,654,0.862,655,1.3,659,0.67,662,0.798,663,0.628,669,1.132,673,1.698,683,1.709,684,2.448,700,1.095,702,1.059,705,1.132,713,0.59,716,0.59,722,0.491,746,0.655,747,0.67,748,1.017,754,0.615,777,0.615,779,1.158,785,1.908,787,1.835,790,0.805,811,1.3,816,1.061,826,1.027,841,0.749,868,1.027,872,0.805,894,0.996,902,0.566,985,1.935,986,1.514,987,2.535,989,0.749,990,3.108,991,2.925,992,2.465,998,1.328,1001,0.967,1002,0.891,1004,1.788,1005,1.095,1006,1.095,1023,2.189,1033,0.732,1035,3.256,1037,0.915,1038,2.9,1040,2.861,1041,1.184,1045,2.046,1047,1.435,1048,0.996,1049,1.299,1052,2.222,1070,1.364,1073,0.846,1076,0.891,1086,0.915,1092,1.585,1131,0.996,1132,1.399,1140,0.967,1142,3.457,1191,0.767,1207,0.805,1223,0.641,1235,0.867,1240,1.473,1243,2.981,1244,1.06,1245,1.944,1246,1.513,1247,1.944,1248,2.544,1249,1.753,1250,2.189,1251,1.175,1252,1.095,1253,1.175,1254,2.046,1255,1.753,1256,2.241,1257,2.56,1258,1.175,1259,2.273,1260,1.944,1261,1.944,1262,0.825,1263,1.175,1264,1.875,1265,2.486,1266,1.944,1267,0.602,1268,1.944,1269,1.175,1270,1.175,1271,1.175,1272,1.175,1273,1.435,1274,0.891,1275,1.06,1276,1.134,1277,1.06,1278,1.06,1279,0.732,1280,0.891,1281,0.94,1282,0.967,1283,1.239,1284,1.027,1285,0.641,1286,1.835,1287,2.302,1288,2.172,1289,2.398,1290,3.471,1291,3.371,1292,2.981,1293,1.134,1294,2.316,1295,1.095,1296,1.06,1297,0.867,1298,1.027,1299,0.967,1300,2.816,1301,1.875,1302,2.241,1303,1.095,1304,1.134,1305,1.134,1306,2.691,1307,1.06,1308,1.399,1309,4.433,1310,2.027,1311,1.811,1312,1.134,1313,3.458,1314,2.398,1315,1.811,1316,3.108,1317,1.513,1318,1.175,1319,1.698,1320,1.175,1321,1.753,1322,1.175,1323,2.448,1324,2.604,1325,2.448,1326,1.811,1327,1.175,1328,1.175,1329,1.944,1330,1.134,1331,2.786,1332,1.944,1333,2.448,1334,2.316,1335,3.2,1336,1.944,1337,3.2,1338,1.944,1339,2.691,1340,2.486,1341,1.027,1342,0.996,1343,1.134,1344,1.175,1345,1.175,1346,0.915,1347,1.835,1348,3.2,1349,1.648,1350,3.896,1351,2.486,1352,0.825,1353,1.175,1354,1.175,1355,4.328,1356,1.095,1357,2.302,1358,3.447,1359,3.816,1360,1.095,1361,1.175,1362,2.316,1363,1.06,1364,0.732,1365,1.175,1366,1.175,1367,1.06,1368,2.795,1369,0.967,1370,1.175,1371,0.996,1372,2.316,1373,0.867,1374,0.915,1375,1.175,1376,2.046,1377,1.175,1378,1.095,1379,1.944,1380,1.753,1381,1.175,1382,1.175,1383,1.648,1384,1.06,1385,1.175,1386,1.175,1387,0.805,1388,1.175,1389,1.875,1390,2.486,1391,1.175,1392,1.175,1393,1.134,1394,1.811,1395,1.095,1396,1.811,1397,1.095,1398,2.486,1399,1.175,1400,1.027,1401,1.095,1402,1.175,1403,1.944,1404,1.175,1405,1.175,1406,1.175,1407,1.175,1408,1.175,1409,1.175,1410,1.875,1411,1.175,1412,2.486,1413,1.175,1414,1.175,1415,1.134,1416,2.889,1417,2.241,1418,1.175,1419,1.134,1420,1.095,1421,1.134,1422,1.175,1423,1.175,1424,1.134,1425,1.944,1426,1.175,1427,1.175,1428,1.944,1429,1.175,1430,1.175,1431,0.967,1432,1.175,1433,1.175,1434,1.175,1435,1.175,1436,3.816,1437,1.944,1438,1.175,1439,1.175,1440,1.175,1441,1.944,1442,1.175,1443,1.944,1444,1.944,1445,1.175,1446,1.175,1447,1.175,1448,1.944,1449,1.175,1450,2.889,1451,1.944,1452,1.944,1453,1.175,1454,1.175,1455,1.027,1456,1.175,1457,1.175,1458,1.175,1459,1.175,1460,1.175,1461,1.175,1462,1.944,1463,1.944,1464,1.944,1465,1.944,1466,2.486,1467,1.175,1468,1.175,1469,1.175,1470,1.175,1471,1.944,1472,1.944,1473,2.889,1474,1.175,1475,1.175,1476,1.175,1477,1.175,1478,1.175,1479,2.56,1480,3.447,1481,3.2,1482,1.944,1483,1.175,1484,1.944,1485,2.486,1486,1.175,1487,2.486,1488,1.175,1489,2.889,1490,1.944,1491,1.175,1492,1.175,1493,1.175,1494,1.944,1495,1.134,1496,1.175,1497,1.027,1498,1.175,1499,1.175,1500,1.175,1501,1.175,1502,1.944,1503,2.377,1504,1.175,1505,1.175,1506,1.175,1507,1.175,1508,1.175,1509,1.513,1510,1.175,1511,1.175,1512,1.175,1513,2.486,1514,1.175,1515,1.175,1516,1.134,1517,1.753,1518,1.175,1519,1.175,1520,1.175,1521,1.175,1522,1.175,1523,1.175,1524,1.175,1525,1.473,1526,1.175,1527,1.175,1528,1.175,1529,1.175,1530,1.095,1531,1.175,1532,1.175,1533,1.944,1534,1.175,1535,1.175,1536,1.175,1537,1.175,1538,1.175,1539,0.996,1540,1.175,1541,1.027,1542,1.06,1543,1.175,1544,0.996,1545,1.175,1546,1.175,1547,1.175,1548,1.175,1549,1.175,1550,1.175,1551,1.175,1552,1.175,1553,1.175,1554,1.175,1555,1.175,1556,0.805,1557,1.175,1558,1.175,1559,1.875,1560,1.175,1561,1.175,1562,1.175,1563,1.175,1564,1.175,1565,1.175,1566,1.175,1567,1.175,1568,1.944,1569,1.944,1570,1.944,1571,1.175,1572,2.316,1573,2.889,1574,1.944,1575,1.175,1576,1.175,1577,1.175,1578,1.175,1579,1.175,1580,1.175,1581,1.095,1582,1.944,1583,1.175,1584,1.175,1585,1.175,1586,1.158,1587,1.175,1588,1.175,1589,1.175,1590,1.944,1591,1.175,1592,2.486,1593,1.175,1594,1.175,1595,1.175,1596,1.944,1597,1.175,1598,1.175,1599,1.944,1600,1.944,1601,1.175,1602,1.175,1603,1.095,1604,1.134,1605,1.175,1606,1.175,1607,1.175,1608,1.944,1609,1.944,1610,1.175,1611,1.175,1612,1.944,1613,1.175,1614,1.175,1615,1.175,1616,1.175,1617,1.175,1618,1.175,1619,1.175,1620,1.134,1621,1.175,1622,1.175,1623,1.175,1624,1.175,1625,1.175,1626,1.944,1627,1.175,1628,1.175,1629,1.175,1630,1.175,1631,1.175,1632,1.175,1633,1.175,1634,1.175,1635,1.175,1636,1.944,1637,2.889,1638,2.486,1639,1.175,1640,1.175,1641,1.944,1642,1.175,1643,1.175,1644,1.175,1645,1.175,1646,1.175,1647,1.175,1648,1.175,1649,1.269,1650,1.944,1651,1.175,1652,1.175,1653,1.175,1654,1.134,1655,1.175,1656,1.175,1657,1.175,1658,1.175,1659,1.175,1660,1.175,1661,1.134,1662,1.175,1663,1.175,1664,1.175,1665,1.175,1666,1.175,1667,1.175,1668,2.889,1669,1.175,1670,1.175,1671,1.175,1672,1.175,1673,1.175,1674,1.175,1675,1.134,1676,1.175,1677,1.175,1678,1.944,1679,1.175,1680,1.944,1681,1.175,1682,1.175,1683,1.944,1684,1.175,1685,1.175,1686,1.175,1687,1.175,1688,1.175,1689,2.486,1690,1.175,1691,1.175,1692,1.175,1693,1.175,1694,1.175,1695,0.846,1696,1.175,1697,1.175,1698,1.175,1699,1.175,1700,1.175,1701,1.175,1702,1.175,1703,1.175,1704,1.027,1705,1.134,1706,1.175,1707,1.175,1708,0.996,1709,1.175,1710,1.175,1711,1.944,1712,3.2,1713,0.94,1714,1.175,1715,1.175,1716,1.175,1717,1.175,1718,1.175,1719,1.175,1720,1.944,1721,1.175,1722,1.175,1723,1.753,1724,1.175,1725,1.175,1726,1.095,1727,1.175,1728,1.175,1729,1.095,1730,1.175,1731,1.175,1732,1.175,1733,1.175,1734,1.175]],["title/interfaces/PartialResult.html",[0,0.175,3973,3.234]],["body/interfaces/PartialResult.html",[0,0.314,2,0.862,3,0.064,4,0.05,5,0.043,8,0.233,12,0.144,13,0.421,18,0.196,19,0.008,20,1.529,25,0.973,26,0.092,30,1.923,33,2.66,35,2.089,36,1.161,40,1.611,43,5.286,50,1.005,52,0.582,58,2.623,59,1.027,60,1.328,64,2.815,67,2.492,71,0.916,73,0.498,78,0.095,84,2.277,85,0.78,87,1.675,88,1.533,91,1.334,93,2.492,96,1.228,99,1.363,101,2.035,105,4.231,108,1.249,109,1.061,114,1.809,117,2.24,121,2.807,124,3.468,133,1.955,140,0.786,143,0.51,145,2.535,155,3.077,159,0.008,160,0.006,161,0.007,165,3.272,171,3.739,172,1.534,179,3.358,192,0.69,194,2.689,201,0.36,205,0.583,207,4.846,209,2.498,224,2.983,226,4.417,234,0.935,235,1.196,244,1.611,247,3.203,254,2.327,260,0.45,261,1.222,263,4.24,264,2.932,267,0.845,273,1.592,281,0.528,282,1.081,286,2.66,287,3.068,319,2.16,347,2.304,362,0.795,364,2.636,375,2.503,378,1.395,379,2.636,393,1.147,409,3.359,462,0.704,479,0.38,510,1.951,519,1.898,523,1.703,549,1.907,555,2.226,570,2.559,584,1.573,608,1.161,609,1.078,612,2.425,618,1.428,655,1.171,662,1.199,663,1.196,665,2.327,683,1.196,722,1.874,730,1.1,789,2.019,799,1.653,810,1.748,811,2.134,919,2.535,940,2.535,969,2.909,981,2.24,1024,2.019,1028,2.983,1041,1.951,1044,2.807,1047,3.011,1073,1.611,1076,2.426,1083,2.66,1132,2.304,1145,2.535,1147,3.625,1177,4.014,1186,4.846,1189,2.535,1191,1.462,1214,2.019,1239,1.957,1256,3.371,1257,3.264,1259,2.329,1262,1.571,1323,2.714,1324,3.678,1364,1.395,1368,1.957,1380,3.678,1387,1.533,1400,1.957,1417,2.888,1539,1.898,1541,2.798,1542,2.888,1713,1.792,1762,2.327,1766,1.957,1769,2.24,1781,1.957,1797,2.983,1932,2.425,1934,4.316,1937,2.535,1979,2.983,2060,2.66,2093,3.625,2134,4.014,2136,2.807,2139,4.014,2191,2.807,2271,2.425,2301,1.898,2303,3.203,2345,3.605,2351,2.535,2542,4.231,2560,2.66,2570,2.425,2619,2.66,2627,2.66,2632,3.468,2702,3.804,2735,4.265,2773,2.327,2778,4.979,2798,2.862,2860,2.983,2941,3.625,2974,3.804,3206,2.425,3231,4.048,3241,2.24,3326,3.625,3338,2.425,3359,2.983,3363,2.983,3391,2.66,3623,2.807,3725,2.66,3758,2.807,3774,2.66,3781,2.807,3872,2.807,3886,2.425,3973,5.113,3974,2.019,3975,1.957,3976,2.983,3977,5.626,3978,4.265,3979,4.58,3980,3.203,3981,2.983,3982,2.807,3983,4.24,3984,2.983,3985,5.924,3986,4.861,3987,4.685,3988,4.58,3989,4.58,3990,4.58,3991,5.835,3992,3.203,3993,3.203,3994,3.203,3995,3.203,3996,3.203,3997,3.203,3998,3.203,3999,3.203,4000,3.203,4001,2.983,4002,3.203,4003,3.203,4004,3.203,4005,3.203,4006,2.535,4007,3.203,4008,2.983,4009,3.203,4010,6.611,4011,4.265,4012,3.203,4013,3.203,4014,3.203,4015,2.807,4016,2.807,4017,3.203,4018,3.203,4019,3.203,4020,4.58,4021,4.58,4022,3.203,4023,3.203,4024,3.203,4025,2.983,4026,3.203,4027,3.203,4028,4.58,4029,3.203,4030,4.58,4031,3.203,4032,3.203,4033,3.203,4034,5.347,4035,3.203,4036,2.983,4037,3.203,4038,3.203,4039,3.203,4040,3.203,4041,3.203,4042,3.203,4043,3.203,4044,3.203,4045,3.203,4046,3.203,4047,6.421,4048,3.203,4049,3.203,4050,4.58,4051,3.203,4052,3.203,4053,4.58,4054,3.203,4055,5.835,4056,4.58,4057,3.203,4058,3.203,4059,3.203,4060,3.203,4061,2.983,4062,3.203,4063,4.58,4064,3.203,4065,3.203,4066,3.203,4067,2.807,4068,3.203,4069,2.807,4070,3.203,4071,3.203,4072,3.203,4073,4.58,4074,3.203,4075,3.203,4076,3.203,4077,3.203,4078,3.203,4079,3.203,4080,3.203,4081,3.203,4082,4.58,4083,3.203,4084,3.203,4085,3.203,4086,3.203,4087,3.203,4088,3.203,4089,3.203,4090,3.203,4091,4.58,4092,3.203,4093,2.983,4094,3.203,4095,3.203,4096,3.203,4097,3.203,4098,3.203,4099,3.203,4100,3.203,4101,4.58,4102,4.58,4103,3.203,4104,3.203,4105,3.203,4106,3.203,4107,3.203,4108,3.203,4109,3.203,4110,3.203]],["title/classes/Percent.html",[78,0.11,3948,3.437]],["body/classes/Percent.html",[3,0.074,4,0.058,5,0.05,8,0.453,12,0.168,13,0.468,14,0.676,18,0.313,19,0.008,20,1.456,25,2.133,26,0.074,31,4.03,34,1.562,62,2.844,71,1.783,73,0.556,78,0.151,84,2.869,85,1.212,87,1.363,109,0.926,115,1.097,130,2.949,140,0.859,143,0.992,147,3.727,159,0.004,160,0.005,161,0.004,163,1.132,168,1.03,172,1.515,181,0.81,190,3.397,192,0.802,196,0.941,198,1.376,199,0.758,201,0.878,218,3.493,225,1.04,246,1.784,267,0.67,276,1.422,281,0.487,282,1.03,365,1.328,374,2.437,510,2.168,523,2.139,549,1.552,608,0.944,660,4.07,737,2.394,811,1.862,838,3.666,898,2.349,942,3.244,988,3.11,1101,3.21,1165,1.902,1235,2.993,1248,1.923,1296,3.657,1297,2.628,1308,3.283,1325,2.209,1349,2.209,1371,2.209,1479,2.848,1695,2.561,2067,4.252,2069,3.018,2449,4.493,2657,2.909,2974,3.095,3618,4.07,3676,4.817,3677,4.817,3678,5.177,3679,5.728,3680,5.728,3681,4.229,3682,5.177,3683,4.03,3684,4.933,3687,3.266,3688,3.266,3689,5.177,3690,5.315,3694,3.266,3695,5.391,3696,4.817,3697,4.229,3698,3.266,3699,3.266,3700,4.229,3701,5.332,3702,3.266,3703,3.266,3704,3.266,3705,5.457,3706,5.457,3707,4.933,3708,5.177,3709,4.229,3710,3.266,3711,4.03,3752,2.949,3884,4.03,3885,3.095,3886,2.822,3887,4.462,3891,3.266,3892,3.266,3893,3.266,3894,5.719,3899,3.266,3900,4.462,3901,4.462,3902,4.462,3903,3.266,3904,3.266,3905,4.462,3906,4.462,3907,4.462,3908,3.266,3948,6.274,4111,3.727,4112,4.591,4113,4.591,4114,6.273,4115,6.273,4116,8.3,4117,7.146,4118,6.273,4119,6.273,4120,4.07,4121,6.273,4122,4.591,4123,4.591,4124,4.591,4125,4.591,4126,4.591,4127,4.591,4128,4.591,4129,6.273,4130,4.591,4131,4.591,4132,4.591]],["title/modules/PipesModule.html",[2792,1.572,4133,3.234]],["body/modules/PipesModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,78,0.167,159,0.006,160,0.007,161,0.006,245,4.081,260,0.464,267,0.739,479,0.667,668,2.975,701,2.238,729,3.541,732,3.376,740,3.376,743,3.298,1165,2.098,1586,2.339,2657,2.504,2792,2.392,2794,3.142,2795,3.142,2796,4.138,2797,3.431,2798,2.755,2799,4.292,2807,4.039,2810,3.431,2811,4.922,2812,3.328,2813,3.431,2814,3.431,2815,3.431,2816,3.431,2817,3.431,2820,4.168,3644,6.227,4133,6.75,4134,6.134,4135,6.134,4136,6.134,4137,5.617,4138,6.92]],["title/classes/PowerTwoUnit.html",[78,0.11,4139,3.691]],["body/classes/PowerTwoUnit.html",[3,0.067,4,0.053,5,0.046,8,0.499,12,0.152,13,0.437,14,0.695,18,0.308,19,0.008,20,1.574,26,0.067,34,1.609,62,2.981,71,1.868,73,0.548,78,0.141,84,3.007,85,1.186,109,1.086,115,1.09,130,3.763,140,0.867,143,0.537,159,0.003,160,0.005,161,0.003,163,1.026,168,0.962,172,1.569,179,1.944,181,0.757,190,3.523,196,0.946,198,1.415,199,0.771,201,0.879,218,3.699,225,1.058,234,0.986,246,2.276,267,0.626,276,1.289,281,0.467,365,1.442,374,2.86,510,2.544,523,2.194,549,1.406,608,0.856,609,1.136,737,2.4,763,1.776,811,2.013,838,3.843,898,2.129,942,3.342,988,3.65,1101,3.47,1165,2.056,1235,3.25,1297,2.841,1308,3.377,1325,2.818,1349,2.818,1371,2.001,1479,3.079,1695,2.769,2067,4.465,2449,4.6,2657,3.055,3676,5.231,3677,5.231,3678,5.426,3679,5.575,3680,5.575,3681,4.962,3682,5.575,3683,4.728,3684,5.312,3687,2.959,3688,2.959,3689,5.231,3690,5.5,3694,2.959,3695,5.5,3696,5.231,3697,4.572,3698,2.959,3699,2.959,3700,4.572,3701,5.514,3702,2.959,3703,2.959,3704,2.959,3705,5.17,3706,5.17,3707,5.17,3708,5.426,3709,4.572,3710,2.959,3711,4.356,3742,4.167,3752,3.763,3884,5.906,3885,2.805,3886,3.6,3887,4.823,3888,5.505,3889,6.534,3891,4.167,3892,4.167,3893,4.167,3894,5.725,3897,3.377,3898,3.377,3899,2.959,3900,4.167,3901,4.167,3902,4.167,3903,2.959,3904,2.959,3905,4.167,3906,4.167,3907,4.167,3908,2.959,4139,3.377,4140,3.688,4141,3.688,4142,4.161,4143,3.688,4144,3.688,4145,3.688,4146,3.688,4147,3.688,4148,3.688,4149,3.688,4150,3.688,4151,3.688,4152,3.688]],["title/modules/QuickSearchModule.html",[2792,1.572,4153,3.234]],["body/modules/QuickSearchModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,78,0.166,159,0.006,160,0.007,161,0.006,209,3.623,260,0.525,261,2.134,264,2.277,479,0.664,668,2.962,701,2.228,913,2.277,1165,2.089,1267,2.002,1586,2.328,1947,3.91,2657,2.493,2792,2.381,2794,3.128,2795,3.128,2796,3.923,2797,3.416,2798,2.743,2799,4.284,2807,4.028,2809,3.771,2810,3.416,2812,3.314,2813,3.416,2814,3.416,2815,3.416,2816,3.416,2817,3.416,2818,4.611,2819,3.525,2820,4.157,2821,5.477,2822,4.792,2823,4.611,3974,3.525,3975,3.416,4153,6.627,4154,6.107,4155,6.107,4156,6.107,4157,6.889,4158,6.595,4159,6.889]],["title/interfaces/QuickSearchProvider.html",[0,0.175,171,2.581]],["body/interfaces/QuickSearchProvider.html",[0,0.31,2,1.279,3,0.095,4,0.074,5,0.064,8,0.434,12,0.214,13,0.549,14,0.492,18,0.308,19,0.008,20,1.707,26,0.13,30,1.968,43,5.454,50,0.907,52,1.187,58,3.587,60,1.753,65,3.249,73,0.563,78,0.141,84,2.542,85,1.016,96,0.882,97,3.944,108,2.328,115,0.95,117,4.174,140,0.735,158,1.688,159,0.006,160,0.006,161,0.007,165,3.28,167,4.162,169,4.162,170,1.331,171,4.566,179,4.351,180,7.059,181,0.95,190,2.79,195,5.97,196,0.594,198,1.001,199,0.534,200,5.559,201,0.534,205,0.515,207,5.69,217,3.054,225,0.975,241,6.53,254,5.235,260,0.419,264,2.875,265,3.758,266,4.749,267,0.625,281,0.466,287,2.661,320,4.162,327,3.446,393,2.138,510,2.917,584,2.051,634,5.559,777,1.737,810,2.278,981,4.174,1024,3.764,1086,2.584,1300,3.081,1792,4.749,1808,3.758,1810,3.451,1872,5.231,2288,3.321,2294,3.451,2325,3.944,2538,4.423,2570,4.52,2798,3.361,3046,5.97,3974,3.764,3975,3.647,3983,4.338,3986,4.943,4006,4.724,4067,4.162,4160,5.851,4161,6.52,4162,6.52,4163,6.52,4164,6.52,4165,6.52,4166,6.52,4167,6.52,4168,6.52,4169,5.97,4170,6.08,4171,5.187,4172,5.187,4173,5.187,4174,5.187,4175,5.187]],["title/classes/QuickSearchProviderDefaults.html",[78,0.11,169,3.234]],["body/classes/QuickSearchProviderDefaults.html",[0,0.287,3,0.097,4,0.076,5,0.065,8,0.352,12,0.218,13,0.555,14,0.625,18,0.314,19,0.008,20,1.382,26,0.131,30,1.593,43,4.983,50,0.917,52,1.196,58,3.55,60,1.712,65,2.63,73,0.554,78,0.144,84,2.058,85,1.027,96,1.223,97,5.013,108,1.884,115,0.769,117,3.379,140,0.544,143,0.96,158,1.782,159,0.006,160,0.006,161,0.006,163,1.468,165,3.209,167,4.235,169,5.289,170,1.692,171,4.602,179,4.224,180,6.893,181,0.96,190,3.221,192,1.04,195,6.582,196,0.887,198,1.273,199,0.679,200,5.62,201,0.741,205,0.417,207,5.466,210,5.278,217,2.934,225,0.952,241,6.582,254,5.258,260,0.423,264,2.68,265,3.824,266,4.833,267,0.636,281,0.471,287,2.154,320,4.235,327,3.036,393,1.731,510,2.57,584,1.66,634,4.5,777,1.767,810,1.844,981,3.379,1024,3.047,1086,3.284,1300,2.494,1792,4.833,1808,3.824,1810,3.512,1872,4.235,2288,3.379,2294,3.512,2325,4.014,2538,4.5,2570,3.659,2798,2.961,3046,4.833,3974,4.562,3975,4.42,3983,3.512,3986,4.983,4006,3.824,4067,4.235,4161,5.278,4162,5.278,4163,5.278,4164,5.278,4165,5.278,4166,5.278,4167,5.278,4168,5.278,4169,4.833,4170,6.129,4171,6.592,4172,5.278,4173,5.278,4174,5.278,4175,5.278,4176,7.436,4177,5.954,4178,5.954]],["title/injectables/QuickSearchRegistrarService.html",[1898,2.255,4179,3.691]],["body/injectables/QuickSearchRegistrarService.html",[3,0.106,4,0.083,5,0.072,8,0.387,12,0.24,13,0.588,14,0.663,18,0.293,19,0.008,26,0.106,50,0.808,59,1.083,78,0.158,143,0.846,159,0.005,160,0.007,161,0.005,165,3.105,170,1.491,171,5.178,172,1.509,181,1.019,192,1.145,196,0.891,198,1.35,199,0.72,201,0.599,205,0.615,225,0.884,260,0.481,264,2.607,267,0.7,276,2.03,479,0.632,562,3.684,654,1.985,810,2.443,1048,2.292,1223,2.719,1898,3.91,1900,4.21,2570,4.846,2754,5.609,2798,3.577,3545,6.401,3974,4.596,3975,4.454,3982,4.661,3983,5.489,3984,4.954,3986,4.846,4006,5.639,4179,7.126,4180,5.81,4181,6.991,4182,6.554,4183,6.554,4184,6.554,4185,7.886,4186,6.554,4187,6.554,4188,6.554,4189,6.554,4190,6.554,4191,6.554]],["title/interfaces/QuickSearchResultItem.html",[0,0.175,226,2.794]],["body/interfaces/QuickSearchResultItem.html",[0,0.339,2,1.442,3,0.107,4,0.084,5,0.072,8,0.39,12,0.241,13,0.591,18,0.305,19,0.008,20,1.532,26,0.138,30,2.119,52,1.298,58,3.153,59,0.814,64,2.988,67,3.886,71,1.838,73,0.519,108,2.506,114,1.993,140,0.804,159,0.007,160,0.007,161,0.005,165,3.242,205,0.555,226,5.214,248,1.327,254,3.892,263,4.67,264,2.975,287,2.865,293,7.142,364,3.963,530,3.926,811,2.351,1024,4.052,1040,2.627,1291,3.464,1323,3.809,1350,3.489,1530,4.187,1769,4.494,2737,6.427,3338,4.866,3974,3.376,3975,3.271,3977,5.632,4111,6.427,4192,4.987]],["title/interfaces/QuickSearchResults.html",[0,0.175,263,2.682]],["body/interfaces/QuickSearchResults.html",[0,0.338,2,1.423,3,0.106,4,0.083,5,0.071,8,0.384,12,0.238,13,0.586,14,0.765,18,0.316,19,0.008,20,1.823,26,0.137,30,1.742,52,0.961,58,3.128,59,0.803,64,2.9,67,2.875,71,1.511,73,0.398,108,2.06,114,1.638,140,0.863,159,0.007,160,0.006,161,0.005,165,3.267,205,0.456,226,5.383,248,1.091,254,3.84,263,4.975,264,2.896,287,3.296,293,5.284,364,4.255,530,3.228,811,2.6,1024,3.331,1040,3.128,1291,3.795,1323,4.382,1350,4.632,1530,3.443,1769,3.695,2737,5.284,3338,4,3974,3.331,3975,3.228,3977,4.63,4111,5.284,4192,4.921]],["title/injectables/QuickSearchService.html",[1898,2.255,3983,2.682]],["body/injectables/QuickSearchService.html",[3,0.098,4,0.077,5,0.066,8,0.444,12,0.328,13,0.561,14,0.632,18,0.283,19,0.008,20,1.745,26,0.098,50,0.747,59,0.927,64,2.431,78,0.146,85,1.039,96,1.134,99,1.426,143,0.783,158,1.905,159,0.005,160,0.006,161,0.005,165,3.171,171,5.337,179,3.818,181,0.971,196,0.867,198,1.287,199,0.687,201,0.554,225,0.985,260,0.428,264,2.003,267,0.803,281,0.477,282,0.995,345,2.298,479,0.584,523,2.191,559,3.616,608,1.247,638,2.538,645,2.413,810,1.877,840,3.574,847,3.728,981,4.267,1048,1.762,1649,2.245,1847,4.62,1898,3.728,1900,3.893,1929,4.581,2798,2.994,3974,4.496,3975,4.356,3982,4.31,3983,4.434,3986,5.82,4006,4.829,4011,5.683,4181,6.665,4193,5.372,4194,8.173,4195,8.546,4196,7.518,4197,7.518,4198,6.06,4199,7.518,4200,6.06,4201,7.518,4202,6.06,4203,8.786,4204,7.518,4205,7.518,4206,6.06,4207,7.518,4208,7.518,4209,6.06,4210,6.06,4211,6.06,4212,6.06,4213,6.06,4214,6.06,4215,6.06,4216,6.06,4217,6.06,4218,6.06,4219,6.06]],["title/interfaces/ResultActivatedEvent.html",[0,0.175,3987,3.234]],["body/interfaces/ResultActivatedEvent.html",[0,0.314,2,0.862,3,0.064,4,0.05,5,0.043,8,0.233,12,0.144,13,0.421,18,0.228,19,0.008,20,1.529,25,0.973,26,0.092,30,1.923,33,2.66,35,2.089,36,1.161,40,1.611,43,5.286,50,1.005,52,0.582,58,2.623,59,1.027,60,1.328,64,2.815,67,2.909,71,0.916,73,0.533,78,0.095,84,2.277,85,0.78,87,1.675,88,1.533,91,1.334,93,2.492,96,1.228,99,1.363,101,2.035,105,4.231,108,1.249,109,1.061,114,1.914,117,2.24,121,2.807,124,3.468,133,1.955,140,0.657,143,0.51,145,2.535,155,3.077,159,0.008,160,0.006,161,0.007,165,3.263,171,3.739,172,1.534,179,3.358,192,0.69,194,2.689,201,0.36,205,0.583,207,4.441,209,2.498,224,2.983,226,4.417,234,0.935,235,1.196,244,1.611,247,2.24,254,2.327,260,0.45,261,1.222,263,4.24,264,2.932,267,0.845,273,1.592,281,0.528,282,1.081,286,2.66,287,2.947,319,2.16,347,2.304,362,0.795,364,2.636,375,2.503,378,1.395,379,2.636,393,1.147,409,3.359,462,0.704,479,0.38,510,1.951,519,1.898,523,1.703,549,1.907,555,2.45,570,2.559,584,1.573,608,1.161,609,1.078,612,2.425,618,1.428,655,1.171,662,1.199,663,1.196,665,2.327,683,1.196,722,1.874,730,1.1,789,2.019,799,1.653,810,1.748,811,2.134,919,2.535,940,2.535,969,2.909,981,2.24,1024,2.019,1028,2.983,1041,1.951,1044,2.807,1047,3.011,1073,1.611,1076,1.697,1083,2.66,1132,2.304,1145,2.535,1147,3.625,1177,5.113,1186,4.441,1189,2.535,1191,1.462,1214,2.019,1239,1.957,1256,3.371,1257,3.264,1259,2.329,1262,1.571,1323,1.898,1324,2.019,1364,1.395,1368,2.798,1380,2.019,1387,1.533,1400,1.957,1417,2.888,1539,1.898,1541,2.798,1542,2.888,1713,1.792,1762,2.327,1766,1.957,1769,2.24,1781,1.957,1797,2.983,1932,2.425,1934,4.316,1937,2.535,1979,2.983,2060,2.66,2093,3.625,2134,4.014,2136,2.807,2139,4.014,2191,2.807,2271,2.425,2301,1.898,2303,3.739,2345,3.089,2351,2.535,2542,4.231,2560,2.66,2570,2.425,2619,2.66,2627,2.66,2632,3.468,2702,3.804,2735,4.265,2773,2.327,2778,4.979,2798,2.862,2860,2.983,2941,3.625,2974,3.804,3206,2.425,3231,4.048,3241,2.24,3326,3.625,3338,2.425,3359,2.983,3363,2.983,3391,2.66,3623,2.807,3725,2.66,3758,2.807,3774,2.66,3781,2.807,3872,2.807,3886,2.425,3973,4.685,3974,2.019,3975,1.957,3976,2.983,3977,5.626,3978,2.983,3979,3.203,3980,3.203,3981,2.983,3982,2.807,3983,4.24,3984,2.983,3985,5.924,3986,4.861,3987,5.113,3988,6.173,3989,6.173,3990,6.173,3991,6.421,3992,3.203,3993,3.203,3994,3.203,3995,3.203,3996,3.203,3997,3.203,3998,3.203,3999,3.203,4000,3.203,4001,2.983,4002,3.203,4003,3.203,4004,3.203,4005,3.203,4006,2.535,4007,3.203,4008,2.983,4009,3.203,4010,6.611,4011,4.265,4012,3.203,4013,3.203,4014,3.203,4015,2.807,4016,2.807,4017,3.203,4018,3.203,4019,3.203,4020,4.58,4021,4.58,4022,3.203,4023,3.203,4024,3.203,4025,2.983,4026,3.203,4027,3.203,4028,4.58,4029,3.203,4030,4.58,4031,3.203,4032,3.203,4033,3.203,4034,5.347,4035,3.203,4036,2.983,4037,3.203,4038,3.203,4039,3.203,4040,3.203,4041,3.203,4042,3.203,4043,3.203,4044,3.203,4045,3.203,4046,3.203,4047,6.421,4048,3.203,4049,3.203,4050,4.58,4051,3.203,4052,3.203,4053,4.58,4054,3.203,4055,5.835,4056,4.58,4057,3.203,4058,3.203,4059,3.203,4060,3.203,4061,2.983,4062,3.203,4063,4.58,4064,3.203,4065,3.203,4066,3.203,4067,2.807,4068,3.203,4069,2.807,4070,3.203,4071,3.203,4072,3.203,4073,4.58,4074,3.203,4075,3.203,4076,3.203,4077,3.203,4078,3.203,4079,3.203,4080,3.203,4081,3.203,4082,4.58,4083,3.203,4084,3.203,4085,3.203,4086,3.203,4087,3.203,4088,3.203,4089,3.203,4090,3.203,4091,4.58,4092,3.203,4093,2.983,4094,3.203,4095,3.203,4096,3.203,4097,3.203,4098,3.203,4099,3.203,4100,3.203,4101,4.58,4102,4.58,4103,3.203,4104,3.203,4105,3.203,4106,3.203,4107,3.203,4108,3.203,4109,3.203,4110,3.203]],["title/interfaces/SearchSection.html",[0,0.175,3985,3.234]],["body/interfaces/SearchSection.html",[0,0.306,2,0.869,3,0.065,4,0.051,5,0.044,12,0.146,13,0.423,18,0.229,19,0.008,20,1.536,25,0.981,26,0.092,30,1.93,33,2.682,35,2.097,36,1.167,40,1.624,43,5.295,50,1.007,52,0.587,58,2.635,59,1.029,60,1.334,64,2.787,67,2.507,71,0.924,73,0.5,78,0.096,84,2.287,85,0.784,87,1.685,88,1.546,91,1.345,93,2.507,96,1.281,99,1.368,101,2.041,105,4.25,108,1.259,109,1.065,114,1.816,117,2.258,121,2.83,124,3.488,133,1.964,140,0.659,143,0.514,145,2.555,155,2.651,159,0.008,160,0.006,161,0.007,165,3.265,171,4.33,172,1.537,179,3.37,192,0.695,194,2.702,201,0.363,205,0.585,207,4.461,209,2.51,224,3.007,226,4.434,234,0.942,235,1.206,244,1.624,247,2.258,254,2.346,260,0.451,261,1.232,263,4.678,264,2.936,267,0.847,273,1.599,281,0.529,282,1.086,286,2.682,287,2.954,319,2.178,347,2.317,362,0.802,364,2.651,375,2.51,378,1.407,379,2.651,393,1.156,409,3.37,462,0.71,479,0.383,510,1.962,519,1.914,523,1.709,549,1.918,555,2.235,570,2.571,584,1.582,608,1.167,609,1.087,612,2.445,618,1.439,655,1.181,662,1.205,663,1.206,665,2.346,683,1.206,722,1.879,730,1.109,789,2.036,799,1.666,810,1.758,811,2.142,919,2.555,940,2.555,969,2.923,981,2.258,1024,2.036,1028,3.007,1041,1.962,1044,2.83,1047,3.022,1073,1.624,1076,1.711,1083,2.682,1132,2.317,1145,2.555,1147,3.646,1177,4.037,1186,4.461,1189,2.555,1191,1.473,1214,2.036,1239,1.973,1256,3.386,1257,3.276,1259,2.34,1262,1.584,1323,1.914,1324,2.036,1364,1.407,1368,1.973,1380,2.036,1387,1.546,1400,1.973,1417,2.904,1539,1.914,1541,3.783,1542,2.904,1713,1.806,1762,2.346,1766,1.973,1769,2.258,1781,1.973,1797,3.007,1932,2.445,1934,4.33,1937,2.555,1979,3.007,2060,2.682,2093,3.646,2134,4.037,2136,2.83,2139,4.037,2191,2.83,2271,2.445,2301,1.914,2303,3.221,2345,3.107,2351,2.555,2542,4.25,2560,2.682,2570,2.445,2619,2.682,2627,2.682,2632,3.488,2702,3.826,2735,4.29,2773,2.346,2778,5.001,2798,2.873,2860,3.007,2941,3.646,2974,3.826,3206,2.445,3231,4.066,3241,2.258,3326,3.646,3338,2.445,3359,3.007,3363,3.007,3391,2.682,3623,2.83,3725,2.682,3758,2.83,3774,2.682,3781,2.83,3872,2.83,3886,2.445,3973,4.706,3974,2.036,3975,1.973,3976,3.007,3977,5.426,3978,3.007,3979,3.229,3980,3.229,3981,3.007,3982,2.83,3983,4.255,3984,3.007,3985,6.042,3986,5.22,3987,4.706,3988,4.607,3989,4.607,3990,4.607,3991,5.856,3992,3.229,3993,3.229,3994,3.229,3995,3.229,3996,3.229,3997,3.229,3998,3.229,3999,3.229,4000,3.229,4001,3.007,4002,3.229,4003,3.229,4004,3.229,4005,3.229,4006,2.555,4007,3.229,4008,3.007,4009,3.229,4010,6.627,4011,4.29,4012,3.229,4013,3.229,4014,3.229,4015,2.83,4016,2.83,4017,3.229,4018,3.229,4019,3.229,4020,4.607,4021,4.607,4022,3.229,4023,3.229,4024,3.229,4025,3.007,4026,3.229,4027,3.229,4028,4.607,4029,3.229,4030,4.607,4031,3.229,4032,3.229,4033,3.229,4034,5.371,4035,3.229,4036,3.007,4037,3.229,4038,3.229,4039,3.229,4040,3.229,4041,3.229,4042,3.229,4043,3.229,4044,3.229,4045,3.229,4046,3.229,4047,6.438,4048,3.229,4049,3.229,4050,4.607,4051,3.229,4052,3.229,4053,4.607,4054,3.229,4055,5.856,4056,4.607,4057,3.229,4058,3.229,4059,3.229,4060,3.229,4061,3.007,4062,3.229,4063,4.607,4064,3.229,4065,3.229,4066,3.229,4067,2.83,4068,3.229,4069,2.83,4070,3.229,4071,3.229,4072,3.229,4073,4.607,4074,3.229,4075,3.229,4076,3.229,4077,3.229,4078,3.229,4079,3.229,4080,3.229,4081,3.229,4082,4.607,4083,3.229,4084,3.229,4085,3.229,4086,3.229,4087,3.229,4088,3.229,4089,3.229,4090,3.229,4091,4.607,4092,3.229,4093,3.007,4094,3.229,4095,3.229,4096,3.229,4097,3.229,4098,3.229,4099,3.229,4100,3.229,4101,4.607,4102,4.607,4103,3.229,4104,3.229,4105,3.229,4106,3.229,4107,3.229,4108,3.229,4109,3.229,4110,3.229]],["title/interfaces/SelectOption.html",[0,0.175,2391,2.187]],["body/interfaces/SelectOption.html",[0,0.27,2,1.528,3,0.113,4,0.089,5,0.077,8,0.413,12,0.256,13,0.612,14,0.689,18,0.301,19,0.008,20,1.624,26,0.113,30,1.871,34,1.96,50,0.863,73,0.567,96,1.311,109,1.032,115,1.059,126,7.28,140,0.794,141,3.347,152,2.121,159,0.006,160,0.007,161,0.006,201,0.846,248,1.503,722,1.657,1308,3.347,1352,3.639,2391,3.943,4220,6.2,4221,6.2,4222,8.197]],["title/directives/ShowClippedTextDirective.html",[600,1.408,756,1.684]],["body/directives/ShowClippedTextDirective.html",[0,0.146,3,0.061,4,0.048,5,0.042,8,0.224,9,1.251,12,0.139,13,0.409,14,0.46,18,0.295,19,0.008,25,1.587,26,0.114,27,1.81,30,1.887,36,0.779,38,2.233,50,0.467,52,0.949,59,1.134,74,3.006,78,0.091,81,1.034,83,1.402,85,0.757,87,1.124,96,1.063,98,3.829,99,1.039,101,1.887,102,2.627,108,1.198,109,0.559,115,0.489,118,1.81,140,0.712,143,1.039,158,1.149,159,0.003,160,0.005,161,0.003,170,1.246,172,1.497,181,0.707,191,2.181,192,0.661,196,0.907,198,0.937,199,0.5,201,0.735,225,0.875,248,1.079,260,0.215,267,0.859,273,2.029,276,1.172,281,0.54,345,1.436,378,1.338,393,1.1,442,0.972,459,2.236,462,0.977,464,1.589,479,0.365,519,1.821,523,1.524,525,1.251,555,1.172,561,1.771,574,4.215,583,3.692,600,2.491,608,1.655,618,1.37,626,2.844,646,2.233,661,1.471,662,0.689,669,1.81,683,1.66,702,1.324,748,1.124,756,2.383,757,3.032,790,2.128,804,2.675,840,2.233,902,1.034,936,5.322,988,1.877,998,2.365,1031,4.133,1032,5.303,1033,3.25,1034,2.552,1035,1.768,1036,4.577,1037,1.672,1038,1.308,1039,5.044,1040,2.562,1041,1.308,1042,2.998,1043,4.445,1044,2.692,1045,3.757,1046,6.197,1047,2.954,1048,1.87,1049,2.441,1050,4.338,1051,5.33,1052,2.586,1053,3.354,1054,5.656,1055,3.71,1056,5.656,1057,4.159,1058,5.656,1059,2.861,1060,3.073,1061,2.861,1062,3.073,1063,2.431,1064,3.073,1065,3.073,1066,2.861,1067,2.861,1068,3.073,1069,3.073,1070,1.507,1071,3.073,1072,3.073,1073,1.546,1074,4.445,1075,3.073,1076,2.767,1077,5.223,1078,3.073,1079,3.692,1080,3.073,1081,3.073,1082,3.073,1083,2.552,1084,3.073,1085,2.692,1086,1.672,1087,6.074,1088,3.073,1089,5.223,1090,3.073,1091,3.073,1092,1.37,1093,5.223,1094,4.445,1095,3.073,1096,4.445,1097,3.073,1098,4.445,1099,2.431,1100,3.073,1101,1.937,1102,5.223,1103,3.073,1104,3.073,1105,3.073,1106,4.445,1107,4.445,1108,3.073,1109,3.073,1110,4.577,1111,3.073,1112,3.073,1113,3.073,1114,3.073,1115,3.073,1116,5.724,1117,3.073,1118,6.074,1119,3.073,1120,3.073,1121,5.724,1122,2.692,1123,5.223,1124,4.445,1125,3.073,1126,3.073,1127,3.073,1128,3.073,1129,3.073,1130,3.073,1131,2.634,1132,1.546,1133,3.073,1134,3.073,1135,4.445,1136,3.073,1137,4.445,1138,5.724,1139,4.445,1140,3.006,1141,4.445,1142,1.877,1143,4.445,1144,3.073,1145,2.431,1146,3.073,1147,2.431,1148,4.445,1149,3.073,1150,3.073,1151,3.073,1152,3.073,1153,2.072,1154,3.073,1155,2.692,1156,2.861,1157,3.073,1158,3.073,1159,3.073,1160,4.445,1161,5.223,1162,2.861,1163,3.073,1164,3.073,1165,2.269,1166,3.073,1167,2.634,1168,3.073,1169,4.445,1170,5.724,1171,2.692,1172,2.692,1173,2.692,1174,2.692,1175,6.074,1176,4.864,1177,4.577,1178,3.356,1179,6.251,1180,3.356,1181,3.356,1182,3.356,1183,3.356,1184,3.356,1185,3.356,1186,2.552,1187,3.356,1188,4.445,1189,3.518,1190,4.855,1191,2.028,1192,5.704,1193,3.356,1194,3.356,1195,4.855,1196,3.356,1197,4.855,1198,5.704,1199,3.356,1200,4.855,1201,4.855,1202,4.855,1203,5.704,1204,4.855,1205,5.704,1206,4.855,1207,2.74,1208,6.251,1209,5.704,1210,3.356,1211,3.356,1212,4.855,1213,4.855,1214,1.937,1215,2.431,1216,4.855,1217,3.356,1218,3.356,1219,3.356,1220,3.356,1221,3.356,1222,3.356,1223,2.184,1224,5.33,1225,3.356,1226,3.356,1227,5.704,1228,4.855,1229,4.855,1230,6.251,1231,5.704,1232,6.251,1233,3.356,1234,3.073,1235,1.586,1236,3.356,1237,3.356,1238,3.073,1239,1.877,1240,1.628,1241,3.073,1242,3.073,4223,3.785,4224,5.477,4225,5.477,4226,3.785,4227,3.785,4228,3.785,4229,3.785,4230,3.785,4231,3.785,4232,3.785,4233,3.785,4234,3.785,4235,3.785,4236,3.785,4237,3.785]],["title/modules/ShowClippedTextDirectiveModule.html",[2792,1.572,2806,2.794]],["body/modules/ShowClippedTextDirectiveModule.html",[3,0.114,4,0.09,5,0.077,19,0.008,26,0.114,78,0.17,159,0.006,160,0.007,161,0.006,260,0.469,479,0.679,668,3.032,683,2.138,701,2.28,756,3.547,1032,4.159,1033,2.912,1165,2.138,1282,3.294,1586,2.383,1947,4.002,2657,2.551,2792,2.437,2794,3.201,2795,3.201,2796,3.961,2797,3.496,2798,2.808,2799,4.326,2806,5.752,2807,4.084,2810,3.496,2812,3.392,2813,3.496,2814,3.496,2815,3.496,2816,3.496,2817,3.496,2820,4.214,4238,6.251,4239,6.251,4240,6.251,4241,7.051]],["title/classes/ShowClippedTextDirectiveTestHelper.html",[78,0.11,4242,3.437]],["body/classes/ShowClippedTextDirectiveTestHelper.html",[3,0.076,4,0.06,5,0.052,8,0.278,12,0.172,13,0.476,14,0.681,18,0.302,19,0.008,26,0.103,36,1.596,59,1.142,71,1.092,73,0.532,78,0.154,96,1.17,98,4.149,101,1.259,115,0.824,140,0.583,143,1.002,148,2.156,158,0.988,159,0.004,160,0.005,161,0.004,163,1.573,172,1.552,181,0.824,191,2.54,192,0.822,196,0.959,198,1.388,199,0.741,201,0.709,205,0.447,225,1,248,1.359,260,0.412,267,0.828,273,1.137,276,1.457,281,0.559,327,2.604,442,1.638,479,0.453,480,4.403,481,2.575,523,2.173,524,3.62,534,3.491,570,2.478,574,4.278,588,5.47,600,2.241,608,1.789,626,2.559,643,4.447,655,1.397,683,2.194,745,1.971,756,2.362,804,1.784,1032,5.582,1033,3.363,1045,3.38,1046,4.878,1047,3.031,1050,5.764,1052,2.501,1053,3.112,1055,3.588,1057,4.268,1099,3.022,1110,5.518,1140,3.624,1155,5.768,1171,3.346,1172,3.346,1173,3.346,1174,3.346,1240,2.743,1262,1.873,1282,2.198,2223,3.491,2346,3.163,3167,4.097,4242,4.821,4243,7.682,4244,3.819,4245,5.654,4246,6.415,4247,6.415,4248,6.877,4249,6.877,4250,6.877,4251,6.877,4252,6.877,4253,6.378,4254,6.378,4255,6.415,4256,6.415,4257,6.415,4258,6.415,4259,6.415,4260,4.171,4261,4.705,4262,4.705,4263,6.415,4264,4.705,4265,5.654,4266,4.705,4267,5.654,4268,4.705,4269,4.705,4270,4.705,4271,4.705,4272,4.705,4273,4.705,4274,4.705,4275,4.705,4276,4.705,4277,4.705,4278,4.705,4279,4.705,4280,4.705,4281,4.705,4282,4.705,4283,4.705,4284,4.705,4285,4.705,4286,4.705,4287,4.705,4288,4.705,4289,4.705,4290,4.705,4291,4.705,4292,4.705,4293,4.705,4294,4.705,4295,4.705,4296,4.705,4297,4.705,4298,4.705,4299,4.171,4300,4.171,4301,4.171,4302,4.171,4303,6.877,4304,4.171,4305,4.171,4306,4.171,4307,4.171,4308,4.171,4309,4.171,4310,5.654,4311,6.415,4312,4.171,4313,5.654,4314,5.654,4315,4.171,4316,5.654,4317,4.171,4318,4.171,4319,4.171,4320,4.171,4321,5.654,4322,4.171,4323,4.171,4324,4.171,4325,4.171,4326,4.171,4327,4.171,4328,5.654,4329,4.171,4330,4.171,4331,4.171,4332,4.171,4333,4.171,4334,5.654]],["title/components/ShowClippedTextDirectiveTestHostComponent.html",[205,0.319,745,1.905]],["body/components/ShowClippedTextDirectiveTestHostComponent.html",[3,0.078,4,0.061,5,0.053,12,0.176,13,0.484,18,0.292,19,0.008,26,0.105,36,1.611,59,1.038,60,0.971,63,1.343,71,1.118,73,0.527,78,0.156,96,1.104,98,4.009,101,1.734,115,0.622,140,0.716,143,0.946,148,2.191,158,1.011,159,0.004,160,0.005,161,0.004,163,1.188,172,1.397,196,0.855,199,0.747,201,0.669,205,0.513,209,1.827,248,1.485,260,0.417,264,1.593,267,0.836,273,1.165,276,1.492,281,0.562,327,1.967,339,1.884,359,1.074,375,1.525,391,1.593,442,1.665,462,1.699,464,1.28,479,0.464,480,3.679,481,2.637,523,2.181,524,2.735,534,3.548,570,1.872,574,4.009,588,3.642,600,2.532,608,1.799,626,1.704,643,2.961,653,1.525,654,1.631,655,1.924,656,1.919,659,1.558,661,1.872,662,1.72,683,2.221,701,1.558,702,1.567,703,3.557,704,2.188,705,1.593,706,2.188,707,2.188,708,1.704,709,2.072,710,2.188,711,1.872,712,2.188,713,1.372,714,2.188,715,1.785,716,2.23,717,1.872,718,3.557,719,1.743,720,1.872,721,1.872,722,1.141,723,1.743,724,1.872,725,2.188,726,1.919,727,2.188,728,2.072,729,1.872,730,2.184,731,2.188,732,1.785,733,3.557,734,1.827,735,2.991,736,1.827,737,1.599,738,1.827,739,2.943,740,1.785,741,1.967,742,2.188,743,1.743,744,2.188,745,3.281,746,1.525,747,1.558,748,1.43,749,1.558,750,2.188,751,1.872,752,2.188,753,1.919,754,1.43,755,2.188,756,2.902,757,2.072,758,2.188,804,1.827,1032,5.074,1033,3.166,1045,2.251,1046,3.248,1047,3.424,1050,5.511,1052,2.532,1053,3.15,1055,3.632,1057,4.32,1099,3.095,1110,3.427,1140,2.251,1155,5.572,1171,3.427,1172,3.427,1173,3.427,1174,3.427,1240,2.072,1262,1.919,1282,2.251,2223,2.637,2346,2.389,2451,5.945,3167,4.163,4242,3.642,4243,6.983,4244,3.911,4245,4.271,4246,4.271,4247,4.271,4248,4.271,4249,4.271,4250,4.271,4251,4.271,4252,4.271,4255,4.271,4256,4.271,4257,4.271,4258,4.271,4259,4.271,4263,4.271,4265,4.271,4267,4.271,4299,4.271,4300,4.271,4301,4.271,4302,4.271,4303,6.945,4304,4.271,4305,4.271,4306,4.271,4307,4.271,4308,4.271,4309,4.271,4310,5.746,4311,6.493,4312,4.271,4313,5.746,4314,5.746,4315,4.271,4316,5.746,4317,4.271,4318,4.271,4319,4.271,4320,4.271,4321,5.746,4322,4.271,4323,4.271,4324,4.271,4325,4.271,4326,4.271,4327,4.271,4328,7.464,4329,5.746,4330,5.746,4331,6.493,4332,5.746,4333,6.493,4334,6.945,4335,4.818,4336,4.818,4337,4.818,4338,4.818,4339,4.818,4340,4.818]],["title/interfaces/SortedColumn.html",[0,0.175,1326,2.405]],["body/interfaces/SortedColumn.html",[0,0.277,1,2.171,2,0.452,3,0.034,4,0.026,5,0.023,8,0.122,9,1.682,10,3.256,12,0.289,13,0.38,14,0.174,15,3.439,18,0.249,19,0.008,20,1.181,22,0.715,25,1.08,26,0.126,27,1.682,28,1.059,30,1.798,34,1.676,36,1.683,39,0.996,40,2.479,42,0.914,47,0.785,50,0.975,52,0.505,53,1.752,54,1.059,55,3.178,56,1.811,59,0.909,60,1.224,61,2.221,62,0.767,63,1.693,64,2.078,66,0.844,67,0.914,69,2.921,71,0.795,73,0.496,74,1.599,77,1.33,78,0.106,80,1.026,81,0.935,83,1.622,84,1.948,85,0.605,86,2.794,87,1.51,88,0.804,90,3.78,91,0.7,93,3.492,96,1.111,99,0.965,101,2.014,102,0.845,108,1.784,109,1.275,111,1.993,114,0.521,115,0.951,118,1.863,120,1.095,127,1.744,129,1.472,133,1.016,136,0.824,137,2.241,138,1.084,140,0.82,141,1.398,143,0.83,148,1.905,149,1.095,152,1.949,154,1.993,155,0.967,158,1.508,159,0.003,160,0.003,161,0.002,168,0.34,170,0.471,172,1.542,173,1.133,181,0.565,192,0.362,194,1.788,196,0.21,199,0.587,201,0.4,203,0.996,204,0.867,205,0.516,211,2.171,225,0.571,234,0.811,235,1.038,244,0.845,248,0.347,251,1.133,260,0.444,261,0.641,267,0.927,270,1.133,271,1.874,273,0.828,281,0.569,282,1.055,287,2.861,322,0.767,328,0.89,337,0.967,339,1.273,345,2.549,359,0.462,362,1.026,365,1.425,370,1.647,375,0.655,378,2.147,379,2.377,391,1.132,393,1.273,439,1.239,460,1.038,462,0.369,464,0.676,479,0.199,510,1.513,514,0.914,523,1.037,525,1.863,540,1.752,546,0.804,548,1.33,549,0.7,555,1.356,563,0.824,571,0.767,584,0.955,599,1.183,608,1.249,609,0.565,622,1.513,645,2.418,653,0.655,654,0.862,655,1.3,659,0.669,662,0.797,663,0.628,669,1.132,673,1.698,683,1.709,684,2.447,700,1.095,702,1.058,705,1.132,713,0.589,716,0.589,722,0.49,746,0.655,747,0.669,748,1.016,754,0.614,777,0.614,779,1.157,785,1.908,787,1.834,790,0.804,811,1.3,816,1.06,826,1.026,841,0.749,868,1.026,872,0.804,894,0.996,902,0.565,985,1.934,986,1.513,987,2.647,989,0.749,990,3.107,991,2.924,992,2.465,998,1.328,1001,0.967,1002,0.89,1004,1.788,1005,1.095,1006,1.095,1023,2.188,1033,0.732,1035,3.256,1037,0.914,1038,2.9,1040,2.86,1041,1.183,1045,2.045,1047,1.434,1048,0.995,1049,1.299,1052,2.221,1070,1.363,1073,0.845,1076,0.89,1086,0.914,1092,1.584,1131,0.996,1132,1.398,1140,0.967,1142,3.456,1191,0.767,1207,0.804,1223,0.641,1235,0.867,1240,1.472,1243,2.98,1244,1.059,1245,1.943,1246,1.512,1247,1.943,1248,2.543,1249,1.752,1250,2.188,1251,1.175,1252,1.095,1253,1.175,1254,2.045,1255,1.752,1256,2.241,1257,2.559,1258,1.175,1259,2.272,1260,1.943,1261,1.943,1262,0.824,1263,1.175,1264,1.874,1265,2.485,1266,1.943,1267,0.602,1268,1.943,1269,1.175,1270,1.175,1271,1.175,1272,1.175,1273,1.434,1274,0.89,1275,1.059,1276,1.133,1277,1.059,1278,1.059,1279,0.732,1280,0.89,1281,0.94,1282,0.967,1283,1.239,1284,1.026,1285,0.641,1286,1.834,1287,2.301,1288,2.171,1289,2.397,1290,3.471,1291,3.306,1292,2.98,1293,1.133,1294,2.315,1295,1.095,1296,1.059,1297,0.867,1298,1.026,1299,0.967,1300,2.815,1301,1.874,1302,2.241,1303,1.095,1304,1.133,1305,1.133,1306,2.691,1307,1.059,1308,1.398,1309,4.432,1310,2.026,1311,1.811,1312,1.133,1313,3.457,1314,2.397,1315,1.811,1316,3.107,1317,1.512,1318,1.175,1319,1.698,1320,1.175,1321,1.752,1322,1.175,1323,2.447,1324,2.604,1325,3.091,1326,2.315,1327,1.943,1328,1.943,1329,3.199,1330,1.133,1331,2.785,1332,1.175,1333,2.106,1334,1.811,1335,1.943,1336,1.175,1337,1.943,1338,1.943,1339,2.691,1340,2.485,1341,1.026,1342,0.996,1343,1.133,1344,1.175,1345,1.175,1346,0.914,1347,1.834,1348,3.199,1349,1.647,1350,3.895,1351,2.485,1352,0.824,1353,1.175,1354,1.175,1355,4.327,1356,1.095,1357,2.301,1358,3.446,1359,3.815,1360,1.095,1361,1.175,1362,2.315,1363,1.059,1364,0.732,1365,1.175,1366,1.175,1367,1.059,1368,2.794,1369,0.967,1370,1.175,1371,0.996,1372,2.315,1373,0.867,1374,0.914,1375,1.175,1376,2.045,1377,1.175,1378,1.095,1379,1.943,1380,1.752,1381,1.175,1382,1.175,1383,1.647,1384,1.059,1385,1.175,1386,1.175,1387,0.804,1388,1.175,1389,1.874,1390,2.485,1391,1.175,1392,1.175,1393,1.133,1394,1.811,1395,1.095,1396,1.811,1397,1.095,1398,2.485,1399,1.175,1400,1.026,1401,1.095,1402,1.175,1403,1.943,1404,1.175,1405,1.175,1406,1.175,1407,1.175,1408,1.175,1409,1.175,1410,1.874,1411,1.175,1412,2.485,1413,1.175,1414,1.175,1415,1.133,1416,2.888,1417,2.241,1418,1.175,1419,1.133,1420,1.095,1421,1.133,1422,1.175,1423,1.175,1424,1.133,1425,1.943,1426,1.175,1427,1.175,1428,1.943,1429,1.175,1430,1.175,1431,0.967,1432,1.175,1433,1.175,1434,1.175,1435,1.175,1436,3.815,1437,1.943,1438,1.175,1439,1.175,1440,1.175,1441,1.943,1442,1.175,1443,1.943,1444,1.943,1445,1.175,1446,1.175,1447,1.175,1448,1.943,1449,1.175,1450,2.888,1451,1.943,1452,1.943,1453,1.175,1454,1.175,1455,1.026,1456,1.175,1457,1.175,1458,1.175,1459,1.175,1460,1.175,1461,1.175,1462,1.943,1463,1.943,1464,1.943,1465,1.943,1466,2.485,1467,1.175,1468,1.175,1469,1.175,1470,1.175,1471,1.943,1472,1.943,1473,2.888,1474,1.175,1475,1.175,1476,1.175,1477,1.175,1478,1.175,1479,2.559,1480,3.446,1481,3.199,1482,1.943,1483,1.175,1484,1.943,1485,2.485,1486,1.175,1487,2.485,1488,1.175,1489,2.888,1490,1.943,1491,1.175,1492,1.175,1493,1.175,1494,1.943,1495,1.133,1496,1.175,1497,1.026,1498,1.175,1499,1.175,1500,1.175,1501,1.175,1502,1.943,1503,2.377,1504,1.175,1505,1.175,1506,1.175,1507,1.175,1508,1.175,1509,1.512,1510,1.175,1511,1.175,1512,1.175,1513,2.485,1514,1.175,1515,1.175,1516,1.133,1517,1.752,1518,1.175,1519,1.175,1520,1.175,1521,1.175,1522,1.175,1523,1.175,1524,1.175,1525,1.472,1526,1.175,1527,1.175,1528,1.175,1529,1.175,1530,1.095,1531,1.175,1532,1.175,1533,1.943,1534,1.175,1535,1.175,1536,1.175,1537,1.175,1538,1.175,1539,0.996,1540,1.175,1541,1.026,1542,1.059,1543,1.175,1544,0.996,1545,1.175,1546,1.175,1547,1.175,1548,1.175,1549,1.175,1550,1.175,1551,1.175,1552,1.175,1553,1.175,1554,1.175,1555,1.175,1556,0.804,1557,1.175,1558,1.175,1559,1.874,1560,1.175,1561,1.175,1562,1.175,1563,1.175,1564,1.175,1565,1.175,1566,1.175,1567,1.175,1568,1.943,1569,1.943,1570,1.943,1571,1.175,1572,2.315,1573,2.888,1574,1.943,1575,1.175,1576,1.175,1577,1.175,1578,1.175,1579,1.175,1580,1.175,1581,1.095,1582,1.943,1583,1.175,1584,1.175,1585,1.175,1586,1.157,1587,1.175,1588,1.175,1589,1.175,1590,1.943,1591,1.175,1592,2.485,1593,1.175,1594,1.175,1595,1.175,1596,1.943,1597,1.175,1598,1.175,1599,1.943,1600,1.943,1601,1.175,1602,1.175,1603,1.095,1604,1.133,1605,1.175,1606,1.175,1607,1.175,1608,1.943,1609,1.943,1610,1.175,1611,1.175,1612,1.943,1613,1.175,1614,1.175,1615,1.175,1616,1.175,1617,1.175,1618,1.175,1619,1.175,1620,1.133,1621,1.175,1622,1.175,1623,1.175,1624,1.175,1625,1.175,1626,1.943,1627,1.175,1628,1.175,1629,1.175,1630,1.175,1631,1.175,1632,1.175,1633,1.175,1634,1.175,1635,1.175,1636,1.943,1637,2.888,1638,2.485,1639,1.175,1640,1.175,1641,1.943,1642,1.175,1643,1.175,1644,1.175,1645,1.175,1646,1.175,1647,1.175,1648,1.175,1649,1.268,1650,1.943,1651,1.175,1652,1.175,1653,1.175,1654,1.133,1655,1.175,1656,1.175,1657,1.175,1658,1.175,1659,1.175,1660,1.175,1661,1.133,1662,1.175,1663,1.175,1664,1.175,1665,1.175,1666,1.175,1667,1.175,1668,2.888,1669,1.175,1670,1.175,1671,1.175,1672,1.175,1673,1.175,1674,1.175,1675,1.133,1676,1.175,1677,1.175,1678,1.943,1679,1.175,1680,1.943,1681,1.175,1682,1.175,1683,1.943,1684,1.175,1685,1.175,1686,1.175,1687,1.175,1688,1.175,1689,2.485,1690,1.175,1691,1.175,1692,1.175,1693,1.175,1694,1.175,1695,0.845,1696,1.175,1697,1.175,1698,1.175,1699,1.175,1700,1.175,1701,1.175,1702,1.175,1703,1.175,1704,1.026,1705,1.133,1706,1.175,1707,1.175,1708,0.996,1709,1.175,1710,1.175,1711,1.943,1712,3.199,1713,0.94,1714,1.175,1715,1.175,1716,1.175,1717,1.175,1718,1.175,1719,1.175,1720,1.943,1721,1.175,1722,1.175,1723,1.752,1724,1.175,1725,1.175,1726,1.095,1727,1.175,1728,1.175,1729,1.095,1730,1.175,1731,1.175,1732,1.175,1733,1.175,1734,1.175]],["title/components/SpinnerActivityReporterComponent.html",[205,0.319,746,1.439]],["body/components/SpinnerActivityReporterComponent.html",[3,0.077,4,0.06,5,0.052,8,0.428,12,0.173,13,0.477,14,0.719,18,0.314,19,0.008,21,4.991,26,0.077,30,1.711,34,1.397,36,1.315,39,3.076,57,2.064,58,3.635,59,1.088,60,0.952,63,1.317,65,2.824,73,0.555,78,0.114,96,0.712,99,1.375,101,2.079,108,2.294,111,2.563,136,1.88,140,0.584,143,0.826,159,0.004,160,0.005,161,0.004,168,1.05,181,0.826,188,5.953,190,3.174,192,0.825,196,0.921,198,1.527,199,0.829,201,0.584,205,0.508,209,1.791,218,3.333,225,1.017,235,1.939,237,4.31,244,2.611,248,1.302,259,3.033,260,0.413,264,1.561,273,1.752,314,4.775,315,5.26,322,3.17,325,3.17,335,5.238,339,2.703,341,3.183,342,1.88,343,4.657,353,4.31,354,3.033,359,2.036,364,2.987,370,4.245,375,2.709,376,4.833,382,5.19,383,5.19,384,5.19,385,6.307,386,6.794,387,6.947,388,4.186,391,2.767,396,5.19,397,3.833,399,5.885,400,3.833,401,5.19,402,3.833,404,3.833,406,3.833,407,5.885,409,2.824,410,4.548,411,5.953,412,3.569,413,3.833,442,1.213,462,1.701,464,1.263,479,0.455,523,1.983,600,1.463,653,1.494,654,1.609,655,1.402,656,1.88,658,3.833,659,2.345,661,1.835,662,1.724,663,1.939,664,5.668,665,4.276,682,5.668,683,2.538,684,4.026,685,4.186,686,4.186,687,4.186,688,4.186,689,4.186,690,4.186,693,4.186,694,3.569,696,4.186,697,6.427,699,5.668,701,1.527,702,1.545,703,3.528,704,2.144,705,1.561,706,2.144,707,2.144,708,1.67,709,2.03,710,2.144,711,1.835,712,2.144,713,1.344,714,2.144,715,1.749,716,2.212,717,1.835,718,3.528,719,1.709,720,1.835,721,1.835,722,1.118,723,1.709,724,1.835,725,2.144,726,1.88,727,2.144,728,2.03,729,1.835,730,2.166,731,2.144,732,1.749,733,3.528,734,1.791,735,2.96,736,1.791,737,1.577,738,1.791,739,2.903,740,1.749,741,1.928,742,2.144,743,1.709,744,2.144,745,1.978,746,2.459,747,2.911,748,1.402,749,1.527,750,2.144,751,1.835,752,2.144,753,1.88,754,1.402,755,2.144,756,1.749,757,2.03,758,2.144,4341,6.947,4342,6.394,4343,4.722,4344,7.77,4345,4.722,4346,4.722,4347,4.722]],["title/classes/SpinnerActivityReporterWidgetObject.html",[78,0.11,4348,3.691]],["body/classes/SpinnerActivityReporterWidgetObject.html",[3,0.078,4,0.061,5,0.053,8,0.483,12,0.176,13,0.628,14,0.735,17,3.546,18,0.324,19,0.008,25,1.806,26,0.078,34,1.052,35,1.4,36,0.99,57,1.371,59,0.966,66,1.806,71,1.118,73,0.578,78,0.116,81,2,85,1.082,96,1.104,101,1.288,109,0.71,138,2.479,140,0.592,143,1.129,148,2.19,156,2.388,159,0.004,160,0.006,161,0.004,163,1.188,165,2.91,168,1.063,172,1.306,181,0.837,191,2.58,196,0.939,198,1.497,199,0.799,201,0.825,205,0.573,218,3.565,225,1.027,246,1.871,248,1.227,260,0.417,267,0.514,281,0.534,282,0.79,327,3.198,339,2.542,342,2.916,347,1.966,359,1.074,362,0.971,365,0.895,391,2.421,411,5.208,436,2.325,439,1.742,442,1.237,452,4.799,459,1.966,460,2.816,462,1.306,464,1.862,465,3.663,479,0.464,519,2.316,523,1.936,525,2.421,530,2.388,531,4.142,548,2.845,553,2.546,554,3.872,555,2.798,556,3.426,557,3.872,558,2.58,559,2.316,560,2.546,561,1.557,562,2.249,563,1.917,564,2.546,565,2.546,566,1.871,567,2.546,568,2.546,569,2.546,570,1.871,571,1.783,572,2.959,624,2.546,635,3.325,638,3.067,645,2.58,649,2.07,662,1.18,665,4.319,746,1.524,747,2.643,760,6.833,761,3.909,762,4.404,763,2.816,764,4.156,765,4.368,766,4.368,767,4.156,768,4.368,769,3.546,770,4.368,774,2.733,775,3.425,776,2.249,777,1.429,778,2.733,779,1.627,780,2.546,781,2.636,782,2.733,783,3.425,784,2.733,785,1.429,786,2.733,787,2.017,788,4.008,789,3.747,790,2.845,791,2.733,792,4.778,793,3.425,794,2.733,795,3.425,796,3.116,797,2.733,798,3.425,799,2.714,800,2.733,801,3.425,802,2.733,803,3.425,804,1.826,805,2.733,806,2.733,807,3.425,808,2.733,809,3.425,810,1.491,811,1.429,812,3.212,813,3.677,814,2.733,815,3.425,816,1.491,817,2.733,818,4.269,820,4.269,825,4.269,826,2.388,827,4.269,828,4.269,1762,2.84,2912,4.269,4341,6.833,4348,5.259,4349,7.832,4350,7.832,4351,4.815,4352,4.815,4353,4.815,4354,4.815,4355,4.815,4356,4.815,4357,4.815]],["title/classes/SubscriptionTracker.html",[78,0.11,1279,1.608]],["body/classes/SubscriptionTracker.html",[0,0.28,3,0.093,4,0.073,5,0.063,8,0.339,12,0.21,13,0.542,14,0.67,18,0.3,19,0.008,26,0.118,50,0.983,52,1.072,57,2.27,59,1.146,78,0.139,85,1.195,113,3.098,114,1.829,143,0.741,158,1.525,159,0.005,160,0.006,161,0.005,163,1.415,170,1.653,172,1.422,181,0.938,192,1.003,196,0.878,198,1.434,199,0.728,201,0.728,205,0.509,225,0.894,260,0.454,267,0.851,281,0.461,282,0.942,342,3.175,359,2.043,365,1.482,377,3.869,393,2.112,438,3.257,479,0.553,649,2.468,654,1.829,1030,5.492,1048,2.436,1273,3.838,1274,2.468,1279,2.569,1539,4.315,2632,3.527,2754,5.168,3521,6.026,3522,7.169,3523,4.659,3524,7.665,3525,7.068,3526,5.088,3527,7.952,3528,5.088,3529,7.665,3530,7.665,3532,5.088,3533,5.088,3534,5.088,3535,8.453,3536,7.068,3538,6.441,3540,7.83,3541,5.088,3542,5.088,3543,5.088,3544,5.088,3545,5.898,3546,6.441,3547,5.492,3548,6.441,3549,6.441,3550,5.088,3551,6.441,3552,5.088,3553,5.088,3554,5.088,3555,5.088,3556,6.441,3557,6.441,3558,5.088,3559,5.088,3560,5.088,3561,5.088,3562,5.088,3563,5.088,4358,7.266,4359,5.739,4360,5.739,4361,5.739,4362,5.739]],["title/classes/TestElement.html",[78,0.11,450,3.065]],["body/classes/TestElement.html",[3,0.058,4,0.045,5,0.039,8,0.366,12,0.13,13,0.627,14,0.663,17,2.863,18,0.315,19,0.008,22,1.229,26,0.085,35,2.618,36,1.076,45,2.766,59,1.036,71,1.693,73,0.574,77,3.21,78,0.126,81,1.869,85,1.09,96,0.789,99,0.674,109,0.772,115,0.884,123,3.954,136,2.083,140,0.478,158,0.746,159,0.006,160,0.004,161,0.003,163,1.945,168,0.583,170,1.412,172,1.301,181,0.884,192,0.621,196,0.929,198,1.35,199,0.739,201,0.778,205,0.366,217,1.286,225,1.053,234,1.239,237,2.396,246,2.411,248,1.279,260,0.434,267,0.882,273,0.859,276,1.101,281,0.584,282,1.379,345,1.348,362,1.054,365,0.661,368,5.975,433,5.189,434,4.291,435,6.534,436,2.756,437,1.71,438,2.017,439,1.286,440,3.72,441,3.151,442,0.913,443,2.969,445,2.396,447,3.954,448,2.283,450,6.229,451,3.151,452,4.584,454,3.151,456,2.885,457,2.283,458,5.502,459,3.725,460,2.212,461,5.61,462,1.407,463,2.687,464,1.83,465,3.46,467,2.032,470,3.085,471,2.396,473,2.396,475,4.184,478,5.921,479,0.343,480,4.14,481,1.945,482,2.017,483,1.88,484,1.945,485,1.88,486,1.88,487,2.443,488,4.918,489,4.637,490,5.502,491,3.151,492,4.637,493,4.246,494,4.637,495,5.502,496,6.068,497,3.151,498,3.151,499,3.151,500,3.151,501,3.151,502,4.637,503,3.151,504,3.151,505,3.151,506,3.151,507,3.151,508,2.677,509,3.72,510,2.366,511,3.36,512,4.246,513,4.637,514,2.31,515,4.637,516,4.637,517,6.068,518,4.637,519,2.516,520,4.637,521,4.637,522,3.151,523,1.728,524,4.477,525,2.522,526,3.151,527,3.151,528,5.767,529,3.151,530,2.594,531,3.62,532,3.151,533,3.151,534,3.746,535,4.637,536,6.068,537,5.502,538,3.151,539,3.151,540,2.677,541,5.556,542,3.151,543,6.068,544,4.637,545,4.246,546,2.032,547,3.72,548,2.659,549,1.768,550,6.068,551,3.151,552,4.206,553,2.766,554,4.035,555,2.696,556,3.62,557,4.035,558,2.726,559,2.985,560,2.766,561,1.692,562,3.197,563,2.083,564,2.766,565,2.766,566,2.032,567,2.766,568,2.766,569,2.766,570,2.032,571,1.937,572,3.214,573,3.151,574,1.819,575,2.283,576,2.184,577,2.283,578,2.283,579,2.283,580,3.151,581,2.283,582,3.151,583,3.526,584,1.908,585,3.36,586,4.637,587,3.151,588,5.174,589,6.068,590,3.151,591,6.068,592,3.151,593,4.637,594,5.502,595,3.151,596,3.151,597,3.151,598,4.637,599,1.808,600,1.62,601,4.637,602,3.151,603,4.637,604,3.151,605,3.151,606,4.637,607,5.502,608,0.731,609,0.971,610,3.151,769,2.863,4363,5.231,4364,5.231,4365,5.231,4366,5.231,4367,3.554,4368,3.554,4369,5.231,4370,3.554,4371,3.554,4372,3.554,4373,3.554,4374,3.554,4375,3.554,4376,3.554,4377,3.554,4378,3.554,4379,3.554,4380,3.554,4381,3.554,4382,3.554,4383,3.554,4384,3.554,4385,3.554,4386,3.554,4387,3.554,4388,3.554]],["title/classes/ThousandsUnit.html",[78,0.11,4389,3.691]],["body/classes/ThousandsUnit.html",[3,0.067,4,0.053,5,0.046,8,0.499,12,0.152,13,0.437,14,0.695,18,0.308,19,0.008,20,1.574,26,0.067,34,1.609,62,2.981,71,1.868,73,0.548,78,0.141,84,3.007,85,1.186,109,1.086,115,1.09,130,3.763,140,0.867,143,0.537,159,0.003,160,0.005,161,0.003,163,1.026,168,0.962,172,1.569,179,1.944,181,0.757,190,3.523,196,0.946,198,1.415,199,0.771,201,0.879,218,3.699,225,1.058,234,0.986,246,2.276,267,0.626,276,1.289,281,0.467,365,1.442,374,2.86,510,2.544,523,2.194,549,1.406,608,0.856,609,1.136,737,2.4,763,1.776,811,2.013,838,3.843,898,2.129,942,3.342,988,3.65,1101,3.767,1165,2.056,1235,3.25,1297,2.841,1308,3.377,1325,2.818,1349,2.818,1371,2.001,1479,3.079,1695,2.769,2067,4.465,2449,4.6,2657,3.055,3676,5.231,3677,5.231,3678,5.426,3679,5.575,3680,5.575,3681,4.962,3682,5.575,3683,4.728,3684,5.312,3687,2.959,3688,2.959,3689,5.231,3690,5.5,3694,2.959,3695,5.5,3696,5.231,3697,4.572,3698,2.959,3699,2.959,3700,4.572,3701,5.514,3702,2.959,3703,2.959,3704,2.959,3705,5.17,3706,5.17,3707,5.17,3708,5.426,3709,4.572,3710,2.959,3711,4.356,3742,2.959,3752,3.763,3884,5.906,3885,2.805,3886,3.6,3887,4.823,3888,5.505,3889,6.534,3891,4.167,3892,4.167,3893,4.167,3894,5.725,3897,3.377,3898,3.377,3899,2.959,3900,4.167,3901,4.167,3902,4.167,3903,2.959,3904,2.959,3905,4.167,3906,4.167,3907,4.167,3908,2.959,4140,3.688,4141,3.688,4143,3.688,4144,3.688,4145,3.688,4146,3.688,4147,3.688,4148,3.688,4149,3.688,4150,3.688,4151,3.688,4152,3.688,4389,3.377,4390,4.161]],["title/classes/Unit.html",[78,0.11,737,1.121]],["body/classes/Unit.html",[3,0.08,4,0.063,5,0.054,8,0.488,12,0.182,13,0.493,14,0.666,18,0.305,19,0.008,20,1.535,26,0.08,34,1.445,62,2.936,71,1.84,73,0.556,78,0.16,84,2.935,85,1.232,109,0.975,115,1.137,130,3.187,140,0.861,159,0.004,160,0.005,161,0.004,163,1.224,168,0.815,172,1.546,181,0.854,190,3.443,192,0.867,196,0.914,198,1.357,199,0.776,201,0.877,225,1.031,246,1.928,267,0.706,276,1.537,281,0.502,365,1.382,374,2.568,510,2.285,523,2.165,549,2.234,562,2.318,608,1.021,737,2.393,811,1.962,838,3.751,898,3.383,942,3.599,988,3.278,1101,3.383,1165,2.004,1235,3.114,1248,2.079,1250,2.134,1297,2.769,1308,3.467,1325,2.387,1349,2.387,1371,3.18,1479,3.002,1695,2.699,2067,4.366,2081,3.751,2449,4.583,2657,2.987,3676,5.011,3677,5.011,3678,4.457,3679,5.344,3680,5.344,3681,4.457,3682,5.344,3683,4.246,3684,5.092,3689,5.011,3690,5.411,3695,5.411,3696,5.011,3697,4.457,3700,4.457,3701,5.454,3705,5.655,3706,5.092,3707,5.092,3708,5.344,3709,4.457,3711,4.246,3752,3.187,3884,4.246,3885,3.345,3886,3.049,3887,4.702,3891,3.529,3892,3.529,3893,3.529,3894,6.04,3899,4.702,3900,4.702,3901,4.702,3902,4.702,3903,3.529,3904,3.529,3905,4.702,3906,4.702,3907,4.702,3908,3.529,4120,4.399,4391,4.962,4392,4.962,4393,6.611,4394,4.962,4395,4.962,4396,4.962,4397,4.962,4398,4.962,4399,4.962,4400,4.962,4401,4.962]],["title/injectables/UnitFormatter.html",[1898,2.255,3717,2.921]],["body/injectables/UnitFormatter.html",[3,0.093,4,0.073,5,0.063,8,0.471,12,0.211,14,0.671,18,0.277,19,0.008,20,1.689,26,0.093,73,0.565,78,0.139,85,1.24,115,0.94,136,2.897,140,0.843,141,2.971,158,1.76,159,0.005,160,0.006,161,0.005,181,0.94,192,1.005,194,3.608,196,0.81,198,1.366,199,0.729,201,0.878,225,0.991,260,0.477,261,1.782,265,3.695,276,1.782,281,0.461,321,4.091,342,2.29,479,0.554,671,5.099,737,2.37,1165,2.206,1374,2.541,1695,2.971,1753,4.091,1816,6.45,1823,6.45,1872,4.091,1898,3.608,1900,3.695,2067,3.848,2069,4.368,2081,6.34,2449,3.848,2657,2.633,3683,3.695,3690,5.515,3695,5.154,3701,5.765,3705,4.674,3706,5.388,3717,5.388,3855,7.709,3981,4.348,4402,7.435,4403,5.099,4404,8.975,4405,7.276,4406,5.752,4407,7.276,4408,5.752,4409,8.388,4410,7.276,4411,8.388,4412,8.388,4413,8.388,4414,8.388,4415,7.276,4416,8.652,4417,5.752,4418,7.276,4419,4.669,4420,5.752,4421,5.752,4422,5.752,4423,5.752]],["title/modules/VcdActionMenuModule.html",[2792,1.572,4424,3.065]],["body/modules/VcdActionMenuModule.html",[3,0.109,4,0.086,5,0.074,19,0.008,26,0.109,63,1.881,78,0.163,159,0.006,160,0.007,161,0.006,164,5.099,260,0.528,261,2.09,479,0.65,668,2.901,701,2.182,705,3.15,1033,2.385,1165,2.045,1267,1.961,1275,3.452,1276,3.693,1281,3.063,1586,2.28,1947,3.829,2657,2.441,2792,2.332,2793,6.191,2794,3.063,2795,3.063,2796,3.889,2797,3.345,2798,3.195,2799,4.247,2806,5.644,2807,3.979,2809,4.392,2810,3.345,2812,3.245,2813,3.345,2814,3.345,2815,3.345,2816,3.345,2817,3.345,2818,4.554,2819,3.452,2820,4.106,2822,4.733,2823,4.554,2824,5.099,4424,6.402,4425,5.98,4426,5.98,4427,6.746,4428,5.98,4429,6.746,4430,5.98]],["title/modules/VcdActivityReporterModule.html",[2792,1.572,4431,3.065]],["body/modules/VcdActivityReporterModule.html",[3,0.107,4,0.084,5,0.072,19,0.008,26,0.107,78,0.159,159,0.005,160,0.007,161,0.005,260,0.53,261,2.04,315,4.048,316,4.048,339,2.299,479,0.635,653,3.024,659,2.13,668,2.832,701,2.13,746,3.024,747,2.13,1165,1.997,1267,1.915,1586,2.226,1947,3.738,2657,2.383,2792,2.277,2794,2.991,2795,2.991,2796,3.849,2797,3.266,2798,2.623,2799,4.204,2807,3.922,2809,4.33,2810,3.266,2812,3.168,2813,3.266,2814,3.266,2815,3.266,2816,3.266,2817,3.266,2818,4.49,2819,3.371,2820,4.048,2822,4.666,2823,4.49,4431,6.442,4432,5.839,4433,5.839,4434,5.839,4435,5.839,4436,6.158,4437,6.158,4438,6.587,4439,5.979,4440,6.587,4441,5.839,4442,6.587,4443,5.839,4444,7.91]],["title/modules/VcdComponentsModule.html",[2792,1.572,4445,3.437]],["body/modules/VcdComponentsModule.html",[3,0.104,4,0.081,5,0.07,19,0.008,26,0.104,60,1.288,63,1.781,78,0.154,159,0.005,160,0.006,161,0.005,260,0.537,264,2.112,316,3.925,479,0.616,668,2.747,701,2.066,826,3.167,1033,2.259,1165,1.937,1281,2.9,1586,2.159,2048,4.103,2657,2.311,2792,2.208,2793,6.188,2794,2.9,2795,2.9,2796,2.9,2797,3.167,2798,2.543,2799,4.148,2806,5.64,2807,3.85,2810,3.167,2811,4.543,2812,3.072,2813,3.167,2814,3.167,2815,3.167,2816,3.167,2817,3.167,2820,3.973,2824,4.828,3136,6.188,3975,3.167,4153,6.528,4424,6.188,4430,5.662,4431,6.188,4436,6.188,4437,6.188,4441,5.662,4443,5.662,4445,7.2,4446,5.662,4447,5.662,4448,6.528,4449,5.896,4450,6.387,4451,6.387,4452,5.662,4453,6.387,4454,6.387,4455,6.387,4456,6.387,4457,5.185,4458,6.387]],["title/modules/VcdDataExporterModule.html",[2792,1.572,4448,3.234]],["body/modules/VcdDataExporterModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,60,1.391,78,0.167,159,0.006,160,0.007,161,0.006,260,0.525,261,2.138,479,0.665,668,2.968,701,2.232,711,3.712,913,2.281,1165,2.092,1267,2.006,1586,2.333,1901,4.241,2048,4.433,2657,2.497,2792,2.385,2794,3.133,2795,3.133,2796,3.926,2797,3.422,2798,2.748,2799,4.288,2807,4.033,2809,3.777,2810,3.422,2811,4.909,2812,3.32,2813,3.422,2814,3.422,2815,3.422,2816,3.422,2817,3.422,2818,4.616,2819,3.531,2820,4.162,2821,5.483,2822,4.797,2823,4.616,4448,6.63,4459,6.118,4460,6.118,4461,6.118,4462,6.901,4463,6.901]],["title/modules/VcdDatagridModule.html",[2792,1.572,3136,3.065]],["body/modules/VcdDatagridModule.html",[3,0.094,4,0.074,5,0.064,19,0.008,26,0.094,63,1.622,73,0.356,78,0.14,159,0.005,160,0.006,161,0.005,248,0.975,260,0.543,261,1.801,267,0.899,316,3.574,479,0.561,668,2.501,701,1.881,708,3.29,713,2.662,715,3.282,717,2.26,719,3.207,720,2.26,721,3.443,722,1.378,723,3.207,748,2.175,749,2.866,826,2.884,913,1.923,994,2.206,1019,5.156,1033,2.057,1165,1.763,1267,1.691,1275,2.976,1281,2.641,1284,4.176,1376,3.934,1586,1.966,1708,4.175,2657,2.104,2792,2.01,2794,2.641,2795,2.641,2796,3.642,2797,2.884,2798,2.918,2799,3.978,2806,5.446,2807,3.633,2809,4.011,2810,2.884,2811,4.137,2812,2.798,2813,2.884,2814,2.884,2815,2.884,2816,2.884,2817,2.884,2818,4.159,2819,2.976,2820,3.75,2821,4.94,2822,4.322,2823,4.159,2824,4.396,3136,6.521,3512,5.975,3513,4.94,4133,5.212,4158,5.948,4424,5.975,4431,5.975,4439,5.539,4449,5.693,4452,5.156,4457,4.721,4464,5.156,4465,5.156,4466,5.156,4467,5.156,4468,4.721,4469,7.327,4470,5.156,4471,5.816,4472,5.816,4473,5.816,4474,5.816,4475,5.816,4476,8.422,4477,5.816,4478,5.816,4479,5.816]],["title/classes/VcdDatagridWidgetObject.html",[78,0.11,4480,3.691]],["body/classes/VcdDatagridWidgetObject.html",[3,0.097,4,0.076,5,0.065,8,0.352,12,0.218,13,0.556,14,0.768,18,0.309,19,0.008,25,2.002,26,0.097,47,2.824,57,2.12,73,0.535,78,0.144,114,2.043,143,1.13,152,2.461,159,0.005,160,0.006,161,0.005,163,1.472,168,1.222,191,2.965,196,0.928,200,4.511,201,0.799,217,2.937,218,3.384,225,0.981,248,1.36,260,0.424,281,0.554,362,1.763,365,1.508,436,2.596,439,2.937,443,4.607,460,1.809,464,1.603,465,3.736,486,4.785,525,2.81,635,3.685,662,1.624,754,2.21,763,2.773,937,3.833,952,5.296,953,5.296,954,5.296,958,5.472,959,4.244,960,5.773,962,5.773,963,4.244,965,4.392,966,4.244,971,5.628,1038,3.161,1264,4.443,1300,3.119,1313,2.965,1810,3.52,2258,5.29,2259,5.29,2260,5.29,2261,5.29,3138,6.588,3139,5.29,4480,6.044,4481,7.754,4482,5.29,4483,8.117,4484,8.117,4485,8.117,4486,5.967,4487,5.967,4488,5.967,4489,5.967,4490,5.967,4491,5.967,4492,5.967,4493,5.967]],["title/modules/VcdErrorBannerModule.html",[2792,1.572,4436,3.065]],["body/modules/VcdErrorBannerModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,78,0.167,159,0.006,160,0.007,161,0.006,260,0.519,261,2.143,359,1.543,479,0.667,668,2.975,701,2.238,726,3.824,1165,2.098,1267,2.011,1586,2.339,1947,3.927,2657,2.504,2792,2.392,2794,3.142,2795,3.142,2796,3.931,2797,3.431,2798,2.755,2799,4.292,2807,4.039,2809,3.787,2810,3.431,2812,3.328,2813,3.431,2814,3.431,2815,3.431,2816,3.431,2817,3.431,2818,4.623,2819,3.541,2820,4.168,2822,4.804,2823,4.623,2956,5.23,2999,6.134,4436,6.287,4439,6.157,4494,6.134,4495,6.134,4496,6.134,4497,6.92]],["title/modules/VcdFormModule.html",[2792,1.572,4449,2.921]],["body/modules/VcdFormModule.html",[3,0.104,4,0.081,5,0.07,19,0.008,26,0.104,78,0.154,140,0.584,159,0.005,160,0.006,161,0.005,260,0.534,261,1.98,267,0.683,479,0.616,668,2.749,701,2.067,729,3.664,730,2.427,732,3.492,737,1.916,740,3.492,743,3.412,913,2.113,1165,1.938,1267,1.858,1586,2.161,1947,3.628,2464,3.928,2657,2.313,2792,2.21,2794,2.903,2795,2.903,2796,4.05,2797,3.17,2798,3.332,2799,4.15,2807,3.852,2809,3.499,2810,3.17,2812,3.075,2813,3.17,2814,3.17,2815,3.17,2816,3.17,2817,3.17,2818,4.409,2819,3.271,2820,3.975,2821,5.237,2822,4.582,2823,4.409,3273,4.832,3313,4.547,3400,4.547,3498,4.106,3499,4.774,3717,5.826,3718,5.189,3719,4.31,4158,6.306,4449,6.171,4498,5.667,4499,5.667,4500,6.393,4501,5.667,4502,5.189,4503,6.393]],["title/interfaces/VcdFormlyFieldConfig.html",[0,0.175,4504,3.437]],["body/interfaces/VcdFormlyFieldConfig.html",[0,0.29,2,1.328,3,0.099,4,0.077,5,0.067,8,0.359,9,2.49,12,0.223,13,0.562,14,0.753,18,0.323,19,0.008,26,0.139,27,2.01,50,1.12,66,1.499,73,0.501,96,1.136,109,1.111,115,1.057,140,0.688,152,2.284,159,0.005,160,0.006,161,0.005,168,1.343,199,0.748,205,0.573,244,2.482,260,0.517,267,0.649,327,3.342,654,1.53,662,1.558,669,2.49,702,1.469,722,1.784,730,2.1,734,3.104,735,2.482,736,3.104,737,2.169,738,3.104,855,3.327,856,3.905,870,3.735,1248,2.546,1250,2.614,1273,3.155,1274,2.614,1352,2.421,1383,2.924,2118,3.905,2391,3.623,2392,3.45,2436,4.098,2464,3.736,3323,3.905,3449,4.934,3450,4.934,3469,3.905,3470,3.905,3481,4.324,3482,4.324,3483,4.324,3499,4.629,3719,4.098,3723,4.324,3726,4.595,4504,6.647,4505,4.098,4506,4.324,4507,7.584,4508,7.796,4509,7.584,4510,7.584,4511,6.773,4512,7.274,4513,6.114,4514,6.677,4515,4.934,4516,4.934,4517,4.934,4518,5.389,4519,7.256,4520,6.114,4521,4.324,4522,4.934,4523,4.934,4524,4.934]],["title/modules/VcdFormlyModule.html",[2792,1.572,4525,3.437]],["body/modules/VcdFormlyModule.html",[3,0.101,4,0.079,5,0.068,8,0.367,9,2.85,14,0.522,18,0.215,19,0.008,25,1.883,26,0.101,50,0.766,78,0.15,85,0.859,99,1.179,107,6.198,115,0.986,140,0.568,143,0.986,159,0.005,160,0.006,161,0.005,181,0.803,196,0.631,198,1.064,199,0.568,225,0.697,260,0.535,261,1.925,267,0.664,281,0.394,409,2.745,479,0.599,662,1.132,668,2.672,701,2.01,734,3.417,735,3.118,736,3.417,737,1.883,738,3.417,913,2.054,1165,1.884,1317,2.745,1586,2.1,1947,3.527,2075,6.198,2466,6.198,2657,2.249,2792,2.148,2794,2.822,2795,2.822,2796,3.753,2797,3.081,2798,3.04,2799,3.786,2807,3.786,2809,4.179,2810,3.081,2812,2.989,2813,3.081,2814,3.081,2815,3.081,2816,3.081,2817,3.081,2818,4.334,2819,3.18,2820,4.23,2821,5.147,2823,4.334,3145,5.509,3469,4.905,3470,3.992,3481,4.42,3499,4.692,3719,4.189,4449,5.787,4457,5.044,4505,5.147,4513,7.408,4515,5.044,4516,5.044,4517,5.044,4521,5.879,4525,7.156,4526,5.509,4527,5.509,4528,6.215,4529,5.044,4530,6.215,4531,7.636,4532,6.215,4533,8.266,4534,6.215,4535,7.636,4536,7.636,4537,6.215,4538,6.215,4539,6.198,4540,6.215]],["title/interfaces/VcdFormlyTemplateOptions.html",[0,0.175,4511,3.437]],["body/interfaces/VcdFormlyTemplateOptions.html",[0,0.28,2,1.251,3,0.093,4,0.073,5,0.063,8,0.338,9,1.893,12,0.21,13,0.541,14,0.805,18,0.327,19,0.008,26,0.136,27,1.893,50,1.106,52,1.236,66,1.79,73,0.561,96,1.331,109,1.071,115,1.029,140,0.765,152,2.676,159,0.005,160,0.006,161,0.005,168,1.307,199,0.728,205,0.558,244,2.338,260,0.51,267,0.611,327,3.252,654,1.826,662,1.525,669,2.633,702,1.754,722,1.719,730,2.221,734,3.021,735,2.338,736,3.021,737,2.259,738,3.021,855,4.583,856,5.379,870,3.598,1248,2.399,1250,2.462,1273,3.508,1274,2.462,1352,2.28,1383,3.49,2118,5.379,2391,4.028,2392,3.25,2436,5.645,2464,3.519,3323,5.379,3449,6.797,3450,6.797,3469,3.678,3470,3.678,3481,4.073,3482,5.956,3483,5.956,3499,4.459,3719,3.861,3723,4.073,3726,6.33,4504,5.484,4505,3.861,4506,4.073,4507,6.432,4508,7.423,4509,5.077,4510,5.077,4511,6.33,4512,6.465,4513,5.89,4514,7.061,4515,4.648,4516,4.648,4517,4.648,4518,6.432,4519,7.061,4520,5.89,4521,4.073,4522,4.648,4523,4.648,4524,4.648]],["title/modules/VcdLoadingIndicatorModule.html",[2792,1.572,4437,3.065]],["body/modules/VcdLoadingIndicatorModule.html",[3,0.112,4,0.088,5,0.076,19,0.008,26,0.112,78,0.167,159,0.006,160,0.007,161,0.006,260,0.519,261,2.143,375,2.19,479,0.667,668,2.975,701,2.238,741,3.921,1165,2.098,1267,2.011,1586,2.339,1947,3.927,2657,2.504,2792,2.392,2794,3.142,2795,3.142,2796,3.931,2797,3.431,2798,2.755,2799,4.292,2807,4.039,2809,3.787,2810,3.431,2812,3.328,2813,3.431,2814,3.431,2815,3.431,2816,3.431,2817,3.431,2818,4.623,2819,3.541,2820,4.168,2822,4.804,2823,4.623,3576,4.922,4437,6.287,4439,6.157,4541,6.134,4542,6.134,4543,6.134,4544,6.92,4545,6.92]],["title/classes/WidgetFinder.html",[78,0.11,3166,2.921]],["body/classes/WidgetFinder.html",[0,0.282,3,0.058,4,0.045,5,0.039,8,0.211,12,0.131,13,0.589,14,0.576,18,0.315,19,0.008,20,1.218,22,1.234,25,0.88,26,0.124,34,0.78,35,1.037,36,1.079,41,2.293,50,1.02,52,0.527,57,2.48,59,0.942,66,1.691,71,1.218,73,0.549,77,1.387,78,0.15,81,2.296,85,1.274,87,1.847,91,2.103,99,0.677,109,0.527,113,1.387,114,0.898,115,0.678,133,1.059,134,2.293,138,2.17,140,0.326,148,2.795,156,1.77,158,0.749,159,0.003,160,0.006,161,0.003,163,0.88,165,2.73,168,0.586,172,1.11,179,1.667,181,0.803,190,1.354,192,1.277,196,0.776,198,1.251,199,0.667,201,0.626,204,1.495,205,0.589,217,1.291,225,0.82,234,0.845,246,2.969,248,1.043,260,0.354,267,0.93,273,0.863,281,0.533,282,0.861,327,2.8,328,2.949,342,1.421,347,2.54,359,0.796,362,1.54,365,1.156,393,1.994,409,1.576,434,3.689,436,2.496,437,1.717,439,2.765,442,1.598,452,4.56,457,2.293,459,1.457,460,2.768,462,1.223,464,1.789,465,3.522,467,2.038,479,0.344,480,3.893,481,1.953,482,2.026,483,1.887,484,1.953,485,3.29,487,2.906,508,1.826,511,2.293,523,2.063,524,4.944,525,1.18,530,1.77,531,2.774,534,2.872,548,2.839,552,2.193,553,1.887,554,3.627,555,2.698,556,3.29,557,3.29,558,2.089,559,2.524,560,2.774,561,2.012,562,1.667,563,2.477,564,1.887,565,1.887,566,2.417,567,1.887,568,1.887,569,1.887,570,2.665,571,1.322,575,2.293,576,3.224,577,2.293,578,2.293,579,2.293,581,3.996,584,0.995,599,2.526,608,0.734,609,0.975,613,4.194,618,1.898,619,3.537,620,3.537,621,4.194,622,2.371,623,3.537,624,3.627,625,3.537,626,2.702,630,3.996,635,2.382,636,2.293,637,3.537,638,3.68,639,3.537,642,2.406,643,2.193,644,2.406,645,3.042,646,3.669,649,2.256,656,2.089,737,0.88,762,2.524,763,2.549,764,2.026,767,2.026,769,1.953,774,2.026,776,3.204,777,1.847,778,2.026,779,1.206,780,2.774,781,1.953,782,2.026,784,2.026,785,1.059,786,2.026,787,1.495,788,3.509,789,3.183,790,2.417,791,2.026,792,4.337,794,2.026,796,2.524,797,2.026,799,2.198,800,2.026,802,2.026,804,1.354,805,2.026,806,2.026,808,2.026,810,2.263,811,1.059,812,2.601,813,2.978,814,2.026,816,1.105,817,2.026,838,1.576,841,1.291,897,2.774,938,2.193,979,1.77,985,1.576,1024,2.685,1070,1.421,1092,1.291,1239,1.77,1291,1.457,1333,1.717,1342,1.717,1346,1.576,1544,3.799,1649,1.943,1755,2.193,1766,1.77,1780,1.77,1782,1.887,1788,1.953,1805,2.406,1809,2.293,1810,3.094,1847,2.193,1977,2.406,2077,3.37,2223,1.953,2315,1.826,2346,2.601,2681,2.105,2773,2.105,2850,2.406,3149,3.996,3165,5.312,3166,4.405,3167,4.694,3168,4.425,3169,2.539,3170,2.539,3171,2.539,3172,2.539,3173,5.763,3174,2.539,3175,3.732,3176,2.539,3177,2.539,3178,4.425,3179,2.539,3180,4.425,3181,2.406,3182,2.539,3183,4.425,3184,2.539,3185,2.539,3186,2.406,3187,2.539,3188,2.539,3189,2.539,3190,2.539,3191,2.539,3192,3.732,3193,2.539,3194,2.406,3195,2.539,3196,2.293,3197,2.539,3198,2.539,3199,2.406,3200,2.539,3201,2.539,3202,2.406,3203,2.539,3204,2.539,3205,2.406,3206,2.193,3207,2.539,3208,3.732,3209,3.732,3210,2.539,3211,2.539,3212,4.425,3213,3.732,3214,4.425,3215,2.539,3216,2.539,3217,2.539,3218,2.539,3219,2.539,3220,2.539,3221,2.539,3222,2.539,3223,2.406,3224,2.539,3225,2.539,3226,2.539,3227,2.539,3228,2.539,3229,2.539,3230,2.105,3231,2.193,3232,2.539,3233,2.539,3234,2.539,3235,2.539,3236,2.539,3237,2.539,3238,2.539,3239,2.539,3240,2.539,3241,2.026,3242,3.732,3243,2.539,3244,3.732,3245,4.425,3246,5.435,3247,2.539,3248,4.425,3249,2.539,3250,2.539,3251,2.539,3252,2.539,3253,2.539,3254,2.539,3255,2.539,3256,2.539,3257,2.539,3258,2.539,3259,2.539,3260,2.539,3261,4.425,3262,2.539,3263,2.539,3264,2.539,3265,2.539,3266,2.539,3267,2.539,3268,2.539,3269,2.539,3270,2.293,4546,5.247,4547,3.569,4548,3.569,4549,3.569,4550,3.569,4551,3.569,4552,3.569]],["title/classes/WidgetObject.html",[78,0.11,762,2.187]],["body/classes/WidgetObject.html",[0,0.262,3,0.049,4,0.038,5,0.033,8,0.441,12,0.11,13,0.612,14,0.677,17,2.53,18,0.318,19,0.008,20,0.7,22,1.042,25,0.744,26,0.116,34,1.01,35,1.344,36,1.156,41,2.969,50,0.974,52,0.445,57,2.368,59,0.974,66,1.841,71,1.305,73,0.571,77,1.171,78,0.136,81,2.3,85,1.265,87,1.372,91,2.13,99,0.572,109,0.682,113,1.796,114,1.163,115,0.597,133,1.372,134,2.969,138,2.437,140,0.513,143,0.964,148,2.771,156,2.787,158,0.633,159,0.002,160,0.006,161,0.002,163,0.744,165,2.911,168,0.495,172,0.538,179,1.408,181,0.814,190,1.143,192,1.253,196,0.832,198,1.351,199,0.749,201,0.777,204,1.936,205,0.622,217,1.091,225,0.944,246,2.64,248,1.202,260,0.32,267,0.899,273,0.729,281,0.52,282,0.759,327,3.144,328,2.417,342,2.238,347,2.295,359,0.672,362,1.505,365,1.045,393,1.975,409,2.042,434,3.885,436,2.55,437,1.45,439,2.594,442,1.746,452,4.728,457,1.937,459,1.887,460,2.818,462,1.331,464,1.836,465,3.68,479,0.291,480,3.857,481,1.65,482,1.711,483,1.594,484,1.65,485,2.972,487,2.626,508,2.365,511,2.969,519,1.45,523,1.768,524,4.574,525,1.528,530,2.292,531,3.792,534,2.53,548,2.64,552,1.853,553,2.444,554,3.947,555,2.8,556,3.594,557,3.792,558,2.509,559,2.704,560,2.972,561,1.818,562,2.159,563,2.509,564,2.444,565,2.444,566,2.64,567,2.444,568,2.444,569,2.444,570,2.992,571,1.712,572,1.853,575,1.937,576,2.84,577,1.937,578,1.937,579,1.937,581,3.611,584,0.841,599,2.479,608,0.62,609,0.823,613,2.032,618,1.091,619,2.032,620,2.032,621,3.116,622,2.178,623,2.032,624,3.792,625,2.032,626,2.403,630,3.611,635,2.099,636,1.937,637,2.032,638,3.702,639,2.032,642,2.032,643,1.853,644,2.032,645,3.067,646,3.315,649,1.987,656,2.238,737,0.744,762,2.704,763,2.759,764,3.577,765,3.116,766,3.116,767,3.577,768,3.116,769,3.077,770,3.116,774,2.623,776,3.487,777,2.216,778,3.19,779,1.9,780,3.333,781,3.077,782,2.623,784,2.623,785,1.372,786,2.623,787,1.936,788,3.941,789,3.669,790,2.786,791,2.623,792,4.72,794,2.623,796,3.031,797,2.623,799,2.64,800,2.623,802,2.623,804,1.753,805,2.623,806,2.623,808,2.623,810,2.221,811,1.372,812,3.125,813,3.577,814,2.623,816,1.432,817,2.623,838,1.332,841,1.091,897,2.444,938,2.84,961,2.673,979,1.495,985,1.332,1024,2.365,1070,1.2,1092,1.091,1239,1.495,1291,1.887,1333,2.223,1342,2.223,1346,1.332,1544,3.269,1649,1.712,1755,2.84,1766,1.495,1780,1.495,1782,1.594,1788,1.65,1805,3.116,1809,2.969,1810,2.726,1847,2.84,1977,2.032,2077,1.937,2223,2.53,2315,2.365,2346,2.292,2681,1.778,2773,2.726,2850,2.032,3149,4.606,3165,4.365,3166,3.611,3167,4.365,3168,3.998,3169,2.144,3170,3.288,3171,3.288,3172,3.288,3173,5.309,3174,3.288,3175,4.482,3176,3.288,3177,3.288,3178,4.482,3179,3.288,3180,4.834,3181,3.116,3182,3.288,3183,5.1,3184,3.288,3185,3.288,3186,3.116,3187,3.288,3188,3.288,3189,3.288,3190,3.288,3191,3.288,3192,4.482,3193,3.288,3194,3.116,3195,3.288,3196,2.969,3197,3.288,3198,3.288,3199,3.116,3200,3.288,3201,3.288,3202,3.116,3203,2.144,3204,2.144,3205,2.032,3206,1.853,3207,2.144,3208,3.288,3209,3.288,3210,2.144,3211,2.144,3212,3.998,3213,3.288,3214,3.998,3215,2.144,3216,2.144,3217,2.144,3218,2.144,3219,2.144,3220,2.144,3221,2.144,3222,2.144,3223,2.032,3224,2.144,3225,2.144,3226,2.144,3227,2.144,3228,2.144,3229,2.144,3230,1.778,3231,1.853,3232,2.144,3233,2.144,3234,2.144,3235,2.144,3236,2.144,3237,2.144,3238,2.144,3239,2.144,3240,2.144,3241,1.711,3242,2.144,3243,2.144,3244,2.144,3245,2.144,3246,4.482,3247,2.144,3248,3.998,3249,2.144,3250,2.144,3251,2.144,3252,2.144,3253,2.144,3254,2.144,3255,2.144,3256,2.144,3257,2.144,3258,2.144,3259,2.144,3260,2.144,3261,3.998,3262,2.144,3263,2.144,3264,2.144,3265,2.144,3266,2.144,3267,2.144,3268,2.144,3269,2.144,3270,1.937,4260,2.673,4553,3.015,4554,3.015,4555,3.015,4556,3.015,4557,3.015,4558,3.015,4559,3.015,4560,3.015,4561,3.015,4562,3.015]],["title/contributing.html",[2300,2.072,4563,3.355,4564,3.355]],["body/contributing.html",[4,0.076,19,0.007,20,1.385,47,2.263,87,2.21,111,2.11,117,3.387,127,3.232,138,2.357,159,0.005,160,0.006,161,0.005,248,1,252,5.29,282,1.464,322,3.006,329,4.023,374,3.154,376,4.511,393,2.359,456,4.844,566,2.319,570,2.893,583,4.023,618,2.159,622,2.063,662,1.478,737,1.472,785,2.648,788,3.81,796,2.87,841,2.694,892,2.87,902,1.63,919,3.833,942,2.709,969,2.636,1055,2.959,1092,2.159,1131,2.87,1132,2.436,1189,4.783,1214,3.054,1239,2.959,1291,2.436,1410,3.266,1419,4.076,1421,4.076,1620,3.266,1762,3.52,1766,2.959,1780,4.025,1872,4.244,1934,3.387,2010,5.628,2050,4.844,2069,3.582,2074,4.844,2093,5.214,2140,4.244,2223,3.266,2345,4.076,2346,3.692,2449,3.156,2529,4.844,2555,4.244,2569,5.29,2627,4.023,2657,2.159,3230,4.392,3436,5.29,3510,4.844,3623,5.296,3978,4.511,4001,4.511,4419,6.588,4564,5.29,4565,5.29,4566,5.967,4567,5.967,4568,7.446,4569,5.967,4570,5.967,4571,5.967,4572,8.499,4573,7.446,4574,5.967,4575,5.967,4576,5.967,4577,7.446,4578,5.967,4579,5.967,4580,5.967,4581,5.967,4582,5.967,4583,6.601,4584,7.535,4585,8.747,4586,5.967,4587,8.319,4588,7.446,4589,7.754,4590,5.967,4591,5.967,4592,8.021,4593,5.967,4594,5.967,4595,5.967,4596,5.967,4597,5.967,4598,5.967,4599,5.967,4600,8.117,4601,5.967,4602,5.967,4603,8.117,4604,5.29,4605,5.967,4606,5.967,4607,5.967,4608,5.967,4609,5.967,4610,8.499,4611,5.967,4612,6.601,4613,5.967,4614,7.446,4615,7.446,4616,5.967,4617,5.967,4618,7.446,4619,7.446,4620,5.967,4621,8.352,4622,5.967,4623,5.967,4624,7.446,4625,6.601,4626,8.117,4627,8.117,4628,5.967,4629,5.967,4630,5.29,4631,7.446,4632,5.29,4633,7.446,4634,6.601,4635,5.967,4636,5.967,4637,7.446,4638,5.967,4639,5.967,4640,5.967,4641,5.967,4642,5.967,4643,6.601,4644,5.967,4645,7.446,4646,5.967,4647,5.967,4648,5.967,4649,5.967,4650,5.967,4651,6.601,4652,5.967,4653,5.967]],["title/coverage.html",[3230,3.676]],["body/coverage.html",[0,0.366,1,1.588,5,0.035,6,3.442,7,3.442,18,0.111,19,0.008,52,1.352,58,2.323,69,1.541,73,0.357,77,1.244,78,0.226,140,0.293,154,2.299,159,0.003,160,0.004,161,0.003,162,2.6,164,5.276,165,2.413,166,3.929,167,4.965,169,2.278,171,1.818,205,0.636,209,1.215,226,1.968,248,1.09,263,1.889,265,2.057,268,2.6,282,0.526,314,1.968,315,4.511,316,3.995,317,4.41,330,2.278,339,1.89,358,2.278,370,1.541,371,2.839,433,2.278,434,4.143,435,4.149,436,2.33,437,4.143,443,1.818,450,2.159,484,1.753,486,1.694,487,2.261,600,2.014,608,1.94,611,4.914,653,1.014,657,3.929,658,3.929,705,1.059,708,1.133,711,1.244,713,0.912,715,1.186,717,2.852,719,1.159,720,2.267,721,1.244,722,1.382,723,1.159,724,1.244,726,1.275,728,1.377,729,1.244,730,2.125,732,1.186,734,1.215,736,1.215,737,2.103,738,1.215,740,1.186,741,1.308,743,1.159,745,1.342,746,1.014,748,0.951,749,1.036,751,1.244,753,1.275,756,1.186,759,2.6,760,3.929,761,3.929,762,1.541,832,1.968,833,3.929,834,3.929,845,2.421,914,3.558,916,1.889,919,2.057,937,3.747,982,4.914,983,4.735,984,1.639,992,1.133,994,1.215,995,2.057,999,2.057,1003,2.6,1004,1.308,1010,2.6,1014,2.6,1015,2.839,1021,2.839,1022,2.839,1031,2.057,1032,4.738,1033,2.841,1034,5.139,1066,2.421,1243,1.694,1244,4.48,1254,1.496,1275,2.985,1279,1.133,1283,1.159,1287,1.308,1292,1.694,1294,1.694,1295,2.559,1296,4.314,1297,4.025,1303,1.694,1306,1.694,1307,1.639,1311,1.694,1321,1.639,1326,1.694,1334,1.694,1339,1.694,1356,1.694,1360,1.694,1362,1.694,1372,1.694,1376,1.496,1378,1.694,1586,1.083,1708,1.541,1735,4.624,1736,4.624,1738,1.415,1739,1.377,1772,2.421,1790,2.839,1791,3.929,1838,3.658,1839,3.658,1849,2.839,1850,2.839,1898,3.64,1899,2.278,1901,5.031,1902,5.959,1903,5.959,1906,2.839,1936,4.291,1961,2.6,2000,2.421,2001,5.276,2002,2.6,2023,2.421,2025,3.658,2047,2.421,2048,4.176,2049,4.41,2058,2.421,2221,2.6,2222,2.839,2268,4.069,2269,4.965,2328,2.278,2354,4.308,2355,1.694,2369,2.159,2384,2.159,2391,1.541,2393,1.588,2396,2.159,2426,2.278,2444,2.278,2494,2.6,2502,2.278,2515,2.421,2530,2.6,2547,2.421,2559,2.6,2560,2.159,2561,2.839,2580,4.383,2581,4.176,2582,4.149,2587,2.159,2631,2.278,2665,2.421,2734,2.839,2796,2.198,2805,2.421,2826,5.277,2827,5.277,2882,2.6,2884,2.6,2888,2.6,2956,3.658,2957,2.839,2991,2.6,2992,2.839,3001,3.658,3002,3.658,3076,2.6,3121,6.188,3122,6.188,3138,2.6,3142,2.839,3154,2.839,3162,2.839,3165,2.057,3166,2.057,3230,1.889,3270,2.057,3272,4.965,3273,2.421,3274,2.6,3313,4.149,3314,5.16,3361,8.318,3400,2.278,3401,3.929,3419,2.278,3420,2.839,3447,2.839,3480,2.839,3481,2.278,3496,2.278,3498,4.484,3502,2.839,3511,3.442,3512,2.159,3513,2.159,3514,2.839,3515,2.839,3521,2.421,3522,3.929,3523,3.929,3564,2.839,3565,2.839,3576,2.278,3577,2.421,3633,3.929,3634,3.929,3637,2.6,3644,2.159,3645,5.277,3646,5.277,3657,2.6,3658,2.6,3674,2.6,3675,4.965,3711,4.716,3717,2.057,3881,2.421,3884,2.057,3885,5.139,3909,2.6,3910,2.839,3948,2.421,3973,2.278,3974,4.257,3975,4.125,3976,4.914,3983,1.889,3985,2.278,3987,2.278,4137,2.6,4139,2.6,4170,2.421,4179,2.6,4180,2.839,4192,3.658,4193,2.839,4220,2.839,4221,2.839,4242,2.421,4243,3.929,4244,3.929,4341,3.929,4348,2.6,4389,2.6,4402,2.839,4403,2.839,4468,5.277,4480,2.6,4481,2.839,4482,2.839,4502,2.6,4504,2.421,4505,4.383,4506,4.149,4511,2.421,4521,2.278,4529,2.6,4539,2.6,4654,2.839,4655,3.203,4656,5.834,4657,3.203,4658,3.203,4659,3.203,4660,9.274,4661,3.203,4662,4.84,4663,9.37,4664,8.689,4665,4.84,4666,3.203,4667,7.341,4668,3.203,4669,3.203,4670,3.203,4671,4.84,4672,3.203,4673,7.341,4674,4.84,4675,3.203,4676,7.848,4677,3.203,4678,3.203,4679,4.84,4680,3.203,4681,6.501,4682,3.203,4683,3.203,4684,3.203,4685,3.203,4686,3.203,4687,3.203,4688,3.203,4689,4.84,4690,7.848,4691,8.188,4692,4.84,4693,3.203,4694,3.203,4695,3.203,4696,3.203,4697,3.203,4698,3.203,4699,3.203,4700,3.203,4701,3.203,4702,3.203,4703,3.203,4704,4.84,4705,4.84,4706,4.84,4707,3.203,4708,3.203,4709,6.508,4710,3.203,4711,3.203,4712,2.839,4713,2.839,4714,2.839,4715,2.839,4716,3.203,4717,3.203,4718,3.203,4719,3.203,4720,3.203,4721,3.203,4722,3.203,4723,3.203,4724,3.203,4725,3.203,4726,4.84,4727,3.203,4728,3.203,4729,3.203,4730,3.203,4731,3.203,4732,3.203,4733,4.84,4734,3.203,4735,3.203,4736,3.203,4737,3.203,4738,3.203,4739,2.839,4740,3.203,4741,4.84,4742,3.203,4743,3.203,4744,3.203,4745,3.203,4746,3.203,4747,3.203,4748,3.203,4749,3.203,4750,4.291,4751,3.203,4752,3.203,4753,3.203,4754,3.203,4755,3.203,4756,3.203,4757,3.203,4758,4.84,4759,3.203,4760,3.203,4761,3.203,4762,4.84,4763,3.203,4764,3.203,4765,3.203,4766,3.203,4767,3.203,4768,3.203,4769,3.203,4770,4.84,4771,4.84,4772,3.203,4773,3.203,4774,3.203,4775,3.203,4776,3.203,4777,4.84,4778,4.84,4779,3.203,4780,3.203,4781,3.203,4782,3.203]],["title/dependencies.html",[2795,2.486,4783,3.785]],["body/dependencies.html",[13,0.493,19,0.008,48,6.892,159,0.005,160,0.007,161,0.005,440,4.701,479,0.764,482,4.997,483,4.656,702,1.597,913,2.62,1267,2.304,1274,2.842,1852,5.991,2795,3.599,2819,4.056,3230,3.898,3469,4.245,3470,4.245,4015,5.638,4016,5.638,4470,7.027,4784,7.926,4785,9.32,4786,7.926,4787,8.804,4788,6.609,4789,7.926,4790,7.926,4791,6.609,4792,6.609,4793,6.609,4794,5.859,4795,6.609,4796,6.609,4797,6.609,4798,6.609,4799,6.609,4800,6.609,4801,6.609,4802,6.609,4803,6.609,4804,5.859,4805,6.609,4806,6.609,4807,6.609,4808,6.609,4809,6.609,4810,6.609,4811,5.859,4812,6.609,4813,6.609,4814,6.609,4815,6.609,4816,6.609,4817,6.609,4818,6.609,4819,6.609,4820,6.609,4821,6.609,4822,6.609,4823,6.609,4824,6.609,4825,6.609,4826,6.609,4827,6.609,4828,6.609,4829,6.609,4830,6.609,4831,6.609,4832,5.859,4833,9.32]],["title/miscellaneous/enumerations.html",[4834,2.551,4835,4.854]],["body/miscellaneous/enumerations.html",[6,4.02,7,5.928,12,0.207,15,4.051,18,0.274,19,0.008,20,1.67,22,2.487,24,5.841,25,1.775,27,2.379,28,3.682,30,1.512,34,1.73,37,5.841,42,3.178,44,5.841,49,4.588,63,2.006,64,2.327,73,0.44,75,4.493,87,2.136,93,2.496,100,3.208,102,2.938,109,1.062,111,1.999,119,4.272,137,2.892,138,1.789,141,2.938,145,3.63,151,4.851,152,1.714,153,4.622,154,2.799,155,3.361,156,2.802,157,4.588,158,1.186,159,0.005,160,0.006,161,0.005,201,0.889,244,2.308,248,0.947,339,1.643,566,2.196,608,1.163,618,2.045,659,1.828,662,1.31,669,1.868,720,2.796,722,1.704,730,1.576,735,2.308,747,1.828,796,2.719,898,3.682,1032,3.334,1033,2.799,1034,5.337,1045,3.361,1046,5.618,1050,4.851,1051,4.272,1052,2.975,1053,3.583,1054,4.272,1055,4.132,1056,4.272,1057,4.244,1058,4.272,1059,5.984,1060,4.588,1061,5.984,1062,4.588,1063,5.085,1064,4.588,1153,3.939,1165,1.714,1244,2.892,1248,3.316,1250,3.094,1285,1.751,1288,3.568,1289,3.939,1290,3.232,1313,2.865,1314,3.939,1317,3.178,1319,3.925,1330,3.094,1331,3.939,1364,1.999,1735,4.02,1736,5.118,1740,3.334,1742,5.439,1830,4.851,1901,3.473,2048,3.63,2049,5.439,2070,5.841,2071,5.841,2072,5.841,2073,5.841,2113,3.805,2251,3.81,2268,3.267,2354,4.132,2465,5.841,2535,5.439,2542,3.63,2543,4.272,2580,3.81,2581,5.353,2582,5.631,2583,4.588,2586,4.588,2599,4.588,2657,2.045,2658,4.588,2659,5.841,2660,4.272,2661,5.841,2664,4.588,2666,4.851,3272,4.02,3273,4.272,3274,5.841,3286,6.379,3308,5.01,3576,4.02,3577,5.439,3597,6.379,3723,4.02,4505,3.81,4506,5.118,4512,5.841,4520,5.841,4834,3.81,4835,5.01,4836,6.426,4837,6.379,4838,7.018,4839,5.652,4840,6.426,4841,5.01,4842,5.841,4843,5.652,4844,5.01,4845,5.652]],["title/index.html",[12,0.139,2300,2.072,4563,3.355]],["body/index.html",[4,0.099,5,0.077,19,0.006,35,1.579,47,2.66,84,1.878,111,2.903,118,1.796,127,2.163,140,0.641,159,0.004,160,0.006,161,0.004,199,0.641,205,0.596,244,2.218,261,1.682,282,0.892,324,5.238,329,5.238,355,3.863,374,3.524,393,2.258,440,6.192,514,2.399,546,2.11,561,1.757,570,3.19,609,2.122,654,2.23,662,1.415,665,4.137,737,1.73,785,2.437,796,2.613,869,3.863,940,3.489,969,2.399,1023,2.336,1035,2.537,1067,4.106,1085,3.863,1092,2.538,1131,3.737,1214,4.202,1239,2.693,1308,2.218,1341,2.693,1343,2.973,1364,1.921,1400,3.478,1424,4.765,1495,2.973,1559,2.973,1783,4.506,1785,3.338,1871,5.873,1932,5.046,2010,5.873,2027,7.067,2028,7.067,2066,4.409,2093,4.506,2345,4.765,2346,4.071,2351,5.461,2495,6.9,2542,5.274,2657,1.965,2754,3.863,2794,2.466,2795,2.466,2812,2.613,3194,3.662,3199,3.662,3202,3.662,3354,6.887,3360,4.815,3430,8.289,3725,3.662,3774,5.238,4008,4.106,4015,5.84,4016,4.989,4025,4.106,4036,4.106,4061,5.873,4093,4.106,4169,4.409,4419,5.694,4565,6.218,4583,6.218,4584,6.218,4587,4.815,4589,7.536,4592,6.218,4604,7.279,4612,4.815,4621,7.536,4625,4.815,4630,6.218,4632,4.815,4634,4.815,4643,4.815,4651,4.815,4654,4.815,4794,4.815,4804,7.536,4811,4.815,4832,4.815,4846,7.769,4847,5.432,4848,5.432,4849,5.432,4850,5.432,4851,7.015,4852,5.432,4853,7.015,4854,7.015,4855,8.211,4856,8.501,4857,5.432,4858,5.432,4859,5.432,4860,5.432,4861,9.211,4862,5.432,4863,7.015,4864,5.432,4865,7.015,4866,5.432,4867,5.432,4868,5.432,4869,5.432,4870,5.432,4871,5.432,4872,5.432,4873,5.432,4874,7.015,4875,8.211,4876,5.432,4877,5.432,4878,5.432,4879,5.432,4880,5.432,4881,5.432,4882,5.432,4883,5.432,4884,7.769,4885,5.432,4886,5.432,4887,5.432,4888,5.432,4889,5.432,4890,5.432,4891,5.432,4892,8.211,4893,7.015,4894,5.432,4895,5.432,4896,5.432,4897,5.432,4898,5.432,4899,5.432,4900,5.432,4901,8.706,4902,5.432,4903,7.769,4904,7.015,4905,5.432,4906,5.432,4907,5.432,4908,5.432,4909,5.432,4910,5.432,4911,5.432,4912,5.432,4913,5.432,4914,7.015,4915,7.015,4916,8.211,4917,7.015,4918,7.015,4919,7.015,4920,7.015,4921,7.015,4922,7.015,4923,7.015,4924,8.211,4925,5.432,4926,5.432,4927,5.432,4928,5.432,4929,7.015,4930,8.211,4931,7.015,4932,5.432,4933,5.432,4934,5.432,4935,5.432,4936,5.432,4937,5.432,4938,5.432,4939,5.432]],["title/modules.html",[2794,2.829]],["body/modules.html",[19,0.007,159,0.006,160,0.007,161,0.006,483,5.082,1754,4.918,2793,4.797,2794,3.231,2806,4.372,3136,4.797,4133,5.061,4153,5.061,4424,4.797,4431,4.797,4436,4.797,4437,4.797,4445,5.378,4448,5.061,4449,4.57,4525,5.378,4940,9.61,4941,9.61]],["title/overview.html",[4942,5.524]],["body/overview.html",[2,1.125,19,0.008,159,0.004,160,0.006,161,0.004,163,1.27,209,3.317,653,2.768,654,1.296,668,2.214,701,1.665,705,2.891,708,3.093,711,3.398,713,2.49,715,2.804,719,2.739,721,2.941,723,2.739,724,3.489,726,3.483,729,3.489,732,3.326,734,2.871,736,2.871,738,2.871,740,3.326,741,3.571,743,3.249,746,2.768,748,1.528,749,2.449,751,3.398,753,3.483,756,3.239,1165,1.561,1307,2.635,1900,3.307,2585,4.179,2657,1.863,2792,1.78,2793,6.348,2794,2.338,2795,2.338,2796,2.338,2797,2.553,2798,2.05,2799,2.553,2800,4.564,2801,4.564,2802,4.564,2803,4.564,2804,4.564,2805,5.723,2806,5.649,2807,3.359,3136,6.487,3512,5.104,3513,3.471,3644,5.104,3717,4.863,4133,6.313,4134,4.564,4135,4.564,4136,4.564,4153,6.386,4154,4.564,4155,4.564,4156,4.564,4238,4.564,4239,4.564,4240,4.564,4424,6.261,4425,4.564,4426,4.564,4428,4.564,4431,6.33,4432,4.564,4433,4.564,4434,4.564,4435,4.564,4436,6.11,4437,6.11,4445,6.948,4446,4.564,4447,4.564,4448,6.386,4449,6.103,4459,4.564,4460,4.564,4461,4.564,4464,4.564,4465,4.564,4466,4.564,4467,4.564,4494,4.564,4495,4.564,4496,4.564,4498,4.564,4499,4.564,4501,4.564,4525,6.851,4526,4.564,4527,4.564,4541,4.564,4542,4.564,4543,4.564,4942,4.564,4943,5.149,4944,5.149,4945,5.149,4946,5.149]],["title/miscellaneous/typealiases.html",[4834,2.551,4947,5.476]],["body/miscellaneous/typealiases.html",[6,4.828,7,5.728,12,0.248,18,0.319,19,0.008,51,5.509,52,1.31,53,4.121,55,2.637,58,3.419,73,0.493,78,0.164,96,1.023,113,2.637,115,0.877,140,0.784,159,0.007,160,0.007,161,0.006,165,2.968,201,0.62,254,4.75,261,2.102,263,4.003,264,2.244,281,0.43,434,3.17,437,4.272,470,4.75,673,4.258,720,3.129,785,2.015,937,4.36,958,5.429,973,6.087,975,5.13,1004,2.771,1032,4.003,1033,2.848,1034,5.429,1175,6.537,1273,2.843,1286,3.373,1363,3.473,1777,4.003,1838,5.13,1839,6.087,2268,3.082,2354,3.993,2444,4.828,2446,6.537,3001,5.13,3002,6.087,3053,7.139,3186,4.576,3576,4.828,3577,6.087,3590,7.139,3974,3.473,3975,3.365,4192,6.087,4834,4.576,4836,5.509,4840,5.509,4841,6.017,4842,5.509,4948,6.787,4949,6.787,4950,8.587,4951,6.787,4952,6.017,4953,6.017,4954,6.787,4955,6.787,4956,6.787]],["title/miscellaneous/variables.html",[4069,3.895,4834,2.551]],["body/miscellaneous/variables.html",[5,0.039,8,0.21,12,0.13,14,0.299,17,1.946,18,0.325,19,0.008,30,1.661,38,2.097,42,1.571,50,0.439,59,0.998,63,0.991,71,1.215,73,0.506,74,1.661,75,4.331,77,2.033,83,1.317,85,0.723,87,1.553,101,1.4,102,2.535,103,2.886,108,1.125,109,0.525,113,2.033,115,0.802,133,1.553,140,0.787,143,1.223,145,3.361,146,2.018,154,2.921,158,1.531,159,0.003,160,0.004,161,0.003,164,2.688,165,1.229,166,2.886,167,4.87,199,0.666,201,0.863,205,0.435,235,1.078,248,0.596,267,0.779,268,4.247,269,3.152,273,1.997,281,0.513,282,1.198,287,1.893,362,1.251,365,0.661,374,1.382,378,1.257,393,1.034,409,1.571,434,2.444,436,2.166,437,2.517,442,0.913,464,1.441,508,2.678,519,1.71,525,1.176,555,2.121,561,1.692,574,3.177,600,1.923,608,1.408,609,0.971,611,4.692,618,1.287,622,1.809,626,1.85,646,2.097,662,0.953,683,1.586,700,1.88,708,1.257,715,1.317,716,2.352,717,2.412,719,1.287,721,1.382,722,0.842,723,1.287,729,1.382,730,2.034,732,1.317,734,1.984,736,1.984,737,1.531,738,1.984,740,1.317,743,1.287,747,1.692,748,1.553,749,1.15,754,2.66,756,1.317,790,2.033,804,2.767,833,2.886,834,4.247,840,2.097,842,2.018,847,3.078,902,1.429,914,4.177,921,3.152,987,2.263,988,2.594,995,2.284,1032,2.097,1033,2.698,1034,4.185,1038,2.798,1039,2.397,1040,2.472,1042,1.946,1043,2.886,1045,2.444,1046,5.81,1050,3.527,1051,4.692,1052,2.146,1053,2.944,1054,5.175,1055,3.078,1056,5.175,1057,3.086,1058,5.175,1065,2.886,1066,3.955,1067,2.688,1068,2.886,1069,2.886,1070,1.416,1071,2.886,1072,2.886,1073,1.452,1074,4.247,1075,2.886,1076,2.669,1077,5.039,1078,2.886,1079,3.527,1080,2.886,1081,2.886,1082,2.886,1083,2.397,1084,2.886,1085,2.529,1086,1.571,1087,2.886,1088,2.886,1089,2.886,1090,2.886,1091,2.886,1092,1.287,1093,5.039,1094,4.247,1095,2.886,1096,4.247,1097,2.886,1098,4.247,1099,2.284,1100,2.886,1101,1.82,1102,5.039,1103,2.886,1104,2.886,1105,2.886,1106,4.247,1107,4.247,1108,2.886,1109,5.039,1110,2.529,1111,2.886,1112,2.886,1113,2.886,1114,2.886,1115,2.886,1116,4.247,1117,2.886,1118,5.039,1119,2.886,1120,2.886,1121,5.557,1122,2.529,1123,2.886,1124,4.247,1125,2.886,1126,2.886,1127,2.886,1128,2.886,1129,2.886,1130,2.886,1131,2.517,1132,1.452,1133,2.886,1134,2.886,1135,4.247,1136,2.886,1137,4.247,1138,5.557,1139,4.247,1140,2.444,1141,4.247,1142,1.763,1143,4.247,1144,2.886,1145,2.284,1146,2.886,1147,2.284,1148,2.886,1149,2.886,1150,2.886,1151,2.886,1152,2.886,1153,1.946,1154,2.886,1155,2.529,1156,2.688,1157,2.886,1158,2.886,1159,2.886,1160,4.247,1161,5.039,1162,3.955,1163,2.886,1164,2.886,1165,2.314,1166,2.886,1167,2.517,1168,2.886,1169,4.247,1170,5.557,1171,2.529,1172,2.529,1173,2.529,1174,2.529,1238,2.886,1239,1.763,1240,2.25,1241,2.886,1242,2.886,1244,1.82,1250,1.529,1273,1.49,1285,2.26,1290,2.795,1291,2.535,1292,3.283,1293,1.946,1294,2.767,1295,1.88,1296,1.82,1297,1.49,1298,1.763,1299,1.661,1300,2.192,1301,2.864,1302,2.678,1303,2.767,1304,1.946,1305,1.946,1306,2.767,1307,1.82,1308,2.136,1309,3.398,1310,1.416,1311,2.767,1312,1.946,1355,3.747,1359,1.946,1376,2.444,1455,1.763,1708,2.517,1740,2.097,1753,2.529,1771,2.688,1808,3.361,1857,2.097,1871,3.955,1901,2.185,1902,2.886,1903,4.247,1948,2.886,1961,4.247,1983,2.529,2001,3.955,2025,5.175,2042,3.152,2113,1.88,2268,2.376,2269,3.722,2315,1.82,2325,2.397,2326,2.688,2327,2.688,2328,3.722,2346,1.763,2354,2.594,2356,2.397,2358,2.397,2393,1.763,2401,2.397,2499,3.955,2500,2.688,2502,2.529,2580,2.397,2581,3.361,2582,3.722,2587,3.527,2610,2.529,2654,2.688,2665,3.955,2738,3.152,2779,2.886,2796,3.108,2805,3.955,2826,2.886,2827,5.557,2882,4.247,2883,3.152,2884,4.247,2888,4.247,2889,3.152,2944,3.152,3001,2.688,3002,3.955,3076,4.247,3077,4.639,3078,4.639,3079,4.639,3080,4.639,3081,3.152,3082,3.152,3181,2.397,3314,3.361,3326,3.361,3496,4.416,3498,2.284,3512,2.397,3513,3.527,3633,2.886,3634,4.247,3635,4.639,3636,4.639,3637,4.247,3638,4.639,3639,3.152,3640,3.152,3641,3.152,3642,3.152,3643,3.152,3644,2.397,3645,2.886,3646,5.039,3657,4.247,3658,4.247,3675,2.529,3720,2.886,3974,1.82,3975,1.763,3986,2.185,4069,2.529,4137,2.886,4170,3.955,4468,2.886,4502,2.886,4505,3.527,4506,3.722,4521,3.722,4522,2.886,4523,2.886,4524,2.886,4529,4.247,4539,4.247,4709,3.152,4712,3.152,4713,4.639,4714,4.639,4715,4.639,4739,4.639,4750,3.152,4834,2.397,4836,2.886,4837,3.152,4838,6.468,4840,4.247,4842,4.247,4844,4.639,4952,3.152,4953,3.152,4957,6.208,4958,3.556,4959,6.208,4960,5.233,4961,3.556,4962,3.556,4963,6.846,4964,6.846,4965,3.556,4966,3.556,4967,3.556,4968,3.556,4969,3.556,4970,3.556,4971,3.556,4972,3.556,4973,3.556,4974,3.556,4975,3.556,4976,3.556,4977,5.233,4978,3.556,4979,3.556,4980,3.556,4981,3.556,4982,3.556,4983,3.556,4984,3.556,4985,3.556,4986,3.556,4987,3.556,4988,5.233,4989,3.556,4990,3.556,4991,3.556,4992,3.556,4993,3.556,4994,3.556,4995,3.556]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":608,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0.0.2",{"_index":4798,"title":{},"body":{"dependencies.html":{}}}],["0.0.25",{"_index":4803,"title":{},"body":{"dependencies.html":{}}}],["0.0.8",{"_index":4795,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":4810,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":4831,"title":{},"body":{"dependencies.html":{}}}],["0.38.1",{"_index":4827,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3618,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"classes/Percent.html":{}}}],["0.6.2",{"_index":4806,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4663,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4730,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4743,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4704,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4734,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":158,"title":{"interfaces/FindableWidget-1.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["1.0.2",{"_index":4816,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":4824,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":4814,"title":{},"body":{"dependencies.html":{}}}],["1.1.20150312",{"_index":4808,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":4829,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":4821,"title":{},"body":{"dependencies.html":{}}}],["1.21.0",{"_index":4820,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":4793,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":4818,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4660,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":4733,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4691,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4698,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4689,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4740,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2941,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["10/10",{"_index":4703,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":4759,"title":{},"body":{"coverage.html":{}}}],["10/15",{"_index":4694,"title":{},"body":{"coverage.html":{}}}],["10/22",{"_index":4702,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1297,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1101,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":1060,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["1024",{"_index":3742,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["1024mb",{"_index":3743,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["11/13",{"_index":4670,"title":{},"body":{"coverage.html":{}}}],["11/23",{"_index":4700,"title":{},"body":{"coverage.html":{}}}],["11/30",{"_index":4697,"title":{},"body":{"coverage.html":{}}}],["115",{"_index":4995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12/18",{"_index":4668,"title":{},"body":{"coverage.html":{}}}],["12/24",{"_index":4695,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":4943,"title":{},"body":{"overview.html":{}}}],["13/18",{"_index":4725,"title":{},"body":{"coverage.html":{}}}],["13/23",{"_index":4778,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":4675,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":4687,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1293,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["150",{"_index":2889,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["15px",{"_index":3398,"title":{},"body":{"components/FormInputComponent.html":{}}}],["16",{"_index":3337,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["16/21",{"_index":4720,"title":{},"body":{"coverage.html":{}}}],["17/24",{"_index":4746,"title":{},"body":{"coverage.html":{}}}],["18x18",{"_index":3601,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["1].down",{"_index":2733,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["1gb",{"_index":3744,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["1st",{"_index":2947,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["2",{"_index":1165,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"classes/DatagridFilter.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MockRecord.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":4800,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":4812,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":4690,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4732,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":4680,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":4762,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1295,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["20/23",{"_index":4764,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":1062,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["2019",{"_index":2811,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{}}}],["2020",{"_index":1947,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/ErrorBannerComponent.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["23",{"_index":4944,"title":{},"body":{"overview.html":{}}}],["23/43",{"_index":4686,"title":{},"body":{"coverage.html":{}}}],["24/31",{"_index":4721,"title":{},"body":{"coverage.html":{}}}],["24/55",{"_index":4771,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":3711,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"coverage.html":{}}}],["250",{"_index":3617,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["255",{"_index":3620,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["27",{"_index":1772,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{}}}],["27/39",{"_index":4711,"title":{},"body":{"coverage.html":{}}}],["29/55",{"_index":4727,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":1912,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["2nd",{"_index":2942,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["3",{"_index":48,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"dependencies.html":{}}}],["3.1.3",{"_index":4787,"title":{},"body":{"dependencies.html":{}}}],["3/11",{"_index":4716,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":4735,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":4664,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4681,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":4744,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2500,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["30/32",{"_index":4752,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1808,"title":{},"body":{"classes/CommonUtil.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":4679,"title":{},"body":{"coverage.html":{}}}],["33/49",{"_index":4658,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":4728,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":4696,"title":{},"body":{"coverage.html":{}}}],["36x36",{"_index":3605,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["37",{"_index":1307,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":2585,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"overview.html":{}}}],["4/4",{"_index":4676,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":4754,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4768,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":4706,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":4693,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1304,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":4991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400px",{"_index":1064,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["43",{"_index":4770,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":4775,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":4701,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":4699,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":4946,"title":{},"body":{"overview.html":{}}}],["5.6.1",{"_index":4791,"title":{},"body":{"dependencies.html":{}}}],["5/14",{"_index":4729,"title":{},"body":{"coverage.html":{}}}],["5/20",{"_index":4662,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":4741,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4761,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":4757,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":4708,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1296,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1202,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["52",{"_index":4726,"title":{},"body":{"coverage.html":{}}}],["52/78",{"_index":4688,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":4685,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":4779,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":4707,"title":{},"body":{"coverage.html":{}}}],["56",{"_index":4777,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":4705,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":4717,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":3390,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["6",{"_index":4945,"title":{},"body":{"overview.html":{}}}],["6.5.5",{"_index":4825,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":4780,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":4692,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2502,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["600",{"_index":3625,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["61",{"_index":4773,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":4748,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":4667,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":4657,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":4710,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":3393,"title":{},"body":{"components/FormInputComponent.html":{}}}],["7/12",{"_index":4718,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4677,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4666,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4672,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":4745,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":4756,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":4724,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":4673,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":4719,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4671,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1936,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{}}}],["8.3.20",{"_index":4936,"title":{},"body":{"index.html":{}}}],["8/12",{"_index":4747,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":4774,"title":{},"body":{"coverage.html":{}}}],["8/18",{"_index":4776,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4753,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":4758,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":4669,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":4763,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":4665,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":4833,"title":{},"body":{"dependencies.html":{}}}],["9.1.9",{"_index":4785,"title":{},"body":{"dependencies.html":{}}}],["9/12",{"_index":4674,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":4749,"title":{},"body":{"coverage.html":{}}}],["9/17",{"_index":4731,"title":{},"body":{"coverage.html":{}}}],["9/24",{"_index":4742,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":4751,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":4931,"title":{},"body":{"index.html":{}}}],["999].[0",{"_index":4930,"title":{},"body":{"index.html":{}}}],["_actions",{"_index":173,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_columns",{"_index":1394,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_config",{"_index":2276,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["_errormessage",{"_index":2961,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["_height",{"_index":1540,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_isrequestpending",{"_index":2146,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["_multiplier",{"_index":3676,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["_open",{"_index":2136,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["_pagination",{"_index":1538,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_progress",{"_index":2148,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["_searchcriteria",{"_index":4031,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["_selectedentities",{"_index":174,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["_selectiontype",{"_index":1532,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["_size",{"_index":3582,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["_unit",{"_index":2431,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["_unitname",{"_index":3677,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["_unitoptions",{"_index":2432,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["a.b.c",{"_index":3651,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["abort",{"_index":4079,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["above",{"_index":47,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["absolute",{"_index":1099,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["absolutely",{"_index":2896,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["abstract",{"_index":190,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["abstractcontrol",{"_index":2061,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["abstraction",{"_index":3187,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["acc",{"_index":3872,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["accepting",{"_index":4173,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["accepts",{"_index":2277,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/FormValidators.html":{}}}],["access",{"_index":624,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["accessing",{"_index":515,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["accessors",{"_index":191,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["according",{"_index":4166,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["account",{"_index":3768,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["achieved",{"_index":4599,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":63,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["action.actiontype",{"_index":1450,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["action.availability",{"_index":308,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.availability(this._selectedentities",{"_index":309,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.disabled",{"_index":313,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.disabled(this._selectedentities",{"_index":312,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.handler(this._selectedentities",{"_index":295,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.handlerdata",{"_index":296,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.isseparator",{"_index":307,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.textkey",{"_index":294,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["action.textkey?.tolowercase().includes(searchcriteria",{"_index":291,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["actionbar",{"_index":1688,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actioncopy",{"_index":1441,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actioncopy.handler",{"_index":1443,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actiondisplayconfig",{"_index":1,"title":{"interfaces/ActionDisplayConfig.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["actionhandler",{"_index":1442,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandler(selectedentities",{"_index":1445,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandlerresponse",{"_index":1444,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionhandlertype",{"_index":53,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["actionitem",{"_index":69,"title":{"interfaces/ActionItem.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["actionitem.handler",{"_index":51,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/typealiases.html":{}}}],["actionitem.textkey",{"_index":125,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["actionmenu.contextualfeaturedactions",{"_index":1506,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenucomponent",{"_index":705,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"coverage.html":{},"overview.html":{}}}],["actionmenus",{"_index":1500,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenus.foreach((actionmenu",{"_index":1504,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenus.length",{"_index":1501,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionmenusinrow(actionmenus",{"_index":1499,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actionreporter",{"_index":1551,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions",{"_index":10,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions(actions",{"_index":270,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions.map((action",{"_index":1440,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actions.reduce((flatactionlist",{"_index":297,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["actionsearchprovider",{"_index":162,"title":{"classes/ActionSearchProvider.html":{}},"body":{"classes/ActionSearchProvider.html":{},"coverage.html":{}}}],["actionstyling",{"_index":24,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype",{"_index":28,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.static",{"_index":1452,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["actiontype.static_featured",{"_index":1451,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activatable",{"_index":2658,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["activatable/focusable",{"_index":2709,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["activatablemenuitemtype",{"_index":2661,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1208,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["activated",{"_index":2303,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["activating",{"_index":2663,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["active",{"_index":1375,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activites",{"_index":1549,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["activity",{"_index":339,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["activityindicatortype",{"_index":1331,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["activitypromiseresolver",{"_index":314,"title":{"classes/ActivityPromiseResolver.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["activitypromiseresolver.monitoractivities",{"_index":406,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activitypromiseresolver.monitoractivity",{"_index":401,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter",{"_index":370,"title":{"classes/ActivityReporter.html":{}},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["activityreporter:21",{"_index":690,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:27",{"_index":688,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:33",{"_index":689,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:38",{"_index":686,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:53",{"_index":687,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityreporter:73",{"_index":685,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresolutionpromise",{"_index":353,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresolutionpromises",{"_index":341,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["activityresponse",{"_index":358,"title":{"interfaces/ActivityResponse.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"coverage.html":{}}}],["acts",{"_index":1851,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["actual_component",{"_index":758,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["actually",{"_index":1799,"title":{},"body":{"classes/CommonUtil.html":{}}}],["add",{"_index":127,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"index.html":{}}}],["addcolumn",{"_index":1514,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["addcolumn(col",{"_index":1571,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["added",{"_index":80,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["adding",{"_index":1704,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["addition",{"_index":2466,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"modules/VcdFormlyModule.html":{}}}],["additional",{"_index":107,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"modules/VcdFormlyModule.html":{}}}],["additionaldata",{"_index":95,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["adds",{"_index":512,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/FilterTestHostComponent.html":{},"classes/TestElement.html":{}}}],["addwildcard",{"_index":2532,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["addwildcard(input",{"_index":2534,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["after(date",{"_index":3030,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["aftercontentchecked",{"_index":3712,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["aftercontentinit",{"_index":2833,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["afterviewinit",{"_index":1255,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["again",{"_index":2857,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["against",{"_index":1974,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["age",{"_index":2499,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["alert",{"_index":412,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["alert').nativeelement.getattribute('role",{"_index":3000,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["alert').nativeelement.textcontent",{"_index":831,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["alertclosable",{"_index":2963,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["alerttype",{"_index":2964,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["alias",{"_index":2014,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["aliases",{"_index":4948,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":3627,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["all(...conditions",{"_index":3100,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["all(conditions",{"_index":3033,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["allow",{"_index":1028,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["allowed",{"_index":1299,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":562,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["allresults",{"_index":4088,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["allresults.indexof(this.selecteditem",{"_index":4092,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["along",{"_index":2632,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SubscriptionTracker.html":{}}}],["alongside",{"_index":4019,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["alternatives",{"_index":4606,"title":{},"body":{"contributing.html":{}}}],["alto",{"_index":3640,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["always",{"_index":31,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/Percent.html":{}}}],["amend",{"_index":4637,"title":{},"body":{"contributing.html":{}}}],["amount",{"_index":1803,"title":{},"body":{"classes/CommonUtil.html":{}}}],["analyzer",{"_index":4875,"title":{},"body":{"index.html":{}}}],["analyzes",{"_index":4879,"title":{},"body":{"index.html":{}}}],["ancestor",{"_index":630,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["ancestor).queryall(by.css(query",{"_index":3251,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["and().or",{"_index":3009,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["and(...conditions",{"_index":3087,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["and(conditions",{"_index":3037,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["angular",{"_index":440,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":4784,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2819,"title":{},"body":{"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"pipes/NestedPropertyPipe.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":4786,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":479,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["angular/core/testing",{"_index":481,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["angular/forms",{"_index":913,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"modules/DropdownModule.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/QuickSearchModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":482,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4470,"title":{},"body":{"modules/VcdDatagridModule.html":{},"dependencies.html":{}}}],["angularlocatordriver",{"_index":433,"title":{"classes/AngularLocatorDriver.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{},"coverage.html":{}}}],["angularlocatordriver(new",{"_index":493,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["angularwidgetobjectfinder",{"_index":484,"title":{"classes/AngularWidgetObjectFinder.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["angularwidgetobjectfinder(filtertesthostcomponent",{"_index":3156,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["angularwidgetobjectfinder(this.testelement.fixture).find(widget",{"_index":507,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["another",{"_index":1520,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any(...conditions",{"_index":3102,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["any(conditions",{"_index":3040,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["any).href",{"_index":1588,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any).organizer.resize",{"_index":1732,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["any).popoverinstance.removescrolleventlisteners",{"_index":2911,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["anychoice",{"_index":2504,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["anychoice.display",{"_index":2531,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["api",{"_index":781,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["app",{"_index":3354,"title":{},"body":{"components/FormInputComponent.html":{},"index.html":{}}}],["appear",{"_index":4037,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["appears",{"_index":891,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["append",{"_index":634,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["application",{"_index":4036,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["application's",{"_index":4883,"title":{},"body":{"index.html":{}}}],["applied",{"_index":3172,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["approach",{"_index":565,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["approval",{"_index":4919,"title":{},"body":{"index.html":{}}}],["area",{"_index":2883,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["arg",{"_index":616,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["argarray",{"_index":2671,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["args",{"_index":878,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/CommonUtil.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/LocatorDriver.html":{}}}],["argument",{"_index":112,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["arguments",{"_index":1788,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["aria",{"_index":2997,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["ariarole",{"_index":2993,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["around",{"_index":509,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"injectables/CsvExporterService.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/TestElement.html":{}}}],["array",{"_index":510,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["array.from(arguments",{"_index":1833,"title":{},"body":{"classes/CommonUtil.html":{}}}],["array.from(classes",{"_index":4319,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["array.from(this.clrdropdownmenuel.children",{"_index":2713,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["arrow",{"_index":1830,"title":{},"body":{"classes/CommonUtil.html":{},"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":4887,"title":{},"body":{"index.html":{}}}],["ascending",{"_index":3893,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["aside",{"_index":3392,"title":{},"body":{"components/FormInputComponent.html":{}}}],["assert",{"_index":3190,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["assertions",{"_index":3189,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["assign",{"_index":3362,"title":{},"body":{"components/FormInputComponent.html":{}}}],["assigned",{"_index":2288,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["assigning",{"_index":2312,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["assigns",{"_index":4068,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["assignvalue",{"_index":1861,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["assignvalue(config",{"_index":1873,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["associated",{"_index":907,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["associating",{"_index":2400,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["assumed",{"_index":349,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["asterisk",{"_index":904,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["async",{"_index":188,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/FilterTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["asynchronously",{"_index":239,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["attached",{"_index":2624,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["attaches",{"_index":1856,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["attaching",{"_index":1884,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["attachrenderer",{"_index":1862,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["attempt",{"_index":940,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["attribute",{"_index":3335,"title":{},"body":{"components/FormInputComponent.html":{}}}],["auto",{"_index":868,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["automatically",{"_index":2754,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SubscriptionTracker.html":{},"index.html":{}}}],["autosquash",{"_index":4640,"title":{},"body":{"contributing.html":{}}}],["availability",{"_index":94,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["available",{"_index":84,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"index.html":{}}}],["availableheight",{"_index":1689,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["availableunits",{"_index":3690,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["avoid",{"_index":514,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"index.html":{}}}],["avoiding",{"_index":3176,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["await",{"_index":286,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"components/FilterTestHostComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["b",{"_index":1479,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["back",{"_index":2669,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["background",{"_index":3615,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["backing",{"_index":843,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["banner",{"_index":659,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{},"miscellaneous/enumerations.html":{}}}],["banner'},{'name",{"_index":727,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["banner.component",{"_index":2999,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{}}}],["banner.component.html",{"_index":2960,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.scss",{"_index":2959,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts",{"_index":2957,"title":{},"body":{"components/ErrorBannerComponent.html":{},"coverage.html":{}}}],["banner.component.ts:17",{"_index":2982,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:19",{"_index":2983,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:24",{"_index":2978,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:29",{"_index":2973,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:36",{"_index":2972,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:41",{"_index":2967,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:46",{"_index":2985,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:54",{"_index":2979,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.component.ts:59",{"_index":2981,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["banner.module",{"_index":4441,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{}}}],["banner.module.ts",{"_index":4497,"title":{},"body":{"modules/VcdErrorBannerModule.html":{}}}],["banner.wo.ts",{"_index":2992,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{},"coverage.html":{}}}],["banner.wo.ts:13",{"_index":2994,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["banner.wo.ts:18",{"_index":2996,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["banneractivityreportercomponent",{"_index":653,"title":{"components/BannerActivityReporterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{},"coverage.html":{},"overview.html":{}}}],["banneractivityreporterwidgetobject",{"_index":759,"title":{"classes/BannerActivityReporterWidgetObject.html":{}},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["bar",{"_index":1455,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":942,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"contributing.html":{}}}],["based",{"_index":1132,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["baseformcontrol",{"_index":832,"title":{"classes/BaseFormControl.html":{}},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{}}}],["baseformcontrol:105",{"_index":3295,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:109",{"_index":3296,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:113",{"_index":3297,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:117",{"_index":3298,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:21",{"_index":3301,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:26",{"_index":3303,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:31",{"_index":3304,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:36",{"_index":3299,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:41",{"_index":3294,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:46",{"_index":3293,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:52",{"_index":3290,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:57",{"_index":3292,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:62",{"_index":3291,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:67",{"_index":3300,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseformcontrol:72",{"_index":3302,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["baseunit",{"_index":4392,"title":{},"body":{"classes/Unit.html":{}}}],["basevalue",{"_index":3906,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["basewidgetobject",{"_index":486,"title":{"classes/BaseWidgetObject.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["basewidgetobject:30",{"_index":2258,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["basewidgetobject:38",{"_index":2260,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["basewidgetobject:45",{"_index":2259,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["basewidgetobject:52",{"_index":2261,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["basically",{"_index":4002,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["batch",{"_index":92,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["become",{"_index":1621,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["becomes",{"_index":2372,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/DomUtil.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["before",{"_index":902,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["before(date",{"_index":3042,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["before/aftereach",{"_index":3267,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["beforeeach",{"_index":3147,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["beforeeach(function(this",{"_index":3151,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["begin",{"_index":633,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["beginning",{"_index":4168,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["begins",{"_index":682,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["behavior",{"_index":410,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/DomUtil.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["being",{"_index":777,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["belong",{"_index":1336,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["belongs",{"_index":1496,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["below",{"_index":892,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"contributing.html":{}}}],["benefit",{"_index":4939,"title":{},"body":{"index.html":{}}}],["best",{"_index":3695,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["bestformat",{"_index":4405,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestformat(1000000",{"_index":4410,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestformat(value",{"_index":4407,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["bestunit",{"_index":3752,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["bestvalue",{"_index":3751,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["between",{"_index":129,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["betweennumbers",{"_index":3017,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["betweennumbers(values",{"_index":3044,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["binding",{"_index":4020,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["bl",{"_index":1058,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":1910,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["blob([csvfile",{"_index":1945,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["block",{"_index":2577,"title":{},"body":{"classes/DomUtil.html":{},"components/LoadingIndicatorComponent.html":{}}}],["blocking",{"_index":3578,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["blur",{"_index":536,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["blurs",{"_index":535,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["body",{"_index":1675,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["bold",{"_index":709,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["boldtextrenderer",{"_index":1010,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"coverage.html":{}}}],["boldtextrenderercomponent",{"_index":708,"title":{"components/BoldTextRendererComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["boldtextrendererconfig",{"_index":999,"title":{"interfaces/BoldTextRendererConfig.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{}}}],["boldtextrendererwidgetobject",{"_index":1014,"title":{"classes/BoldTextRendererWidgetObject.html":{}},"body":{"classes/BoldTextRendererWidgetObject.html":{},"coverage.html":{}}}],["bom",{"_index":1931,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["boolean",{"_index":96,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":2797,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["boston",{"_index":3642,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":147,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/Percent.html":{}}}],["bottom",{"_index":1057,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bouncing",{"_index":4065,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["bound",{"_index":2975,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["box",{"_index":1741,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["br",{"_index":1056,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":4584,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["break",{"_index":1145,"title":{},"body":{"interfaces/CliptextConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":893,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["breaks",{"_index":1413,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["browse",{"_index":4941,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":483,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{},"modules.html":{}}}],["bsd",{"_index":2816,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["bubbles",{"_index":576,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["buckets",{"_index":49,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["buffer",{"_index":1797,"title":{},"body":{"classes/CommonUtil.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["buffered",{"_index":1806,"title":{},"body":{"classes/CommonUtil.html":{}}}],["bug",{"_index":1410,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["bugs",{"_index":4652,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":3774,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["build:components",{"_index":4865,"title":{},"body":{"index.html":{}}}],["build:i18n",{"_index":4863,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2395,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["builder.is(\"created\").before(userinputdate",{"_index":3010,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.is(\"uptime\").greaterthan(user",{"_index":3011,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts",{"_index":3002,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builder.ts:106",{"_index":3034,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:126",{"_index":3073,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:160",{"_index":3041,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:180",{"_index":3075,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:190",{"_index":3057,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:198",{"_index":3071,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:206",{"_index":3067,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:214",{"_index":3069,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:222",{"_index":3061,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:230",{"_index":3063,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:238",{"_index":3043,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:246",{"_index":3031,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:256",{"_index":3045,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:270",{"_index":3055,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:282",{"_index":3051,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:291",{"_index":3050,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:39",{"_index":3029,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:40",{"_index":3028,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:41",{"_index":3027,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:52",{"_index":3065,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:62",{"_index":3058,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builder.ts:72",{"_index":3038,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builders",{"_index":3112,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builders.push(new",{"_index":3113,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["buildpartial",{"_index":3018,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["builds",{"_index":4911,"title":{},"body":{"index.html":{}}}],["busy",{"_index":132,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["button",{"_index":75,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["buttoncontents",{"_index":150,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["buttons",{"_index":137,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["by.css(selector",{"_index":3208,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["by.directive(selector",{"_index":3209,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["byte",{"_index":3898,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["bytes",{"_index":4769,"title":{},"body":{"coverage.html":{}}}],["c",{"_index":467,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{}}}],["ca",{"_index":2356,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":1516,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculate",{"_index":211,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculated",{"_index":1695,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["calculatepagesize",{"_index":1676,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["calculateposition(rect",{"_index":1158,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["calculates",{"_index":1349,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["calculating",{"_index":1557,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["california",{"_index":2357,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["call",{"_index":113,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["callargs",{"_index":1832,"title":{},"body":{"classes/CommonUtil.html":{}}}],["callback",{"_index":874,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["called",{"_index":114,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["caller",{"_index":1310,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["callers",{"_index":1809,"title":{},"body":{"classes/CommonUtil.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["calling",{"_index":204,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["calls",{"_index":1800,"title":{},"body":{"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["canbereadonly",{"_index":845,"title":{"interfaces/CanBeReadOnly.html":{}},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"coverage.html":{}}}],["cancel",{"_index":2099,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["canceltext",{"_index":2100,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["care",{"_index":619,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["caret",{"_index":4977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":88,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["cases",{"_index":2004,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["catch",{"_index":2912,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["catch((error",{"_index":367,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["caused",{"_index":1077,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["causes",{"_index":1727,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["causing",{"_index":4609,"title":{},"body":{"contributing.html":{}}}],["cd",{"_index":4920,"title":{},"body":{"index.html":{}}}],["cell",{"_index":988,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/variables.html":{}}}],["cell's",{"_index":1971,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cells",{"_index":1037,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["cellvalue",{"_index":1972,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cellvalue.tolocalestring",{"_index":1984,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["cellvalue.tostring",{"_index":1982,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["center",{"_index":1156,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["certain",{"_index":1802,"title":{},"body":{"classes/CommonUtil.html":{}}}],["certificate",{"_index":4571,"title":{},"body":{"contributing.html":{}}}],["certifies",{"_index":4575,"title":{},"body":{"contributing.html":{}}}],["cfr",{"_index":1866,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["chain",{"_index":457,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["chainable",{"_index":2016,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["chainables",{"_index":2003,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["chance",{"_index":1088,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":546,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"index.html":{}}}],["changed",{"_index":1857,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["changedetectorref",{"_index":1256,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["changes",{"_index":785,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["changing",{"_index":1729,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["character",{"_index":1915,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["characters",{"_index":1937,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["check",{"_index":3202,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["checkbox",{"_index":2113,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["checkbox'},{'name",{"_index":731,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["checkbox.component",{"_index":4503,"title":{},"body":{"modules/VcdFormModule.html":{}}}],["checkbox.component.html",{"_index":3275,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":3274,"title":{},"body":{"components/FormCheckboxComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox.component.ts:34",{"_index":3289,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:39",{"_index":3288,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:44",{"_index":3284,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:49",{"_index":3282,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:51",{"_index":3306,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox.component.ts:53",{"_index":3280,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checkbox/form",{"_index":3273,"title":{},"body":{"components/FormCheckboxComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox_wrapper",{"_index":4984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkboxes",{"_index":2241,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["checkboxstyling",{"_index":3286,"title":{},"body":{"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checkboxstyling.checkbox",{"_index":3287,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["checked",{"_index":3758,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["checkout",{"_index":4622,"title":{},"body":{"contributing.html":{}}}],["checkposition",{"_index":2557,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["checks",{"_index":463,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/FormValidators.html":{},"pipes/NestedPropertyPipe.html":{},"classes/TestElement.html":{}}}],["child",{"_index":965,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["child.matches(activatablemenuitemtype.button",{"_index":2714,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["child.matches(activatablemenuitemtype.nested_vcd_dropdown",{"_index":2715,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["children",{"_index":123,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["chose",{"_index":2006,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["chrome",{"_index":1948,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"miscellaneous/variables.html":{}}}],["ci",{"_index":4630,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["ci/cd",{"_index":4902,"title":{},"body":{"index.html":{}}}],["city",{"_index":3635,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["clarity",{"_index":118,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["claritymodule",{"_index":2822,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["class",{"_index":78,"title":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"classes/FormValidators.html":{},"classes/IdGenerator.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["classes",{"_index":163,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindableWidget-1.html":{},"classes/FormValidators.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"overview.html":{}}}],["classlist.js",{"_index":4807,"title":{},"body":{"dependencies.html":{}}}],["classname",{"_index":3167,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["classselector",{"_index":2564,"title":{},"body":{"classes/DomUtil.html":{}}}],["clause",{"_index":2817,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["clear",{"_index":541,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/FilterBuilder.html":{},"classes/TestElement.html":{}}}],["cleared",{"_index":2976,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["clearhidetimeout",{"_index":1126,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["clearing",{"_index":3787,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["clears",{"_index":540,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{}}}],["clearselectioninformation",{"_index":1635,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["cleartimeout(timerid",{"_index":1834,"title":{},"body":{"classes/CommonUtil.html":{}}}],["cleartimeout(tip.hidetimeout",{"_index":1127,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["cli",{"_index":4804,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["click",{"_index":531,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["click(cssselector",{"_index":782,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["clicked",{"_index":105,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["clicks",{"_index":530,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["client",{"_index":323,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/ObjectAndResponse.html":{}}}],["clientheight",{"_index":1301,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["clientrect",{"_index":1159,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["clipped",{"_index":1033,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipping",{"_index":2887,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["cliptext",{"_index":1036,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{}}}],["cliptextconfig",{"_index":1031,"title":{"interfaces/CliptextConfig.html":{}},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"coverage.html":{}}}],["clone",{"_index":4897,"title":{},"body":{"index.html":{}}}],["cloning",{"_index":4896,"title":{},"body":{"index.html":{}}}],["closable",{"_index":2969,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["close",{"_index":1431,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["closed",{"_index":2748,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{}}}],["closemenu",{"_index":2670,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["closer",{"_index":4167,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["closes",{"_index":676,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["closest",{"_index":970,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["closevcddropdown",{"_index":2590,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["closing",{"_index":3348,"title":{},"body":{"components/FormInputComponent.html":{}}}],["closure",{"_index":4058,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["closures",{"_index":3269,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["cloud",{"_index":2027,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"index.html":{}}}],["clr",{"_index":754,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["clr/angular",{"_index":1267,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/QuickSearchModule.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{}}}],["clr/angular/data/datagrid/enums/selection",{"_index":1269,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clr/angular/data/datagrid/interfaces/filter.interface",{"_index":2322,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["clr/angular/data/datagrid/providers/column",{"_index":1271,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clr/core",{"_index":4788,"title":{},"body":{"dependencies.html":{}}}],["clr/icons",{"_index":4789,"title":{},"body":{"dependencies.html":{}}}],["clr/ui",{"_index":4790,"title":{},"body":{"dependencies.html":{}}}],["clrdatagrid",{"_index":1264,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["clrdatagridcssclass",{"_index":1534,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridfilter",{"_index":2284,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["clrdatagridfilterinterface",{"_index":2275,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["clrdatagridpagination",{"_index":1265,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridstateinterface",{"_index":1266,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdatagridwidgetobject",{"_index":3138,"title":{},"body":{"components/FilterTestHostComponent.html":{},"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["clrdatarowcssclassgetter(row",{"_index":1605,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["clrdgcolumnclassname",{"_index":1775,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["clrdropdown",{"_index":2063,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{}}}],["clrdropdownmenu",{"_index":2700,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{}}}],["clrdropdownmenuel",{"_index":2591,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["cluster_dropdownmodule",{"_index":2800,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":2801,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_dropdowncomponent_providers",{"_index":2802,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":2804,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_imports",{"_index":2803,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":4134,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":4135,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":4136,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule",{"_index":4154,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule_declarations",{"_index":4155,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_quicksearchmodule_exports",{"_index":4156,"title":{},"body":{"modules/QuickSearchModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule",{"_index":4238,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule_declarations",{"_index":4239,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_showclippedtextdirectivemodule_exports",{"_index":4240,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule",{"_index":4425,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_declarations",{"_index":4426,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_exports",{"_index":4428,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"overview.html":{}}}],["cluster_vcdactionmenumodule_imports",{"_index":4427,"title":{},"body":{"modules/VcdActionMenuModule.html":{}}}],["cluster_vcdactivityreportermodule",{"_index":4432,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_declarations",{"_index":4433,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_exports",{"_index":4435,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdactivityreportermodule_imports",{"_index":4434,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"overview.html":{}}}],["cluster_vcdcomponentsmodule",{"_index":4446,"title":{},"body":{"modules/VcdComponentsModule.html":{},"overview.html":{}}}],["cluster_vcdcomponentsmodule_exports",{"_index":4447,"title":{},"body":{"modules/VcdComponentsModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule",{"_index":4459,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule_declarations",{"_index":4460,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddataexportermodule_exports",{"_index":4461,"title":{},"body":{"modules/VcdDataExporterModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule",{"_index":4464,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_declarations",{"_index":4465,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_exports",{"_index":4467,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcddatagridmodule_imports",{"_index":4466,"title":{},"body":{"modules/VcdDatagridModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule",{"_index":4494,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule_declarations",{"_index":4495,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcderrorbannermodule_exports",{"_index":4496,"title":{},"body":{"modules/VcdErrorBannerModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule",{"_index":4526,"title":{},"body":{"modules/VcdFormlyModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule_declarations",{"_index":4527,"title":{},"body":{"modules/VcdFormlyModule.html":{},"overview.html":{}}}],["cluster_vcdformlymodule_imports",{"_index":4528,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["cluster_vcdformmodule",{"_index":4498,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdformmodule_declarations",{"_index":4499,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdformmodule_exports",{"_index":4500,"title":{},"body":{"modules/VcdFormModule.html":{}}}],["cluster_vcdformmodule_providers",{"_index":4501,"title":{},"body":{"modules/VcdFormModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule",{"_index":4541,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule_declarations",{"_index":4542,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cluster_vcdloadingindicatormodule_exports",{"_index":4543,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["cmd+space",{"_index":3996,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["co",{"_index":3838,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["co.value",{"_index":3839,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["code",{"_index":570,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["codecov.io",{"_index":4809,"title":{},"body":{"dependencies.html":{}}}],["col",{"_index":1572,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["col.displayname",{"_index":1581,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["col.fieldname",{"_index":2217,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["colindex",{"_index":1573,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["collect",{"_index":110,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["color",{"_index":3387,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["cols",{"_index":1397,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column",{"_index":987,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["column.datagrid",{"_index":4971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column.displayname",{"_index":1582,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.filter",{"_index":1721,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.filter.config.queryfield",{"_index":1722,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.hideable",{"_index":1656,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.interface",{"_index":1006,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.interface.ts",{"_index":1736,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["column.queryfieldname",{"_index":1720,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column.renderer",{"_index":1712,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["column_title",{"_index":4969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columncomponentrendererspec",{"_index":1003,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"coverage.html":{}}}],["columncomponentrendererspec(componentrendererspec",{"_index":1789,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["columncomponentrendererspec({type",{"_index":1778,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["columnconfig",{"_index":1711,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldcolumnrendererspec",{"_index":1716,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldname",{"_index":1717,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfig.fieldrenderer",{"_index":1714,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnconfiginternal",{"_index":1243,"title":{"interfaces/ColumnConfigInternal.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["columndropdown",{"_index":2087,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["columndropdown(columndropdown",{"_index":2086,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["columnrendererspec",{"_index":1004,"title":{"interfaces/ColumnRendererSpec.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["columnrendererspec#type",{"_index":1842,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["columnrendererspec).config",{"_index":1715,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnrendererspec.config",{"_index":1855,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["columns",{"_index":991,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columns(cols",{"_index":1395,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columns.map((column",{"_index":1710,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnsconfig",{"_index":1390,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnstatefactory",{"_index":1270,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columnsupdated",{"_index":1513,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["columntrackby(index",{"_index":1589,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["combination",{"_index":361,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["combooption",{"_index":3734,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combooptions",{"_index":3748,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combooptionunitmap",{"_index":3750,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["combounitoptions",{"_index":3779,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["commands",{"_index":4925,"title":{},"body":{"index.html":{}}}],["commas",{"_index":1967,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["comment",{"_index":4642,"title":{},"body":{"contributing.html":{}}}],["comments",{"_index":3877,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["commit",{"_index":4587,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commits",{"_index":4585,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":4419,"title":{},"body":{"injectables/UnitFormatter.html":{},"contributing.html":{},"index.html":{}}}],["common/activity",{"_index":826,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["common/error/error",{"_index":4453,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["common/interfaces",{"_index":262,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["common/interfaces/action",{"_index":1277,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["common/interfaces/select",{"_index":2392,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["common/loading/loading",{"_index":4454,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["common/pipes/pipes.module",{"_index":4472,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["common/subscription",{"_index":1280,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["commonmodule",{"_index":2818,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["commonutil",{"_index":265,"title":{"classes/CommonUtil.html":{}},"body":{"classes/ActionSearchProvider.html":{},"classes/CommonUtil.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/UnitFormatter.html":{},"coverage.html":{}}}],["commonutil.createbufferedpromise(this.search",{"_index":4175,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["commonutil.isfunction(action.disabled",{"_index":311,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["commonutil.roundto(inputunit.getoutputvalue(value",{"_index":4421,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["community",{"_index":4569,"title":{},"body":{"contributing.html":{}}}],["compared",{"_index":4113,"title":{},"body":{"classes/Percent.html":{}}}],["comparison",{"_index":3887,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["compatibility",{"_index":3544,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["compilecomponents",{"_index":3146,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["compiler",{"_index":4172,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["complete",{"_index":1539,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{}}}],["completed",{"_index":4078,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["complex",{"_index":3005,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["comply",{"_index":4161,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["compodoc",{"_index":4823,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":205,"title":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component's",{"_index":780,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["component({@link",{"_index":3148,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["component_template",{"_index":704,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["componentconstructor",{"_index":637,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfactory",{"_index":1890,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":1867,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentfixture",{"_index":480,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfixture#detectchanges",{"_index":3203,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentfixture).componentref",{"_index":640,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["componentinstance",{"_index":588,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{}}}],["componentref",{"_index":1859,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["componentrenderer",{"_index":984,"title":{"interfaces/ComponentRenderer.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{}}}],["componentrenderer#config",{"_index":1744,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["componentrenderer.config",{"_index":1007,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["componentrendererconstructor",{"_index":1286,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["componentrendereroutletdirective",{"_index":749,"title":{"directives/ComponentRendererOutletDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["componentrendereroutletdirective#assignvalue",{"_index":2332,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["componentrendererspec",{"_index":1287,"title":{"interfaces/ComponentRendererSpec.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["componentroots",{"_index":3250,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["componentroots.map",{"_index":3252,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["components",{"_index":654,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"index.html":{},"overview.html":{}}}],["components.git",{"_index":4934,"title":{},"body":{"index.html":{}}}],["components/master",{"_index":4918,"title":{},"body":{"index.html":{}}}],["components/pull/248",{"_index":2029,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["componenttype",{"_index":1860,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["compound",{"_index":4072,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["computebestunitandvalue(value",{"_index":3825,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["concat",{"_index":497,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["concat(...elements.map((element",{"_index":491,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["concurrent",{"_index":380,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["condition",{"_index":82,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/FilterBuilder.html":{},"interfaces/ObjectAndResponse.html":{}}}],["condition(operator",{"_index":3052,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["condition.buildpartial",{"_index":3099,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["condition.clear",{"_index":3104,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions",{"_index":3036,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.foreach((condition",{"_index":3098,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.length",{"_index":3088,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["conditions.shift",{"_index":3096,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["config",{"_index":998,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["config(config",{"_index":1194,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config(context",{"_index":1895,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["config(record",{"_index":1012,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["config(val",{"_index":2333,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["config.disabled",{"_index":1199,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.mouseoutdelay",{"_index":1195,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.options.foreach((option",{"_index":2407,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["config.options.map((option",{"_index":2404,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["config.size",{"_index":1197,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["config.text",{"_index":997,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["config.unit",{"_index":2479,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["config.unitoptions",{"_index":2478,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["configoption",{"_index":4513,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["configurable",{"_index":3723,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["configuration",{"_index":9,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["configurationcomponentrenderer",{"_index":1897,"title":{},"body":{"interfaces/ComponentRendererSpec.html":{}}}],["configuration{@link",{"_index":1845,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["configured",{"_index":4013,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["configures",{"_index":2546,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["configuretestingmodule",{"_index":3142,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["conjunct",{"_index":3039,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["consider",{"_index":3724,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["considered",{"_index":4607,"title":{},"body":{"contributing.html":{}}}],["considering",{"_index":3775,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["consists",{"_index":4003,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["console.error('clarity",{"_index":2913,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["const",{"_index":267,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["construct",{"_index":1371,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["constructed",{"_index":3747,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["constructor",{"_index":192,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["constructor(@inject(activitypromiseresolver",{"_index":4347,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["constructor(@inject(locale_id",{"_index":3659,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["constructor(@self",{"_index":3310,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["constructor(arg",{"_index":614,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["constructor(chainable",{"_index":2012,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["constructor(componentconstructor",{"_index":3242,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["constructor(controldirective",{"_index":3279,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{}}}],["constructor(destroyable",{"_index":3549,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["constructor(driver",{"_index":955,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["constructor(elements",{"_index":4367,"title":{},"body":{"classes/TestElement.html":{}}}],["constructor(elref",{"_index":2849,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["constructor(filtercontainer",{"_index":2283,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["constructor(fixture",{"_index":4260,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"classes/WidgetObject.html":{}}}],["constructor(host",{"_index":4223,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["constructor(multiplier",{"_index":4120,"title":{},"body":{"classes/Percent.html":{},"classes/Unit.html":{}}}],["constructor(ngcontrol",{"_index":861,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormSelectComponent.html":{}}}],["constructor(parent",{"_index":3026,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["constructor(parentvcddropdown",{"_index":2606,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["constructor(prefix",{"_index":3567,"title":{},"body":{"classes/IdGenerator.html":{}}}],["constructor(private",{"_index":276,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["constructor(promiseresolver",{"_index":388,"title":{},"body":{"classes/ActivityReporter.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["constructor(public",{"_index":522,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["constructor(quicksearchservice",{"_index":4182,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["constructor(renderer",{"_index":2745,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["constructor(shoulddebounceinput",{"_index":4171,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["constructor(testelement",{"_index":449,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["constructor(translationservice",{"_index":671,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"injectables/UnitFormatter.html":{}}}],["constructor(ts",{"_index":193,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["constructor(unitformatter",{"_index":3970,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["constructor(viewcontainerref",{"_index":1864,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["constructors",{"_index":1853,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["constructs",{"_index":3546,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["contain",{"_index":3978,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["contained",{"_index":368,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ObjectAndResponse.html":{},"classes/TestElement.html":{}}}],["container",{"_index":1070,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["container').unwrap",{"_index":951,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["contains",{"_index":969,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["content",{"_index":804,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["content/dimensions",{"_index":1133,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["content_area_selector",{"_index":2882,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contentareaelement",{"_index":2836,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect",{"_index":2928,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.bottom",{"_index":2955,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.left",{"_index":2937,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.right",{"_index":2934,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentarearect.top",{"_index":2930,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentchild",{"_index":2880,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contentchild(clrdropdownmenu",{"_index":2897,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["contents",{"_index":74,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":33,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["context(.modal",{"_index":3622,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["context(.modal):not(.adjust",{"_index":3397,"title":{},"body":{"components/FormInputComponent.html":{}}}],["contextual",{"_index":15,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["contextual_featured",{"_index":44,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["contextualactionposition",{"_index":1289,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["contextualactionposition.row",{"_index":1493,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualactionposition.top",{"_index":1490,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualactions",{"_index":1438,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["contextualfeaturedactions",{"_index":1505,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["continue",{"_index":4083,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["contract",{"_index":373,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["contributing",{"_index":4564,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contribution",{"_index":4577,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":4568,"title":{},"body":{"contributing.html":{}}}],["contributor's",{"_index":4581,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":842,"title":{},"body":{"classes/BaseFormControl.html":{},"injectables/CsvExporterService.html":{},"components/DatagridNumericFilterComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["control's",{"_index":3428,"title":{},"body":{"classes/FormValidators.html":{}}}],["control.ts",{"_index":834,"title":{},"body":{"classes/BaseFormControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control.ts:105",{"_index":879,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:109",{"_index":881,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:113",{"_index":884,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:117",{"_index":887,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:21",{"_index":867,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:26",{"_index":873,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:31",{"_index":875,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:36",{"_index":864,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:41",{"_index":903,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:46",{"_index":901,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:52",{"_index":890,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:57",{"_index":899,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:62",{"_index":895,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:67",{"_index":865,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:72",{"_index":863,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:85",{"_index":906,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:91",{"_index":909,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.ts:98",{"_index":911,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["control.value",{"_index":3446,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["controldirective",{"_index":3281,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["controlling",{"_index":4021,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["controls",{"_index":1026,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["controlvalueaccessor",{"_index":844,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["convenience",{"_index":513,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["conventions",{"_index":4645,"title":{},"body":{"contributing.html":{}}}],["conversion",{"_index":2516,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["convert",{"_index":3899,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["converted",{"_index":2067,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["convertgenericonly",{"_index":973,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"miscellaneous/typealiases.html":{}}}],["converts",{"_index":2081,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["copy/paste",{"_index":1090,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["copyright",{"_index":2810,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["correct",{"_index":1661,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["correctly",{"_index":3254,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["correctreturntypes",{"_index":470,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"miscellaneous/typealiases.html":{}}}],["corresponding",{"_index":1750,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["correspondingformctrl",{"_index":2411,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["correspondingformctrl.setvalue(true",{"_index":2416,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["costs",{"_index":516,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["count",{"_index":1358,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["counter",{"_index":607,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["cover",{"_index":2946,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["coverage",{"_index":3230,"title":{"coverage.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{}}}],["covering",{"_index":3672,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["cr",{"_index":974,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["create",{"_index":1092,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createbufferedpromise",{"_index":1792,"title":{},"body":{"classes/CommonUtil.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["createbufferedpromise(fn",{"_index":1795,"title":{},"body":{"classes/CommonUtil.html":{}}}],["createcsv",{"_index":1904,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["createcsv(rows",{"_index":1907,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["created",{"_index":561,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["createdatagridfiltertesthelper",{"_index":3154,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["createdatagridfiltertesthelperwithfinder",{"_index":3162,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["createformgroup",{"_index":2278,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["createnullsafevalidator",{"_index":3423,"title":{},"body":{"classes/FormValidators.html":{}}}],["createnullsafevalidator(validator",{"_index":3425,"title":{},"body":{"classes/FormValidators.html":{}}}],["creates",{"_index":390,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["creating",{"_index":566,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["creation",{"_index":2055,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["criteria",{"_index":207,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["css",{"_index":77,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cssselector",{"_index":465,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["csv",{"_index":1911,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["csvexporterservice",{"_index":1899,"title":{"injectables/CsvExporterService.html":{}},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"coverage.html":{}}}],["csvfile",{"_index":1924,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["cur",{"_index":3873,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["current",{"_index":811,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["currentaction",{"_index":298,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction.istranslatable",{"_index":303,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction.textkey",{"_index":304,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentaction?.children?.length",{"_index":299,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["currentdetailrowconfig",{"_index":1563,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentdetailrowrenderspec",{"_index":1564,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentdirective",{"_index":1078,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["currentfocuseditem",{"_index":2739,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["currenthost",{"_index":1081,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":378,"title":{},"body":{"classes/ActivityReporter.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["currentoperator",{"_index":3016,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["currentpanespec",{"_index":1562,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentpanespecrecord",{"_index":1561,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentselection.map((selected",{"_index":1629,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["currentvalue",{"_index":2182,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["custom",{"_index":65,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["customfiql",{"_index":2518,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["cy",{"_index":2025,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cy.get",{"_index":2040,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cy.get(ancestor).find(tagname",{"_index":2043,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cy.get(tagname",{"_index":2044,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cycle",{"_index":628,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/MenuItem.html":{}}}],["cypress",{"_index":2002,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{}}}],["cypress.chainable",{"_index":2005,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["cypresslocatordriver",{"_index":2000,"title":{"classes/CypressLocatorDriver.html":{}},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{}}}],["cypresslocatordriver(root",{"_index":2046,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["cypresslocatordriver(root.contains(cssselector",{"_index":2035,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresslocatordriver(root.find(cssselector",{"_index":2031,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresslocatordriver(root.parents(cssselector",{"_index":2036,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["cypresswidgetobjectfinder",{"_index":2023,"title":{"classes/CypressWidgetObjectFinder.html":{}},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{}}}],["cypresswidgetobjectfinder().find(widget",{"_index":2038,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["danger",{"_index":2970,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["data",{"_index":60,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{}}}],["data.ts",{"_index":3634,"title":{},"body":{"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dataexportercomponent",{"_index":711,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDataExporterModule.html":{},"coverage.html":{},"overview.html":{}}}],["dataexporterwidgetobject",{"_index":2221,"title":{"classes/DataExporterWidgetObject.html":{}},"body":{"classes/DataExporterWidgetObject.html":{},"coverage.html":{}}}],["dataexportrequest",{"_index":2141,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dataexportrequestevent",{"_index":2047,"title":{"interfaces/DataExportRequestEvent.html":{}},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"coverage.html":{}}}],["dataexportrequestevent.exportdata",{"_index":2142,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["datagrid",{"_index":1038,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["datagrid'},{'name",{"_index":714,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["datagrid.component",{"_index":4473,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["datagrid.component.html",{"_index":1386,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagrid.component.scss",{"_index":1388,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagrid.wo",{"_index":3139,"title":{},"body":{"components/FilterTestHostComponent.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts",{"_index":4482,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["datagrid.wo.ts:13",{"_index":4487,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:18",{"_index":4486,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:23",{"_index":4489,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid.wo.ts:31",{"_index":4491,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["datagrid/datagrid.module",{"_index":4456,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["datagrid/mock",{"_index":3137,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["datagridcomponent",{"_index":713,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{}}}],["datagridcomponent.gridrefresh",{"_index":1370,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridfilter",{"_index":1283,"title":{"classes/DatagridFilter.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["datagridfilter#config",{"_index":2344,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["datagridfilter.queryfield",{"_index":1719,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridfilter:107",{"_index":2382,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:112",{"_index":2376,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:117",{"_index":2383,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:122",{"_index":2378,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:127",{"_index":2379,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:132",{"_index":2380,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:137",{"_index":2375,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:59",{"_index":2389,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:60",{"_index":2390,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:71",{"_index":2387,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:72",{"_index":2363,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:87",{"_index":2388,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:89",{"_index":2381,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridfilter:99",{"_index":2377,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["datagridmultiselectfilter",{"_index":2426,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["datagridmultiselectfiltercomponent",{"_index":715,"title":{"components/DatagridMultiSelectFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridmultiselectfiltercomponent.options",{"_index":2398,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["datagridmultiselectfilterconfig",{"_index":2369,"title":{"interfaces/DatagridMultiSelectFilterConfig.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["datagridnumericfilter",{"_index":2494,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"coverage.html":{}}}],["datagridnumericfiltercomponent",{"_index":719,"title":{"components/DatagridNumericFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridnumericfiltercomponent.close",{"_index":3349,"title":{},"body":{"components/FormInputComponent.html":{}}}],["datagridnumericfilterconfig",{"_index":2444,"title":{"interfaces/DatagridNumericFilterConfig.html":{}},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datagridnumericfiltervalue",{"_index":2446,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"miscellaneous/typealiases.html":{}}}],["datagridselectfilter",{"_index":2530,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"coverage.html":{}}}],["datagridselectfiltercomponent",{"_index":721,"title":{"components/DatagridSelectFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridselectfiltercomponent#getvalue",{"_index":2517,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["datagridselectfilterconfig",{"_index":2515,"title":{"interfaces/DatagridSelectFilterConfig.html":{}},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"coverage.html":{}}}],["datagridselection",{"_index":1478,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridselection(selection",{"_index":1483,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridselectionchange",{"_index":1510,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["datagridstringfilter",{"_index":2559,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"coverage.html":{}}}],["datagridstringfiltercomponent",{"_index":723,"title":{"components/DatagridStringFilterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["datagridstringfilterconfig",{"_index":2547,"title":{"interfaces/DatagridStringFilterConfig.html":{}},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"coverage.html":{}}}],["datarow",{"_index":1602,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["date",{"_index":1983,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/FilterBuilder.html":{},"components/FormInputComponent.html":{},"pipes/NestedPropertyPipe.html":{},"miscellaneous/variables.html":{}}}],["date(getformatteddatevalue(value)).toisostring",{"_index":3375,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date(value",{"_index":3377,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date.getfullyear",{"_index":3378,"title":{},"body":{"components/FormInputComponent.html":{}}}],["date.toisostring",{"_index":3111,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["date_object_class",{"_index":3658,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datepipe",{"_index":3654,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["datepipe(this.localeid).transform(returnvalue",{"_index":3671,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["datetime",{"_index":3316,"title":{},"body":{"components/FormInputComponent.html":{}}}],["de",{"_index":4064,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["deactivate",{"_index":1224,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["debounce_time_for_grid_filter_changes",{"_index":2328,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["debounced",{"_index":1807,"title":{},"body":{"classes/CommonUtil.html":{}}}],["debouncetime",{"_index":2323,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["debug",{"_index":458,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugel",{"_index":594,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugel.nativeelement.matches(cssselector",{"_index":595,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelement",{"_index":452,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["debugelement.nativeelement.matches(cssselector",{"_index":504,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelement.parent",{"_index":505,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["debugelements",{"_index":511,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["decimal",{"_index":1823,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/UnitFormatter.html":{}}}],["decimalpipe",{"_index":3655,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["decimalpipe(this.localeid).transform(returnvalue",{"_index":3670,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["decisions",{"_index":837,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["declarations",{"_index":2796,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":2024,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["decorators",{"_index":2451,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/FormInputComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["deep",{"_index":2496,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{}}}],["default",{"_index":143,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["default_action_search_section_header_prefix",{"_index":268,"title":{},"body":{"classes/ActionSearchProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_pagination_translation_key",{"_index":1311,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_size",{"_index":1292,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_size_options",{"_index":1294,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":148,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["defaultspinnersize",{"_index":3583,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["define",{"_index":4391,"title":{},"body":{"classes/Unit.html":{}}}],["defined",{"_index":196,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["defines",{"_index":1703,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["definition",{"_index":1604,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["delay",{"_index":1042,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["delayed",{"_index":2326,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":2795,"title":{"dependencies.html":{}},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependent",{"_index":46,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["depends",{"_index":1495,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["deprecated",{"_index":563,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["deps",{"_index":4990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derived",{"_index":2310,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["described",{"_index":2569,"title":{},"body":{"classes/DomUtil.html":{},"contributing.html":{}}}],["describes",{"_index":155,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":4602,"title":{},"body":{"contributing.html":{}}}],["deselect",{"_index":2091,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["designed",{"_index":4164,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["desired",{"_index":1467,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["destroy",{"_index":1110,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["destroyable",{"_index":4359,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["destroyable.ngondestroy",{"_index":3551,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["destroyed",{"_index":3545,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"injectables/QuickSearchRegistrarService.html":{},"classes/SubscriptionTracker.html":{}}}],["detaching",{"_index":1883,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["detachrenderer",{"_index":1863,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["detail",{"_index":1355,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["detail_pane",{"_index":4973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail_pane_button",{"_index":4978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail_pane_header",{"_index":4974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail_row",{"_index":4972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail_row_button",{"_index":4975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailcomponent",{"_index":1526,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["detailpane",{"_index":1362,"title":{"interfaces/DetailPane.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["detailpaneconfig",{"_index":1360,"title":{"interfaces/DetailPaneConfig.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["detailrowconfig",{"_index":1356,"title":{"interfaces/DetailRowConfig.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["details",{"_index":1871,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/MockRecord.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["detectchanges",{"_index":548,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["detection",{"_index":547,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"classes/TestElement.html":{}}}],["detects",{"_index":784,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["determine",{"_index":4209,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["determined",{"_index":2926,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["determines",{"_index":4106,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["determining",{"_index":116,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["dev",{"_index":4866,"title":{},"body":{"index.html":{}}}],["developer",{"_index":4001,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["developers",{"_index":4854,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1382,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["development",{"_index":4909,"title":{},"body":{"index.html":{}}}],["dg",{"_index":716,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["di",{"_index":2894,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dialog",{"_index":2079,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dialogheader",{"_index":2096,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["dialogs",{"_index":3579,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["didn't",{"_index":2206,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["different",{"_index":1248,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"interfaces/SortedColumn.html":{},"classes/Unit.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["differentiate",{"_index":1247,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["differentiating",{"_index":1706,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["differently",{"_index":4112,"title":{},"body":{"classes/Percent.html":{}}}],["digits",{"_index":1816,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/UnitFormatter.html":{}}}],["dimensions",{"_index":1157,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":623,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["direction",{"_index":1153,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["direction.down",{"_index":2764,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.left",{"_index":2766,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.right",{"_index":2770,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["direction.up",{"_index":2768,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["directions",{"_index":2586,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["directive",{"_index":600,"title":{"directives/ComponentRendererOutletDirective.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directives",{"_index":748,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directives/component",{"_index":4474,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":4886,"title":{},"body":{"index.html":{}}}],["directly",{"_index":3183,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["director",{"_index":2028,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"index.html":{}}}],["directory",{"_index":4889,"title":{},"body":{"index.html":{}}}],["dirty",{"_index":3793,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["disable",{"_index":1773,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["disabled",{"_index":98,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["disabled(disabled",{"_index":4305,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["disables",{"_index":1318,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["disjunct",{"_index":3074,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["dismissed",{"_index":2965,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["dismisses",{"_index":2977,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["dispatched",{"_index":4024,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["display",{"_index":34,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["displaycombounit",{"_index":3860,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["displayed",{"_index":30,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["displaying",{"_index":62,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["displayname",{"_index":993,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["displays",{"_index":1188,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/ErrorBannerComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["displaytext",{"_index":293,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["displayunit",{"_index":3861,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["displayvalue",{"_index":3850,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["dist",{"_index":4888,"title":{},"body":{"index.html":{}}}],["div",{"_index":4331,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["div2",{"_index":4333,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["dividing",{"_index":1693,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["docs",{"_index":4016,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"dependencies.html":{},"index.html":{}}}],["document",{"_index":2850,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["document.body.appendchild(link",{"_index":1958,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.body.appendchild(tip.container",{"_index":1104,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.body.removechild(link",{"_index":1960,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.body.removechild(tip.container",{"_index":1111,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.createelement('a",{"_index":1952,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["document.createelement('div",{"_index":1094,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["document.queryselector('.tooltip.vcd",{"_index":4327,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["document.queryselectorall('.tooltip.vcd",{"_index":4322,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["documentation",{"_index":4654,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":4596,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":442,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["domrect",{"_index":2869,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["domutil",{"_index":2560,"title":{"classes/DomUtil.html":{}},"body":{"classes/DomUtil.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["don't",{"_index":618,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["done",{"_index":559,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["dosearch",{"_index":4049,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["dot",{"_index":1757,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["double",{"_index":1986,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["doubled",{"_index":1987,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["down",{"_index":2666,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/enumerations.html":{}}}],["download",{"_index":1923,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloadcsvfile",{"_index":1905,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["downloadcsvfile(csvfile",{"_index":1919,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["downloaddata(data",{"_index":2200,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloaded",{"_index":1925,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloading",{"_index":2127,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downloadingmessage",{"_index":2128,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["downs",{"_index":2895,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dr",{"_index":1305,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["driver",{"_index":957,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["drop",{"_index":2829,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["dropdown",{"_index":154,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dropdown'},{'name",{"_index":725,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown.component",{"_index":2656,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{}}}],["dropdown.menu",{"_index":2678,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdown/dropdown.module",{"_index":4430,"title":{},"body":{"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{}}}],["dropdown[vcddropdownfocushandler",{"_index":2589,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdown[vcddropdownfocushandler]'},{'name",{"_index":752,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown[vcddynamicdropdown",{"_index":2835,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdown[vcddynamicdropdown]'},{'name",{"_index":755,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["dropdown_focus_handler_provider",{"_index":2805,"title":{},"body":{"modules/DropdownModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dropdown_item_selector",{"_index":4713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dropdownbtn",{"_index":2851,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowncomponent",{"_index":724,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropdownfocushandlerdirective",{"_index":751,"title":{"directives/DropdownFocusHandlerDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropdownfocushandlerdirective.ngafterviewinit",{"_index":2753,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["dropdownfocushandlerservice",{"_index":2587,"title":{"injectables/DropdownFocusHandlerService.html":{}},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dropdownfocushandlerservicefactory",{"_index":4712,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dropdownmenu",{"_index":2846,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenu(dropdown",{"_index":2898,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenuelement",{"_index":2837,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenuheight",{"_index":2923,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect",{"_index":2838,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.bottom",{"_index":2924,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.height",{"_index":2933,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.top",{"_index":2925,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmenurect.width",{"_index":2936,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdownmodule",{"_index":2793,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["dropdowntriggerel",{"_index":2592,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["dropdowntriggerelement",{"_index":2839,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerheight",{"_index":2920,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect",{"_index":2840,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.bottom",{"_index":2921,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.left",{"_index":2935,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["dropdowntriggerrect.top",{"_index":2922,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["due",{"_index":1408,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["duplicate",{"_index":3186,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{}}}],["duplication",{"_index":3177,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["during",{"_index":1542,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["dynamic",{"_index":1852,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"dependencies.html":{}}}],["dynamically",{"_index":1841,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["dynamicdropdownpositiondirective",{"_index":753,"title":{"directives/DynamicDropdownPositionDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["e",{"_index":1176,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{}}}],["e.g",{"_index":2304,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["e2e",{"_index":4894,"title":{},"body":{"index.html":{}}}],["each",{"_index":549,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["earlier",{"_index":252,"title":{},"body":{"classes/ActionSearchProvider.html":{},"contributing.html":{}}}],["edit",{"_index":1027,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["edited",{"_index":1916,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["editing",{"_index":1029,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["el",{"_index":519,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["el.addeventlistener('mouseenter",{"_index":1180,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.addeventlistener('mouseleave",{"_index":1181,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.getboundingclientrect",{"_index":1136,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["el.innerhtml",{"_index":1152,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["el.nativeelement.dispatchevent(new",{"_index":538,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.nativeelement.textcontent.includes(value",{"_index":500,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.nativeelement.textcontent.trim",{"_index":3234,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["el.nativeelement.value",{"_index":542,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.parent",{"_index":503,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["el.queryselector(classselector",{"_index":2575,"title":{},"body":{"classes/DomUtil.html":{}}}],["el.removeeventlistener('mouseenter",{"_index":1183,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["el.removeeventlistener('mouseleave",{"_index":1184,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["element",{"_index":464,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["element's",{"_index":1234,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/FormInputComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["element.dispatchevent(event",{"_index":580,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["element.innerhtml",{"_index":3968,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["element.nativeelement.click",{"_index":533,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["element.parents('body').querydirective(filtertype",{"_index":3141,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["element.queryall(by.css(cssselector",{"_index":492,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["elementlocator",{"_index":958,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/typealiases.html":{}}}],["elementref",{"_index":1047,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["elements",{"_index":459,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["elements.map((element",{"_index":498,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["elementtoscroll",{"_index":2574,"title":{},"body":{"classes/DomUtil.html":{}}}],["elementtoscroll.scrollintoview",{"_index":2576,"title":{},"body":{"classes/DomUtil.html":{}}}],["ellipsis",{"_index":1216,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["elref",{"_index":2571,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["elref.nativeelement",{"_index":2573,"title":{},"body":{"classes/DomUtil.html":{}}}],["emission",{"_index":2298,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["emit",{"_index":3817,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["emitevent",{"_index":3819,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["emits",{"_index":1509,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["emitted",{"_index":1368,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["emitting",{"_index":2327,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":347,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["emptycolumnplaceholder",{"_index":1765,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["emptygridplaceholder",{"_index":1537,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["enabled",{"_index":528,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/TestElement.html":{}}}],["encoded",{"_index":1973,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodes",{"_index":1930,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodevalue",{"_index":4682,"title":{},"body":{"coverage.html":{}}}],["encodevalue(cell",{"_index":1969,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encodevalue(cellvalue",{"_index":1980,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["encourage",{"_index":3184,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["end",{"_index":2542,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["enforce",{"_index":835,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["enough",{"_index":2830,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["ensure",{"_index":4077,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ensurefirstsectionisloaded",{"_index":4073,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["enter",{"_index":3338,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["enterclicked",{"_index":3327,"title":{},"body":{"components/FormInputComponent.html":{}}}],["entered",{"_index":208,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["entire",{"_index":789,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["entities",{"_index":259,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["entity",{"_index":39,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["entrycomponents",{"_index":4439,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["enum",{"_index":27,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":4835,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":4993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eq",{"_index":3081,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":2524,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["equals",{"_index":3837,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["equalto",{"_index":3019,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["equalto(value",{"_index":3056,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["equivalent",{"_index":3673,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["error",{"_index":359,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"modules/VcdErrorBannerModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error('clarity",{"_index":2914,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["error('could",{"_index":4356,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["error('query",{"_index":2348,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["error('the",{"_index":2523,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["error('unsubscribing",{"_index":3559,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["error(`a",{"_index":2413,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["error(`could",{"_index":650,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["error(`did",{"_index":3262,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error(`expected",{"_index":3263,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["error/error",{"_index":4440,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["errorbannercomponent",{"_index":726,"title":{"components/ErrorBannerComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdErrorBannerModule.html":{},"coverage.html":{},"overview.html":{}}}],["errorbannerwidgetobject",{"_index":2991,"title":{"classes/ErrorBannerWidgetObject.html":{}},"body":{"classes/ErrorBannerWidgetObject.html":{},"coverage.html":{}}}],["errorkeys",{"_index":860,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["errorlabels",{"_index":855,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["errormessage",{"_index":2958,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errormessage(val",{"_index":2987,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errormessagechange",{"_index":2966,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["errorobjectvalue",{"_index":3876,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["errors",{"_index":377,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/BaseFormControl.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{}}}],["errortext",{"_index":411,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["escape",{"_index":1993,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormInputComponent.html":{}}}],["escapeclicked",{"_index":3328,"title":{},"body":{"components/FormInputComponent.html":{}}}],["escapepressed",{"_index":2741,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["etc",{"_index":571,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["evaluator",{"_index":4802,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":2681,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["event",{"_index":555,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["event('blur",{"_index":539,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["event('input",{"_index":3222,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["event.preventdefault",{"_index":2778,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["event.stoppropagation",{"_index":2693,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["eventemitter",{"_index":1257,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["eventemitter(false",{"_index":3359,"title":{},"body":{"components/FormInputComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["eventhandler",{"_index":1175,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/typealiases.html":{}}}],["eventproperties",{"_index":557,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["eventproperties[key",{"_index":579,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["events",{"_index":395,"title":{},"body":{"classes/ActivityReporter.html":{},"components/ErrorBannerComponent.html":{}}}],["eventsource",{"_index":3990,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["eventtype",{"_index":556,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["everywhere",{"_index":3997,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ex",{"_index":3706,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["examine",{"_index":4081,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["example",{"_index":234,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/WidgetFinder.html":{}}}],["examples",{"_index":2351,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["excel",{"_index":1933,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["except",{"_index":2752,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["excluding",{"_index":1625,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["execute",{"_index":4892,"title":{},"body":{"index.html":{}}}],["executed",{"_index":104,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["executing",{"_index":2662,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/MenuItem.html":{}}}],["exist",{"_index":2415,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["existing",{"_index":1620,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["expand",{"_index":1531,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expandable",{"_index":4976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expanded",{"_index":1528,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expect(el.enabled()).tobetruthy",{"_index":520,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["experience",{"_index":2860,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["explain",{"_index":4600,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["export.csv",{"_index":2095,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportalltext",{"_index":2102,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportcolumn",{"_index":2058,"title":{"interfaces/ExportColumn.html":{}},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"coverage.html":{}}}],["exportdata",{"_index":2051,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exportdata(records",{"_index":2190,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exported",{"_index":1962,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter",{"_index":2082,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["exporter'},{'name",{"_index":712,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["exporter.component",{"_index":4463,"title":{},"body":{"modules/VcdDataExporterModule.html":{}}}],["exporter.component.html",{"_index":2083,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.component.scss",{"_index":2084,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.component.ts",{"_index":2049,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["exporter.module",{"_index":4455,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["exporter.module.ts",{"_index":4462,"title":{},"body":{"modules/VcdDataExporterModule.html":{}}}],["exporter.service",{"_index":2064,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.service.ts",{"_index":1903,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter.service.ts:21",{"_index":1909,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.service.ts:30",{"_index":1927,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.service.ts:39",{"_index":1921,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["exporter.title",{"_index":2098,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporter.wo.ts",{"_index":2222,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"coverage.html":{}}}],["exporter.wo.ts:12",{"_index":2257,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:17",{"_index":2237,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:22",{"_index":2240,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:27",{"_index":2235,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:32",{"_index":2246,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:37",{"_index":2243,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:42",{"_index":2256,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:47",{"_index":2253,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:52",{"_index":2250,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:57",{"_index":2248,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter.wo.ts:63",{"_index":2263,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["exporter/csv",{"_index":1902,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exporter/data",{"_index":2048,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["exports",{"_index":2799,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["exportstage",{"_index":2151,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["exporttext",{"_index":2106,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["expose",{"_index":3181,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["exposed",{"_index":1333,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["expresses",{"_index":372,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["expression",{"_index":3032,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":1728,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["expressions",{"_index":3006,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["extend",{"_index":941,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["extended",{"_index":2270,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["extends",{"_index":168,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["extension",{"_index":134,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["extra",{"_index":1705,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["extract",{"_index":3749,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["extracting",{"_index":3647,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["extremely",{"_index":4899,"title":{},"body":{"index.html":{}}}],["fa",{"_index":4928,"title":{},"body":{"index.html":{}}}],["fails",{"_index":4629,"title":{},"body":{"contributing.html":{}}}],["failure",{"_index":357,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["false",{"_index":101,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":2514,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["fast",{"_index":4614,"title":{},"body":{"contributing.html":{}}}],["fb",{"_index":2505,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/FilterBuilder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["fb.result",{"_index":3085,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["feature",{"_index":4623,"title":{},"body":{"contributing.html":{}}}],["featurebe",{"_index":4641,"title":{},"body":{"contributing.html":{}}}],["featured",{"_index":120,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["featuredcount",{"_index":142,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["featureif",{"_index":4638,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":1366,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["featureupdating",{"_index":4628,"title":{},"body":{"contributing.html":{}}}],["female",{"_index":3643,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":2050,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"contributing.html":{}}}],["fetched",{"_index":238,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fetching",{"_index":1401,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["field",{"_index":870,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["field:after",{"_index":3386,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["fieldcolumnrendererspec",{"_index":1251,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fieldgroup",{"_index":4509,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["fieldname",{"_index":1252,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fieldnamemap",{"_index":2149,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fieldrenderer",{"_index":1253,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fields",{"_index":1914,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{}}}],["fieldtype",{"_index":3448,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["filed",{"_index":1718,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filename",{"_index":1920,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["files",{"_index":3194,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["fills",{"_index":1469,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filter",{"_index":1285,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["filter'},{'name",{"_index":718,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["filter((action",{"_index":290,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["filter((formcontrol",{"_index":2419,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filter.component",{"_index":4476,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["filter.component.html",{"_index":2361,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filter.component.scss",{"_index":2430,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filter.component.ts",{"_index":2354,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filter.component.ts:102",{"_index":2365,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:103",{"_index":2511,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:105",{"_index":2441,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:106",{"_index":2374,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:116",{"_index":2366,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:120",{"_index":2442,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:123",{"_index":2367,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:128",{"_index":2439,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:130",{"_index":2368,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:132",{"_index":2443,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":2540,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:37",{"_index":2533,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2455,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:42",{"_index":2453,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:43",{"_index":2457,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:48",{"_index":2450,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:49",{"_index":2438,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:55",{"_index":2459,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:58",{"_index":2541,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":2513,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:62",{"_index":2448,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":2437,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":2507,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:65",{"_index":2537,"title":{},"body":{"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:68",{"_index":2506,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:70",{"_index":2362,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:73",{"_index":2440,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:77",{"_index":2508,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["filter.component.ts:78",{"_index":2385,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:80",{"_index":2364,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:81",{"_index":2512,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:84",{"_index":2445,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:88",{"_index":2370,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{}}}],["filter.component.ts:89",{"_index":2447,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["filter.component.ts:90",{"_index":2509,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.component.ts:99",{"_index":2510,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{}}}],["filter.getvalue",{"_index":1647,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filter.ts",{"_index":2269,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.ts:107",{"_index":2308,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:112",{"_index":2295,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:117",{"_index":2314,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:122",{"_index":2299,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:127",{"_index":2302,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:132",{"_index":2305,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:137",{"_index":2293,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:147",{"_index":2321,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:59",{"_index":2292,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:60",{"_index":2285,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:71",{"_index":2287,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:72",{"_index":2316,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:80",{"_index":2318,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:87",{"_index":2290,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:89",{"_index":2306,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter.ts:99",{"_index":2297,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["filter_toggle",{"_index":4987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterable/sortable",{"_index":1752,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["filterbuilder",{"_index":2393,"title":{"classes/FilterBuilder.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterbuilder().any(...selectedfilters).getstring",{"_index":2423,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filterbuilder().is('').and(...builders",{"_index":3116,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder().is(this.queryfield",{"_index":2486,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filterbuilder().is(this.queryfield).equalto(selectedoption",{"_index":2422,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filterbuilder().is(this.result).condition(operators.ge",{"_index":3114,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder().is(this.result).condition(operators.le",{"_index":3115,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder(this",{"_index":3084,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["filterbuilder.betweennumbers([from",{"_index":2491,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filterbuilder.equalto(value).getstring",{"_index":2528,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filterbuilder.greaterthan(from).getstring",{"_index":2489,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filterbuilder.lessthan(to).getstring",{"_index":2490,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["filtercolumn",{"_index":3124,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["filtercomponentrendererspec",{"_index":2355,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["filtercomponentrendererspec(componentrendererspec",{"_index":2353,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtercomponentrendererspec({type",{"_index":2350,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filterconfig",{"_index":1738,"title":{"interfaces/FilterConfig.html":{}},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["filtercontainer",{"_index":2286,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["filtercontainer.setfilter(this",{"_index":2331,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtered",{"_index":2329,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["filtering",{"_index":1347,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filtering/sorting/paging",{"_index":1543,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["filterrendererspec",{"_index":1739,"title":{"interfaces/FilterRendererSpec.html":{}},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["filters",{"_index":1376,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filters/datagrid",{"_index":1284,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{}}}],["filterselect",{"_index":2519,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["filtertesthostcomponent",{"_index":728,"title":{"components/FilterTestHostComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["filtertesthostcomponent.filtercolumn",{"_index":3130,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["filtertext",{"_index":2548,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["filtertype",{"_index":3129,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["find",{"_index":439,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["find((item",{"_index":3960,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["find(params",{"_index":4549,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["find(widgetconstructor",{"_index":629,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["find>(params",{"_index":3257,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findablewidget",{"_index":487,"title":{"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["findbestunit",{"_index":3678,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["findbestunit(value",{"_index":3689,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["findcolumnindex(col",{"_index":1579,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["findcypresswidget",{"_index":4767,"title":{},"body":{"coverage.html":{}}}],["findelement",{"_index":764,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findelement(selector",{"_index":794,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findelements",{"_index":765,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["findelements(selector",{"_index":797,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["finder",{"_index":485,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["finder.detectchanges",{"_index":3164,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.find(clrdatagridwidgetobject",{"_index":3157,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.hostcomponent.setfilter(filtertype",{"_index":3158,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["finder.ts",{"_index":611,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["finder.ts:21",{"_index":617,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:26",{"_index":615,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:32",{"_index":2041,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["finder.ts:47",{"_index":631,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finder.ts:72",{"_index":627,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["finding",{"_index":3741,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["findparams",{"_index":3165,"title":{"interfaces/FindParams.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["findparams).woconstructor",{"_index":3265,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findparent",{"_index":444,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["findparent(cssselector",{"_index":454,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["findparents",{"_index":4363,"title":{},"body":{"classes/TestElement.html":{}}}],["findparents(debugel",{"_index":593,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["findrow.item",{"_index":1429,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["finds",{"_index":246,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findwidget",{"_index":445,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["findwidget(widget",{"_index":466,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{}}}],["findwidgets",{"_index":3245,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["findwidgets(params",{"_index":4551,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["finished",{"_index":2057,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fiql",{"_index":1373,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fired",{"_index":103,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/variables.html":{}}}],["fires",{"_index":2138,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["firetiptransitionendfortests",{"_index":4739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":35,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["first.buildpartial",{"_index":3097,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["first.clear",{"_index":3103,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["firstitem",{"_index":1379,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fix",{"_index":1420,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["fixes",{"_index":4608,"title":{},"body":{"contributing.html":{}}}],["fixture",{"_index":524,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture's",{"_index":3169,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture.componentinstance",{"_index":774,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixture.debugelement",{"_index":3207,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["fixup",{"_index":4639,"title":{},"body":{"contributing.html":{}}}],["flag",{"_index":4051,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["flat",{"_index":4087,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["flatactionlist",{"_index":300,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatactionlist.concat(this.getflatlistofavailableactions(currentaction.children",{"_index":301,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatactionlist.push",{"_index":306,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flatlistofavailableactions",{"_index":175,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["flex",{"_index":3394,"title":{},"body":{"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["float",{"_index":1821,"title":{},"body":{"classes/CommonUtil.html":{}}}],["floating",{"_index":1819,"title":{},"body":{"classes/CommonUtil.html":{}}}],["flow",{"_index":4578,"title":{},"body":{"contributing.html":{}}}],["fn",{"_index":1801,"title":{},"body":{"classes/CommonUtil.html":{}}}],["fn.apply(scope",{"_index":1836,"title":{},"body":{"classes/CommonUtil.html":{}}}],["focus",{"_index":2581,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["focusable",{"_index":2645,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["focused",{"_index":2738,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"miscellaneous/variables.html":{}}}],["focushandlerservice",{"_index":2609,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["folder",{"_index":4900,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1421,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["followed",{"_index":4864,"title":{},"body":{"index.html":{}}}],["following",{"_index":1214,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"contributing.html":{},"index.html":{}}}],["font",{"_index":1009,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["footer",{"_index":1338,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["footer').offsetheight",{"_index":1685,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["footerheight",{"_index":1683,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["force",{"_index":4626,"title":{},"body":{"contributing.html":{}}}],["forcedropdownopen",{"_index":2137,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["fork",{"_index":4590,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":730,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["form.scss",{"_index":3358,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["form.scss,./form",{"_index":3318,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["form/form.module",{"_index":4457,"title":{},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormlyModule.html":{}}}],["form/number",{"_index":3497,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["form/validators",{"_index":3716,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["format",{"_index":2069,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["format(1000",{"_index":4418,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["format(value",{"_index":4415,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formats",{"_index":4115,"title":{},"body":{"classes/Percent.html":{}}}],["formatted",{"_index":1374,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{}}}],["formatter",{"_index":3718,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{}}}],["formatter.ts",{"_index":4403,"title":{},"body":{"injectables/UnitFormatter.html":{},"coverage.html":{}}}],["formatter.ts:15",{"_index":4406,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatter.ts:29",{"_index":4417,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatter.ts:46",{"_index":4408,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["formatting",{"_index":2529,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"contributing.html":{}}}],["formbuilder",{"_index":2463,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcheckboxcomponent",{"_index":729,"title":{"components/FormCheckboxComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":858,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcontrol(false",{"_index":2409,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["formcontrol(null",{"_index":2476,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formcontrol(true",{"_index":2154,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["formcontrol.value",{"_index":3312,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formcontrol.value:min.tostring():max",{"_index":3385,"title":{},"body":{"components/FormInputComponent.html":{}}}],["formcontrolname",{"_index":866,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["formcontrolnamedirective",{"_index":846,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["formfields",{"_index":2465,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"miscellaneous/enumerations.html":{}}}],["formfields.from",{"_index":2475,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formfields.to",{"_index":2477,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["formgroup",{"_index":2062,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["formgroup(controls",{"_index":2186,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["forminputcomponent",{"_index":732,"title":{"components/FormInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["forminputcomponent.enterclicked",{"_index":3451,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.errorlabels",{"_index":3468,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.escapeclicked",{"_index":3453,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.hintposition",{"_index":3465,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.max",{"_index":3459,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.min",{"_index":3456,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["forminputcomponent.type",{"_index":3462,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["formly",{"_index":735,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["formly.config",{"_index":4538,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly.config.ts",{"_index":4506,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["formly.module.ts",{"_index":4529,"title":{},"body":{"modules/VcdFormlyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formly.module.ts:37",{"_index":4532,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly/core",{"_index":3470,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["formly/core/select",{"_index":4537,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formly_config",{"_index":4535,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlyfieldconfig",{"_index":4508,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formlyform.fields",{"_index":4507,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formlyinputcomponent",{"_index":734,"title":{"components/FormlyInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlymodule",{"_index":4534,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlymodule.forchild(vcd_formly_config",{"_index":4540,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlynumberwithunitinputcomponent",{"_index":736,"title":{"components/FormlyNumberWithUnitInputComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlyselectcomponent",{"_index":738,"title":{"components/FormlySelectComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formlyselectmodule",{"_index":4536,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["formlytemplateoptions",{"_index":4514,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["formselectcomponent",{"_index":740,"title":{"components/FormSelectComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":4158,"title":{},"body":{"modules/QuickSearchModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{}}}],["formvalidators",{"_index":3419,"title":{"classes/FormValidators.html":{}},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{}}}],["formvalidators.createnullsafevalidator((control",{"_index":3442,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["forroot",{"_index":4530,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["forroot(configoption",{"_index":4531,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["forward",{"_index":4615,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":645,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["four",{"_index":4848,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":2112,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["friendlyfieldscontrol",{"_index":2169,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynames",{"_index":2072,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["friendlynamescheckboxlabel",{"_index":2114,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynameshint",{"_index":2119,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["friendlynamesinfomessage",{"_index":2116,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["frmctrl",{"_index":2414,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["frominput",{"_index":2433,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["full",{"_index":1189,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"contributing.html":{}}}],["function",{"_index":52,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":251,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["functionrenderer",{"_index":1254,"title":{"interfaces/FunctionRenderer.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["functionrendererpipe",{"_index":3512,"title":{"pipes/FunctionRendererPipe.html":{}},"body":{"pipes/FunctionRendererPipe.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1831,"title":{},"body":{"classes/CommonUtil.html":{},"components/FilterTestHostComponent.html":{},"pipes/FunctionRendererPipe.html":{}}}],["functions/getters",{"_index":975,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":4856,"title":{},"body":{"index.html":{}}}],["furthur",{"_index":2943,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["gave",{"_index":363,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["gb",{"_index":4414,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["ge",{"_index":3078,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["gender",{"_index":3636,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":329,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"contributing.html":{},"index.html":{}}}],["generated",{"_index":869,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"index.html":{}}}],["generates",{"_index":355,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"index.html":{}}}],["generator",{"_index":917,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["generator.ts",{"_index":3565,"title":{},"body":{"classes/IdGenerator.html":{},"coverage.html":{}}}],["generator.ts:10",{"_index":3570,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator.ts:15",{"_index":3571,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator.ts:17",{"_index":3568,"title":{},"body":{"classes/IdGenerator.html":{}}}],["generator/id",{"_index":916,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["generic",{"_index":2007,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["generics",{"_index":1787,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["get(cssselector",{"_index":471,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["getactions",{"_index":182,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getactions(searchcriteria",{"_index":222,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getallunittypes",{"_index":3888,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["getariarole",{"_index":2995,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["getbase",{"_index":2011,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["getbasevalue",{"_index":3681,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getbasevalue(value",{"_index":3697,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getbytext",{"_index":446,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{}}}],["getbytext(cssselector",{"_index":473,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["getcancelbutton",{"_index":2224,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getclrdatagrid",{"_index":4488,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["getcolumnbubbles",{"_index":2225,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckbox",{"_index":2233,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckbox(index",{"_index":2262,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumncheckboxes",{"_index":2226,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumndropdown",{"_index":2227,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getcolumnsconfig(columns",{"_index":1709,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getcomponentinstance",{"_index":589,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["getconfig",{"_index":2317,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["getcontextualactions",{"_index":1565,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdebouncetimems",{"_index":2279,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["getdeepcopyofactionitems",{"_index":4659,"title":{},"body":{"coverage.html":{}}}],["getdefaultactiondisplayconfig",{"_index":4661,"title":{},"body":{"coverage.html":{}}}],["getdetailpanerenderspec(record",{"_index":1598,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdetailrowrenderspec",{"_index":1591,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getdisplaynameforcolumn(col",{"_index":2216,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["getdisplaynameforfield(fieldname",{"_index":2212,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["getdisplayvalue",{"_index":3931,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getdropdownitemelement",{"_index":2598,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getdropdownitemelement(item",{"_index":2613,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["geterrorkeys",{"_index":910,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["geterrorlabels",{"_index":3466,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["geterrortext",{"_index":820,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["geterrortranslationparams(errorobjectvalue",{"_index":3875,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getexportbutton",{"_index":2228,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getfilter",{"_index":4755,"title":{},"body":{"coverage.html":{}}}],["getfilter(element",{"_index":3140,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["getfilter(grid.clrdatagrid",{"_index":3161,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["getflatlistofavailableactions",{"_index":183,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getflatlistofavailableactions(actions",{"_index":227,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["getformatteddatevalue",{"_index":4722,"title":{},"body":{"coverage.html":{}}}],["getformatteddatevalue(value",{"_index":3368,"title":{},"body":{"components/FormInputComponent.html":{}}}],["getformcontrol",{"_index":905,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getheader",{"_index":4483,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["gethintposition",{"_index":3463,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getinjector",{"_index":591,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["getischeckbox",{"_index":3305,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["getistooltipvisible",{"_index":4285,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["getisunitdropdowndisplayed",{"_index":3944,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getloadingtext",{"_index":824,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["getmax",{"_index":3457,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getmin",{"_index":3454,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getmultiplier",{"_index":3682,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getnativeelement",{"_index":3911,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getnativeelement(cssselector",{"_index":3924,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getnestedmenutrigger",{"_index":2652,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getnodetext",{"_index":766,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["getnodetext(el",{"_index":800,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["getokbutton",{"_index":946,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getokbuttoncontainer",{"_index":949,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getoutputvalue",{"_index":3683,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["getoutputvalue(value",{"_index":3700,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getpagesize",{"_index":1667,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpagesizeoptions",{"_index":1670,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpaginationtranslation(paginationdata",{"_index":1662,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["getpositionleft",{"_index":2878,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["getpositiontop",{"_index":2876,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["getprogress",{"_index":2229,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["getqueryfield",{"_index":2320,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["getreadonlytext",{"_index":3933,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getregisteredproviders",{"_index":4195,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["getrootmenutrigger",{"_index":2650,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["getrunning",{"_index":818,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["gets",{"_index":117,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/DataExporterWidgetObject.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["getselectedoption",{"_index":3406,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["getselectedunit",{"_index":3832,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getselectedunitdisplayvalue",{"_index":3942,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getselectoptions",{"_index":3505,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["getshowerrors",{"_index":908,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["getshowunlimitedoption",{"_index":3491,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getsingleunitdisplaytext",{"_index":3946,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getsize",{"_index":3609,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["getspinner",{"_index":4349,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["getstring",{"_index":3020,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["getstylepropertyvalue",{"_index":4364,"title":{},"body":{"classes/TestElement.html":{}}}],["getstylepropertyvalue(key",{"_index":586,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["getsucesstext",{"_index":822,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["getter",{"_index":3572,"title":{},"body":{"classes/IdGenerator.html":{}}}],["gettext",{"_index":767,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["gettext(cssselector",{"_index":802,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["gettexts",{"_index":768,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["gettexts(cssselector",{"_index":806,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["getting",{"_index":2300,"title":{"contributing.html":{},"index.html":{}},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MenuItem.html":{}}}],["gettogglefriendlynames",{"_index":2230,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettogglesanitize",{"_index":2231,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettoggleselectall",{"_index":2232,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["gettooltip",{"_index":4297,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipcontent",{"_index":4295,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipcount",{"_index":4291,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipposition",{"_index":4289,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipsize",{"_index":4283,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltiptext",{"_index":4287,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettooltipvisibility",{"_index":4293,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["gettype",{"_index":3460,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["getunit",{"_index":2461,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["getunitformcontrol",{"_index":3940,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getunitmultiplier",{"_index":3889,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["getunitname",{"_index":3684,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getunitnametranslationkey",{"_index":3679,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getunitoptions",{"_index":2458,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["getunlimitedformcontrol",{"_index":3936,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getunlimitedvalue",{"_index":3494,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["getusernamefield",{"_index":944,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["getvalue",{"_index":2280,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["getvalueformcontrol",{"_index":3938,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["getvaluewithunittranslationkey",{"_index":3680,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["getvcddatagrid",{"_index":4490,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["getwrapcharacter(inputposition",{"_index":2556,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["getwrapcharacter(position",{"_index":2553,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["gfm",{"_index":4648,"title":{},"body":{"contributing.html":{}}}],["ghpages",{"_index":4805,"title":{},"body":{"dependencies.html":{}}}],["ghz",{"_index":3708,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["git",{"_index":4621,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["git@github.com:vmware/vmware",{"_index":4933,"title":{},"body":{"index.html":{}}}],["github",{"_index":4643,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["given",{"_index":365,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["gives",{"_index":525,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":29,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["go",{"_index":1364,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["goes",{"_index":1363,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["going",{"_index":1769,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["good",{"_index":2859,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["greater",{"_index":3047,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthan",{"_index":3021,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthan(value",{"_index":3060,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthanorequalto",{"_index":3022,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["greaterthanorequalto(value",{"_index":3062,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["grid",{"_index":1313,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["grid's",{"_index":3150,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["grid.clrdatagrid.fixture.detectchanges",{"_index":3159,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["grid.filtertoggle.click",{"_index":3160,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["grid.parentnode.clientheight",{"_index":1679,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('.datagrid",{"_index":1681,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('.vcd",{"_index":1690,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grid.queryselector('clr",{"_index":1684,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridcolumn",{"_index":992,"title":{"interfaces/GridColumn.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["gridcolumn.filter",{"_index":2272,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["gridcolumn.filterrendererspec",{"_index":2352,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["gridcolumn.renderer",{"_index":1249,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridcolumnhideable",{"_index":1288,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["gridcolumnhideable.never",{"_index":1657,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["griddata",{"_index":3125,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["griddata(result",{"_index":1402,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["griddatafetchresult",{"_index":1321,"title":{"interfaces/GridDataFetchResult.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["gridheight",{"_index":1678,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridrefresh",{"_index":1545,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["grids",{"_index":1768,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["gridselectiontype",{"_index":1314,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["gridselectiontype.multi",{"_index":1487,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridselectiontype.none",{"_index":1533,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridselectiontype.single",{"_index":1485,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["gridstate",{"_index":1372,"title":{"interfaces/GridState.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["gridstatechanged(state",{"_index":1639,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["group",{"_index":3391,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["group.hide",{"_index":3396,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["grouped",{"_index":121,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["groups",{"_index":130,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["grow",{"_index":3395,"title":{},"body":{"components/FormInputComponent.html":{}}}],["gt",{"_index":3077,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["guidelines",{"_index":4938,"title":{},"body":{"index.html":{}}}],["h",{"_index":621,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["handle",{"_index":3347,"title":{},"body":{"components/FormInputComponent.html":{}}}],["handled",{"_index":4111,"title":{},"body":{"classes/Percent.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["handleitem(item",{"_index":4097,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["handler",{"_index":67,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["handler.directive",{"_index":2762,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{}}}],["handler.directive.ts",{"_index":2582,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["handler.directive.ts:118",{"_index":2617,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:129",{"_index":2637,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:137",{"_index":2635,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:143",{"_index":2636,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:150",{"_index":2629,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:164",{"_index":2614,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:171",{"_index":2615,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:193",{"_index":2639,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:197",{"_index":2651,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:204",{"_index":2653,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:212",{"_index":2616,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:66",{"_index":2611,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:78",{"_index":2644,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:82",{"_index":2646,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:83",{"_index":2641,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:84",{"_index":2640,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:85",{"_index":2643,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:86",{"_index":2648,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:87",{"_index":2647,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:88",{"_index":2649,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.directive.ts:94",{"_index":2630,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{}}}],["handler.service",{"_index":2655,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["handler.service.ts",{"_index":2734,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:106",{"_index":2747,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:16",{"_index":2761,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:17",{"_index":2746,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:21",{"_index":2760,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:28",{"_index":2757,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:51",{"_index":2759,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handler.service.ts:72",{"_index":2751,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["handlerdata",{"_index":56,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["handlers",{"_index":2623,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["happen",{"_index":3534,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["happens",{"_index":4025,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["hasdgstringfilter",{"_index":3152,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["hasfinder",{"_index":3270,"title":{"interfaces/HasFinder.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["haspartialresult(searchsection",{"_index":4107,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["haspotentialinjection",{"_index":1906,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{}}}],["haspotentialinjection(row",{"_index":1963,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["haspotentialinjection(rows",{"_index":1926,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["hasstaticactions",{"_index":1439,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["head",{"_index":4926,"title":{},"body":{"index.html":{}}}],["header",{"_index":1300,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"miscellaneous/variables.html":{}}}],["header').offsetheight",{"_index":1682,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["header.offsetheight",{"_index":1691,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["headerheight",{"_index":1680,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["heading",{"_index":1746,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["headless",{"_index":4992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1142,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["height(height",{"_index":1470,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["heightcssvalue",{"_index":1472,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["help",{"_index":1932,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["helper.ts",{"_index":4244,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"coverage.html":{}}}],["helper.ts:102",{"_index":4294,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:106",{"_index":4269,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:110",{"_index":4296,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:114",{"_index":4298,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:126",{"_index":4335,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:127",{"_index":4337,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:128",{"_index":4338,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:13",{"_index":4261,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:130",{"_index":4339,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:131",{"_index":4340,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:132",{"_index":4336,"title":{},"body":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["helper.ts:16",{"_index":4262,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:18",{"_index":4264,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:20",{"_index":4266,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:22",{"_index":4268,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:24",{"_index":4276,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:28",{"_index":4278,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:44",{"_index":4280,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:49",{"_index":4282,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:54",{"_index":4284,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:58",{"_index":4272,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:62",{"_index":4273,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:66",{"_index":4274,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:70",{"_index":4270,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:74",{"_index":4271,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:78",{"_index":4286,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:82",{"_index":4288,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:86",{"_index":4290,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helper.ts:98",{"_index":4292,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["helps",{"_index":1517,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hence",{"_index":4012,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["here",{"_index":1346,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["here;(created=lt=datetime,uptime=gt=3600000",{"_index":3015,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["hertz",{"_index":4772,"title":{},"body":{"coverage.html":{}}}],["hidden",{"_index":102,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["hidden_column",{"_index":4970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hide",{"_index":1044,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["hideable",{"_index":1748,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["hidedelay",{"_index":4246,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hides",{"_index":4344,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["hidetimeout",{"_index":1075,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hidetooltip(delay",{"_index":1120,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hiding",{"_index":1074,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["hint",{"_index":2118,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["hintposition",{"_index":3323,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["hook",{"_index":2682,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/MenuItem.html":{}}}],["host",{"_index":626,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["host(.site",{"_index":3418,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["hostbinding",{"_index":1258,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hostbinding('class.fill",{"_index":1476,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["hostcomponent",{"_index":613,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["hostelement",{"_index":1205,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["hostlistener",{"_index":2881,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["hostlisteners",{"_index":2844,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["hostposition",{"_index":4253,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["hostposition(quadrant",{"_index":4301,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hosttext",{"_index":4254,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["hosttext(text",{"_index":4307,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["hostvcddropdown",{"_index":2608,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["hover",{"_index":1089,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["href",{"_index":1587,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["html",{"_index":702,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["htmlbaseelement",{"_index":3213,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmlelement",{"_index":574,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"miscellaneous/variables.html":{}}}],["htmlelements",{"_index":3182,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmlinputelement",{"_index":3217,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["htmltextareaelement",{"_index":3218,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["http://localhost:4200",{"_index":4868,"title":{},"body":{"index.html":{}}}],["https://github.com/vmware/clarity/issues/2265",{"_index":1411,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["https://github.com/vmware/clarity/issues/4806",{"_index":1422,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["https://github.com/vmware/vmware",{"_index":4898,"title":{},"body":{"index.html":{}}}],["https://jira.eng.vmware.com/browse/vducc",{"_index":1771,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/variables.html":{}}}],["https://stackoverflow.com/questions/59055154/typescript",{"_index":1786,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["i.e",{"_index":3977,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["i18n",{"_index":70,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["i18nmodule",{"_index":2823,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["icon",{"_index":119,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["icon_and_text",{"_index":4845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["iconshape",{"_index":3276,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["id",{"_index":847,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/DomUtil.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"injectables/QuickSearchService.html":{},"miscellaneous/variables.html":{}}}],["idcounter",{"_index":3566,"title":{},"body":{"classes/IdGenerator.html":{}}}],["identifier",{"_index":1586,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"coverage.html":{}}}],["identifiers",{"_index":2065,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["identify",{"_index":1759,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["identifying",{"_index":4519,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["idgenerator",{"_index":914,"title":{"classes/IdGenerator.html":{}},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["idgenerator#id",{"_index":3575,"title":{},"body":{"classes/IdGenerator.html":{}}}],["idgenerator('base",{"_index":921,"title":{},"body":{"classes/BaseFormControl.html":{},"miscellaneous/variables.html":{}}}],["idgenerator('cy",{"_index":2042,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{},"miscellaneous/variables.html":{}}}],["idgenerator('vcd",{"_index":2401,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["idgenerator.generate",{"_index":924,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["idgenerator.idcounter",{"_index":3574,"title":{},"body":{"classes/IdGenerator.html":{}}}],["ids",{"_index":2399,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["ie",{"_index":1949,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["ignore",{"_index":1810,"title":{},"body":{"classes/CommonUtil.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["ignored",{"_index":2294,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["ime",{"_index":3355,"title":{},"body":{"components/FormInputComponent.html":{}}}],["immediately",{"_index":786,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implement",{"_index":1024,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implementation",{"_index":3170,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implementations",{"_index":3195,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["implemented",{"_index":1840,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["implements",{"_index":170,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{}}}],["implies",{"_index":1025,"title":{},"body":{"interfaces/CanBeReadOnly.html":{}}}],["import",{"_index":260,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["imports",{"_index":2809,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/QuickSearchModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["impossible",{"_index":3867,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["inc",{"_index":2813,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["include",{"_index":3623,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["included",{"_index":3049,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["including",{"_index":4881,"title":{},"body":{"index.html":{}}}],["indeterminate",{"_index":2076,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexofsubscription",{"_index":3557,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["indicate",{"_index":2059,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["indicates",{"_index":97,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["indicating",{"_index":2074,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"contributing.html":{}}}],["indicator",{"_index":684,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["indicator'},{'name",{"_index":742,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["indicator.component",{"_index":4545,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{}}}],["indicator.component.html",{"_index":3581,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.scss",{"_index":3580,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts",{"_index":3577,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indicator.component.ts:27",{"_index":3608,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:38",{"_index":3594,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:43",{"_index":3586,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:49",{"_index":3588,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:55",{"_index":3587,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:62",{"_index":3591,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.component.ts:73",{"_index":3610,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["indicator.module",{"_index":4443,"title":{},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{}}}],["indicator.module.ts",{"_index":4544,"title":{},"body":{"modules/VcdLoadingIndicatorModule.html":{}}}],["indicators",{"_index":1330,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["indicatortype",{"_index":1523,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["infer",{"_index":979,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["inference",{"_index":1784,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["information",{"_index":1035,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["inheritdoc",{"_index":488,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/TestElement.html":{}}}],["inherited",{"_index":218,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["initial",{"_index":872,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initialize",{"_index":2296,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["initialized",{"_index":203,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initializing",{"_index":1846,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["initially",{"_index":2330,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["initialselection",{"_index":1508,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["initialvalue",{"_index":848,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["initialvalueunit",{"_index":3745,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["initiate",{"_index":2054,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["inject",{"_index":694,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"pipes/NestedPropertyPipe.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["inject(activitypromiseresolver",{"_index":695,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["inject(document",{"_index":2915,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["injectable",{"_index":1898,"title":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{}},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{},"coverage.html":{}}}],["injectables",{"_index":1900,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"injectables/UnitFormatter.html":{},"overview.html":{}}}],["injection",{"_index":1918,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["injector",{"_index":478,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/TestElement.html":{}}}],["inline",{"_index":153,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inner",{"_index":1071,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["innerheight",{"_index":1161,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["innervalue",{"_index":1981,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["innervalue.replace(/\"/g",{"_index":1988,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["innerwidth",{"_index":1160,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":109,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["input'},{'name",{"_index":733,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["input('vcdshowclippedtext",{"_index":1193,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["input.component",{"_index":3499,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["input.component.html",{"_index":3320,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.scss",{"_index":3319,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts",{"_index":3314,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input.component.ts:104",{"_index":3353,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:121",{"_index":3351,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:127",{"_index":3350,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:37",{"_index":3455,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:39",{"_index":3484,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:40",{"_index":3342,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:43",{"_index":3458,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:45",{"_index":3486,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:46",{"_index":3340,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:460",{"_index":3971,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts:463",{"_index":3972,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.component.ts:49",{"_index":3461,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:490",{"_index":3686,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:491",{"_index":3691,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:495",{"_index":3692,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:499",{"_index":3693,"title":{},"body":{"classes/NoUnit.html":{}}}],["input.component.ts:51",{"_index":3488,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:52",{"_index":3334,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:55",{"_index":3464,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:57",{"_index":3344,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:61",{"_index":3467,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:62",{"_index":3343,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:63",{"_index":3492,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:67",{"_index":3336,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{}}}],["input.component.ts:72",{"_index":3332,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["input.component.ts:75",{"_index":3452,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["input.component.ts:77",{"_index":3330,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:82",{"_index":3357,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:88",{"_index":3345,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.component.ts:93",{"_index":3329,"title":{},"body":{"components/FormInputComponent.html":{}}}],["input.setvalue(null",{"_index":3789,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.setvalue(this.bestvalue",{"_index":3809,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.setvalue(this.lastrealvalue",{"_index":3790,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.value",{"_index":3788,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["input.widget",{"_index":3910,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{},"coverage.html":{}}}],["input/form",{"_index":3313,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"coverage.html":{}}}],["input/formly",{"_index":3481,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{}}}],["input/number",{"_index":3498,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input`).unwrap",{"_index":2267,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["inputchanged",{"_index":3322,"title":{},"body":{"components/FormInputComponent.html":{}}}],["inputposition",{"_index":2558,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["inputs",{"_index":669,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["inputs/input/formly",{"_index":4515,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputs/number",{"_index":4516,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputs/select/formly",{"_index":4517,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["inputunit",{"_index":3855,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/UnitFormatter.html":{}}}],["inputunit.findbestunit(value",{"_index":4423,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["inputvalueunit",{"_index":3726,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["insert",{"_index":4212,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["insertindex",{"_index":4208,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["inside",{"_index":986,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["inspect",{"_index":518,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["inspired",{"_index":3992,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["install",{"_index":4862,"title":{},"body":{"index.html":{}}}],["installed",{"_index":4882,"title":{},"body":{"index.html":{}}}],["instance",{"_index":776,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instancecount",{"_index":1192,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["instanceof",{"_index":1713,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["instances",{"_index":646,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"directives/ShowClippedTextDirective.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["instancetype",{"_index":3246,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instantiate",{"_index":2386,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["instantiated",{"_index":939,"title":{},"body":{"classes/BaseWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["instantiating",{"_index":3198,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["instead",{"_index":897,"title":{},"body":{"classes/BaseFormControl.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["insures",{"_index":4035,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["intellij",{"_index":3998,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["interact",{"_index":3201,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ActivityResponse.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ActivityResponse.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"overview.html":{}}}],["interfaces/can",{"_index":918,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["interfaces/component",{"_index":1001,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["interfaces/datagrid",{"_index":1005,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["internal",{"_index":2910,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["internalization",{"_index":4857,"title":{},"body":{"index.html":{}}}],["internally",{"_index":2397,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["internals",{"_index":3175,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["interrupt",{"_index":2202,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["introduced",{"_index":3865,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["invoked",{"_index":2625,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["invoking",{"_index":3649,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["irrespective",{"_index":32,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["is(\"isvapptemplate\").equalto(true",{"_index":3007,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["is(\"vcd\").equalto(vcdid",{"_index":3008,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["is(property",{"_index":3064,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["isactionavailable",{"_index":184,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactionavailable(action",{"_index":229,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactiondisabled",{"_index":185,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactiondisabled(action",{"_index":231,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isactive",{"_index":2281,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["ischeckbox",{"_index":3278,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["iscolumnhideable(column",{"_index":1655,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isdisabled",{"_index":885,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isdropdownopen",{"_index":2157,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isexportenabled",{"_index":2171,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isfindparamsobject",{"_index":4760,"title":{},"body":{"coverage.html":{}}}],["isfindparamsobject(params",{"_index":3248,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["isfinite(control.value",{"_index":3445,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isfirstdropdowntrigger",{"_index":2931,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["isfunction",{"_index":1793,"title":{},"body":{"classes/CommonUtil.html":{}}}],["isfunction(value",{"_index":1812,"title":{},"body":{"classes/CommonUtil.html":{}}}],["isinrange",{"_index":3969,"title":{},"body":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isinrange(min",{"_index":3882,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isinsidemodal",{"_index":2841,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["isloading",{"_index":1541,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["ismouseover",{"_index":1080,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["isn't",{"_index":1609,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isnan(number(control.value",{"_index":3883,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isnan(parsefloat(control.value",{"_index":3444,"title":{},"body":{"classes/FormValidators.html":{}}}],["isnullorundefined",{"_index":4678,"title":{},"body":{"coverage.html":{}}}],["isnullorundefined(item[property",{"_index":3668,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnullorundefined(value",{"_index":3665,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnullorundefined(value[nestedprop",{"_index":3666,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["isnumber",{"_index":3443,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["isnumberinrange",{"_index":3424,"title":{},"body":{"classes/FormValidators.html":{}}}],["isnumberinrange(min",{"_index":3432,"title":{},"body":{"classes/FormValidators.html":{}}}],["isodatevalue",{"_index":3374,"title":{},"body":{"components/FormInputComponent.html":{}}}],["isoverflowing",{"_index":1232,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["isreadonly",{"_index":856,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["isreadytosearchpromise",{"_index":176,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["isrequestpending",{"_index":2144,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["isroot",{"_index":2013,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["isrootdropdown",{"_index":2593,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["isrowexpanded",{"_index":1529,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["isseparator",{"_index":131,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["isspinnerspinning",{"_index":4350,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["issue",{"_index":4610,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":4651,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["istanbul",{"_index":3235,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["istooltipvisible",{"_index":4255,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["istranslatable",{"_index":126,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/SelectOption.html":{}}}],["isubscriptiontracker",{"_index":3521,"title":{"interfaces/ISubscriptionTracker.html":{}},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{},"coverage.html":{}}}],["isunitdropdowndisplayed",{"_index":3921,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["isvapptemplate==true;vcd==some",{"_index":3013,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["it's",{"_index":1167,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":64,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["item.displaytext",{"_index":4101,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["item.element",{"_index":2775,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["item.element.focus",{"_index":2777,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["item.getmultiplier",{"_index":3961,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["item.handler",{"_index":4103,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["item.interface",{"_index":1278,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["item.interface.ts",{"_index":7,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["item.matches(activatablemenuitemtype.button",{"_index":2710,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["item.object",{"_index":427,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["item.queryselector(nested_dropdown_trigger",{"_index":2711,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["item.response.error",{"_index":429,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["item:nth",{"_index":2265,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["item[property",{"_index":3669,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["itemclicked(item",{"_index":4040,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["itemdisplaytext",{"_index":3988,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["itemindex",{"_index":1632,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["items",{"_index":287,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["itemsperpage",{"_index":1337,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["iterable",{"_index":521,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["iterator",{"_index":606,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["itself",{"_index":2570,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["jan",{"_index":1946,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["jasmine",{"_index":4245,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["job",{"_index":4921,"title":{},"body":{"index.html":{}}}],["js",{"_index":4797,"title":{},"body":{"dependencies.html":{}}}],["js/ts",{"_index":3191,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["json",{"_index":2066,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"index.html":{}}}],["json.stringify(cellvalue",{"_index":1985,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["justify",{"_index":3626,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["karma",{"_index":4811,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["keep",{"_index":4937,"title":{},"body":{"index.html":{}}}],["key",{"_index":71,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":554,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keyboardevent",{"_index":3991,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["keyboardevent(eventtype",{"_index":575,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keydown",{"_index":568,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keydown.arrowdown",{"_index":2783,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keydown.arrowleft",{"_index":2787,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keydown.arrowright",{"_index":2692,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["keydown.arrowup",{"_index":2785,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["keyof",{"_index":977,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{}}}],["keypress",{"_index":569,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["keys",{"_index":898,"title":{},"body":{"classes/BaseFormControl.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MenuItem.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"miscellaneous/enumerations.html":{}}}],["keyup",{"_index":567,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["kinds",{"_index":1707,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["know",{"_index":328,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["known",{"_index":1409,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["knows",{"_index":438,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{}}}],["label",{"_index":146,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["label:first",{"_index":3415,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["labels",{"_index":896,"title":{},"body":{"classes/BaseFormControl.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["lap",{"_index":2945,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["last",{"_index":1076,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["lastitem",{"_index":1380,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["lastrealvalue",{"_index":3760,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["later",{"_index":3363,"title":{},"body":{"components/FormInputComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["latest",{"_index":4061,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["lazy",{"_index":4008,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["lazystring",{"_index":673,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["le",{"_index":3080,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["leading_control_char",{"_index":1961,"title":{},"body":{"injectables/CsvExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["leading_control_char.test(encodevalue(cell",{"_index":1965,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["leading_control_char.test(value",{"_index":1999,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["leaks",{"_index":3188,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["leaky",{"_index":3268,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["lease",{"_index":4627,"title":{},"body":{"contributing.html":{}}}],["leave",{"_index":2831,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["left",{"_index":1053,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":701,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["length",{"_index":543,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["lengthy",{"_index":2078,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["less",{"_index":1235,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["lessthan",{"_index":3023,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthan(value",{"_index":3066,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthanorequalto",{"_index":3024,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["lessthanorequalto(value",{"_index":3068,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["level",{"_index":1767,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["lg",{"_index":1063,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["lg(large",{"_index":3606,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["lib/directives/show",{"_index":1281,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["library",{"_index":324,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/ObjectAndResponse.html":{},"index.html":{}}}],["license",{"_index":2815,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["life",{"_index":3370,"title":{},"body":{"components/FormInputComponent.html":{}}}],["limit",{"_index":139,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/FilterBuilder.html":{}}}],["limited",{"_index":3777,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["limitedinput",{"_index":3766,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["limitedinputshowerrors",{"_index":3804,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["line",{"_index":3232,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["line:ban",{"_index":1828,"title":{},"body":{"classes/CommonUtil.html":{}}}],["line:only",{"_index":1829,"title":{},"body":{"classes/CommonUtil.html":{}}}],["line:triple",{"_index":3836,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["lines",{"_index":1991,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["link.click",{"_index":1959,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.setattribute('download",{"_index":1956,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.setattribute('href",{"_index":1955,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["link.style.visibility",{"_index":1957,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["linked",{"_index":2583,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["linkmenuitems",{"_index":2599,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["links",{"_index":2633,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["linkvertical",{"_index":2600,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["lint",{"_index":2719,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["list",{"_index":20,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["listed",{"_index":1322,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listen",{"_index":1569,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listeners",{"_index":1393,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["listening",{"_index":2736,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentoarrowkeys",{"_index":2742,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentoarrowkeys(menucontainer",{"_index":2750,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["listentorightarrowkeypressonnestedtrigger",{"_index":2601,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["lit",{"_index":4813,"title":{},"body":{"dependencies.html":{}}}],["literal",{"_index":17,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/MockRecord.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":4015,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"dependencies.html":{},"index.html":{}}}],["load",{"_index":1764,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["loaded",{"_index":1559,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["loading",{"_index":375,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["loading/loading",{"_index":4442,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["loadingindicatorcomponent",{"_index":741,"title":{"components/LoadingIndicatorComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{},"coverage.html":{},"overview.html":{}}}],["loadingmessage",{"_index":670,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["loadingtext",{"_index":772,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["loadingtextkey",{"_index":3584,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["local",{"_index":3317,"title":{},"body":{"components/FormInputComponent.html":{}}}],["locale_id",{"_index":3656,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["localeid",{"_index":3660,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["localized",{"_index":4404,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["locator",{"_index":962,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["locatordriver",{"_index":443,"title":{"interfaces/LocatorDriver.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["locatorforancestors",{"_index":952,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["locatorforcssselectors",{"_index":953,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["locatorfortext",{"_index":954,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["logic",{"_index":1246,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["logical",{"_index":4586,"title":{},"body":{"contributing.html":{}}}],["loginwidgetobject",{"_index":943,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["long",{"_index":1085,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/CommonUtil.html":{},"directives/ShowClippedTextDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["longer",{"_index":1190,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["look",{"_index":4014,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["looks",{"_index":456,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{},"contributing.html":{}}}],["loop",{"_index":517,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["lower",{"_index":3046,"title":{},"body":{"classes/FilterBuilder.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["lt",{"_index":3079,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["ma",{"_index":2358,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"miscellaneous/variables.html":{}}}],["mac",{"_index":3994,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["made",{"_index":1023,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["magic",{"_index":1348,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["magically",{"_index":1725,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["main",{"_index":41,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["make",{"_index":841,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["makes",{"_index":1783,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"index.html":{}}}],["making",{"_index":1779,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["male",{"_index":3641,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":778,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["manipulate",{"_index":625,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["manual",{"_index":4605,"title":{},"body":{"contributing.html":{}}}],["manually",{"_index":700,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["many",{"_index":136,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"injectables/UnitFormatter.html":{}}}],["map",{"_index":2150,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["map((action",{"_index":292,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["map((child",{"_index":2716,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["map((selectedoption",{"_index":2421,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["map(cols.map((col",{"_index":2220,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["mapped",{"_index":1623,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["mapselectedrecords(currentselection",{"_index":1627,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["margin",{"_index":2498,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FormInputComponent.html":{}}}],["marginleft",{"_index":2938,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["mark",{"_index":124,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"injectables/CsvExporterService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["marked",{"_index":2890,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["marks",{"_index":2968,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["massachusetts",{"_index":2359,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["master",{"_index":4625,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["match",{"_index":247,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["matchcase",{"_index":2034,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["matches",{"_index":461,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["matching",{"_index":160,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.hostelement.getboundingclientrect().width",{"_index":1237,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["math.floor(availableheight",{"_index":1694,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["math.max(contextualfeaturedactions.length",{"_index":1507,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["math.max(default_size",{"_index":1696,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["matter",{"_index":3132,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["max",{"_index":1503,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["max_header_height",{"_index":1303,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxfeaturedactionsonrow",{"_index":1494,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["maximum",{"_index":1298,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":3324,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["maxnumberlength",{"_index":2434,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["mb",{"_index":3707,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["md",{"_index":1061,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["md(medium",{"_index":3602,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["mean",{"_index":350,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["means",{"_index":981,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/CommonUtil.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["measure",{"_index":3604,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["measures",{"_index":3600,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["medium",{"_index":3603,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["members",{"_index":4595,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":42,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["menu'},{'name",{"_index":706,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["menu.component",{"_index":1276,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{}}}],["menu.component.ts",{"_index":4656,"title":{},"body":{"coverage.html":{}}}],["menu.module",{"_index":4471,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["menu.module.ts",{"_index":4429,"title":{},"body":{"modules/VcdActionMenuModule.html":{}}}],["menu/action",{"_index":1275,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{}}}],["menu/index",{"_index":4451,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["menu_buffer_space",{"_index":2888,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuchildren",{"_index":2712,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menucontainer",{"_index":2755,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["menuitem",{"_index":2631,"title":{"interfaces/MenuItem.html":{}},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menuitem.up",{"_index":2729,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menuitems",{"_index":2594,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menus",{"_index":1497,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["menutrigger",{"_index":2595,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["menutrigger.closemenu",{"_index":2727,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["merge",{"_index":4612,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["message",{"_index":322,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{}}}],["messageformat",{"_index":4815,"title":{},"body":{"dependencies.html":{}}}],["messages",{"_index":4588,"title":{},"body":{"contributing.html":{}}}],["messaging",{"_index":3437,"title":{},"body":{"classes/FormValidators.html":{}}}],["metadata",{"_index":661,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"directives/ComponentRendererOutletDirective.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["method",{"_index":235,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":181,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["mhz",{"_index":3709,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["milliseconds",{"_index":2325,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"miscellaneous/variables.html":{}}}],["mimetype",{"_index":1943,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["min",{"_index":3325,"title":{},"body":{"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["minimum",{"_index":3341,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["miscellaneou",{"_index":4988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":4834,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":3621,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["mockdata",{"_index":3637,"title":{},"body":{"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockrecord",{"_index":995,"title":{"interfaces/MockRecord.html":{}},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocktranslationservice",{"_index":3135,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["modal",{"_index":2885,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{}}}],["mode",{"_index":900,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["modifiers(eg",{"_index":1568,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["modify",{"_index":1570,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["module",{"_index":2792,"title":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["modules",{"_index":2794,"title":{"modules.html":{}},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":4533,"title":{},"body":{"modules/VcdFormlyModule.html":{}}}],["monitor",{"_index":394,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["monitoredit",{"_index":382,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitoredit(activityresolutionpromise",{"_index":397,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorget",{"_index":383,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorget(activityresolutionpromise",{"_index":402,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorgetall",{"_index":384,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitorgetall(activityresolutionpromises",{"_index":404,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monitors",{"_index":399,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["monorepo",{"_index":4847,"title":{},"body":{"index.html":{}}}],["more",{"_index":3725,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["morevalues",{"_index":3054,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["morevalues.foreach((val",{"_index":3118,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["morevalues.length",{"_index":3117,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["mouse",{"_index":1043,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mouseevent",{"_index":1177,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["mouseevent('mouseenter",{"_index":4311,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["mouseevent('mouseleave",{"_index":4314,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["mousein",{"_index":1179,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["mouseout",{"_index":1087,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mouseoutdelay",{"_index":1039,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["mousetrap",{"_index":4817,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":2588,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["moved",{"_index":2749,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocus",{"_index":2743,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocus(direction",{"_index":2756,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocusto",{"_index":2744,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocusto(item",{"_index":2758,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["movefocustofirstitem",{"_index":2602,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["movemouseoffhost",{"_index":4248,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseofftooltip",{"_index":4249,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseoverhost",{"_index":4250,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseoversecondhost",{"_index":4251,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["movemouseovertooltip",{"_index":4252,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["moves",{"_index":2634,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["moving",{"_index":2789,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["msgkey",{"_index":3870,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["multi",{"_index":1317,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdFormlyModule.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":91,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["multiplier",{"_index":3894,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["multiply",{"_index":3897,"title":{},"body":{"classes/NumberUnit.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["multiselect",{"_index":717,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["multiselectoption",{"_index":2396,"title":{"interfaces/MultiSelectOption.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["multiselectoptioninternal",{"_index":2384,"title":{"interfaces/MultiSelectOptionInternal.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{}}}],["name",{"_index":199,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":3196,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["names",{"_index":1913,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{}}}],["native",{"_index":564,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement",{"_index":3212,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.click",{"_index":3215,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.dispatchevent(event",{"_index":3216,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.dispatchevent(new",{"_index":3221,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["nativeelement.value",{"_index":3219,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["navigate",{"_index":4867,"title":{},"body":{"index.html":{}}}],["navigating",{"_index":2660,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["navigator.mssaveblob",{"_index":1950,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["navigator.mssaveblob(blob",{"_index":1951,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["nbsp",{"_index":922,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["nc",{"_index":2360,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["nearest",{"_index":2578,"title":{},"body":{"classes/DomUtil.html":{}}}],["need",{"_index":622,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":1191,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["needs",{"_index":1872,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["negative",{"_index":4211,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["neighboring",{"_index":2668,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["neighbors",{"_index":2584,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["neq",{"_index":3082,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/variables.html":{}}}],["ness",{"_index":839,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["nested",{"_index":245,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"modules/PipesModule.html":{}}}],["nested_dropdown_trigger",{"_index":2665,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nested_dropdown_trigger_selector",{"_index":4714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nested_menu_hide_delay",{"_index":4715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nested_vcd_dropdown",{"_index":2664,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["nestedmenutrigger",{"_index":2605,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["nestedprop",{"_index":3664,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["nestedproperty",{"_index":3650,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["nestedpropertypipe",{"_index":3644,"title":{"pipes/NestedPropertyPipe.html":{}},"body":{"pipes/NestedPropertyPipe.html":{},"modules/PipesModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1742,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["new",{"_index":282,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1624,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["newrecords",{"_index":1628,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["newrecords.find",{"_index":1631,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["next",{"_index":609,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nextdisabled",{"_index":1198,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["nextelements",{"_index":490,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["nextelements.filter((el",{"_index":499,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["nextselection",{"_index":1614,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ng",{"_index":2495,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"index.html":{}}}],["ngaftercontentchecked",{"_index":3800,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngaftercontentinit",{"_index":2842,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["ngafterviewinit",{"_index":1723,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ngcontrol",{"_index":862,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngcontrol.valueaccessor",{"_index":925,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["ngmodule",{"_index":2820,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["ngonchanges(changes",{"_index":3799,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["ngondestroy",{"_index":1223,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["ngoninit",{"_index":1207,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["ngx",{"_index":3469,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["nightly",{"_index":4910,"title":{},"body":{"index.html":{}}}],["no_scrolling_classname",{"_index":2884,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":790,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":808,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["non",{"_index":100,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["none",{"_index":1319,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":3417,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["normally",{"_index":1327,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["notation",{"_index":3722,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["note",{"_index":1782,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["notequalto",{"_index":3025,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["notequalto(value",{"_index":3070,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["notext",{"_index":2110,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["notification",{"_index":4644,"title":{},"body":{"contributing.html":{}}}],["notifications",{"_index":1392,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["nounit",{"_index":3674,"title":{"classes/NoUnit.html":{}},"body":{"classes/NoUnit.html":{},"coverage.html":{}}}],["nounit(1",{"_index":3685,"title":{},"body":{"classes/NoUnit.html":{}}}],["nounit.instance",{"_index":3826,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["now",{"_index":3864,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["nowrap",{"_index":1221,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["npm",{"_index":4861,"title":{},"body":{"index.html":{}}}],["npm's",{"_index":4908,"title":{},"body":{"index.html":{}}}],["null",{"_index":273,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["num",{"_index":3384,"title":{},"body":{"components/FormInputComponent.html":{}}}],["number",{"_index":140,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"components/BoldTextRendererComponent.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(math.round(number(value",{"_index":1824,"title":{},"body":{"classes/CommonUtil.html":{}}}],["number.max_safe_integer",{"_index":3333,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["number.max_safe_integer.tostring().length",{"_index":2454,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["number.min_safe_integer",{"_index":3339,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{}}}],["number_with_unit_input",{"_index":4520,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["numbers",{"_index":1822,"title":{},"body":{"classes/CommonUtil.html":{},"classes/FilterBuilder.html":{}}}],["numberunit",{"_index":3884,"title":{"classes/NumberUnit.html":{}},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"coverage.html":{}}}],["numberunit:105",{"_index":4144,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:11",{"_index":4140,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:112",{"_index":4145,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:12",{"_index":4141,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:24",{"_index":4148,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:28",{"_index":4150,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:37",{"_index":4149,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:45",{"_index":4147,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:54",{"_index":4152,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:61",{"_index":4151,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:71",{"_index":4146,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberunit:89",{"_index":4143,"title":{},"body":{"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["numberwithunitforminputcomponent",{"_index":743,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["numberwithunitforminputcomponent.errorlabels",{"_index":3485,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.hintposition",{"_index":3490,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.max",{"_index":3489,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.min",{"_index":3487,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.showunlimitedoption",{"_index":3493,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputcomponent.unlimitedvalue",{"_index":3495,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["numberwithunitforminputwidgetobject",{"_index":3909,"title":{"classes/NumberWithUnitFormInputWidgetObject.html":{}},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{},"coverage.html":{}}}],["numberwithunitsformvalidatorsfactory",{"_index":3881,"title":{"injectables/NumberWithUnitsFormValidatorsFactory.html":{}},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{}}}],["numeric",{"_index":720,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["numerical",{"_index":3721,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["obj",{"_index":3648,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["object",{"_index":362,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["object.assign(defaults",{"_index":4303,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.assign(el.style",{"_index":1187,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["object.assign(this.host.style",{"_index":4304,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.defineproperty",{"_index":560,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.defineproperty(event",{"_index":578,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.defineproperty(this.limitedinput",{"_index":3802,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["object.is(item.element.innertext",{"_index":2725,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["object.is(this.currentfocuseditem.element",{"_index":2774,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["object.keys(eventproperties).foreach((key",{"_index":577,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["object.keys(rec).map((key",{"_index":2196,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["object.keys(records[0]).map((fieldname",{"_index":2192,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["object.keys(sizes).indexof(size",{"_index":3613,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["object.keys(this.elements[0].classes",{"_index":582,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["object.keys(this.formcontrol.errors",{"_index":933,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["object.keys(this.formgroup.controls).foreach((control",{"_index":2405,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(this.formgroup.getrawvalue",{"_index":2418,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(this.formgroup.getrawvalue()).filter((frmctrl",{"_index":2424,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["object.keys(tooltipposition",{"_index":4320,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["object.ts",{"_index":437,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.ts:102",{"_index":4385,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:109",{"_index":4387,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:114",{"_index":4562,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:116",{"_index":4375,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:123",{"_index":4373,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:128",{"_index":4559,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:131",{"_index":4370,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:136",{"_index":4560,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:139",{"_index":4372,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:140",{"_index":4558,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:147",{"_index":4380,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:15",{"_index":3923,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:154",{"_index":4374,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:16",{"_index":453,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:161",{"_index":4386,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:17",{"_index":3930,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:172",{"_index":4384,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:185",{"_index":4371,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:187",{"_index":4547,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:192",{"_index":4546,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:193",{"_index":4379,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:20",{"_index":2015,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:200",{"_index":4377,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:206",{"_index":4552,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:207",{"_index":4378,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:21",{"_index":3932,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:214",{"_index":4376,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:22",{"_index":472,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:224",{"_index":4381,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:231",{"_index":4550,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:232",{"_index":4382,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:239",{"_index":4383,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:243",{"_index":4548,"title":{},"body":{"classes/WidgetFinder.html":{}}}],["object.ts:247",{"_index":4388,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:26",{"_index":2018,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:27",{"_index":4553,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:28",{"_index":3934,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:30",{"_index":956,"title":{},"body":{"classes/BaseWidgetObject.html":{}}}],["object.ts:31",{"_index":474,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:32",{"_index":3937,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:34",{"_index":2021,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:36",{"_index":3939,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:38",{"_index":964,"title":{},"body":{"classes/BaseWidgetObject.html":{}}}],["object.ts:40",{"_index":3941,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:42",{"_index":4554,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:43",{"_index":476,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{}}}],["object.ts:44",{"_index":3926,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:45",{"_index":961,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["object.ts:48",{"_index":3928,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:51",{"_index":2022,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:52",{"_index":967,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:54",{"_index":4556,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:56",{"_index":3943,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:57",{"_index":455,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:58",{"_index":2017,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["object.ts:62",{"_index":4557,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:64",{"_index":3629,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:65",{"_index":3929,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:69",{"_index":3630,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:70",{"_index":477,"title":{},"body":{"classes/AngularLocatorDriver.html":{}}}],["object.ts:72",{"_index":2019,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:73",{"_index":4555,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:74",{"_index":3631,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:77",{"_index":468,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:79",{"_index":3628,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:81",{"_index":3945,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:87",{"_index":3632,"title":{},"body":{"interfaces/LocatorDriver.html":{}}}],["object.ts:88",{"_index":3947,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["object.ts:90",{"_index":4561,"title":{},"body":{"classes/WidgetObject.html":{}}}],["object.ts:96",{"_index":4368,"title":{},"body":{"classes/TestElement.html":{}}}],["object.ts:97",{"_index":4369,"title":{},"body":{"classes/TestElement.html":{}}}],["object/angular",{"_index":435,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"classes/TestElement.html":{},"coverage.html":{}}}],["object/cypress",{"_index":2001,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["object/find",{"_index":4765,"title":{},"body":{"coverage.html":{}}}],["object/widget",{"_index":937,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["object_property_separator",{"_index":3657,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["objectandresponse",{"_index":330,"title":{"interfaces/ObjectAndResponse.html":{}},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"coverage.html":{}}}],["objects",{"_index":612,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["objet",{"_index":1361,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["obs",{"_index":2338,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["observable",{"_index":1273,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observable.subscribe(tosubscriber(observerornext",{"_index":3554,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["observables",{"_index":3526,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["observerornext",{"_index":3529,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["obtained",{"_index":2680,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["of(this.to.options",{"_index":3508,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["official",{"_index":4905,"title":{},"body":{"index.html":{}}}],["ok').parent('.button",{"_index":950,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["ok').unwrap",{"_index":948,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["old",{"_index":3241,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["onalertclosedchange",{"_index":2962,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["onalertclosedchange(closed",{"_index":2980,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["onarrowdown(event",{"_index":4042,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onarrowup(event",{"_index":4044,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onbeforesetconfig",{"_index":2282,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{}}}],["onbeforesetconfig(config",{"_index":2307,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["once",{"_index":2056,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["onchange",{"_index":849,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["onchanges",{"_index":3713,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["onclickexport",{"_index":2158,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["ondestroy",{"_index":1048,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{}}}],["ondestroy.ngondestroy",{"_index":3548,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["one",{"_index":379,"title":{},"body":{"classes/ActivityReporter.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["onenterclicked",{"_index":3449,"title":{},"body":{"components/FormlyInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["onenterkey(event",{"_index":4046,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["onerrorclosed",{"_index":666,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["ones",{"_index":4093,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"index.html":{}}}],["onescapeclicked",{"_index":3450,"title":{},"body":{"components/FormlyInputComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["oninit",{"_index":1049,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["online",{"_index":4870,"title":{},"body":{"index.html":{}}}],["only.interface",{"_index":920,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["only.interface.ts",{"_index":1022,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"coverage.html":{}}}],["onmouseenter",{"_index":1115,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["onmousein",{"_index":1227,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["onmouseleave",{"_index":1117,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["onmouseout",{"_index":1231,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["onsuccessclosed",{"_index":667,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["ontop",{"_index":1522,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["ontouch",{"_index":850,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ontouched",{"_index":882,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ontransitionend",{"_index":1241,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["ontransitionend(e",{"_index":1128,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["opacity",{"_index":1102,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1934,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["open(open",{"_index":4022,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["open(value",{"_index":2133,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["open/close",{"_index":2244,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["openchange",{"_index":2139,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["opened",{"_index":2089,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{}}}],["opening",{"_index":2627,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{}}}],["opens",{"_index":2708,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FilterTestHostComponent.html":{},"interfaces/MenuItem.html":{}}}],["operation",{"_index":89,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["operator",{"_index":3035,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["operators",{"_index":3076,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["operators.and",{"_index":3095,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["operators.or",{"_index":3090,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["opposite",{"_index":1154,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":1352,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["option.display",{"_index":2428,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/FormSelectComponent.html":{}}}],["option.istranslatable",{"_index":2427,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/FormSelectComponent.html":{}}}],["option.ts",{"_index":4221,"title":{},"body":{"interfaces/SelectOption.html":{},"coverage.html":{}}}],["option.value",{"_index":2522,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{}}}],["option.value.tostring",{"_index":3411,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["optional",{"_index":14,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":152,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["options).unwrap",{"_index":960,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["options.indexof(this.pagesize",{"_index":1672,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["options.push(this.pagesize",{"_index":1673,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["options.sort((a",{"_index":1674,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["optionsformgroup",{"_index":2152,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["or(...conditions",{"_index":3101,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["or(conditions",{"_index":3072,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["order",{"_index":179,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"classes/NumberUnit.html":{},"interfaces/PartialResult.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ThousandsUnit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["origin",{"_index":4572,"title":{},"body":{"contributing.html":{}}}],["originalondestroy",{"_index":3550,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["originalondestroy.call(destroyable",{"_index":3553,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["osx",{"_index":3995,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["otherwise",{"_index":2555,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"contributing.html":{}}}],["out",{"_index":2657,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1870,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive",{"_index":4475,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["outlet.directive.ts",{"_index":1850,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:29",{"_index":1877,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:30",{"_index":1868,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:40",{"_index":1869,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:52",{"_index":1875,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:63",{"_index":1874,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outlet.directive.ts:70",{"_index":1876,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["outline",{"_index":4580,"title":{},"body":{"contributing.html":{}}}],["output",{"_index":1259,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["outputnumber",{"_index":3907,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["outputs",{"_index":1383,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["outputunit",{"_index":3701,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["outputunit.multiplier",{"_index":3903,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["outputunit.unitname",{"_index":4409,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["outside",{"_index":2315,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":1079,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/DataExportRequestEvent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/ExportColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["overflow",{"_index":1219,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overflowing",{"_index":1217,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overflows",{"_index":1233,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["overlay",{"_index":3589,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["override",{"_index":325,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["overrides",{"_index":2371,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["overview",{"_index":4942,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwriting",{"_index":1519,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["p",{"_index":976,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["p:first",{"_index":3399,"title":{},"body":{"components/FormInputComponent.html":{}}}],["package",{"_index":4783,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":4884,"title":{},"body":{"index.html":{}}}],["pad",{"_index":4723,"title":{},"body":{"coverage.html":{}}}],["pad(date.getdate",{"_index":3380,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.gethours",{"_index":3381,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.getminutes",{"_index":3382,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(date.getmonth",{"_index":3379,"title":{},"body":{"components/FormInputComponent.html":{}}}],["pad(num",{"_index":3383,"title":{},"body":{"components/FormInputComponent.html":{}}}],["padding",{"_index":3389,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["page",{"_index":1291,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["page(they",{"_index":1344,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["page_size",{"_index":4980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagenumber",{"_index":1335,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pages",{"_index":1342,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pagesize",{"_index":1350,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{}}}],["pagesizeoptions",{"_index":1340,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagination",{"_index":1309,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["pagination(pagination",{"_index":1461,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagination_description",{"_index":4979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagination_next",{"_index":4981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginationcallback",{"_index":1378,"title":{"interfaces/PaginationCallback.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["paginationcomponent",{"_index":1548,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationconfiguration",{"_index":1339,"title":{"interfaces/PaginationConfiguration.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["paginationdata.firstitem",{"_index":1664,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdata.lastitem",{"_index":1665,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdata.totalitems",{"_index":1666,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationdropdowntext",{"_index":1536,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["paginationtranslationkey",{"_index":1554,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagionation",{"_index":1332,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pagionationinformation",{"_index":1334,"title":{"interfaces/PagionationInformation.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["palo",{"_index":3639,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1359,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":85,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["parameter",{"_index":348,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/ObjectAndResponse.html":{}}}],["parameters",{"_index":198,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params",{"_index":1544,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params.tagname",{"_index":3260,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["params.woconstructor.tagname",{"_index":3259,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent",{"_index":460,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.query(by.css(cssselector)).nativeelement",{"_index":3214,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.query(query",{"_index":3210,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parent.queryall(query",{"_index":3211,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["parentdropdown",{"_index":2852,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect",{"_index":2949,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect.left",{"_index":2953,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownmenurect.right",{"_index":2952,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentdropdownwidth",{"_index":2951,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["parentfocushandler",{"_index":2607,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["parents",{"_index":447,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["parents(cssselector",{"_index":475,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["parentvcddropdown",{"_index":2612,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["parseint(triggercomputedstyles.marginleft",{"_index":2940,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["part",{"_index":1369,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["partial",{"_index":1186,"title":{},"body":{"interfaces/CliptextConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{}}}],["partialobserver",{"_index":3530,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["partialresult",{"_index":3973,"title":{"interfaces/PartialResult.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["pased",{"_index":3229,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pass",{"_index":788,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["passed",{"_index":66,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["passes",{"_index":3533,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["passing",{"_index":2075,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"modules/VcdFormlyModule.html":{}}}],["patch",{"_index":1419,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{}}}],["pattern",{"_index":3171,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["pause",{"_index":186,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["paused",{"_index":236,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["peer",{"_index":4832,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["pendingpromise",{"_index":1826,"title":{},"body":{"classes/CommonUtil.html":{}}}],["per",{"_index":1343,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["percent",{"_index":3948,"title":{"classes/Percent.html":{}},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"coverage.html":{}}}],["percent(0.01",{"_index":4127,"title":{},"body":{"classes/Percent.html":{}}}],["percent(1",{"_index":4125,"title":{},"body":{"classes/Percent.html":{}}}],["percent.zero_to_1",{"_index":3963,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["percent.zero_to_100",{"_index":3962,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["perfect",{"_index":3868,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["perform",{"_index":2311,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["performed",{"_index":68,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["performer",{"_index":392,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["performer.resolveactivities(activityresolutionpromises",{"_index":424,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["performer.resolveactivity(activityresolutionpromise",{"_index":419,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["permanently",{"_index":2020,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["person",{"_index":3638,"title":{},"body":{"interfaces/MockRecord.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":3511,"title":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{},"coverage.html":{}}}],["pipeline",{"_index":4903,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":3513,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipes/function",{"_index":4477,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["pipesmodule",{"_index":4133,"title":{"modules/PipesModule.html":{}},"body":{"modules/PipesModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":3519,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["pixels",{"_index":1302,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["placed",{"_index":1535,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["placeholder",{"_index":3326,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":1239,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":4853,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":135,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["point",{"_index":1820,"title":{},"body":{"classes/CommonUtil.html":{}}}],["popup",{"_index":1068,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":840,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/LoadingIndicatorComponent.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["position.directive",{"_index":2825,"title":{},"body":{"modules/DropdownModule.html":{}}}],["position.directive.ts",{"_index":2827,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["position.directive.ts:101",{"_index":2877,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:134",{"_index":2879,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:188",{"_index":2863,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:198",{"_index":2854,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:57",{"_index":2867,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:58",{"_index":2871,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:59",{"_index":2868,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:60",{"_index":2872,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:61",{"_index":2870,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:63",{"_index":2873,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:66",{"_index":2875,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:84",{"_index":2853,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["position.directive.ts:94",{"_index":2861,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["positional",{"_index":3869,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["positionleft",{"_index":2848,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["positiontop",{"_index":2847,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["possible",{"_index":156,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["possibly",{"_index":620,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["posts",{"_index":400,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["potential",{"_index":3185,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["potentially",{"_index":2077,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["powered",{"_index":4873,"title":{},"body":{"index.html":{}}}],["powertwounit",{"_index":4139,"title":{"classes/PowerTwoUnit.html":{}},"body":{"classes/PowerTwoUnit.html":{},"coverage.html":{}}}],["pr",{"_index":2010,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"contributing.html":{},"index.html":{}}}],["pr](https://github.com/vmware/vmware",{"_index":2026,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["pre",{"_index":3892,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["precision",{"_index":4416,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["predefined",{"_index":3858,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["prefer",{"_index":3200,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["prefix",{"_index":3569,"title":{},"body":{"classes/IdGenerator.html":{}}}],["prefixed",{"_index":1978,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/IdGenerator.html":{}}}],["prefixing",{"_index":1996,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["preid=dev",{"_index":4913,"title":{},"body":{"index.html":{}}}],["prerelease",{"_index":4912,"title":{},"body":{"index.html":{}}}],["present",{"_index":1626,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserved",{"_index":1558,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserveselection",{"_index":1560,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["preserving",{"_index":1518,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["pressed",{"_index":2619,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["presses",{"_index":2737,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{}}}],["pressing",{"_index":2626,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["prevent",{"_index":1917,"title":{},"body":{"injectables/CsvExporterService.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["prevents",{"_index":1995,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["previous",{"_index":1811,"title":{},"body":{"classes/CommonUtil.html":{}}}],["previousvalue",{"_index":2184,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["previousvalue[currentvalue.fieldname",{"_index":2183,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["primitives",{"_index":3053,"title":{},"body":{"classes/FilterBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["prismjs",{"_index":4819,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":172,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["problem",{"_index":4067,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["process",{"_index":326,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/ObjectAndResponse.html":{}}}],["processes",{"_index":331,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["processrow",{"_index":4683,"title":{},"body":{"coverage.html":{}}}],["processrow(row",{"_index":1940,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["produce",{"_index":3012,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["produces",{"_index":3652,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["programmatically",{"_index":3782,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["progress",{"_index":2060,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["project",{"_index":4565,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["projects",{"_index":4849,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":4836,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../base",{"_index":4965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../component",{"_index":4949,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../csv",{"_index":4966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../cypress",{"_index":4959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data",{"_index":4843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datagrid",{"_index":4840,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../datagrid.component.ts",{"_index":4838,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../datagrid.module.ts",{"_index":4963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../datagrid.wo.ts",{"_index":4958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dropdown",{"_index":4837,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../dropdown.component.ts",{"_index":4964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dynamic",{"_index":4957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../filter",{"_index":4952,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../form",{"_index":4839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../form.module.ts",{"_index":4961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../loading",{"_index":4841,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../mock",{"_index":4967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../nested",{"_index":4960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../number",{"_index":4968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pipes.module.ts",{"_index":4962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../quick",{"_index":4953,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../show",{"_index":4842,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../types.ts",{"_index":4951,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../vcd",{"_index":4844,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../widget",{"_index":4950,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects//package.json",{"_index":4915,"title":{},"body":{"index.html":{}}}],["projects/components",{"_index":4850,"title":{},"body":{"index.html":{}}}],["projects/components/src/action",{"_index":164,"title":{},"body":{"classes/ActionSearchProvider.html":{},"modules/VcdActionMenuModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/activity",{"_index":315,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdActivityReporterModule.html":{},"coverage.html":{}}}],["projects/components/src/common/error/error",{"_index":2956,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"coverage.html":{}}}],["projects/components/src/common/interfaces/action",{"_index":6,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/common/interfaces/select",{"_index":4220,"title":{},"body":{"interfaces/SelectOption.html":{},"coverage.html":{}}}],["projects/components/src/common/loading/loading",{"_index":3576,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"modules/VcdLoadingIndicatorModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/common/pipes/nested",{"_index":3645,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/pipes/pipes.module.ts",{"_index":4137,"title":{},"body":{"modules/PipesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/common/subscription/subscription",{"_index":3522,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{},"coverage.html":{}}}],["projects/components/src/components.module.ts",{"_index":4450,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["projects/components/src/data",{"_index":1901,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/ExportColumn.html":{},"modules/VcdDataExporterModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/datagrid.component.ts",{"_index":1244,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/datagrid.module.ts",{"_index":4468,"title":{},"body":{"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/directives/component",{"_index":1849,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{},"coverage.html":{}}}],["projects/components/src/datagrid/filters/datagrid",{"_index":2268,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/interfaces/component",{"_index":1838,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projects/components/src/datagrid/interfaces/datagrid",{"_index":1735,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/components/src/datagrid/mock",{"_index":3633,"title":{},"body":{"interfaces/MockRecord.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/datagrid/pipes/function",{"_index":3514,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"coverage.html":{}}}],["projects/components/src/datagrid/renderers/bold",{"_index":982,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"coverage.html":{}}}],["projects/components/src/dropdown/dropdown",{"_index":2580,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/dropdown/dropdown.component.ts",{"_index":4709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/dropdown/dropdown.module.ts",{"_index":2808,"title":{},"body":{"modules/DropdownModule.html":{}}}],["projects/components/src/dropdown/dynamic",{"_index":2826,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/base",{"_index":833,"title":{},"body":{"classes/BaseFormControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/form",{"_index":3272,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/components/src/form/form.module.ts",{"_index":4502,"title":{},"body":{"modules/VcdFormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/interfaces/can",{"_index":1021,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"coverage.html":{}}}],["projects/components/src/form/number",{"_index":3675,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/form/validators.ts",{"_index":3420,"title":{},"body":{"classes/FormValidators.html":{},"coverage.html":{}}}],["projects/components/src/form/validators.ts:17",{"_index":3426,"title":{},"body":{"classes/FormValidators.html":{}}}],["projects/components/src/form/validators.ts:32",{"_index":3434,"title":{},"body":{"classes/FormValidators.html":{}}}],["projects/components/src/formly/vcd/inputs/input/formly",{"_index":3447,"title":{},"body":{"components/FormlyInputComponent.html":{},"coverage.html":{}}}],["projects/components/src/formly/vcd/inputs/number",{"_index":3480,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"coverage.html":{}}}],["projects/components/src/formly/vcd/inputs/select/formly",{"_index":3502,"title":{},"body":{"components/FormlySelectComponent.html":{},"coverage.html":{}}}],["projects/components/src/formly/vcd/vcd",{"_index":4505,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/lib/directives/show",{"_index":1032,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/quick",{"_index":3974,"title":{},"body":{"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/common",{"_index":1790,"title":{},"body":{"classes/CommonUtil.html":{},"coverage.html":{}}}],["projects/components/src/utils/dom",{"_index":2561,"title":{},"body":{"classes/DomUtil.html":{},"coverage.html":{}}}],["projects/components/src/utils/filter",{"_index":3001,"title":{},"body":{"classes/FilterBuilder.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/id",{"_index":3564,"title":{},"body":{"classes/IdGenerator.html":{},"coverage.html":{}}}],["projects/components/src/utils/test/activity",{"_index":760,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["projects/components/src/utils/test/datagrid/datagrid.wo.ts",{"_index":4750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/test/datagrid/filter",{"_index":3121,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["projects/components/src/utils/test/datagrid/vcd",{"_index":4481,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["projects/components/src/utils/test/widget",{"_index":434,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/components/src/utils/types.ts",{"_index":4954,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/components/src/utils/unit/unit",{"_index":4402,"title":{},"body":{"injectables/UnitFormatter.html":{},"coverage.html":{}}}],["projects/components/src/utils/unit/unit.ts",{"_index":3885,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"coverage.html":{}}}],["projects/components/src/utils/unit/unit.ts:105",{"_index":3895,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:11",{"_index":4394,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:112",{"_index":3896,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:119",{"_index":4390,"title":{},"body":{"classes/ThousandsUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:12",{"_index":4393,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:128",{"_index":4142,"title":{},"body":{"classes/PowerTwoUnit.html":{}}}],["projects/components/src/utils/unit/unit.ts:187",{"_index":4124,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:188",{"_index":4121,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:196",{"_index":4126,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:197",{"_index":4128,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:199",{"_index":4132,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:203",{"_index":4131,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:213",{"_index":4130,"title":{},"body":{"classes/Percent.html":{}}}],["projects/components/src/utils/unit/unit.ts:24",{"_index":4397,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:28",{"_index":4399,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:37",{"_index":4398,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:45",{"_index":4396,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:54",{"_index":4401,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:61",{"_index":4400,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:71",{"_index":4395,"title":{},"body":{"classes/Unit.html":{}}}],["projects/components/src/utils/unit/unit.ts:89",{"_index":3890,"title":{},"body":{"classes/NumberUnit.html":{}}}],["projects/examples",{"_index":4859,"title":{},"body":{"index.html":{}}}],["projects/i18n",{"_index":4858,"title":{},"body":{"index.html":{}}}],["projects/route",{"_index":4876,"title":{},"body":{"index.html":{}}}],["promise",{"_index":58,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["promise((resolve",{"_index":283,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["promiseresolver",{"_index":396,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["propagating",{"_index":2620,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["proper",{"_index":3436,"title":{},"body":{"classes/FormValidators.html":{},"contributing.html":{}}}],["properties",{"_index":13,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"dependencies.html":{}}}],["property",{"_index":584,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["property.pipe",{"_index":4138,"title":{},"body":{"modules/PipesModule.html":{}}}],["property.pipe.ts",{"_index":3646,"title":{},"body":{"pipes/NestedPropertyPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["property.pipe.ts:32",{"_index":3653,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["property.split(object_property_separator",{"_index":3662,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["protected",{"_index":763,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/PowerTwoUnit.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/ThousandsUnit.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["protractor",{"_index":4895,"title":{},"body":{"index.html":{}}}],["prov.order",{"_index":4213,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["provide",{"_index":409,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":810,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/DomUtil.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["providedin",{"_index":1929,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{}}}],["provider",{"_index":3986,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/variables.html":{}}}],["provider.order",{"_index":4207,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["provider/action",{"_index":166,"title":{},"body":{"classes/ActionSearchProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider_search_debounce_time",{"_index":4170,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":2798,"title":{},"body":{"modules/DropdownModule.html":{},"components/FilterTestHostComponent.html":{},"interfaces/PartialResult.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["provides",{"_index":2080,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["providing",{"_index":1847,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"injectables/QuickSearchService.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["prs",{"_index":4616,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":523,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["public/exported",{"_index":4594,"title":{},"body":{"contributing.html":{}}}],["publish",{"_index":4923,"title":{},"body":{"index.html":{}}}],["published",{"_index":4927,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":4901,"title":{},"body":{"index.html":{}}}],["pull",{"_index":4592,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pure",{"_index":3516,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["purpose",{"_index":3174,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["push",{"_index":4589,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pushed",{"_index":2954,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["pushes",{"_index":1391,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["put",{"_index":3285,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["px",{"_index":1138,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["quad",{"_index":1170,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["quadrant",{"_index":1155,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["queries",{"_index":938,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["query",{"_index":599,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["querydirective",{"_index":4365,"title":{},"body":{"classes/TestElement.html":{}}}],["querydirective(type",{"_index":601,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["queryelements",{"_index":4366,"title":{},"body":{"classes/TestElement.html":{}}}],["queryelements(cssselector",{"_index":603,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["queryfield",{"_index":2274,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["queryfieldname",{"_index":1756,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["querying",{"_index":1755,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["querylist",{"_index":1260,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["queryoptions",{"_index":2033,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["quick",{"_index":264,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdComponentsModule.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchcomponent",{"_index":209,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quicksearchcomponent#haspartialresult",{"_index":3979,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchmodule",{"_index":4153,"title":{"modules/QuickSearchModule.html":{}},"body":{"modules/QuickSearchModule.html":{},"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["quicksearchprovider",{"_index":171,"title":{"interfaces/QuickSearchProvider.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["quicksearchproviderdefaults",{"_index":169,"title":{"classes/QuickSearchProviderDefaults.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"coverage.html":{}}}],["quicksearchproviderdefaults:40",{"_index":221,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:41",{"_index":220,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:42",{"_index":219,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchproviderdefaults:43",{"_index":253,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["quicksearchprovider}quicksearchprovider",{"_index":4007,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quicksearchregistrarservice",{"_index":4179,"title":{"injectables/QuickSearchRegistrarService.html":{}},"body":{"injectables/QuickSearchRegistrarService.html":{},"coverage.html":{}}}],["quicksearchresultitem",{"_index":226,"title":{"interfaces/QuickSearchResultItem.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["quicksearchresults",{"_index":263,"title":{"interfaces/QuickSearchResults.html":{}},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchresultstype",{"_index":254,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/typealiases.html":{}}}],["quicksearchservice",{"_index":3983,"title":{"injectables/QuickSearchService.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["quicksearchservice}quicksearchservice",{"_index":4005,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["quite",{"_index":3866,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["quotes",{"_index":1976,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["r",{"_index":55,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/LocatorDriver.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/typealiases.html":{}}}],["radio",{"_index":4986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radio_wrapper",{"_index":4985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["range",{"_index":3435,"title":{},"body":{"classes/FormValidators.html":{}}}],["rbradford",{"_index":4822,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":3206,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reactiveformsmodule",{"_index":2821,"title":{},"body":{"modules/DropdownModule.html":{},"modules/QuickSearchModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{}}}],["read",{"_index":919,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"coverage.html":{}}}],["readme",{"_index":4855,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":838,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["readonlytext",{"_index":3916,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["reads",{"_index":3935,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["ready",{"_index":2140,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/MenuItem.html":{},"contributing.html":{}}}],["readytosearchpromisefactory",{"_index":187,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["real",{"_index":3755,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["really",{"_index":4060,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["reasons",{"_index":2008,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["rebase",{"_index":4624,"title":{},"body":{"contributing.html":{}}}],["rec[key",{"_index":2197,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["recalculate",{"_index":2856,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["recalculateunitminmax",{"_index":3842,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["recalculating",{"_index":1697,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["receive",{"_index":791,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["receiving",{"_index":1204,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["recent",{"_index":4635,"title":{},"body":{"contributing.html":{}}}],["recommended",{"_index":3193,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["record",{"_index":90,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["record.name",{"_index":996,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["records",{"_index":86,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["records.map((rec",{"_index":2195,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["rect",{"_index":1135,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.height",{"_index":1143,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.left",{"_index":1139,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.top",{"_index":1137,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rect.width",{"_index":1141,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter",{"_index":1163,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter.x",{"_index":1168,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["rectcenter.y",{"_index":1169,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":3388,"title":{},"body":{"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["reduce",{"_index":3003,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["redundant",{"_index":1882,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["references",{"_index":4647,"title":{},"body":{"contributing.html":{}}}],["referencing",{"_index":4650,"title":{},"body":{"contributing.html":{}}}],["reflects",{"_index":1761,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["refs/tags",{"_index":4935,"title":{},"body":{"index.html":{}}}],["register",{"_index":4006,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["register(provider",{"_index":4185,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registered",{"_index":4011,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["registeronchange",{"_index":851,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registeronchange(onchange",{"_index":877,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerontouched",{"_index":852,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerontouched(ontouched",{"_index":880,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["registerprovider",{"_index":4196,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registerprovider(provider",{"_index":4199,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registerrootmenucontainer",{"_index":2603,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["registrar.service.ts",{"_index":4180,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{},"coverage.html":{}}}],["registrar.service.ts:16",{"_index":4183,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:19",{"_index":4187,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:21",{"_index":4186,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registrar.service.ts:26",{"_index":4184,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["registration",{"_index":4203,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["registrations",{"_index":4194,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["regprovider",{"_index":4217,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["regular",{"_index":3237,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reject",{"_index":284,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["related",{"_index":4634,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["relative",{"_index":1603,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["relatively",{"_index":2864,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["release",{"_index":4914,"title":{},"body":{"index.html":{}}}],["released",{"_index":3346,"title":{},"body":{"components/FormInputComponent.html":{}}}],["releases",{"_index":4906,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":3746,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["reload",{"_index":4869,"title":{},"body":{"index.html":{}}}],["remember",{"_index":3781,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["remote",{"_index":4916,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1240,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["removecolumn",{"_index":1515,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["removecolumn(col",{"_index":1577,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["removed",{"_index":1030,"title":{},"body":{"interfaces/CanBeReadOnly.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["render",{"_index":1357,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rendered",{"_index":1525,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["renderer",{"_index":994,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{}}}],["renderer'},{'name",{"_index":710,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["renderer(item",{"_index":3520,"title":{},"body":{"pipes/FunctionRendererPipe.html":{}}}],["renderer.component",{"_index":1019,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"modules/VcdDatagridModule.html":{}}}],["renderer.component.ts",{"_index":983,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"coverage.html":{}}}],["renderer.component.ts:39",{"_index":1000,"title":{},"body":{"components/BoldTextRendererComponent.html":{}}}],["renderer.context",{"_index":1888,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["renderer.interface",{"_index":1002,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["renderer.interface.ts",{"_index":1839,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["renderer.pipe",{"_index":4478,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["renderer.pipe.ts",{"_index":3515,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"coverage.html":{}}}],["renderer.pipe.ts:17",{"_index":3518,"title":{},"body":{"pipes/FunctionRendererPipe.html":{}}}],["renderer.rendererspec.type",{"_index":1881,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["renderer.wo.ts",{"_index":1015,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"coverage.html":{}}}],["renderer.wo.ts:13",{"_index":1016,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["renderer.wo.ts:15",{"_index":1017,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["renderer2",{"_index":2610,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["renderers",{"_index":1708,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["renderers/bold",{"_index":4479,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["rendererspec",{"_index":990,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rendering",{"_index":985,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reopen",{"_index":1430,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["repeat",{"_index":4611,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":1567,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["repo",{"_index":4846,"title":{},"body":{"index.html":{}}}],["repo(vmware/vmware",{"_index":4932,"title":{},"body":{"index.html":{}}}],["reported",{"_index":2893,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["reporter",{"_index":391,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter'},{'name",{"_index":707,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component",{"_index":4444,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["reporter.component.html",{"_index":664,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts",{"_index":658,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["reporter.component.ts:20",{"_index":692,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:21",{"_index":691,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:22",{"_index":693,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:27",{"_index":4342,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:28",{"_index":672,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:36",{"_index":4346,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:40",{"_index":681,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:44",{"_index":4343,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:49",{"_index":678,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:52",{"_index":4345,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{}}}],["reporter.component.ts:57",{"_index":679,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:67",{"_index":675,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:74",{"_index":677,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.component.ts:83",{"_index":680,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["reporter.module",{"_index":4452,"title":{},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["reporter.module.ts",{"_index":4438,"title":{},"body":{"modules/VcdActivityReporterModule.html":{}}}],["reporter.ts",{"_index":371,"title":{},"body":{"classes/ActivityReporter.html":{},"coverage.html":{}}}],["reporter.ts:13",{"_index":389,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:21",{"_index":415,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:27",{"_index":408,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:33",{"_index":414,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:38",{"_index":403,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:53",{"_index":405,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.ts:73",{"_index":398,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["reporter.wo.ts",{"_index":761,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["reporter.wo.ts:10",{"_index":773,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:11",{"_index":4351,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:12",{"_index":819,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:13",{"_index":4353,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:16",{"_index":821,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:17",{"_index":4354,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:20",{"_index":823,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:24",{"_index":825,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter.wo.ts:33",{"_index":4352,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["reporter/activity",{"_index":316,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"coverage.html":{}}}],["reporter/banner",{"_index":657,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["reporter/spinner",{"_index":4341,"title":{},"body":{"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["reporterror",{"_index":385,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporterror(errortext",{"_index":407,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reporting",{"_index":376,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{}}}],["reportsuccess",{"_index":386,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reportsuccess(successmessage",{"_index":413,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["reposition",{"_index":2858,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["repositions",{"_index":2828,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["repository",{"_index":4573,"title":{},"body":{"contributing.html":{}}}],["represent",{"_index":660,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/Percent.html":{}}}],["representation",{"_index":1320,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["represented",{"_index":4114,"title":{},"body":{"classes/Percent.html":{}}}],["representing",{"_index":3059,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["represents",{"_index":3238,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["request",{"_index":2093,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["requested",{"_index":1083,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":4603,"title":{},"body":{"contributing.html":{}}}],["require",{"_index":106,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["required",{"_index":61,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["requirements",{"_index":4593,"title":{},"body":{"contributing.html":{}}}],["requires",{"_index":3205,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["res",{"_index":3439,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["reset",{"_index":668,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"directives/DropdownFocusHandlerDirective.html":{},"modules/DropdownModule.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}],["resetposition",{"_index":2843,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resetposition(element",{"_index":2862,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resets",{"_index":1658,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["resettopageone",{"_index":1659,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["resize",{"_index":2855,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["resolve",{"_index":285,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/CommonUtil.html":{}}}],["resolve(csvfile",{"_index":2210,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["resolveactivities",{"_index":332,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resolveactivities(activityresolutionpromises",{"_index":334,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolveactivity",{"_index":333,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolveactivity(activityresolutionpromise",{"_index":351,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resolved",{"_index":4066,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["resolveisreadytosearch",{"_index":177,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["resolver",{"_index":354,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/CommonUtil.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["resolver(retvalue",{"_index":1837,"title":{},"body":{"classes/CommonUtil.html":{}}}],["resolver.ts",{"_index":317,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"coverage.html":{}}}],["resolver.ts:51",{"_index":352,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolver.ts:71",{"_index":336,"title":{},"body":{"classes/ActivityPromiseResolver.html":{}}}],["resolves",{"_index":1804,"title":{},"body":{"classes/CommonUtil.html":{}}}],["resource",{"_index":432,"title":{},"body":{"interfaces/ActivityResponse.html":{}}}],["response",{"_index":321,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"injectables/UnitFormatter.html":{}}}],["response.length",{"_index":428,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.map((item",{"_index":426,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.object",{"_index":423,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["response.response.error",{"_index":420,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["responsible",{"_index":1844,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/DropdownFocusHandlerService.html":{}}}],["rest",{"_index":1726,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["restitem",{"_index":1848,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{}}}],["result",{"_index":159,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.items",{"_index":1405,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["result.search(/[\",\\n]/g",{"_index":1992,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["result.totalitems",{"_index":1407,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["result.ts",{"_index":4192,"title":{},"body":{"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["result[0",{"_index":369,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["resultactivated",{"_index":4026,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["resultactivatedevent",{"_index":3987,"title":{"interfaces/ResultActivatedEvent.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["resulting",{"_index":972,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["resultitem.displaytext",{"_index":4100,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["results",{"_index":161,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":250,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["retrieve",{"_index":805,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["return",{"_index":281,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":364,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"classes/IdGenerator.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["returns",{"_index":225,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/FilterBuilder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["returnvalue",{"_index":425,"title":{},"body":{"classes/ActivityReporter.html":{},"pipes/NestedPropertyPipe.html":{}}}],["retvalue",{"_index":1835,"title":{},"body":{"classes/CommonUtil.html":{}}}],["reusable",{"_index":4852,"title":{},"body":{"index.html":{}}}],["reused",{"_index":1805,"title":{},"body":{"classes/CommonUtil.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["reverse",{"_index":1329,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["reversed",{"_index":1328,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["review",{"_index":4631,"title":{},"body":{"contributing.html":{}}}],["rgba(250",{"_index":3616,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["rgba(255",{"_index":3619,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["right",{"_index":1055,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"components/FormCheckboxComponent.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rightlabel",{"_index":3277,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["risk",{"_index":1928,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["role",{"_index":2998,"title":{},"body":{"classes/ErrorBannerWidgetObject.html":{}}}],["root",{"_index":638,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/QuickSearchService.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["root.componentinstance",{"_index":3256,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["rootelement",{"_index":451,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["rootmenucontainer",{"_index":2697,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["rootmenutrigger",{"_index":2604,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["rough",{"_index":4579,"title":{},"body":{"contributing.html":{}}}],["roughly",{"_index":4653,"title":{},"body":{"contributing.html":{}}}],["rounds",{"_index":1818,"title":{},"body":{"classes/CommonUtil.html":{}}}],["roundto",{"_index":1794,"title":{},"body":{"classes/CommonUtil.html":{}}}],["roundto(value",{"_index":1815,"title":{},"body":{"classes/CommonUtil.html":{}}}],["route",{"_index":4874,"title":{},"body":{"index.html":{}}}],["routermodule",{"_index":4469,"title":{},"body":{"modules/VcdDatagridModule.html":{}}}],["routes",{"_index":4880,"title":{},"body":{"index.html":{}}}],["row",{"_index":1290,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["row.detailbutton",{"_index":1433,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["row.map((cell",{"_index":1968,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["row.some((cell",{"_index":1964,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["row_action_container",{"_index":4983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row_height",{"_index":1306,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rowheight",{"_index":1351,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rows",{"_index":1316,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["rows.map((row",{"_index":1939,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["rows.some(haspotentialinjection",{"_index":1942,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["rules",{"_index":3179,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["run",{"_index":3430,"title":{},"body":{"classes/FormValidators.html":{},"index.html":{}}}],["running",{"_index":665,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/FormValidators.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"index.html":{}}}],["runs",{"_index":545,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/TestElement.html":{}}}],["rxjs",{"_index":1274,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"dependencies.html":{}}}],["rxjs/internal",{"_index":3543,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["rxjs/operators",{"_index":2324,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["safety",{"_index":1777,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/typealiases.html":{}}}],["same",{"_index":799,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CommonUtil.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sanitization",{"_index":2254,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["sanitize",{"_index":2073,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["sanitizecheckboxhint",{"_index":2123,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizecheckboxlabel",{"_index":2121,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizecontrol",{"_index":2167,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizeinfomessage",{"_index":2125,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sanitizestring",{"_index":4684,"title":{},"body":{"coverage.html":{}}}],["sanitizestring(result",{"_index":1994,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["sanitizestring(value",{"_index":1998,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["satisfy",{"_index":980,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["saving",{"_index":1381,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["scaffolding",{"_index":4885,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":4165,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["scope",{"_index":1796,"title":{},"body":{"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{}}}],["screen",{"_index":23,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["scroll",{"_index":2568,"title":{},"body":{"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["scrolling",{"_index":2779,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["scrolls",{"_index":2566,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrolltoelement",{"_index":2562,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrolltoelement(elref",{"_index":2563,"title":{},"body":{"classes/DomUtil.html":{}}}],["scrollwidth",{"_index":1236,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["search",{"_index":165,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":744,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["search(criteria",{"_index":241,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["search.as(id",{"_index":2045,"title":{},"body":{"classes/CypressWidgetObjectFinder.html":{}}}],["search.component",{"_index":4159,"title":{},"body":{"modules/QuickSearchModule.html":{}}}],["search.component.html",{"_index":4017,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.component.scss",{"_index":4018,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.component.ts",{"_index":3976,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["search.module",{"_index":4458,"title":{},"body":{"modules/VcdComponentsModule.html":{}}}],["search.module.ts",{"_index":4157,"title":{},"body":{"modules/QuickSearchModule.html":{}}}],["search.provider",{"_index":3982,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.provider.ts",{"_index":167,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.provider.ts:100",{"_index":228,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:115",{"_index":230,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:123",{"_index":232,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:19",{"_index":256,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:23",{"_index":258,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:26",{"_index":197,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:32",{"_index":212,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:36",{"_index":4160,"title":{},"body":{"interfaces/QuickSearchProvider.html":{}}}],["search.provider.ts:37",{"_index":202,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:40",{"_index":4178,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:41",{"_index":4177,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:42",{"_index":210,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:43",{"_index":4176,"title":{},"body":{"classes/QuickSearchProviderDefaults.html":{}}}],["search.provider.ts:44",{"_index":215,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:45",{"_index":214,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:46",{"_index":216,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:52",{"_index":233,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:60",{"_index":249,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:66",{"_index":240,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:76",{"_index":242,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.provider.ts:91",{"_index":223,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["search.service",{"_index":3984,"title":{},"body":{"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["search.service.ts",{"_index":4193,"title":{},"body":{"injectables/QuickSearchService.html":{},"coverage.html":{}}}],["search.service.ts:13",{"_index":4206,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:19",{"_index":4200,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:51",{"_index":4202,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search.service.ts:62",{"_index":4198,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["search/quick",{"_index":3975,"title":{},"body":{"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"modules/VcdComponentsModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["searchcriteria",{"_index":224,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchcriteria(value",{"_index":4029,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searches",{"_index":243,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["searchid",{"_index":4034,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searching",{"_index":206,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["searchinput",{"_index":4033,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchresult",{"_index":4055,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection",{"_index":3985,"title":{"interfaces/SearchSection.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"coverage.html":{}}}],["searchsection.isloading",{"_index":4053,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.provider.search(this.searchcriteria",{"_index":4057,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.provider.sectionname",{"_index":4102,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result",{"_index":4070,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result.items.length",{"_index":4110,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result?.items?.length",{"_index":4109,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsection.result?.total",{"_index":4108,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchsections",{"_index":4038,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["searchservice",{"_index":4027,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["secondhost",{"_index":4247,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["section",{"_index":43,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.isloading",{"_index":4082,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.result?.items.some((resultitem",{"_index":4099,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["section.result?.items[0",{"_index":4084,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["sectionname",{"_index":180,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["sections",{"_index":4010,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["sectiontitle",{"_index":3989,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["see",{"_index":2345,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"contributing.html":{},"index.html":{}}}],["seen",{"_index":2009,"title":{},"body":{"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["select",{"_index":722,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"modules/VcdDatagridModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["select'},{'name",{"_index":739,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["select.component",{"_index":3719,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["select.component.html",{"_index":3403,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.scss",{"_index":3402,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts",{"_index":3401,"title":{},"body":{"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:23",{"_index":3405,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts:27",{"_index":3504,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["select.component.ts:29",{"_index":3407,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["select.component.ts:31",{"_index":3506,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["select/form",{"_index":3400,"title":{},"body":{"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"coverage.html":{}}}],["selectall",{"_index":2071,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["selectallcontrol",{"_index":2165,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectcolumn(column",{"_index":2179,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectcolumnstext",{"_index":2104,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selected",{"_index":40,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["selectedcolumns",{"_index":2052,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["selectedcombounit",{"_index":3834,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedentities",{"_index":54,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectedentities(entities",{"_index":274,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["selectedfilters",{"_index":2417,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["selectedindex",{"_index":1630,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selecteditem",{"_index":4039,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selecteditemindex",{"_index":4091,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selectedoption",{"_index":3404,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedoption.display",{"_index":3414,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedoption.istranslatable",{"_index":3413,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["selectedunit",{"_index":3840,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedunit(value",{"_index":3761,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["selectedunitdisplayvalue",{"_index":3920,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["selectfirst(ensurefirstsectionisloaded",{"_index":4075,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selecting",{"_index":1315,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selection",{"_index":93,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{}}}],["selection[0",{"_index":1486,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectionchanged",{"_index":1511,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectiontype",{"_index":1268,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectiontype(selectiontype",{"_index":1435,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["selectnext(down",{"_index":4085,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["selectoption",{"_index":2391,"title":{"interfaces/SelectOption.html":{}},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/SelectOption.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{}}}],["selectoption.display",{"_index":4222,"title":{},"body":{"interfaces/SelectOption.html":{}}}],["selectoptions",{"_index":3503,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["selector",{"_index":462,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["selects",{"_index":1530,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SortedColumn.html":{}}}],["selectunit",{"_index":3912,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["selectunit(unit",{"_index":3925,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["self",{"_index":3307,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["semantic",{"_index":4907,"title":{},"body":{"index.html":{}}}],["send",{"_index":553,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sending",{"_index":2092,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["sendkeyboardevent",{"_index":769,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sendkeyboardevent(eventtype",{"_index":572,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetObject.html":{}}}],["separate",{"_index":4169,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"index.html":{}}}],["separated",{"_index":1758,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["separator",{"_index":2659,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{}}}],["separators",{"_index":128,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["server",{"_index":1341,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["serves",{"_index":1854,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["service",{"_index":2735,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["set",{"_index":36,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setactions(actions",{"_index":255,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["setconfig(config",{"_index":4237,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["setconfig(val",{"_index":2319,"title":{},"body":{"classes/DatagridFilter.html":{}}}],["setdisabled(disabled",{"_index":4279,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["setdisabledstate",{"_index":853,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":883,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["setdropdownmenu(dropdown",{"_index":2874,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["seterrormessage(val",{"_index":2984,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["setfilter",{"_index":3126,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["setfilter(filtertype",{"_index":3127,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["sethostposition(quadrant",{"_index":4277,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["sethosttext(text",{"_index":4281,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["setinputvalue",{"_index":770,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetObject.html":{}}}],["setinputvalue(value",{"_index":814,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setinputvalueunit",{"_index":3913,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setinputvalueunit(unit",{"_index":3927,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["sets",{"_index":816,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setselectedentities(entities",{"_index":257,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["setsize(size",{"_index":3611,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["setstyle",{"_index":4736,"title":{},"body":{"coverage.html":{}}}],["setstyle(el",{"_index":1185,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["setstyle(this.hostelement",{"_index":1218,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["setstyle(tip.container",{"_index":1098,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["setstyle(tip.content",{"_index":1146,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["setter",{"_index":2309,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/LoadingIndicatorComponent.html":{}}}],["settimeout",{"_index":1073,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":558,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["setunit(val",{"_index":2462,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["setunitoptions(val",{"_index":2460,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["setunitoptionstonone",{"_index":3914,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setunitoptionstopercent",{"_index":3915,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["setvalue",{"_index":2273,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["setvalue(value",{"_index":2313,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["setvalue(values",{"_index":2373,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["setvcdcomponentrendereroutlet(renderer",{"_index":1878,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["setwidth(width",{"_index":4275,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{}}}],["shape",{"_index":3283,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["share",{"_index":3266,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["shared",{"_index":1069,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["shift",{"_index":2886,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["shift+shift",{"_index":3999,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["shoulddebounceinput",{"_index":195,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["shoulddisplaycontextualactionsinrow",{"_index":1492,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shoulddisplaycontextualactionsontop",{"_index":1488,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldfillparent",{"_index":1477,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldsanitize",{"_index":1908,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["shouldsanitize)).join",{"_index":1970,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["shouldsanitize)).join('\\n",{"_index":1941,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["shouldshowactionbarontop",{"_index":1456,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldshowbubbles",{"_index":2175,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["shouldshowpagenumberinput",{"_index":1354,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldshowpagesizeselector",{"_index":1353,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["shouldwait",{"_index":178,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["show",{"_index":683,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["show/hide",{"_index":1654,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["showasterisk",{"_index":857,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["showcases",{"_index":4860,"title":{},"body":{"index.html":{}}}],["showclippedtextdirective",{"_index":756,"title":{"directives/ShowClippedTextDirective.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["showclippedtextdirective.instancecount",{"_index":1209,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["showclippedtextdirectivemodule",{"_index":2806,"title":{"modules/ShowClippedTextDirectiveModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["showclippedtextdirectivetesthelper",{"_index":4242,"title":{"classes/ShowClippedTextDirectiveTestHelper.html":{}},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"coverage.html":{}}}],["showclippedtextdirectivetesthostcomponent",{"_index":745,"title":{"components/ShowClippedTextDirectiveTestHostComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"coverage.html":{}}}],["showerrors",{"_index":859,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["showing",{"_index":1763,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["shown",{"_index":141,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{},"miscellaneous/enumerations.html":{}}}],["shows",{"_index":21,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["showsectiontitle(searchsection",{"_index":4105,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["showspinner",{"_index":3585,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["showunlimitedoption",{"_index":3482,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["sibling",{"_index":2621,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["side",{"_index":1922,"title":{},"body":{"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["signature",{"_index":3510,"title":{},"body":{"interfaces/FunctionRenderer.html":{},"interfaces/PaginationCallback.html":{},"contributing.html":{}}}],["signed",{"_index":4574,"title":{},"body":{"contributing.html":{}}}],["signpost",{"_index":3331,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["simplechanges",{"_index":3714,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["simplifying",{"_index":1245,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["simply",{"_index":4636,"title":{},"body":{"contributing.html":{}}}],["single",{"_index":87,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["singleton",{"_index":1065,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["singleunitdisplaytext",{"_index":3922,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["sit",{"_index":1521,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["site",{"_index":1785,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"index.html":{}}}],["sixty",{"_index":2503,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["size",{"_index":1040,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["size(size",{"_index":3612,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sized",{"_index":3592,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sizes",{"_index":3597,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sizes.md",{"_index":3607,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["sizing",{"_index":3599,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["skip",{"_index":4080,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["skipself",{"_index":2654,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/MenuItem.html":{},"miscellaneous/variables.html":{}}}],["sm",{"_index":1059,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{}}}],["sm(small",{"_index":3598,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["smaller",{"_index":1345,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["smooth",{"_index":2579,"title":{},"body":{"classes/DomUtil.html":{}}}],["somerecord.property",{"_index":1747,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["something",{"_index":3204,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["sometimes",{"_index":2618,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["sortable",{"_index":1774,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["sortcolumn",{"_index":1377,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["sorted",{"_index":1325,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NumberUnit.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["sortedcolumn",{"_index":1326,"title":{"interfaces/SortedColumn.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"coverage.html":{}}}],["sorting",{"_index":1367,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["sorting/filtering",{"_index":1751,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["sound",{"_index":1524,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"modules/DropdownModule.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"modules/PipesModule.html":{},"classes/PowerTwoUnit.html":{},"modules/QuickSearchModule.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"modules/VcdLoadingIndicatorModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{}}}],["space",{"_index":894,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["spaces",{"_index":1975,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["spdx",{"_index":2814,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{}}}],["spec",{"_index":1590,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["special",{"_index":1997,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["specific",{"_index":327,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["specification",{"_index":1737,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["specifications",{"_index":2349,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["specified",{"_index":585,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"components/LoadingIndicatorComponent.html":{},"classes/TestElement.html":{}}}],["specifies",{"_index":1527,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["specify",{"_index":3720,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"miscellaneous/variables.html":{}}}],["specs",{"_index":3244,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["spinner",{"_index":747,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["spinneractivityreportercomponent",{"_index":746,"title":{"components/SpinnerActivityReporterComponent.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"modules/VcdActivityReporterModule.html":{},"coverage.html":{},"overview.html":{}}}],["spinneractivityreporterwidgetobject",{"_index":4348,"title":{"classes/SpinnerActivityReporterWidgetObject.html":{}},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{},"coverage.html":{}}}],["spinners",{"_index":3595,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["spinnersize",{"_index":3590,"title":{},"body":{"components/LoadingIndicatorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["splitproperty",{"_index":3661,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["splitproperty.length",{"_index":3663,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["spotlight",{"_index":3993,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["squash",{"_index":4633,"title":{},"body":{"contributing.html":{}}}],["stackblitz",{"_index":4872,"title":{},"body":{"index.html":{}}}],["stackblitz/sdk",{"_index":4792,"title":{},"body":{"dependencies.html":{}}}],["stale",{"_index":1622,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["start",{"_index":796,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["startactivity",{"_index":387,"title":{},"body":{"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["started",{"_index":4563,"title":{"contributing.html":{},"index.html":{}},"body":{}}],["starting",{"_index":416,"title":{},"body":{"classes/ActivityReporter.html":{},"injectables/CsvExporterService.html":{}}}],["starts",{"_index":1977,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["start}${input}${end",{"_index":2554,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["state",{"_index":133,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["state.filters",{"_index":1644,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.filters.map((filter",{"_index":1646,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page",{"_index":1641,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page.current",{"_index":1642,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.page.size",{"_index":1643,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.provider",{"_index":1272,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort",{"_index":1648,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort.by",{"_index":1650,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["state.sort.reverse",{"_index":1652,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["statements",{"_index":4655,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["static/featured",{"_index":11,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["static_featured",{"_index":37,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["staticactionstyling",{"_index":16,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["statically",{"_index":4878,"title":{},"body":{"index.html":{}}}],["status",{"_index":340,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["staying",{"_index":4617,"title":{},"body":{"contributing.html":{}}}],["steps",{"_index":4604,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":3231,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["store",{"_index":871,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["stored",{"_index":3360,"title":{},"body":{"components/FormInputComponent.html":{},"index.html":{}}}],["strictmetadataemit",{"_index":2892,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["strictnullchecks",{"_index":3233,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["string",{"_index":73,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(value",{"_index":3220,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["strings",{"_index":2238,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["striving",{"_index":4598,"title":{},"body":{"contributing.html":{}}}],["strokes",{"_index":4062,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["structure",{"_index":1067,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":583,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"classes/DomUtil.html":{},"directives/ShowClippedTextDirective.html":{},"classes/TestElement.html":{},"contributing.html":{}}}],["styles",{"_index":1215,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{}}}],["styleurls",{"_index":1387,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["styling",{"_index":144,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/FormCheckboxComponent.html":{}}}],["sub",{"_index":45,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/TestElement.html":{}}}],["subclass",{"_index":3178,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["subclasses",{"_index":3180,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["subject",{"_index":2289,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["submit",{"_index":4591,"title":{},"body":{"contributing.html":{}}}],["subscribable",{"_index":3541,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribe",{"_index":3524,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribe(observable",{"_index":3528,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscribes",{"_index":3532,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscription",{"_index":3535,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscription.unsubscribe",{"_index":3556,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscriptions",{"_index":3540,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["subscriptiontracker",{"_index":1279,"title":{"classes/SubscriptionTracker.html":{}},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"coverage.html":{}}}],["subscriptiontracker(this",{"_index":1556,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["substracting",{"_index":1687,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["subtext",{"_index":2497,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{}}}],["subtracker",{"_index":1555,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["succeeded",{"_index":346,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["succeeds",{"_index":344,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["success",{"_index":343,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["successmessage",{"_index":335,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["sucesss",{"_index":356,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["sucesstext",{"_index":771,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["such",{"_index":2944,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"miscellaneous/variables.html":{}}}],["super(controldirective",{"_index":3311,"title":{},"body":{"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["super(filtercontainer",{"_index":2402,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["super(ngcontrol",{"_index":3408,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["super(promiseresolver",{"_index":696,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["super(shoulddebounceinput",{"_index":277,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["supply",{"_index":1460,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["support",{"_index":1754,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"modules.html":{}}}],["supported",{"_index":381,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["supports",{"_index":3315,"title":{},"body":{"components/FormInputComponent.html":{}}}],["suppress",{"_index":2891,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["sure",{"_index":1780,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["svg",{"_index":4940,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":2251,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["symbol.iterator",{"_index":605,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["sync",{"_index":4618,"title":{},"body":{"contributing.html":{}}}],["syntax",{"_index":4649,"title":{},"body":{"contributing.html":{}}}],["t",{"_index":57,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/ObjectAndResponse.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["t[p",{"_index":978,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["tab",{"_index":1979,"title":{},"body":{"injectables/CsvExporterService.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["table",{"_index":4782,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4781,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":4924,"title":{},"body":{"index.html":{}}}],["tag(npm",{"_index":4922,"title":{},"body":{"index.html":{}}}],["tagname",{"_index":635,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tagname`on",{"_index":3236,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tagnameon",{"_index":3271,"title":{},"body":{"interfaces/FindableWidget.html":{}}}],["take",{"_index":319,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["takes",{"_index":337,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["task",{"_index":2203,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["team",{"_index":4566,"title":{},"body":{"contributing.html":{}}}],["technically",{"_index":3228,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["template",{"_index":655,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["templateoptions",{"_index":4510,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["templateref",{"_index":1760,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["templates",{"_index":4518,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["templateurl",{"_index":663,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["test",{"_index":3149,"title":{},"body":{"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["test:components",{"_index":4890,"title":{},"body":{"index.html":{}}}],["test:i18n",{"_index":4891,"title":{},"body":{"index.html":{}}}],["testbed",{"_index":636,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["testbed.configuretestingmodule",{"_index":3143,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["testbed.createcomponent(arg",{"_index":641,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["testbed.createcomponent(componentconstructor",{"_index":3243,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["testelement",{"_index":450,"title":{"classes/TestElement.html":{}},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/FilterTestHostComponent.html":{},"classes/TestElement.html":{},"coverage.html":{}}}],["testelement([el",{"_index":551,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelement([root",{"_index":652,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["testelement([this.elements[counter",{"_index":610,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelement(nextelements",{"_index":494,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelement(result",{"_index":598,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testelements",{"_index":441,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["testhostcomponent",{"_index":3123,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["testing",{"_index":2223,"title":{},"body":{"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["testinput",{"_index":3155,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["tests",{"_index":2346,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tests's",{"_index":639,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["text",{"_index":248,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"modules/VcdDatagridModule.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["text').length",{"_index":4323,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["text.directive",{"_index":1282,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["text.directive.module",{"_index":2824,"title":{},"body":{"modules/DropdownModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{}}}],["text.directive.module.ts",{"_index":4241,"title":{},"body":{"modules/ShowClippedTextDirectiveModule.html":{}}}],["text.directive.test",{"_index":4243,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"coverage.html":{}}}],["text.directive.ts",{"_index":1034,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["text.directive.ts:224",{"_index":4232,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:227",{"_index":4225,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:246",{"_index":4233,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:247",{"_index":4236,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:248",{"_index":4231,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:253",{"_index":4224,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:257",{"_index":4230,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:263",{"_index":4226,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:276",{"_index":4229,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:282",{"_index":4227,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:290",{"_index":4234,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:301",{"_index":4235,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text.directive.ts:305",{"_index":4228,"title":{},"body":{"directives/ShowClippedTextDirective.html":{}}}],["text/csv;charset=utf",{"_index":1944,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["text2",{"_index":4328,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["textarea",{"_index":817,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["textcontent",{"_index":3227,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["textextractor",{"_index":1011,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["textextractor(record",{"_index":1013,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["texticon",{"_index":151,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"miscellaneous/enumerations.html":{}}}],["texting",{"_index":4334,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["textinput",{"_index":3321,"title":{},"body":{"components/FormInputComponent.html":{}}}],["textkey",{"_index":76,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{}}}],["textoverflow",{"_index":1222,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["then((result",{"_index":366,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["thing",{"_index":1990,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["thirty",{"_index":2501,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this._actions",{"_index":271,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns",{"_index":1396,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns.push(col",{"_index":1576,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns.splice(colindex",{"_index":1578,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._columns[colindex",{"_index":1575,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._config",{"_index":2335,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._config.queryfield",{"_index":2347,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._config.value",{"_index":2336,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this._errormessage",{"_index":2986,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this._height",{"_index":1471,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._isrequestpending",{"_index":2145,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this._multiplier",{"_index":3900,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this._open",{"_index":2134,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this._pagination",{"_index":1462,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.pagesizeoptions",{"_index":1463,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.shouldshowpagenumberinput",{"_index":1465,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._pagination.shouldshowpagesizeselector",{"_index":1464,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._progress",{"_index":2147,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this._searchcriteria",{"_index":4028,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this._selectedentities",{"_index":275,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this._selectiontype",{"_index":1436,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this._size",{"_index":3614,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["this._unit",{"_index":2474,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this._unitname",{"_index":3901,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this._unitoptions",{"_index":2468,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions.foreach((unitoption",{"_index":3733,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions.length",{"_index":3728,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this._unitoptions[0",{"_index":3730,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.actionreporter",{"_index":1446,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actionreporter.monitorget(actionhandlerresponse",{"_index":1447,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.filter",{"_index":1566,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.length",{"_index":1457,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.actions.some",{"_index":1449,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.activate",{"_index":1201,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.addwildcard(value",{"_index":2552,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.alias",{"_index":2032,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.assignvalue(renderer.rendererspec.config",{"_index":1887,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.attachrenderer",{"_index":1886,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.bestunit",{"_index":3770,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.bestunit.getmultiplier",{"_index":3780,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.bestvalue",{"_index":3771,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.buildpartial",{"_index":3086,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.calculatepagesize",{"_index":1669,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.cfr.resolvecomponentfactory(this.componenttype",{"_index":1891,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.chainable",{"_index":2037,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.changedetectorref.detectchanges",{"_index":1417,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["this.changes.next",{"_index":2343,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.clearselectioninformation",{"_index":1437,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.closed",{"_index":2988,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.closevcddropdown",{"_index":2723,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.clrdropdownmenuel",{"_index":2677,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.column.filter",{"_index":3163,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["this.columns",{"_index":2173,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columns.filter((col",{"_index":2177,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columns.findindex((column",{"_index":1580,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.columns.reduce((previousvalue",{"_index":2181,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.columnsconfig",{"_index":1584,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.columnsupdated.emit",{"_index":1399,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.columnsupdated.subscribe",{"_index":1733,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.combooptions",{"_index":3732,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptions.find",{"_index":3835,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptions.push(combooption",{"_index":3739,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.clear",{"_index":3731,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(displaycombounit",{"_index":3862,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(selectedcombounit",{"_index":3841,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.get(this.unitdropdown.selectedoption",{"_index":3856,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.combooptionunitmap.set(combooption",{"_index":3737,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.component.displayvalue",{"_index":3950,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.errortext",{"_index":828,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.component.formcontrol",{"_index":3949,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('combounitoptions",{"_index":3954,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('combounitoptions').value",{"_index":3958,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('limited",{"_index":3953,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.formgroup.get('unlimited",{"_index":3952,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.inputvalueunit",{"_index":3957,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.running",{"_index":827,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.component.selectedunit",{"_index":3955,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.component.successmessage",{"_index":829,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{}}}],["this.component.unitoptions",{"_index":3959,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.componentinstance.directive.mouseoutdelay",{"_index":4263,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.disabled",{"_index":4306,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.div.nativeelement",{"_index":4265,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.div2.nativeelement",{"_index":4267,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentinstance.text",{"_index":4308,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.componentref",{"_index":1885,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componentref.instance",{"_index":1893,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componentref.instance.config",{"_index":1894,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.componenttype",{"_index":1880,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.computebestunitandvalue(this.initialvalue",{"_index":3773,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.computebestunitandvalue(value",{"_index":3808,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.condition(operators.eq",{"_index":3105,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.ge",{"_index":3110,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.gt",{"_index":3109,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.le",{"_index":3108,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.lt",{"_index":3107,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.condition(operators.neq",{"_index":3106,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.config",{"_index":2550,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.config.customfiql",{"_index":2526,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.config.options.find((option",{"_index":2521,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.config.wildcardposition",{"_index":2551,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.contentareaelement",{"_index":2918,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.contentareaelement.getboundingclientrect",{"_index":2929,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.contextualactionposition",{"_index":1489,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.contextualactions",{"_index":1453,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.contextualactions.length",{"_index":1458,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.createformgroup",{"_index":2291,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.csvexporterservice.createcsv(data",{"_index":2207,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.csvexporterservice.downloadcsvfile(csvfile",{"_index":2208,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.currentdetailrowconfig",{"_index":1592,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.count",{"_index":1595,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.index",{"_index":1594,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowconfig.record",{"_index":1593,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentdetailrowrenderspec",{"_index":1596,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentfocuseditem",{"_index":2772,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.element.blur",{"_index":2776,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.left",{"_index":2788,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentfocuseditem.left.closemenu",{"_index":2790,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.currentoperator",{"_index":3089,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.currentpanespec",{"_index":1600,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.currentpanespecrecord",{"_index":1599,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.dataexportrequest.emit",{"_index":2161,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.datagrid",{"_index":1636,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.columns.reset(this.datagrid.columns.toarray",{"_index":1734,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.close",{"_index":1434,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.isopen",{"_index":1426,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.open(row.item",{"_index":1432,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.detailservice.state",{"_index":1425,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.items.change.subscribe",{"_index":1730,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.items.displayed.length",{"_index":1731,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows",{"_index":1618,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows.find((findrow",{"_index":1427,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.rows.notifyonchanges",{"_index":1619,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selected",{"_index":1637,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.clearselection",{"_index":1612,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.current",{"_index":1481,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.current.length",{"_index":1482,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.currentsingle",{"_index":1480,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.setselected(found",{"_index":1613,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.selection.updatecurrent(nextselection",{"_index":1617,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagrid.singleselected",{"_index":1638,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselection",{"_index":1724,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselection.length",{"_index":1491,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.datagridselectionchange",{"_index":1512,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.deactivate",{"_index":1200,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.defaultspinnersize",{"_index":3593,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["this.detachrenderer",{"_index":1889,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.detailcomponent",{"_index":1597,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.detailpane.component",{"_index":1601,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.detectchanges",{"_index":581,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.disabled",{"_index":936,"title":{},"body":{"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.dismissed.next",{"_index":2990,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.document.body.classlist.contains(no_scrolling_classname",{"_index":2917,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.document.body.queryselector(content_area_selector",{"_index":2919,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dosearch",{"_index":4030,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.downloaddata(rows",{"_index":2198,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.downloadingmessage",{"_index":2160,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.driver.getbytext('button",{"_index":947,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.dropdownmenuelement",{"_index":2901,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdownmenuelement.getboundingclientrect",{"_index":2906,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdownmenurect",{"_index":2905,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerel",{"_index":2672,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.dropdowntriggerel.innertext",{"_index":2726,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.dropdowntriggerelement",{"_index":2899,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.getboundingclientrect",{"_index":2904,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.queryselector('button.first",{"_index":2932,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerelement.queryselector('clr",{"_index":2902,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.dropdowntriggerrect",{"_index":2903,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.elements.length",{"_index":544,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements.map((el",{"_index":537,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements.map((element",{"_index":532,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].componentinstance",{"_index":590,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].injector",{"_index":592,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement",{"_index":573,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.disabled",{"_index":529,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.style.getpropertyvalue(key",{"_index":587,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.textcontent.trim",{"_index":526,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].nativeelement.value",{"_index":527,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].query(by.directive(type)).componentinstance",{"_index":602,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elements[0].queryall(by.css(cssselector",{"_index":604,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.elref.nativeelement",{"_index":2900,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.errorlabels",{"_index":932,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.errorlabels.length",{"_index":931,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errorlabels.reduce",{"_index":3871,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errormessagechange.emit",{"_index":2989,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["this.errors",{"_index":3806,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.errortext",{"_index":699,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["this.exportdata.bind(this",{"_index":2162,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.exportstage",{"_index":2159,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fb.group",{"_index":2520,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.fieldnamemap",{"_index":2219,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fieldnamemap.get(fieldname",{"_index":2214,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.fieldnamemap.has(fieldname",{"_index":2213,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.filename",{"_index":2209,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.filter",{"_index":3153,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["this.filtercontainer.open",{"_index":2493,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.findcolumnindex(col",{"_index":1574,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.findelement('.spinner",{"_index":4355,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.findelement('clr",{"_index":830,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{}}}],["this.findelement('strong').nativeelement.textcontent",{"_index":1020,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{}}}],["this.findelement(cssselector",{"_index":3223,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.findelement(cssselector).nativeelement",{"_index":3965,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.findelements(cssselector).map((el",{"_index":3225,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.findparent(cssselector",{"_index":502,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.findparents(debugel.parent",{"_index":596,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.findparents(this.elements[0].parent",{"_index":597,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.findwidgets(params",{"_index":3258,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture",{"_index":552,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.componentinstance",{"_index":643,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.debugelement",{"_index":3247,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.fixture.debugelement).query(by.css(query",{"_index":648,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{}}}],["this.fixture.destroy",{"_index":4325,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.fixture.detectchanges",{"_index":534,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.flatlistofavailableactions",{"_index":272,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.focushandlerservice.listentoarrowkeys(rootmenucontainer",{"_index":2698,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocus(direction.down",{"_index":2705,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocus(direction.right",{"_index":2704,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.movefocusto(this.menutrigger",{"_index":2699,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.focushandlerservice.unlistenfuncs.foreach((unlisten",{"_index":2694,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.forcedropdownopen",{"_index":2189,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.format(value",{"_index":4422,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["this.formcontrol.enabled",{"_index":928,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.errors",{"_index":3874,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formcontrol.pristine",{"_index":929,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.valid",{"_index":930,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrol.value",{"_index":3409,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.formcontrol.value.tostring",{"_index":3412,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.formcontrolnamedirective",{"_index":926,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formcontrolnamedirective.control",{"_index":927,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.formgroup",{"_index":2185,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.addcontrol(option.value",{"_index":2408,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.controls[col.fieldname].value",{"_index":2178,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].setvalue(selected",{"_index":2180,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].setvalue(true",{"_index":2188,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.controls[column.fieldname].value",{"_index":2174,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.formgroup.get('combounitoptions').disable",{"_index":3818,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').enable",{"_index":3822,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').setvalue(value",{"_index":3762,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('combounitoptions').value",{"_index":3833,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('filterselect').value",{"_index":2527,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{}}}],["this.formgroup.get('filtertext').value",{"_index":2549,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.formgroup.get('limited",{"_index":3786,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').disable",{"_index":3820,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').enable",{"_index":3823,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('limited').value",{"_index":3830,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited",{"_index":3851,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').setvalue(false",{"_index":3807,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').setvalue(value",{"_index":3811,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited').value",{"_index":3852,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.disable",{"_index":3821,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.enable",{"_index":3824,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get('unlimited')?.value",{"_index":3829,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.formgroup.get(formcontrol).value",{"_index":2420,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.get(formfields.from).setvalue(null",{"_index":2482,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.from).setvalue(values[0",{"_index":2481,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.from).value",{"_index":2487,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).setvalue(null",{"_index":2485,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).setvalue(values[1",{"_index":2484,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(formfields.to).value",{"_index":2488,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.formgroup.get(frmctrl",{"_index":2412,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.get(frmctrl).value).length",{"_index":2425,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.removecontrol(control",{"_index":2406,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.formgroup.setvalue",{"_index":2525,"title":{},"body":{"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["this.formgroup.valuechanges",{"_index":2341,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.formgroup.valuechanges.pipe(debouncetime(this.getdebouncetimems",{"_index":2340,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.friendlyfieldscontrol.value",{"_index":2193,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getactions(criteria.tolowercase",{"_index":289,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.getallunittypes",{"_index":3891,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getbase",{"_index":2030,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.getbasevalue(value",{"_index":3902,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getcolumnsconfig(this.columns",{"_index":1585,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getcontextualactions",{"_index":1454,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getdebouncetimems",{"_index":2339,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.getdisplaynameforcolumn(exportcolumn",{"_index":2215,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getdisplaynameforfield(fieldname",{"_index":2194,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.getdropdownitemelement(child",{"_index":2717,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.getflatlistofavailableactions(this._actions",{"_index":288,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.getnativeelement('.combo",{"_index":3966,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.getnativeelement('.single",{"_index":3967,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.getnodetext(el",{"_index":3226,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.getnodetext(element",{"_index":3224,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.getpagesize",{"_index":1700,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getpagesizeoptions",{"_index":1702,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.getselectedunit",{"_index":3843,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.getselectedunit().getoutputvalue(value",{"_index":3831,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.getspinner",{"_index":4357,"title":{},"body":{"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["this.gettext('.readonly",{"_index":3951,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.getunitmultiplier",{"_index":3905,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.getvalue",{"_index":3878,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.gridrefresh.emit(vcddgstate",{"_index":1653,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.handleitem(item",{"_index":4041,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.handleitem(this.selecteditem",{"_index":4048,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.handleopen(open",{"_index":4023,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.hasstaticactions",{"_index":1448,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.height",{"_index":1473,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.height}px",{"_index":1474,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.host.dispatchevent(new",{"_index":4310,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.host.nativeelement",{"_index":1206,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.host.style.position",{"_index":4302,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.host.style.width",{"_index":4300,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.hostcomponent",{"_index":642,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.hostvcddropdown._dropdowntriggerel",{"_index":2673,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.hostvcddropdown.clrdropdown.toggleservice.open",{"_index":2638,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.id",{"_index":923,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.initialselection",{"_index":1484,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.initialvalue",{"_index":3364,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.initialvalueunit",{"_index":3769,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit",{"_index":3729,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.findbestunit(value",{"_index":3827,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.initialvalue",{"_index":3772,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.max",{"_index":3848,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(this.min",{"_index":3845,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.inputvalueunit.getoutputvalue(value",{"_index":3828,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.isactionavailable(currentaction",{"_index":302,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isactiondisabled(action",{"_index":310,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isdropdownopen",{"_index":2090,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.isinsidemodal",{"_index":2916,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.isloading",{"_index":1403,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.isoverflowing",{"_index":1228,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.isreadonly",{"_index":3859,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.isreadytosearchpromise",{"_index":280,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.isrequestpending",{"_index":2172,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.isroot",{"_index":2039,"title":{},"body":{"classes/CypressLocatorDriver.html":{}}}],["this.isrootdropdown",{"_index":2684,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.items",{"_index":1404,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.items).filter((item",{"_index":1616,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.items)[0",{"_index":1611,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.lastrealvalue",{"_index":3783,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.limitedinput",{"_index":3801,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.limitedinputshowerrors",{"_index":3803,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.linkmenuitems",{"_index":2688,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.linkvertical",{"_index":2718,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.listentorightarrowkeypressonnestedtrigger",{"_index":2674,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.locatordriver",{"_index":968,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatordriver.findwidget(clrdatagridwidgetobject",{"_index":4492,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatordriver.get(`.dropdown",{"_index":2264,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatordriver.get(cssselector",{"_index":963,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatordriver.getbytext(cssselector",{"_index":966,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatordriver.parents(cssselector",{"_index":959,"title":{},"body":{"classes/BaseWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatordriver.unwrap",{"_index":4493,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatorforchild('.username",{"_index":945,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["this.locatorforcssselectors('.cancel",{"_index":2234,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.column",{"_index":2236,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.dropdown",{"_index":2242,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.export",{"_index":2255,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.friendly",{"_index":2249,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('.sanitize",{"_index":2252,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('h3",{"_index":4485,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["this.locatorforcssselectors('li",{"_index":2239,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorforcssselectors('progress",{"_index":2247,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.locatorfortext('button",{"_index":2245,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["this.mapselectedrecords([current",{"_index":1610,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.mapselectedrecords(current",{"_index":1615,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.max",{"_index":3849,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.max.tostring",{"_index":3880,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.maxfeaturedactionsonrow",{"_index":1502,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.menuitems",{"_index":2696,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems.foreach((menuitem",{"_index":2728,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[0",{"_index":2721,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[0].up",{"_index":2731,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[index",{"_index":2730,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menuitems[this.menuitems.length",{"_index":2732,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger",{"_index":2683,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger.down",{"_index":2720,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.menutrigger.right",{"_index":2722,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.min",{"_index":3846,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.min.tostring",{"_index":3879,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.mouseoutdelay",{"_index":1196,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.movefocus(direction.down",{"_index":2784,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocus(direction.left",{"_index":2791,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocus(direction.up",{"_index":2786,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.down",{"_index":2765,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.left",{"_index":2767,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.right",{"_index":2771,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocusto(this.currentfocuseditem.up",{"_index":2769,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.movefocustofirstitem",{"_index":2689,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.multiplier",{"_index":3904,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["this.nestedmenutrigger",{"_index":2686,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.node.nativeelement",{"_index":1677,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.node.nativeelement.style.setproperty",{"_index":1475,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.onbeforesetconfig(val",{"_index":2334,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.onchange",{"_index":934,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.onchange(isodatevalue",{"_index":3376,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onchange(parsefloat(value",{"_index":3373,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onchange(this.getvalue",{"_index":3796,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.onchange(value",{"_index":3372,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.onmousein",{"_index":1212,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.onmouseout",{"_index":1213,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["this.ontouch",{"_index":935,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["this.ontransitionend",{"_index":1114,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["this.open",{"_index":2191,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.openchange.emit(this._open",{"_index":4096,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.openchange.emit(value",{"_index":2135,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.options",{"_index":2403,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["this.options.find((option",{"_index":3410,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["this.optionsformgroup.get(useroptions.friendlynames",{"_index":2170,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.optionsformgroup.get(useroptions.sanitize",{"_index":2168,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.optionsformgroup.get(useroptions.selectall",{"_index":2166,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.pagesize",{"_index":1699,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagesizeoptions",{"_index":1701,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.pagesize",{"_index":1668,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.pagesizeoptions.map((size",{"_index":1671,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.pagination.rowheight",{"_index":1686,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.paginationcomponent.currentpage",{"_index":1660,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.parent",{"_index":3083,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.buildpartial()}${this.result",{"_index":3120,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.clear",{"_index":3119,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.currentoperator",{"_index":3091,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parent.result",{"_index":3092,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.parentdropdown",{"_index":2948,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.parentdropdown.dropdownmenuelement.getboundingclientrect",{"_index":2950,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.parentfocushandler.menuitems.find((item",{"_index":2724,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.parentvcddropdown",{"_index":2642,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.positionleft",{"_index":2909,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.positiontop",{"_index":2908,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.prefix",{"_index":3573,"title":{},"body":{"classes/IdGenerator.html":{}}}],["this.preserveselection",{"_index":1607,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.promiseresolver",{"_index":418,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.providers",{"_index":4190,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.providers.push(provider",{"_index":4188,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.quicksearchservice.registerprovider(provider",{"_index":4189,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.quicksearchservice.unregisterprovider(provider",{"_index":4191,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{}}}],["this.readytosearchpromisefactory",{"_index":213,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.recalculateunitminmax",{"_index":3795,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.registerrootmenucontainer",{"_index":2687,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.registrations",{"_index":4219,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.findindex((prov",{"_index":4210,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.findindex((regprovider",{"_index":4216,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.push(provider",{"_index":4215,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.splice(index",{"_index":4218,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.registrations.splice(insertindex",{"_index":4214,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["this.renderer.listen",{"_index":2691,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.renderer.listen(menucontainer",{"_index":2782,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.reporterror(item.response.error",{"_index":430,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reporterror(response.response.error",{"_index":421,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reportsuccess(response.response.success",{"_index":422,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reportsuccess(response[0].response.success",{"_index":431,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.reset",{"_index":2676,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.resetposition(this.dropdownmenuelement",{"_index":2907,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["this.resolveisreadytosearch",{"_index":279,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.result",{"_index":3093,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.resultactivated.emit(resultactivatedevent",{"_index":4104,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.root",{"_index":792,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["this.rootelement",{"_index":496,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.rootmenutrigger",{"_index":2685,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.running",{"_index":697,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["this.sanitizecontrol.value",{"_index":2199,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.search",{"_index":4174,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["this.searchcriteria",{"_index":4056,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchid",{"_index":4050,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchinput.nativeelement.focus",{"_index":4094,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchinput.nativeelement.select",{"_index":4095,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections",{"_index":4076,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.find",{"_index":4098,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.foreach((searchsection",{"_index":4052,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.foreach(async",{"_index":4054,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.searchsections.reduce((acc",{"_index":4089,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.secondhost.dispatchevent(new",{"_index":4312,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.selectallcontrol.value",{"_index":2176,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.selectedcolumns",{"_index":2164,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.selecteditem",{"_index":4047,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectedunit",{"_index":3810,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.selectfirst(false",{"_index":4086,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectfirst(true",{"_index":4071,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectnext(false",{"_index":4045,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.selectnext(true",{"_index":4043,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["this.setvalue(this._config.value",{"_index":2337,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.shoulddisplaycontextualactionsontop",{"_index":1459,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.shouldshowactionbarontop",{"_index":1692,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.shouldwait",{"_index":278,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.showerrors",{"_index":3805,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.showunlimitedoption",{"_index":3776,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.startactivity",{"_index":417,"title":{},"body":{"classes/ActivityReporter.html":{}}}],["this.styling",{"_index":3309,"title":{},"body":{"components/FormCheckboxComponent.html":{}}}],["this.subscriptions",{"_index":3563,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.foreach((subscription",{"_index":3562,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.indexof(subscription",{"_index":3558,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.push(subscription",{"_index":3555,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptions.splice(indexofsubscription",{"_index":3561,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.subscriptiontracker.subscribe(columndropdown.toggleservice.openchange",{"_index":2088,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.subscriptiontracker.subscribe(obs",{"_index":2342,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{}}}],["this.subscriptiontracker.subscribe(this.hostvcddropdown.dropdownmenuupdated",{"_index":2675,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.subscriptiontracker.subscribe(this.selectallcontrol.valuechanges",{"_index":2187,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.successmessage",{"_index":698,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["this.testelement",{"_index":506,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.elements",{"_index":489,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.elements.map((el",{"_index":501,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.testelement.fixture",{"_index":495,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["this.textinput",{"_index":3365,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.textinput.nativeelement.value",{"_index":3369,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.timeoutid",{"_index":2703,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.to.errorlabels",{"_index":3475,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{}}}],["this.to.hintposition",{"_index":3474,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.max",{"_index":3472,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.min",{"_index":3471,"title":{},"body":{"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.onenterclicked",{"_index":3476,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onenterclicked(this.field",{"_index":3477,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onescapeclicked",{"_index":3478,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.onescapeclicked(this.field",{"_index":3479,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.options",{"_index":3507,"title":{},"body":{"components/FormlySelectComponent.html":{}}}],["this.to.showunlimitedoption",{"_index":3500,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.to.type",{"_index":3473,"title":{},"body":{"components/FormlyInputComponent.html":{}}}],["this.to.unlimitedvalue",{"_index":3501,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{}}}],["this.tooltip",{"_index":4315,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.dispatchevent(new",{"_index":4313,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.queryselector('.tooltip",{"_index":4326,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltip.style.opacity",{"_index":4316,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.classlist",{"_index":4318,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.innertext",{"_index":4317,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.offsetwidth",{"_index":4309,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipcontent.style.visibility",{"_index":4324,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["this.tooltipsize",{"_index":1148,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["this.totalitems",{"_index":1406,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(index",{"_index":1428,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(itemindex",{"_index":1633,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.trackby(selectedindex",{"_index":1634,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.tracker.subscribe(this.formgroup.get('combounitoptions').valuechanges",{"_index":3792,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.subscribe(this.formgroup.get('limited').valuechanges",{"_index":3797,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.subscribe(this.formgroup.get('unlimited').valuechanges",{"_index":3784,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.tracker.unsubscribeall",{"_index":3767,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.translationservice.translate('vcd.cc.unlimited",{"_index":3853,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.translationservice.translate(outputunit.getvaluewithunittranslationkey",{"_index":4420,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["this.translationservice.translateasync('vcd.cc.cancel",{"_index":2101,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.data",{"_index":2097,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.export",{"_index":2107,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.export.all",{"_index":2103,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.exporter.downloading",{"_index":2129,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.exporter.writing",{"_index":2132,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.hint",{"_index":2120,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.info",{"_index":2117,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.friendly.names.question",{"_index":2115,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.loading",{"_index":674,"title":{},"body":{"components/BannerActivityReporterComponent.html":{}}}],["this.translationservice.translateasync('vcd.cc.no",{"_index":2111,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.hint",{"_index":2124,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.info",{"_index":2126,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.sanitize.question",{"_index":2122,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.select.columns",{"_index":2105,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync('vcd.cc.yes",{"_index":2109,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.translationservice.translateasync(this.paginationtranslationkey",{"_index":1663,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.ts.translate(currentaction.textkey",{"_index":305,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["this.type",{"_index":3367,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.unit",{"_index":2469,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["this.unitdropdown",{"_index":3854,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitformatter.bestformat(value",{"_index":3857,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitformcontrol.setvalue(this.component.unitoptions[0].getmultiplier",{"_index":3964,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["this.unitmax",{"_index":3847,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitmin",{"_index":3844,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions",{"_index":2470,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions.length",{"_index":2471,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unitoptions[0",{"_index":2472,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unlimitedvalue",{"_index":3778,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.unlistenfuncs.foreach((unlisten",{"_index":2763,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.unlistenfuncs.push",{"_index":2781,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["this.unlistenrightarrowkeypress",{"_index":2690,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["this.unsubscribeall",{"_index":3552,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["this.updatecolumnsconfig",{"_index":1398,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updatedisabledstate(isdisabled",{"_index":3812,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatedisabledstate(this.formgroup?.get('unlimited')?.value",{"_index":3814,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatedisabledstate(true",{"_index":3798,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.updatefieldnamemap(cols",{"_index":2094,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.updatepagination",{"_index":1466,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updateprogress.bind(this",{"_index":2163,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["this.updateselecteditems",{"_index":1418,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.updateunlimiteddisabledstate",{"_index":3791,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":1892,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.viewcontainerref.remove",{"_index":1896,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["this.viewinitted",{"_index":1416,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["this.wrap",{"_index":3094,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["this.writevalue(this.initialvalue",{"_index":3371,"title":{},"body":{"components/FormInputComponent.html":{}}}],["this.writingmessage",{"_index":2201,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["those",{"_index":2271,"title":{},"body":{"classes/DatagridFilter.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["thousandsunit",{"_index":4389,"title":{"classes/ThousandsUnit.html":{}},"body":{"classes/ThousandsUnit.html":{},"coverage.html":{}}}],["three",{"_index":3596,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["through",{"_index":244,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/ColumnConfigInternal.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["throughout",{"_index":4163,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["throw",{"_index":649,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["thrown",{"_index":2143,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["throws",{"_index":644,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["till",{"_index":2679,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["time",{"_index":1041,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{}}}],["timeoutid",{"_index":2596,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["timer",{"_index":1072,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["timerid",{"_index":1825,"title":{},"body":{"classes/CommonUtil.html":{}}}],["times",{"_index":2773,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tip",{"_index":1066,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tip.clearhidetimeout",{"_index":1116,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container",{"_index":1093,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.appendchild(tip.content",{"_index":1103,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.classlist.add('tooltip",{"_index":1095,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.style.opacity",{"_index":1124,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.container.style.visibility",{"_index":1129,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content",{"_index":1096,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.addeventlistener('transitionend",{"_index":1108,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.add('tooltip",{"_index":1097,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.add(tip.calculateposition(rect",{"_index":1150,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.classlist.remove(tl",{"_index":1149,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.innerhtml",{"_index":1151,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.removeeventlistener('transitionend",{"_index":1113,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.style.opacity",{"_index":1125,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.content.style.visibility",{"_index":1130,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.create",{"_index":1210,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.currentdirective",{"_index":1118,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.hostelement",{"_index":1082,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.mouseoutdelay",{"_index":1091,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currentdirective.tooltipsize",{"_index":1084,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.currenthost",{"_index":1134,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.destroy",{"_index":1226,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.hidetimeout",{"_index":1121,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.hidetooltip(this.mouseoutdelay",{"_index":1230,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tip.hidetooltip(tip.mouseoutdelay",{"_index":1119,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ismouseover",{"_index":1123,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.onmouseenter",{"_index":1106,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.onmouseleave",{"_index":1107,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ontransitionend",{"_index":1109,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.ontransitionend(event",{"_index":1242,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["tip.update",{"_index":1229,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["title",{"_index":145,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tl",{"_index":1051,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["to]).getstring",{"_index":2492,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["toarray",{"_index":550,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/TestElement.html":{}}}],["todo",{"_index":1753,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"injectables/UnitFormatter.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":4000,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["toggle",{"_index":1740,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/MenuItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["toggled",{"_index":3759,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["toggler",{"_index":1749,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["toggles",{"_index":3756,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["toggleswitch",{"_index":3308,"title":{},"body":{"components/FormCheckboxComponent.html":{},"miscellaneous/enumerations.html":{}}}],["toggling",{"_index":1745,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["toinput",{"_index":2435,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["tooltip",{"_index":1046,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipcontent",{"_index":4259,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipcount",{"_index":4257,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipposition",{"_index":1050,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.bl",{"_index":1172,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.br",{"_index":1174,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.tl",{"_index":1171,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition.tr",{"_index":1173,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"miscellaneous/variables.html":{}}}],["tooltipposition[key",{"_index":4321,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipsize",{"_index":1045,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tooltipsize.md",{"_index":1203,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["tooltiptext",{"_index":4256,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["tooltipvisibility",{"_index":4258,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["top",{"_index":1052,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/FilterBuilder.html":{},"components/FormInputComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["top_positioned_button",{"_index":4982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["topic",{"_index":4583,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["topmost",{"_index":4074,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["tosubscriber",{"_index":3542,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["total",{"_index":1323,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["totalitems",{"_index":1324,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{}}}],["touch",{"_index":876,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["touched",{"_index":3794,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["tr",{"_index":1054,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["trackby",{"_index":1412,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["trackbyfunction",{"_index":1261,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["tracker",{"_index":3547,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/SubscriptionTracker.html":{}}}],["tracker.ts",{"_index":3523,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{},"coverage.html":{}}}],["tracker.ts:18",{"_index":3531,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:28",{"_index":3537,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:33",{"_index":3539,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{}}}],["tracker.ts:40",{"_index":4358,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:53",{"_index":4360,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:64",{"_index":4361,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["tracker.ts:74",{"_index":4362,"title":{},"body":{"classes/SubscriptionTracker.html":{}}}],["transform",{"_index":2865,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{},"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["transform(item",{"_index":3517,"title":{},"body":{"pipes/FunctionRendererPipe.html":{},"pipes/NestedPropertyPipe.html":{}}}],["transformed",{"_index":1743,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["transitionend",{"_index":4994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate",{"_index":2429,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/LoadingIndicatorComponent.html":{}}}],["translated",{"_index":72,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/BannerActivityReporterComponent.html":{}}}],["translatex/y",{"_index":2866,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["translating",{"_index":1553,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["translation",{"_index":1308,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/SelectOption.html":{},"interfaces/SortedColumn.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["translationkey",{"_index":3433,"title":{},"body":{"classes/FormValidators.html":{}}}],["translationservice",{"_index":194,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{}}}],["translationservice.translate",{"_index":4955,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["translationservice.translateasync",{"_index":4956,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tree",{"_index":656,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["tried",{"_index":2204,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["tries",{"_index":1608,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["trigger",{"_index":812,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["triggercomputedstyles",{"_index":2939,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["triggered",{"_index":813,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["triggers",{"_index":2622,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["true",{"_index":99,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BaseFormControl.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{},"modules/VcdFormlyModule.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["try",{"_index":1762,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"contributing.html":{}}}],["trying",{"_index":3886,"title":{},"body":{"classes/NumberUnit.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["ts",{"_index":200,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["tsdoc",{"_index":4597,"title":{},"body":{"contributing.html":{}}}],["tsickle",{"_index":4826,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":4828,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":1827,"title":{},"body":{"classes/CommonUtil.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["turn",{"_index":320,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["turned",{"_index":1966,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["turns",{"_index":338,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"interfaces/ObjectAndResponse.html":{}}}],["twice",{"_index":3757,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["two",{"_index":2974,"title":{},"body":{"components/ErrorBannerComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CanBeReadOnly.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"components/FormlyInputComponent.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MenuItem.html":{},"interfaces/MockRecord.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(${index",{"_index":2266,"title":{},"body":{"classes/DataExporterWidgetObject.html":{}}}],["typealiases",{"_index":4947,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4063,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["typeof",{"_index":1649,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"interfaces/SortedColumn.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["types",{"_index":1250,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/Unit.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":3253,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["typically",{"_index":3199,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"index.html":{}}}],["typing",{"_index":4162,"title":{},"body":{"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["u00a0",{"_index":889,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["ufeff",{"_index":1938,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["ui",{"_index":374,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["un",{"_index":4204,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unamed",{"_index":3509,"title":{},"body":{"interfaces/FunctionRenderer.html":{},"interfaces/PaginationCallback.html":{}}}],["undefined",{"_index":345,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/ObjectAndResponse.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"injectables/QuickSearchService.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{}}}],["under",{"_index":122,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{}}}],["underlying",{"_index":2707,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["underneath",{"_index":2780,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["understand",{"_index":1008,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{}}}],["understands",{"_index":318,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["unique",{"_index":79,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"classes/IdGenerator.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["unit",{"_index":737,"title":{"classes/Unit.html":{}},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unit(val",{"_index":2473,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["unit.gb",{"_index":4413,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit.getmultiplier",{"_index":3956,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unit.kb",{"_index":4411,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit.mb",{"_index":4412,"title":{},"body":{"injectables/UnitFormatter.html":{}}}],["unit:11",{"_index":3687,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:12",{"_index":3688,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:24",{"_index":3699,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:28",{"_index":3703,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:37",{"_index":3702,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:45",{"_index":3698,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:54",{"_index":3710,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:61",{"_index":3704,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unit:71",{"_index":3694,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{}}}],["unitdropdown",{"_index":3764,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitformatter",{"_index":3717,"title":{"injectables/UnitFormatter.html":{}},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"injectables/UnitFormatter.html":{},"modules/VcdFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["unitformcontrol",{"_index":3919,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unitlist",{"_index":4129,"title":{},"body":{"classes/Percent.html":{}}}],["unitmax",{"_index":3754,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitmin",{"_index":3753,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitname",{"_index":3705,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{}}}],["unitoption",{"_index":3738,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoption.getmultiplier",{"_index":3736,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoption.getunitname",{"_index":3735,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoptions",{"_index":2436,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["unitoptions(unitoptions",{"_index":3727,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unitoptions(val",{"_index":2467,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["units",{"_index":2449,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"contributing.html":{}}}],["unittranslationkey",{"_index":4118,"title":{},"body":{"classes/Percent.html":{}}}],["unittypes",{"_index":3908,"title":{},"body":{"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["unknown",{"_index":217,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/CommonUtil.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"classes/DataExporterWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"pipes/NestedPropertyPipe.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["unless",{"_index":1414,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unlimited",{"_index":3496,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unlimitedchecked",{"_index":3785,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["unlimitedformcontrol",{"_index":3917,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["unlimitedvalue",{"_index":3483,"title":{},"body":{"components/FormlyNumberWithUnitInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["unlisten",{"_index":2695,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/MenuItem.html":{}}}],["unlistenfuncs",{"_index":2740,"title":{},"body":{"injectables/DropdownFocusHandlerService.html":{}}}],["unlistenrightarrowkeypress",{"_index":2597,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["unpause",{"_index":189,"title":{},"body":{"classes/ActionSearchProvider.html":{}}}],["unregister",{"_index":4181,"title":{},"body":{"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{}}}],["unregistered",{"_index":4205,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unregisterprovider",{"_index":4197,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unregisterprovider(provider",{"_index":4201,"title":{},"body":{"injectables/QuickSearchService.html":{}}}],["unset",{"_index":149,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unspecificed",{"_index":1468,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["unsubscribe",{"_index":3525,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribe(subscription",{"_index":3536,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribeall",{"_index":3527,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unsubscribes",{"_index":3538,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["until",{"_index":237,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/TestElement.html":{}}}],["untracked",{"_index":3560,"title":{},"body":{"interfaces/ISubscriptionTracker.html":{},"classes/SubscriptionTracker.html":{}}}],["unwatchevents",{"_index":4737,"title":{},"body":{"coverage.html":{}}}],["unwatchevents(el",{"_index":1182,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["unwatchevents(this.hostelement",{"_index":1225,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["unwatchevents(tip.container",{"_index":1112,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["unwrap",{"_index":448,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/TestElement.html":{}}}],["unwraps",{"_index":971,"title":{},"body":{"classes/BaseWidgetObject.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{},"classes/VcdDatagridWidgetObject.html":{}}}],["up",{"_index":22,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":1131,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["updatecolumnsconfig",{"_index":1583,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updated",{"_index":787,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["updatedisabledstate(isdisabled",{"_index":3815,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updatefieldnamemap(cols",{"_index":2218,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updatepagination",{"_index":1698,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateprogress",{"_index":2053,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updateprogress(progress",{"_index":2211,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["updates",{"_index":1389,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateselecteditems",{"_index":1606,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["updateunlimitedcheckbox",{"_index":3816,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updateunlimiteddisabledstate",{"_index":3813,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["updating",{"_index":1415,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["upgrade",{"_index":1423,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["upon",{"_index":1400,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["upper",{"_index":3048,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["upstream",{"_index":4619,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":1953,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["url.createobjecturl(blob",{"_index":1954,"title":{},"body":{"injectables/CsvExporterService.html":{}}}],["urn",{"_index":3014,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["usage",{"_index":989,"title":{},"body":{"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["use",{"_index":393,"title":{},"body":{"classes/ActivityReporter.html":{},"classes/AngularWidgetObjectFinder.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SubscriptionTracker.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":3144,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["used",{"_index":115,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":4989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":3740,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["user",{"_index":108,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActivityReporter.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"miscellaneous/variables.html":{}}}],["useroptions",{"_index":2070,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"miscellaneous/enumerations.html":{}}}],["useroptions.friendlynames",{"_index":2155,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["useroptions.sanitize",{"_index":2156,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["useroptions.selectall",{"_index":2153,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["users",{"_index":2832,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["uses",{"_index":1843,"title":{},"body":{"interfaces/ComponentRenderer.html":{},"interfaces/ComponentRendererSpec.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["usevalue",{"_index":3145,"title":{},"body":{"components/FilterTestHostComponent.html":{},"modules/VcdFormlyModule.html":{}}}],["using",{"_index":111,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/DatagridFilter.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["utf",{"_index":1935,"title":{},"body":{"injectables/CsvExporterService.html":{},"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["util",{"_index":3981,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"injectables/UnitFormatter.html":{}}}],["util.ts",{"_index":1791,"title":{},"body":{"classes/CommonUtil.html":{},"classes/DomUtil.html":{},"coverage.html":{}}}],["util.ts:12",{"_index":1817,"title":{},"body":{"classes/CommonUtil.html":{}}}],["util.ts:19",{"_index":2565,"title":{},"body":{"classes/DomUtil.html":{}}}],["util.ts:22",{"_index":1813,"title":{},"body":{"classes/CommonUtil.html":{}}}],["util.ts:38",{"_index":1798,"title":{},"body":{"classes/CommonUtil.html":{}}}],["utility",{"_index":1776,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"pipes/NestedPropertyPipe.html":{}}}],["utils",{"_index":266,"title":{},"body":{"classes/ActionSearchProvider.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["utils.ts",{"_index":3122,"title":{},"body":{"components/FilterTestHostComponent.html":{},"coverage.html":{}}}],["utils.ts:113",{"_index":3133,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:121",{"_index":3131,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:123",{"_index":3134,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils.ts:130",{"_index":3128,"title":{},"body":{"components/FilterTestHostComponent.html":{}}}],["utils/dom",{"_index":3980,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["utils/filter",{"_index":2394,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["utils/id",{"_index":915,"title":{},"body":{"classes/BaseFormControl.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["utils/test/widget",{"_index":1018,"title":{},"body":{"classes/BoldTextRendererWidgetObject.html":{},"classes/DataExporterWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["utils/unit/unit",{"_index":2464,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"modules/VcdFormModule.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{}}}],["ux",{"_index":836,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["v",{"_index":1781,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["v.result?.items",{"_index":4090,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["v[0",{"_index":4929,"title":{},"body":{"index.html":{}}}],["val",{"_index":888,"title":{},"body":{"classes/BaseFormControl.html":{},"classes/DatagridFilter.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/ErrorBannerComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"pipes/FunctionRendererPipe.html":{}}}],["validates",{"_index":3427,"title":{},"body":{"classes/FormValidators.html":{}}}],["validation",{"_index":912,"title":{},"body":{"classes/BaseFormControl.html":{}}}],["validationerrors",{"_index":3715,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["validations",{"_index":3422,"title":{},"body":{"classes/FormValidators.html":{}}}],["validator",{"_index":3429,"title":{},"body":{"classes/FormValidators.html":{}}}],["validator(control",{"_index":3441,"title":{},"body":{"classes/FormValidators.html":{}}}],["validatorfn",{"_index":3431,"title":{},"body":{"classes/FormValidators.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["validators",{"_index":3421,"title":{},"body":{"classes/FormValidators.html":{}}}],["validators.required(control",{"_index":3440,"title":{},"body":{"classes/FormValidators.html":{}}}],["value",{"_index":201,"title":{},"body":{"classes/ActionSearchProvider.html":{},"classes/AngularLocatorDriver.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/CommonUtil.html":{},"injectables/CsvExporterService.html":{},"classes/CypressLocatorDriver.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"classes/IdGenerator.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"pipes/NestedPropertyPipe.html":{},"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"injectables/QuickSearchRegistrarService.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SelectOption.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{},"injectables/UnitFormatter.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.tostring",{"_index":3863,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["value.tostring(10",{"_index":3366,"title":{},"body":{"components/FormInputComponent.html":{}}}],["value[nestedprop",{"_index":3667,"title":{},"body":{"pipes/NestedPropertyPipe.html":{}}}],["valueformcontrol",{"_index":3918,"title":{},"body":{"classes/NumberWithUnitFormInputWidgetObject.html":{}}}],["values",{"_index":2301,"title":{},"body":{"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"pipes/FunctionRendererPipe.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["values.foreach((frmctrl",{"_index":2410,"title":{},"body":{"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{}}}],["values[0",{"_index":2480,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["values[1",{"_index":2483,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"classes/FilterBuilder.html":{}}}],["valuewithunittranslationkey",{"_index":4119,"title":{},"body":{"classes/Percent.html":{}}}],["var",{"_index":703,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["variable",{"_index":3361,"title":{},"body":{"components/FormInputComponent.html":{},"coverage.html":{}}}],["variables",{"_index":4069,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1365,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcd",{"_index":662,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/BoldTextRendererConfig.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DataExporterWidgetObject.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/VcdDatagridWidgetObject.html":{},"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.action.provider.section.title",{"_index":269,"title":{},"body":{"classes/ActionSearchProvider.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.display.percent",{"_index":4123,"title":{},"body":{"classes/Percent.html":{}}}],["vcd.cc.grid.default.pagination",{"_index":1312,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["vcd.cc.units.percent",{"_index":4122,"title":{},"body":{"classes/Percent.html":{}}}],["vcd.cc.warning.numrange",{"_index":3438,"title":{},"body":{"classes/FormValidators.html":{}}}],["vcd/i18n",{"_index":261,"title":{},"body":{"classes/ActionSearchProvider.html":{},"components/BannerActivityReporterComponent.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"modules/DropdownModule.html":{},"interfaces/ExportColumn.html":{},"components/FilterTestHostComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"modules/QuickSearchModule.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"interfaces/SortedColumn.html":{},"injectables/UnitFormatter.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["vcd/route",{"_index":4877,"title":{},"body":{"index.html":{}}}],["vcd/ui",{"_index":4851,"title":{},"body":{"index.html":{}}}],["vcd_formly_config",{"_index":4521,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"modules/VcdFormlyModule.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vcd_formly_input_components",{"_index":4539,"title":{},"body":{"modules/VcdFormlyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vcdactionmenumodule",{"_index":4424,"title":{"modules/VcdActionMenuModule.html":{}},"body":{"modules/VcdActionMenuModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdactivityreportermodule",{"_index":4431,"title":{"modules/VcdActivityReporterModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdcomponentrendereroutlet",{"_index":1858,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["vcdcomponentrendereroutlet(renderer",{"_index":1879,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["vcdcomponentrendereroutlet]'},{'name",{"_index":750,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["vcdcomponentsmodule",{"_index":4445,"title":{"modules/VcdComponentsModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddataexportermodule",{"_index":4448,"title":{"modules/VcdDataExporterModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddatagrid",{"_index":4484,"title":{},"body":{"classes/VcdDatagridWidgetObject.html":{}}}],["vcddatagridmodule",{"_index":3136,"title":{"modules/VcdDatagridModule.html":{}},"body":{"components/FilterTestHostComponent.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules.html":{},"overview.html":{}}}],["vcddatagridwidgetobject",{"_index":4480,"title":{"classes/VcdDatagridWidgetObject.html":{}},"body":{"classes/VcdDatagridWidgetObject.html":{},"coverage.html":{}}}],["vcddgstate",{"_index":1640,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcddgstate.filters",{"_index":1645,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcddgstate.sortcolumn",{"_index":1651,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["vcderrorbannermodule",{"_index":4436,"title":{"modules/VcdErrorBannerModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdformlyfieldconfig",{"_index":4504,"title":{"interfaces/VcdFormlyFieldConfig.html":{}},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{}}}],["vcdformlyinputtypes",{"_index":4512,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/enumerations.html":{}}}],["vcdformlyinputtypes.input",{"_index":4522,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlyinputtypes.number_with_unit_input",{"_index":4524,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlyinputtypes.select",{"_index":4523,"title":{},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"miscellaneous/variables.html":{}}}],["vcdformlymodule",{"_index":4525,"title":{"modules/VcdFormlyModule.html":{}},"body":{"modules/VcdFormlyModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdformlytemplateoptions",{"_index":4511,"title":{"interfaces/VcdFormlyTemplateOptions.html":{}},"body":{"interfaces/VcdFormlyFieldConfig.html":{},"interfaces/VcdFormlyTemplateOptions.html":{},"coverage.html":{}}}],["vcdformmodule",{"_index":4449,"title":{"modules/VcdFormModule.html":{}},"body":{"modules/VcdComponentsModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdloadingindicatormodule",{"_index":4437,"title":{"modules/VcdLoadingIndicatorModule.html":{}},"body":{"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"modules.html":{},"overview.html":{}}}],["vcdshowclippedtext",{"_index":757,"title":{},"body":{"components/BannerActivityReporterComponent.html":{},"components/BoldTextRendererComponent.html":{},"interfaces/CliptextConfig.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"components/ErrorBannerComponent.html":{},"components/FilterTestHostComponent.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"components/FormlyInputComponent.html":{},"components/FormlyNumberWithUnitInputComponent.html":{},"components/FormlySelectComponent.html":{},"components/LoadingIndicatorComponent.html":{},"directives/ShowClippedTextDirective.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"components/SpinnerActivityReporterComponent.html":{}}}],["verbosity",{"_index":3004,"title":{},"body":{"classes/FilterBuilder.html":{}}}],["verifies",{"_index":1814,"title":{},"body":{"classes/CommonUtil.html":{}}}],["verify",{"_index":4059,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["version",{"_index":1424,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"index.html":{}}}],["versioning",{"_index":4904,"title":{},"body":{"index.html":{}}}],["via",{"_index":4893,"title":{},"body":{"index.html":{}}}],["view",{"_index":1384,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["view's",{"_index":2572,"title":{},"body":{"classes/DomUtil.html":{}}}],["viewable",{"_index":2068,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["viewchild",{"_index":1262,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DataExportRequestEvent.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild('actionreporter",{"_index":1550,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild('div",{"_index":4330,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchild('div2",{"_index":4332,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchild('from",{"_index":2452,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["viewchild('limitedinput",{"_index":3765,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["viewchild('searchinput",{"_index":4032,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["viewchild('textinput",{"_index":3356,"title":{},"body":{"components/FormInputComponent.html":{}}}],["viewchild('to",{"_index":2456,"title":{},"body":{"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{}}}],["viewchild('unitdropdown",{"_index":3763,"title":{},"body":{"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["viewchild(clrdatagrid",{"_index":1546,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild(clrdatagridpagination",{"_index":1547,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchild(clrdropdown",{"_index":2085,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["viewchild(showclippedtextdirective",{"_index":4329,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["viewchildren",{"_index":1263,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewchildren('actionmenuinrow",{"_index":1498,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewcontainerref",{"_index":1865,"title":{},"body":{"directives/ComponentRendererOutletDirective.html":{}}}],["viewinitted",{"_index":1552,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["viewport",{"_index":2567,"title":{},"body":{"classes/DomUtil.html":{}}}],["visibility",{"_index":1147,"title":{},"body":{"interfaces/CliptextConfig.html":{},"components/FormSelectComponent.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":38,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnRendererSpec.html":{},"classes/DomUtil.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["visit",{"_index":4871,"title":{},"body":{"index.html":{}}}],["visual",{"_index":4004,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["vm.actions",{"_index":2834,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["vmw/ng",{"_index":4794,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["vmw/plain",{"_index":4796,"title":{},"body":{"dependencies.html":{}}}],["vmware",{"_index":2812,"title":{},"body":{"modules/DropdownModule.html":{},"components/ErrorBannerComponent.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"index.html":{}}}],["vmware/master",{"_index":4620,"title":{},"body":{"contributing.html":{}}}],["vmware/vmware",{"_index":4917,"title":{},"body":{"index.html":{}}}],["void",{"_index":59,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/ActionSearchProvider.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseFormControl.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"classes/DomUtil.html":{},"directives/DropdownFocusHandlerDirective.html":{},"injectables/DropdownFocusHandlerService.html":{},"directives/DynamicDropdownPositionDirective.html":{},"components/ErrorBannerComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"classes/FilterBuilder.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"pipes/FunctionRendererPipe.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/ISubscriptionTracker.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/PartialResult.html":{},"injectables/QuickSearchRegistrarService.html":{},"interfaces/QuickSearchResultItem.html":{},"interfaces/QuickSearchResults.html":{},"injectables/QuickSearchService.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["vs",{"_index":4613,"title":{},"body":{"contributing.html":{}}}],["w",{"_index":469,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BaseWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/LocatorDriver.html":{}}}],["wait",{"_index":1086,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CommonUtil.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/MenuItem.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":138,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"directives/DynamicDropdownPositionDirective.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"interfaces/MenuItem.html":{},"classes/NoUnit.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["warning",{"_index":2971,"title":{},"body":{"components/ErrorBannerComponent.html":{}}}],["watchevents",{"_index":4738,"title":{},"body":{"coverage.html":{}}}],["watchevents(el",{"_index":1178,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["watchevents(this.hostelement",{"_index":1211,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["watchevents(tip.container",{"_index":1105,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["way",{"_index":2702,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"components/ErrorBannerComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["ways",{"_index":157,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"miscellaneous/enumerations.html":{}}}],["we're",{"_index":1238,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["webcomponents/webcomponentsjs",{"_index":4799,"title":{},"body":{"dependencies.html":{}}}],["welcomes",{"_index":4567,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":2628,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wessberg/ts",{"_index":4801,"title":{},"body":{"dependencies.html":{}}}],["whenever",{"_index":779,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/ColumnConfigInternal.html":{},"directives/ComponentRendererOutletDirective.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"components/DatagridNumericFilterComponent.html":{},"components/DatagridSelectFilterComponent.html":{},"components/DatagridStringFilterComponent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["whether",{"_index":83,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/BaseFormControl.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/ColumnRendererSpec.html":{},"injectables/CsvExporterService.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/ExportColumn.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":3416,"title":{},"body":{"components/FormSelectComponent.html":{}}}],["whitespace",{"_index":1220,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{}}}],["whole",{"_index":1989,"title":{},"body":{"injectables/CsvExporterService.html":{},"directives/DynamicDropdownPositionDirective.html":{}}}],["whose",{"_index":3696,"title":{},"body":{"classes/NoUnit.html":{},"classes/NumberUnit.html":{},"classes/Percent.html":{},"classes/PowerTwoUnit.html":{},"classes/ThousandsUnit.html":{},"classes/Unit.html":{}}}],["widget",{"_index":436,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"classes/DatagridFilter.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridNumericFilterComponent.html":{},"interfaces/DatagridNumericFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"components/DatagridStringFilterComponent.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FilterConfig.html":{},"interfaces/FilterRendererSpec.html":{},"components/FilterTestHostComponent.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"components/FormInputComponent.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/VcdDatagridWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["widget.ts",{"_index":4766,"title":{},"body":{"coverage.html":{}}}],["widgetconstructor",{"_index":632,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetconstructor(new",{"_index":651,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetconstructor.tagname",{"_index":647,"title":{},"body":{"classes/AngularWidgetObjectFinder.html":{},"classes/CypressWidgetObjectFinder.html":{}}}],["widgetfinder",{"_index":3166,"title":{"classes/WidgetFinder.html":{}},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["widgetfinder#find",{"_index":3240,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgetfinder#findwidgets",{"_index":3239,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgetobject",{"_index":762,"title":{"classes/WidgetObject.html":{}},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"interfaces/HasFinder.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"coverage.html":{}}}],["widgetobject:114",{"_index":815,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:128",{"_index":803,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:136",{"_index":807,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:140",{"_index":801,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:42",{"_index":775,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:45",{"_index":793,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:54",{"_index":795,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:62",{"_index":798,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:73",{"_index":783,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgetobject:90",{"_index":809,"title":{},"body":{"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/ErrorBannerWidgetObject.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{}}}],["widgets",{"_index":3173,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgets.length",{"_index":3261,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["widgets[0",{"_index":3264,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["width",{"_index":1140,"title":{},"body":{"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"components/FormInputComponent.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{},"interfaces/SortedColumn.html":{},"miscellaneous/variables.html":{}}}],["width(width",{"_index":4299,"title":{},"body":{"classes/ShowClippedTextDirectiveTestHelper.html":{},"components/ShowClippedTextDirectiveTestHostComponent.html":{}}}],["wildcardcharacter",{"_index":2536,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["wildcardposition",{"_index":2535,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{},"miscellaneous/enumerations.html":{}}}],["wildcardposition.end",{"_index":2545,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"components/FilterTestHostComponent.html":{}}}],["wildcardposition.start",{"_index":2544,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["window",{"_index":1162,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DynamicDropdownPositionDirective.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["window.cleartimeout(this.timeoutid",{"_index":2706,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["window.innerheight",{"_index":2927,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["window.requestanimationframe",{"_index":2205,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["window.settimeout",{"_index":1122,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["window:resize",{"_index":2845,"title":{},"body":{"directives/DynamicDropdownPositionDirective.html":{}}}],["wired",{"_index":1385,"title":{},"body":{"interfaces/ColumnConfigInternal.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"interfaces/SortedColumn.html":{}}}],["within",{"_index":81,"title":{},"body":{"interfaces/ActionDisplayConfig.html":{},"interfaces/ActionItem.html":{},"classes/AngularLocatorDriver.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BaseWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"interfaces/CliptextConfig.html":{},"interfaces/ColumnConfigInternal.html":{},"classes/CypressWidgetObjectFinder.html":{},"components/DatagridMultiSelectFilterComponent.html":{},"interfaces/DatagridMultiSelectFilterConfig.html":{},"components/DatagridSelectFilterComponent.html":{},"interfaces/DatagridSelectFilterConfig.html":{},"interfaces/DetailPane.html":{},"interfaces/DetailPaneConfig.html":{},"interfaces/DetailRowConfig.html":{},"injectables/DropdownFocusHandlerService.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FindableWidget-1.html":{},"classes/FormValidators.html":{},"interfaces/GridDataFetchResult.html":{},"interfaces/GridState.html":{},"interfaces/HasFinder.html":{},"components/LoadingIndicatorComponent.html":{},"interfaces/LocatorDriver.html":{},"interfaces/MultiSelectOption.html":{},"interfaces/MultiSelectOptionInternal.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"interfaces/PaginationCallback.html":{},"interfaces/PaginationConfiguration.html":{},"interfaces/PagionationInformation.html":{},"directives/ShowClippedTextDirective.html":{},"interfaces/SortedColumn.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["without",{"_index":360,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"interfaces/ActivityResponse.html":{},"interfaces/ObjectAndResponse.html":{}}}],["wo.ts",{"_index":3197,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor",{"_index":3168,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor(this.fixture",{"_index":3255,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["woconstructor.tagname",{"_index":3249,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["wordbreak",{"_index":1144,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":1766,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{},"interfaces/HasFinder.html":{},"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"contributing.html":{}}}],["worked",{"_index":1770,"title":{},"body":{"interfaces/ColumnRendererSpec.html":{},"interfaces/FunctionRenderer.html":{},"interfaces/GridColumn.html":{}}}],["workflow",{"_index":4582,"title":{},"body":{"contributing.html":{}}}],["working",{"_index":4570,"title":{},"body":{"contributing.html":{}}}],["works",{"_index":4009,"title":{},"body":{"interfaces/PartialResult.html":{},"interfaces/ResultActivatedEvent.html":{},"interfaces/SearchSection.html":{}}}],["wouldn't",{"_index":2701,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wrap",{"_index":2543,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"classes/FilterBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["wrapcharacter",{"_index":2539,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{}}}],["wrapped",{"_index":3192,"title":{},"body":{"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"interfaces/HasFinder.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["wrapper",{"_index":508,"title":{},"body":{"classes/AngularLocatorDriver.html":{},"classes/BaseFormControl.html":{},"interfaces/FindParams.html":{},"interfaces/FindableWidget.html":{},"components/FormCheckboxComponent.html":{},"components/FormSelectComponent.html":{},"classes/FormValidators.html":{},"interfaces/HasFinder.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"classes/TestElement.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{},"miscellaneous/variables.html":{}}}],["wrapping",{"_index":2667,"title":{},"body":{"directives/DropdownFocusHandlerDirective.html":{},"interfaces/MenuItem.html":{}}}],["wraps",{"_index":2538,"title":{},"body":{"components/DatagridStringFilterComponent.html":{},"interfaces/DatagridStringFilterConfig.html":{},"interfaces/QuickSearchProvider.html":{},"classes/QuickSearchProviderDefaults.html":{}}}],["write",{"_index":4646,"title":{},"body":{"contributing.html":{}}}],["writevalue",{"_index":854,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["writevalue(val",{"_index":886,"title":{},"body":{"classes/BaseFormControl.html":{},"components/FormCheckboxComponent.html":{},"components/FormInputComponent.html":{},"components/FormSelectComponent.html":{}}}],["writevalue(value",{"_index":3352,"title":{},"body":{"components/FormInputComponent.html":{},"classes/NoUnit.html":{},"injectables/NumberWithUnitsFormValidatorsFactory.html":{}}}],["writing",{"_index":2130,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["writingmessage",{"_index":2131,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["written",{"_index":4601,"title":{},"body":{"contributing.html":{}}}],["wrote",{"_index":4576,"title":{},"body":{"contributing.html":{}}}],["x",{"_index":1164,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":1166,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":342,"title":{},"body":{"classes/ActivityPromiseResolver.html":{},"classes/ActivityReporter.html":{},"classes/AngularLocatorDriver.html":{},"classes/AngularWidgetObjectFinder.html":{},"components/BannerActivityReporterComponent.html":{},"classes/BannerActivityReporterWidgetObject.html":{},"classes/BoldTextRendererWidgetObject.html":{},"classes/CypressLocatorDriver.html":{},"classes/CypressWidgetObjectFinder.html":{},"interfaces/DataExportRequestEvent.html":{},"classes/DomUtil.html":{},"classes/ErrorBannerWidgetObject.html":{},"interfaces/ExportColumn.html":{},"interfaces/ISubscriptionTracker.html":{},"interfaces/LocatorDriver.html":{},"classes/NumberWithUnitFormInputWidgetObject.html":{},"components/SpinnerActivityReporterComponent.html":{},"classes/SpinnerActivityReporterWidgetObject.html":{},"classes/SubscriptionTracker.html":{},"injectables/UnitFormatter.html":{},"classes/WidgetFinder.html":{},"classes/WidgetObject.html":{}}}],["yestext",{"_index":2108,"title":{},"body":{"interfaces/DataExportRequestEvent.html":{},"interfaces/ExportColumn.html":{}}}],["you'll",{"_index":4632,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["z",{"_index":3624,"title":{},"body":{"components/LoadingIndicatorComponent.html":{}}}],["zero_to_1",{"_index":4117,"title":{},"body":{"classes/Percent.html":{}}}],["zero_to_100",{"_index":4116,"title":{},"body":{"classes/Percent.html":{}}}],["zindex",{"_index":1100,"title":{},"body":{"interfaces/CliptextConfig.html":{},"directives/ShowClippedTextDirective.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":4830,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2807,"title":{},"body":{"modules/DropdownModule.html":{},"modules/PipesModule.html":{},"modules/QuickSearchModule.html":{},"modules/ShowClippedTextDirectiveModule.html":{},"modules/VcdActionMenuModule.html":{},"modules/VcdActivityReporterModule.html":{},"modules/VcdComponentsModule.html":{},"modules/VcdDataExporterModule.html":{},"modules/VcdDatagridModule.html":{},"modules/VcdErrorBannerModule.html":{},"modules/VcdFormModule.html":{},"modules/VcdFormlyModule.html":{},"modules/VcdLoadingIndicatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionDisplayConfig.html":{"url":"interfaces/ActionDisplayConfig.html","title":"interface - ActionDisplayConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionDisplayConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/action-item.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration of actions that are not static/featured\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        contextual\n                                \n                                \n                                            Optional\n                                        staticActionStyling\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contextual\n                                    \n                                \n                                \n                                    \n                                        contextual:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How the contextual actions list shows up on the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticActionStyling\n                                    \n                                \n                                \n                                    \n                                        staticActionStyling:         ActionStyling\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionStyling\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How the static actions list shows up on the screen\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export enum ActionType {\n    /**\n     * Global actions that are displayed always irrespective of the context. These display as the first set of actions\n     */\n    STATIC_FEATURED = 'STATIC_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in the main menu section\n     */\n    CONTEXTUAL_FEATURED = 'CONTEXTUAL_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in a sub menu\n     */\n    CONTEXTUAL = 'CONTEXTUAL',\n    /**\n     * Actions that are not context dependent. These display after the above 3 buckets of actions\n     */\n    STATIC = 'STATIC',\n}\n\n/**\n * Type of {@link ActionItem.handler} function\n */\nexport type ActionHandlerType = (selectedEntities?: R[], handlerData?: T) => Promise | void;\n\n/**\n * Data required for displaying an action item in a menu.\n * T is the type of custom data passed to action handler\n * R is the type of selected entity on which the action will be performed\n */\nexport interface ActionItem {\n    /**\n     * The i18n key or a translated string for contents of a action button\n     */\n    textKey?: string;\n    /**\n     * The css class the button should have.\n     *\n     * Must be unique among all added actions within an action list\n     */\n    class?: string;\n    /**\n     * Condition whether or not the action is available.\n     * @param records Single item in case of an operation on single record and multiple in case of an operation on batch\n     * selection\n     */\n    availability?: (records?: R[], additionalData?: any) => boolean;\n    /**\n     * Indicates if an action that is available should be disabled. If true, a non available action is disabled.\n     * If false, a non-available action is hidden\n     */\n    disabled?: ((records?: R[]) => boolean) | boolean;\n    /**\n     * The key that will be fired with the action.\n     */\n    action?: string;\n    /**\n     * The function to be executed when the button is clicked.\n     *\n     * Actions that require additional user input can collect it using handlerData which will be passed as an argument\n     * to the handler call\n     */\n    handler?: ActionHandlerType;\n    /**\n     * Custom data that will be passed when handler is called\n     */\n    handlerData?: any;\n    /**\n     * Used for determining where in the action menu this action gets displayed\n     */\n    actionType?: ActionType;\n    /**\n     * The Clarity icon of the contextual button that is displayed if the button is featured.\n     */\n    icon?: string;\n    /**\n     * List of actions that will be grouped under this action\n     */\n    children?: ActionItem[];\n    /**\n     * To mark if the {@link #ActionItem.textKey} has to be translated or not\n     */\n    isTranslatable?: boolean;\n    /**\n     * To add separators between groups of actions\n     */\n    isSeparator?: boolean;\n    /**\n     * Busy state for the menu item. Used by extension actions of plugins\n     */\n    busy?: boolean;\n}\n\n/**\n * Configuration of actions that are not static/featured\n */\nexport interface ActionDisplayConfig {\n    /**\n     * How the contextual actions list shows up on the screen\n     */\n    contextual?: {\n        /**\n         * How many buttons should display on the featured section.\n         *\n         * Used when you want to set a limit on the number of featured buttons shown.\n         *\n         * If featuredCount is not set, it will default to all featured actions.\n         */\n        featuredCount: number;\n        /**\n         * How the featured actions should be displayed\n         */\n        styling: ActionStyling;\n        /**\n         * If the title should be the button label, icon, or both\n         * Defaults to ICON if unset.\n         */\n        buttonContents: TextIcon;\n    };\n\n    /**\n     * How the static actions list shows up on the screen\n     */\n    staticActionStyling?: ActionStyling;\n}\n\n/**\n * Display options for action menu\n */\nexport enum ActionStyling {\n    INLINE = 'INLINE',\n    DROPDOWN = 'DROPDOWN',\n}\n\n/**\n * An enum that describes the possible ways to display the button title.\n */\nexport enum TextIcon {\n    ICON = 1 \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionItem.html":{"url":"interfaces/ActionItem.html","title":"interface - ActionItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/action-item.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data required for displaying an action item in a menu.\nT is the type of custom data passed to action handler\nR is the type of selected entity on which the action will be performed\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        actionType\n                                \n                                \n                                            Optional\n                                        availability\n                                \n                                \n                                            Optional\n                                        busy\n                                \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        class\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        handler\n                                \n                                \n                                            Optional\n                                        handlerData\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        isSeparator\n                                \n                                \n                                            Optional\n                                        isTranslatable\n                                \n                                \n                                            Optional\n                                        textKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that will be fired with the action.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionType\n                                    \n                                \n                                \n                                    \n                                        actionType:         ActionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for determining where in the action menu this action gets displayed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availability\n                                    \n                                \n                                \n                                    \n                                        availability:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Condition whether or not the action is available.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        busy\n                                    \n                                \n                                \n                                    \n                                        busy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Busy state for the menu item. Used by extension actions of plugins\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ActionItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of actions that will be grouped under this action\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The css class the button should have.\nMust be unique among all added actions within an action list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:      | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indicates if an action that is available should be disabled. If true, a non available action is disabled.\nIf false, a non-available action is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         ActionHandlerType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionHandlerType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The function to be executed when the button is clicked.\nActions that require additional user input can collect it using handlerData which will be passed as an argument\nto the handler call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handlerData\n                                    \n                                \n                                \n                                    \n                                        handlerData:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom data that will be passed when handler is called\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Clarity icon of the contextual button that is displayed if the button is featured.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSeparator\n                                    \n                                \n                                \n                                    \n                                        isSeparator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    To add separators between groups of actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTranslatable\n                                    \n                                \n                                \n                                    \n                                        isTranslatable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    To mark if the #ActionItem.textKey has to be translated or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textKey\n                                    \n                                \n                                \n                                    \n                                        textKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The i18n key or a translated string for contents of a action button\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export enum ActionType {\n    /**\n     * Global actions that are displayed always irrespective of the context. These display as the first set of actions\n     */\n    STATIC_FEATURED = 'STATIC_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in the main menu section\n     */\n    CONTEXTUAL_FEATURED = 'CONTEXTUAL_FEATURED',\n    /**\n     * Actions that are visible when an entity is selected. These display in a sub menu\n     */\n    CONTEXTUAL = 'CONTEXTUAL',\n    /**\n     * Actions that are not context dependent. These display after the above 3 buckets of actions\n     */\n    STATIC = 'STATIC',\n}\n\n/**\n * Type of {@link ActionItem.handler} function\n */\nexport type ActionHandlerType = (selectedEntities?: R[], handlerData?: T) => Promise | void;\n\n/**\n * Data required for displaying an action item in a menu.\n * T is the type of custom data passed to action handler\n * R is the type of selected entity on which the action will be performed\n */\nexport interface ActionItem {\n    /**\n     * The i18n key or a translated string for contents of a action button\n     */\n    textKey?: string;\n    /**\n     * The css class the button should have.\n     *\n     * Must be unique among all added actions within an action list\n     */\n    class?: string;\n    /**\n     * Condition whether or not the action is available.\n     * @param records Single item in case of an operation on single record and multiple in case of an operation on batch\n     * selection\n     */\n    availability?: (records?: R[], additionalData?: any) => boolean;\n    /**\n     * Indicates if an action that is available should be disabled. If true, a non available action is disabled.\n     * If false, a non-available action is hidden\n     */\n    disabled?: ((records?: R[]) => boolean) | boolean;\n    /**\n     * The key that will be fired with the action.\n     */\n    action?: string;\n    /**\n     * The function to be executed when the button is clicked.\n     *\n     * Actions that require additional user input can collect it using handlerData which will be passed as an argument\n     * to the handler call\n     */\n    handler?: ActionHandlerType;\n    /**\n     * Custom data that will be passed when handler is called\n     */\n    handlerData?: any;\n    /**\n     * Used for determining where in the action menu this action gets displayed\n     */\n    actionType?: ActionType;\n    /**\n     * The Clarity icon of the contextual button that is displayed if the button is featured.\n     */\n    icon?: string;\n    /**\n     * List of actions that will be grouped under this action\n     */\n    children?: ActionItem[];\n    /**\n     * To mark if the {@link #ActionItem.textKey} has to be translated or not\n     */\n    isTranslatable?: boolean;\n    /**\n     * To add separators between groups of actions\n     */\n    isSeparator?: boolean;\n    /**\n     * Busy state for the menu item. Used by extension actions of plugins\n     */\n    busy?: boolean;\n}\n\n/**\n * Configuration of actions that are not static/featured\n */\nexport interface ActionDisplayConfig {\n    /**\n     * How the contextual actions list shows up on the screen\n     */\n    contextual?: {\n        /**\n         * How many buttons should display on the featured section.\n         *\n         * Used when you want to set a limit on the number of featured buttons shown.\n         *\n         * If featuredCount is not set, it will default to all featured actions.\n         */\n        featuredCount: number;\n        /**\n         * How the featured actions should be displayed\n         */\n        styling: ActionStyling;\n        /**\n         * If the title should be the button label, icon, or both\n         * Defaults to ICON if unset.\n         */\n        buttonContents: TextIcon;\n    };\n\n    /**\n     * How the static actions list shows up on the screen\n     */\n    staticActionStyling?: ActionStyling;\n}\n\n/**\n * Display options for action menu\n */\nexport enum ActionStyling {\n    INLINE = 'INLINE',\n    DROPDOWN = 'DROPDOWN',\n}\n\n/**\n * An enum that describes the possible ways to display the button title.\n */\nexport enum TextIcon {\n    ICON = 1 \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionSearchProvider.html":{"url":"classes/ActionSearchProvider.html","title":"class - ActionSearchProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionSearchProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/action-search-provider/action-search.provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuickSearchProviderDefaults\n            \n\n            \n                Implements\n            \n            \n                            QuickSearchProvider\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _actions\n                            \n                            \n                                    Private\n                                _selectedEntities\n                            \n                            \n                                    Private\n                                flatListOfAvailableActions\n                            \n                            \n                                    Private\n                                isReadyToSearchPromise\n                            \n                            \n                                    Private\n                                resolveIsReadyToSearch\n                            \n                            \n                                    Private\n                                shouldWait\n                            \n                            \n                                data\n                            \n                            \n                                order\n                            \n                            \n                                sectionName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActions\n                            \n                            \n                                    Private\n                                getFlatListOfAvailableActions\n                            \n                            \n                                    Private\n                                isActionAvailable\n                            \n                            \n                                    Private\n                                isActionDisabled\n                            \n                            \n                                pause\n                            \n                            \n                                    Private\n                                readyToSearchPromiseFactory\n                            \n                            \n                                    Async\n                                search\n                            \n                            \n                                unPause\n                            \n                            \n                                    Abstract\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actions\n                                \n                                \n                                    selectedEntities\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ts: TranslationService, shouldDebounceInput)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/action-search-provider/action-search.provider.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shouldDebounceInput\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:37\n                            \n                        \n\n                \n                    \n                        Initialized by the calling component and is used for searching of the search criteria entered in QuickSearchComponent\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedEntities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     R[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:42\n                            \n                        \n\n                \n                    \n                        Used in isActionDisabled to calculate disabled state of actions  and also in action handler\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            flatListOfAvailableActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isReadyToSearchPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                    \n                        \n                            Default value : this.readyToSearchPromiseFactory()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resolveIsReadyToSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shouldWait\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:42\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     -1\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         QuickSearchProviderDefaults\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuickSearchProviderDefaults:40\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActions(searchCriteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchCriteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFlatListOfAvailableActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFlatListOfAvailableActions(actions: ActionItem[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actions\n                                    \n                                                ActionItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isActionAvailable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActionAvailable(action: ActionItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isActionDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActionDisabled(action: ActionItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                ActionItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:52\n                \n            \n\n\n            \n                \n                    Pause searching for actions. For example, Call this method when searching for actions has to be paused until\nsome data has to be fetched asynchronously\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            readyToSearchPromiseFactory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readyToSearchPromiseFactory()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:76\n                \n            \n\n\n            \n                \n                    Searches through nested actions and finds all the actions that match with entered search text on the\nQuickSearchComponent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unPause\n                        \n                        \n                    \n                \n            \n            \n                \nunPause()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:60\n                \n            \n\n\n            \n                \n                    Resume searching for actions. To unpause searching for actions functionality that might have been paused earlier\nusing pause method above\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Inherited from         QuickSearchProviderDefaults\n\n                \n            \n            \n                \n                        Defined in         QuickSearchProviderDefaults:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actions\n                    \n                \n\n\n                \n                    \n                        setactions(actions: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            actions\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedEntities\n                    \n                \n\n\n                \n                    \n                        setselectedEntities(entities: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/action-search-provider/action-search.provider.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            entities\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { TranslationService } from '@vcd/i18n';\nimport { ActionItem } from '../common/interfaces';\nimport {\n    QuickSearchProvider,\n    QuickSearchProviderDefaults,\n    QuickSearchResultItem,\n    QuickSearchResults,\n} from '../quick-search';\nimport { CommonUtil } from '../utils';\n\nexport const DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX = 'vcd.cc.action.provider.section.title';\n\nexport class ActionSearchProvider extends QuickSearchProviderDefaults implements QuickSearchProvider {\n    set actions(actions: ActionItem[]) {\n        this._actions = actions;\n        this.flatListOfAvailableActions = null;\n    }\n    set selectedEntities(entities: R[]) {\n        this._selectedEntities = entities;\n        this.flatListOfAvailableActions = null;\n    }\n\n    constructor(private ts: TranslationService, shouldDebounceInput = false) {\n        super(shouldDebounceInput);\n    }\n\n    private flatListOfAvailableActions: ActionItem[];\n\n    /**\n     * Initialized by the calling component and is used for searching of the search criteria entered in {@link QuickSearchComponent}\n     */\n    private _actions: ActionItem[] = [];\n\n    /**\n     * Used in {@link isActionDisabled} to calculate disabled state of actions  and also in action handler\n     */\n    private _selectedEntities: R[] = [];\n\n    private resolveIsReadyToSearch: (value?: null) => void;\n    private isReadyToSearchPromise: Promise = this.readyToSearchPromiseFactory();\n    private shouldWait = false;\n\n    /**\n     * Pause searching for actions. For example, Call this method when searching for actions has to be paused until\n     * some data has to be fetched asynchronously\n     */\n    pause(): void {\n        this.shouldWait = true;\n    }\n\n    /**\n     * Resume searching for actions. To unpause searching for actions functionality that might have been paused earlier\n     * using pause method above\n     */\n    unPause(): void {\n        this.shouldWait = false;\n        this.resolveIsReadyToSearch();\n        this.isReadyToSearchPromise = this.readyToSearchPromiseFactory();\n    }\n\n    private readyToSearchPromiseFactory(): Promise {\n        return new Promise((resolve, reject) => {\n            this.resolveIsReadyToSearch = resolve;\n        });\n    }\n\n    /**\n     * Searches through nested actions and finds all the actions that match with entered search text on the\n     * {@link QuickSearchComponent}\n     */\n    async search(criteria: string): Promise {\n        if (this.shouldWait) {\n            await this.isReadyToSearchPromise;\n        }\n\n        if (!criteria) {\n            return { items: [] };\n        }\n\n        if (this.flatListOfAvailableActions == null) {\n            this.flatListOfAvailableActions = this.getFlatListOfAvailableActions(this._actions);\n        }\n        return { items: this.getActions(criteria.toLowerCase()) };\n    }\n\n    private getActions(searchCriteria: string): QuickSearchResultItem[] {\n        return this.flatListOfAvailableActions\n            .filter((action) => action.textKey?.toLowerCase().includes(searchCriteria))\n            .map((action) => ({\n                displayText: action.textKey,\n                handler: () => action.handler(this._selectedEntities, action.handlerData),\n            }));\n    }\n\n    private getFlatListOfAvailableActions(actions: ActionItem[]): ActionItem[] {\n        return actions.reduce((flatActionList, currentAction) => {\n            if (currentAction?.children?.length) {\n                flatActionList = flatActionList.concat(this.getFlatListOfAvailableActions(currentAction.children));\n            } else if (this.isActionAvailable(currentAction)) {\n                const textKey =\n                    currentAction.isTranslatable === false\n                        ? currentAction.textKey\n                        : this.ts.translate(currentAction.textKey);\n                flatActionList.push({ ...currentAction, textKey });\n            }\n            return flatActionList;\n        }, []);\n    }\n\n    private isActionAvailable(action: ActionItem): boolean {\n        return (\n            !action.isSeparator &&\n            (!action.availability || action.availability(this._selectedEntities)) &&\n            !this.isActionDisabled(action)\n        );\n    }\n\n    private isActionDisabled(action: ActionItem): boolean {\n        return CommonUtil.isFunction(action.disabled) ? action.disabled(this._selectedEntities) : action.disabled;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityPromiseResolver.html":{"url":"classes/ActivityPromiseResolver.html","title":"class - ActivityPromiseResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityPromiseResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                A class that understands how to take a promise and turn it into some response message for display.\nA client of this library will override ActivityPromiseResolver to process their specific type of promise.\nThis override will know how to generate a ObjectAndResponse from the type of promise it processes.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolveActivities\n                            \n                            \n                                resolveActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveActivities\n                        \n                        \n                    \n                \n            \n            \n                \nresolveActivities(activityResolutionPromises: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-promise-resolver.ts:71\n                \n            \n\n\n            \n                \n                    Takes a Promise of many items and turns it to some activity status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The success message this method should return if the activity succeeds. If undefined is passed,\na succeeded promise will return an empty response parameter which is assumed to mean success.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveActivity\n                        \n                        \n                    \n                \n            \n            \n                \nresolveActivity(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-promise-resolver.ts:51\n                \n            \n\n\n            \n                \n                    Takes a Promise and turns it to some activity status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The activity that this resolver will generate a response from. It generates\neither a sucesss or a failure condition.\n\n                                    \n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The success message this method should return if the activity succeeds. If undefined is passed,\na succeeded promise will return an empty response parameter which is assumed to mean success.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then((result) => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch((error) => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise[]> {\n        return activityResolutionPromises\n            .then((result) => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch((error) => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityReporter.html":{"url":"classes/ActivityReporter.html","title":"class - ActivityReporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityReporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-reporter.ts\n        \n\n            \n                Description\n            \n            \n                Expresses the contract between a activity status and the UI displaying a loading message, reporting\nsuccess or errors\nCurrently, only one concurrent activity is supported.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:13\n                            \n                        \n\n                \n                    \n                            Creates this reporter with the performer that it will use to monitor events.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:73\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:53\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:27\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:33\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/activity-reporter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ActivityPromiseResolver } from './activity-promise-resolver';\n\n/**\n * Expresses the contract between a activity status and the UI displaying a loading message, reporting\n * success or errors\n * Currently, only one concurrent activity is supported.\n */\nexport abstract class ActivityReporter {\n    /**\n     * Creates this reporter with the performer that it will use to monitor events.\n     */\n    constructor(private promiseResolver: ActivityPromiseResolver) {}\n    /*\n     * Override this method to provide custom error activity starting behavior.\n     */\n    abstract startActivity(): void;\n    /**\n     * Override this method to provide custom error reporting behavior.\n     *\n     *  @param errorText The text to display in the error alert.\n     */\n    abstract reportError(errorText: string): void;\n    /**\n     * Override this method to provide custom success reporting behavior.\n     *\n     * @param successMessage A message to display to the user.\n     */\n    abstract reportSuccess(successMessage: string): void;\n\n    /**\n     * Monitors a promise that returns an entity using {@link ActivityPromiseResolver.monitorActivity}.\n     */\n    async monitorGet(activityResolutionPromise: Promise): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivity(activityResolutionPromise);\n        if (response.response.error) {\n            this.reportError(response.response.error);\n        } else {\n            this.reportSuccess(response.response.success);\n        }\n        return response.object;\n    }\n\n    /**\n     * Monitors a promise that returns many entities using {@link ActivityPromiseResolver.monitorActivities}.\n     */\n    async monitorGetAll(activityResolutionPromises: Promise): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivities(activityResolutionPromises);\n        const returnValue = response.map((item) => item.object);\n        if (response.length) {\n            for (const item of response) {\n                if (item.response.error) {\n                    this.reportError(item.response.error);\n                    return returnValue;\n                }\n            }\n            this.reportSuccess(response[0].response.success);\n        }\n        return returnValue;\n    }\n\n    /**\n     * Monitors a promise that returns an entity and posts a successMessage using {@link ActivityPromiseResolver.monitorActivity}.\n     */\n    async monitorEdit(activityResolutionPromise: Promise, successMessage?: string): Promise {\n        this.startActivity();\n        const performer = this.promiseResolver as ActivityPromiseResolver;\n        const response = await performer.resolveActivity(activityResolutionPromise, successMessage);\n        if (response.response.error) {\n            this.reportError(response.response.error);\n        } else {\n            this.reportSuccess(response.response.success);\n        }\n        return response.object;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActivityResponse.html":{"url":"interfaces/ActivityResponse.html","title":"interface - ActivityResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActivityResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                The response that was given with some resource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The error message, if any, from the activity.\nA response without an error is assumed to have succeeded.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The response message, if any, from the activity.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then((result) => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch((error) => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise[]> {\n        return activityResolutionPromises\n            .then((result) => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch((error) => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularLocatorDriver.html":{"url":"classes/AngularLocatorDriver.html","title":"class - AngularLocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularLocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Angular TestElements in the DOM.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LocatorDriver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                findParent\n                            \n                            \n                                findWidget\n                            \n                            \n                                get\n                            \n                            \n                                getByText\n                            \n                            \n                                parents\n                            \n                            \n                                unwrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(testElement: TestElement, rootElement: DebugElement)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        testElement\n                                                  \n                                                        \n                                                                        TestElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rootElement\n                                                  \n                                                        \n                                                                        DebugElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findParent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParent(cssSelector: string, debugElement: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:57\n                \n            \n\n\n            \n                \n                    Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\nChecks the given element.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    debugElement\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, TestElement>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AngularLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TestElement\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Injector, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularWidgetObjectFinder } from './angular-widget-finder';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes, LocatorDriver } from './widget-object';\n\n/**\n * Knows how to find Angular TestElements in the DOM.\n */\nexport class AngularLocatorDriver implements LocatorDriver {\n    constructor(private testElement: TestElement, private rootElement: DebugElement) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        const nextElements = [].concat(...elements.map((element) => element.queryAll(By.css(cssSelector))));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        let nextElements: DebugElement[] = [].concat(\n            ...elements.map((element) => element.queryAll(By.css(cssSelector)))\n        );\n        nextElements = nextElements.filter((el) => el.nativeElement.textContent.includes(value));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string): AngularLocatorDriver {\n        return new AngularLocatorDriver(\n            new TestElement(\n                this.testElement.elements.map((el) => this.findParent(cssSelector, el.parent)),\n                this.testElement.fixture\n            ),\n            this.rootElement\n        );\n    }\n\n    /**\n     * Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\n     * Checks the given element.\n     */\n    private findParent(cssSelector: string, debugElement: DebugElement): DebugElement {\n        if (!debugElement) {\n            return undefined;\n        } else if (debugElement.nativeElement.matches(cssSelector)) {\n            return debugElement;\n        } else {\n            return this.findParent(cssSelector, debugElement.parent);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): TestElement {\n        return this.testElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        return new AngularWidgetObjectFinder(this.testElement.fixture).find(widget, this.rootElement, cssSelector);\n    }\n}\n\n/**\n * A wrapper around an array of DebugElements that adds convenience methods.\n * Avoid accessing the debug elements at all costs.\n *\n * Can be used in a `for ... of ...` loop to inspect all the sub elements within this TestElement.\n *\n * @example\n * for (const el of testElement) {\n *     expect(el.enabled()).toBeTruthy()\n * }\n */\nexport class TestElement implements Iterable {\n    constructor(public elements: DebugElement[], public fixture: ComponentFixture) {}\n\n    /**\n     * Gives the text of the first element.\n     */\n    text(): string {\n        return this.elements[0].nativeElement.textContent.trim();\n    }\n\n    /**\n     * Gives the value of the first element.\n     */\n    value(): string {\n        return this.elements[0].nativeElement.value;\n    }\n\n    /**\n     * Says if this element is enabled.\n     */\n    enabled(): boolean {\n        return !this.elements[0].nativeElement.disabled;\n    }\n\n    /**\n     * Clicks all of the elements contained.\n     */\n    click(): void {\n        this.elements.map((element) => element.nativeElement.click());\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Blurs all the contained elements.\n     */\n    blur(): void {\n        this.elements.map((el) => el.nativeElement.dispatchEvent(new Event('blur')));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Clears the input on all the contained elements.\n     */\n    clear(): void {\n        this.elements.map((el) => (el.nativeElement.value = ''));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Says how many elements are contained in this TestElement.\n     */\n    length(): number {\n        return this.elements.length;\n    }\n\n    /**\n     * Runs change detection with the component fixture.\n     */\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Gives the elements contained within this TestElement where each element is its own TestElement\n     */\n    toArray(): TestElement[] {\n        return this.elements.map((el) => new TestElement([el], this.fixture));\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on this element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     */\n    sendKeyboardEvent(eventType: string, eventProperties: { [name: string]: unknown }): void {\n        const element = this.elements[0].nativeElement as HTMLElement;\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        element.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Returns classes of first element as a string array\n     */\n    classes(): string[] {\n        return Object.keys(this.elements[0].classes);\n    }\n\n    /**\n     * Returns style property value of the first element\n     * @param key specified CSS property\n     */\n    getStylePropertyValue(key: string): string {\n        return this.elements[0].nativeElement.style.getPropertyValue(key);\n    }\n\n    /**\n     * Returns componentInstance of the first element\n     */\n    getComponentInstance(): any {\n        return this.elements[0].componentInstance;\n    }\n\n    /**\n     * Returns injector of the first element\n     */\n    getInjector(): Injector {\n        return this.elements[0].injector;\n    }\n\n    /**\n     * Finds the first parent element that matches the CSS selector\n     */\n    private findParents(debugEl: DebugElement, cssSelector: string): DebugElement {\n        if (!debugEl) {\n            return null;\n        }\n        return debugEl.nativeElement.matches(cssSelector) ? debugEl : this.findParents(debugEl.parent, cssSelector);\n    }\n\n    /**\n     * Returns the first parent element that matches css selector\n     */\n    parents(cssSelector: string): TestElement {\n        const result = this.findParents(this.elements[0].parent, cssSelector);\n        return new TestElement(result ? [result] : [], this.fixture);\n    }\n\n    /**\n     * Returns componentInstance after query directive\n     */\n    queryDirective(type: Type): any {\n        return this.elements[0].query(By.directive(type)).componentInstance;\n    }\n\n    /**\n     * Returns children of the first element that matches css selector\n     */\n    queryElements(cssSelector: string): TestElement {\n        const result = this.elements[0].queryAll(By.css(cssSelector));\n        return new TestElement(result ? result : [], this.fixture);\n    }\n\n    /**\n     * Allows a TestElement to be used in a `for ... of ...` loop.\n     */\n    [Symbol.iterator](): Iterator {\n        let counter = 0;\n        return {\n            next: () => {\n                counter += 1;\n                return {\n                    done: counter === this.elements.length,\n                    value: new TestElement([this.elements[counter]], this.fixture),\n                };\n            },\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularWidgetObjectFinder.html":{"url":"classes/AngularWidgetObjectFinder.html","title":"class - AngularWidgetObjectFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularWidgetObjectFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-finder.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Angular objects in the DOM.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fixture\n                            \n                            \n                                    Public\n                                hostComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detectChanges\n                            \n                            \n                                    Public\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(arg: Type | ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        arg\n                                                  \n                                                        \n                                                                    Type | ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:21\n                            \n                        \n\n                \n                    \n                        We don't care or could possibly know the type of fixture\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     H\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:26\n                            \n                        \n\n                \n                    \n                        If you need direct access to manipulate the host\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:72\n                \n            \n\n\n            \n                \n                    Runs a change detection cycle.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(widgetConstructor: C, ancestor?: DebugElement, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-finder.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    widgetConstructor\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe constructor of the widget to use\n\n\n                                    \n                                \n                                \n                                    ancestor\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe parent DebugElement to begin the search from\n\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe cssSelector to append to the tagName for the search\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, TestElement>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularLocatorDriver, TestElement } from './angular-widget-object';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes } from './widget-object';\n\n/**\n * Knows how to find Angular objects in the DOM.\n */\n\nexport class AngularWidgetObjectFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(arg: Type | ComponentFixture) {\n        this.fixture = (arg as ComponentFixture).componentRef\n            ? (arg as ComponentFixture)\n            : TestBed.createComponent(arg as Type);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds a single widget object\n     *\n     * @param widgetConstructor - The constructor of the widget to use\n     * @param ancestor - The parent DebugElement to begin the search from\n     * @param cssSelector - The cssSelector to append to the tagName for the search\n     *\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find, C extends FindableWidget>(\n        widgetConstructor: C,\n        ancestor?: DebugElement,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        let query = widgetConstructor.tagName;\n        if (cssSelector) {\n            query += `${cssSelector}`;\n        }\n        if (ancestor) {\n            query = query;\n        }\n\n        const root = (ancestor ? ancestor : this.fixture.debugElement).query(By.css(query));\n        if (!root) {\n            throw new Error(`Could not find the widget using the query ${query}`);\n        }\n\n        const widget = new widgetConstructor(new AngularLocatorDriver(new TestElement([root], this.fixture), root));\n        return (widget as any) as CorrectReturnTypes, TestElement>;\n    }\n\n    /**\n     * Runs a change detection cycle.\n     */\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BannerActivityReporterComponent.html":{"url":"components/BannerActivityReporterComponent.html","title":"component - BannerActivityReporterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BannerActivityReporterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts\n\n\n    \n        Description\n    \n    \n        Shows a banner to the user to represent the state of an activity.\n\n    \n\n    \n        Extends\n    \n    \n                ActivityReporter\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-banner-activity-reporter\n            \n\n\n\n\n            \n                templateUrl\n                ./banner-activity-reporter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorText\n                            \n                            \n                                running\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onErrorClosed\n                            \n                            \n                                onSuccessClosed\n                            \n                            \n                                reportError\n                            \n                            \n                                reportSuccess\n                            \n                            \n                                reset\n                            \n                            \n                                startActivity\n                            \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadingMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslationService, promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadingMessage\n                    \n                \n                \n                    \n                        Type :         LazyString\n\n                    \n                \n                \n                    \n                        Default value : this.translationService.translateAsync('vcd.cc.loading')\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:28\n                            \n                        \n                \n                    \n                        The translated message that is displayed to the user while loading.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onErrorClosed\n                        \n                        \n                    \n                \n            \n            \n                \nonErrorClosed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:67\n                \n            \n\n\n            \n                \n                    Closes the error message if displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSuccessClosed\n                        \n                        \n                    \n                \n            \n            \n                \nonSuccessClosed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:74\n                \n            \n\n\n            \n                \n                    Closes the success message if displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \nreportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:49\n                \n            \n\n\n            \n                \n                    Shows the given {@param errorText} to the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nreportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:57\n                \n            \n\n\n            \n                \n                    Shows the given {@param successMessage} to the user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \nstartActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:40\n                \n            \n\n\n            \n                \n                    Begins to show the banner with a loading indicator.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:73\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:53\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:27\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:33\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            successMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { LazyString } from '@vcd/i18n';\nimport { ActivityPromiseResolver } from './activity-promise-resolver';\nimport { ActivityReporter } from './activity-reporter';\n\n/**\n * Shows a banner to the user to represent the state of an activity.\n */\n@Component({\n    selector: 'vcd-banner-activity-reporter',\n    templateUrl: './banner-activity-reporter.component.html',\n})\nexport class BannerActivityReporterComponent extends ActivityReporter {\n    running = false;\n    errorText: string;\n    successMessage: string;\n\n    /**\n     * The translated message that is displayed to the user while loading.\n     */\n    @Input()\n    loadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.loading');\n\n    constructor(\n        private translationService: TranslationService,\n        @Inject(ActivityPromiseResolver) promiseResolver: ActivityPromiseResolver\n    ) {\n        super(promiseResolver);\n    }\n\n    /**\n     * Begins to show the banner with a loading indicator.\n     */\n    startActivity(): void {\n        this.running = true;\n        this.successMessage = null;\n        this.errorText = null;\n    }\n\n    /**\n     * Shows the given {@param errorText} to the user.\n     */\n    reportError(errorText: string): void {\n        this.errorText = errorText;\n        this.running = false;\n    }\n\n    /**\n     * Shows the given {@param successMessage} to the user.\n     */\n    reportSuccess(successMessage: string): void {\n        if (successMessage) {\n            this.successMessage = successMessage;\n        }\n        this.running = false;\n    }\n\n    /**\n     * Closes the error message if displayed.\n     */\n    onErrorClosed(): void {\n        this.errorText = null;\n    }\n\n    /**\n     * Closes the success message if displayed.\n     */\n    onSuccessClosed(): void {\n        this.successMessage = null;\n    }\n\n    /*\n     * Reset the banner activity state manually.\n     *\n     * Call it when banner should be reset to its default state.\n     */\n    reset(): void {\n        this.running = false;\n        this.errorText = null;\n        this.successMessage = null;\n    }\n}\n\n    \n\n    \n        \n    {{ loadingMessage | lazyString }}\n\n\n\n    \n        \n            {{ errorText }}\n        \n    \n\n\n\n    \n        \n            {{ successMessage }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ loadingMessage | lazyString }}                        {{ errorText }}                                    {{ successMessage }}            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'BannerActivityReporterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BannerActivityReporterWidgetObject.html":{"url":"classes/BannerActivityReporterWidgetObject.html","title":"class - BannerActivityReporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BannerActivityReporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    running\n                                \n                                \n                                    errorText\n                                \n                                \n                                    sucessText\n                                \n                                \n                                    loadingText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-banner-activity-reporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        running\n                    \n                \n\n                \n                    \n                        getrunning()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorText\n                    \n                \n\n                \n                    \n                        geterrorText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sucessText\n                    \n                \n\n                \n                    \n                        getsucessText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loadingText\n                    \n                \n\n                \n                    \n                        getloadingText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BannerActivityReporterComponent } from '../../../common/activity-reporter';\nimport { WidgetObject } from '../widget-object';\n\nexport class BannerActivityReporterWidgetObject extends WidgetObject {\n    static tagName = 'vcd-banner-activity-reporter';\n\n    get running(): boolean {\n        return this.component.running;\n    }\n\n    get errorText(): string {\n        return this.component.errorText;\n    }\n\n    get sucessText(): string {\n        return this.component.successMessage;\n    }\n\n    get loadingText(): string {\n        return this.findElement('clr-alert').nativeElement.textContent;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFormControl.html":{"url":"classes/BaseFormControl.html","title":"class - BaseFormControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFormControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/base-form-control.ts\n        \n\n            \n                Description\n            \n            \n                Wrapper to enforce UX decisions like readonly-ness, label position and error displaying. And also to make\nthe form control backing a form control name directive available to sub classes.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ControlValueAccessor\n                            CanBeReadOnly\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formControl\n                                \n                                \n                                    showErrors\n                                \n                                \n                                    errorKeys\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/base-form-control.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:36\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:67\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:21\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:72\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:26\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:31\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/base-form-control.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:52\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:62\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:57\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:46\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/base-form-control.ts:41\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:85\n                                \n                            \n                    \n                        \n                                The FormControl associated with the FormControlName directive\n\n\n                                \n                                    Returns :         FormControl\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showErrors\n                    \n                \n\n                \n                    \n                        getshowErrors()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorKeys\n                    \n                \n\n                \n                    \n                        geterrorKeys()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/base-form-control.ts:98\n                                \n                            \n                    \n                        \n                                Errors from the form control validation\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Input, Type } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\nimport { IdGenerator } from '../utils/id-generator/id-generator';\nimport { CanBeReadOnly } from './interfaces/can-be-read-only.interface';\n\nconst idGenerator = new IdGenerator('base-form-control-id');\n\n/**\n * Wrapper to enforce UX decisions like readonly-ness, label position and error displaying. And also to make\n * the form control backing a form control name directive available to sub classes.\n */\nexport class BaseFormControl implements ControlValueAccessor, CanBeReadOnly {\n    /**\n     * Auto generated ID for the input field.\n     */\n    id: string;\n\n    /**\n     * Change callback.\n     */\n    onChange: (...args: unknown[]) => unknown;\n\n    /**\n     * Touch callback.\n     */\n    onTouch: (...args: unknown[]) => unknown;\n\n    /**\n     * Whether the control is disabled.\n     */\n    disabled = false;\n\n    /**\n     * Show the asterisk next to the control when true\n     */\n    @Input() showAsterisk = false;\n\n    /**\n     * The label that appears before the control\n     */\n    @Input() label: string;\n\n    /**\n     * The description that appears below the control\n     * \\u00A0 is &nbsp; (non-breaking space)\n     */\n    @Input() description = '\\u00A0';\n\n    /**\n     * Whether this component is in readonly mode\n     */\n    @Input() isReadOnly = false;\n\n    /**\n     * Error labels to be used instead of NgControl error keys\n     */\n    @Input() errorLabels: string[] = [];\n\n    /**\n     * FormControlName directive\n     */\n    formControlNameDirective: NgControl;\n\n    /**\n     * To store the initial value of the input form control.\n     */\n    protected initialValue: number | string | boolean;\n\n    constructor(ngControl: NgControl) {\n        this.id = idGenerator.generate();\n        if (ngControl) {\n            ngControl.valueAccessor = this;\n            this.formControlNameDirective = ngControl;\n        }\n    }\n\n    /**\n     * The FormControl associated with the FormControlName directive\n     */\n    get formControl(): FormControl {\n        return this.formControlNameDirective\n            ? (this.formControlNameDirective.control as FormControl)\n            : new FormControl('');\n    }\n\n    get showErrors(): boolean {\n        return this.formControl.enabled && !this.formControl.pristine && !this.formControl.valid;\n    }\n\n    /**\n     * Errors from the form control validation\n     */\n    get errorKeys(): string[] {\n        if (this.errorLabels.length) {\n            return this.errorLabels;\n        }\n        return Object.keys(this.formControl.errors || {});\n    }\n\n    registerOnChange(onChange: (...args: unknown[]) => unknown): void {\n        this.onChange = onChange;\n    }\n\n    registerOnTouched(onTouched: (...args: unknown[]) => unknown): void {\n        this.onTouch = onTouched;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(val: any): void {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseWidgetObject.html":{"url":"classes/BaseWidgetObject.html","title":"class - BaseWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                A class that is able to make queries to the DOM and be instantiated by a widget finder.\nWidget objects should be used only to find elements in the DOM. You should not attempt to take\nactions on these elements in a given widget object.\nAll widget objects should extend this base class.\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            class LoginWidgetObject extends BaseWidgetObject {\n      getUsernameField = this.locatorForChild('.username');\n\n      getOkButton(): T {\n          return this.driver.getByText('button', 'Ok').unwrap();\n      }\n\n      getOkButtonContainer(): T {\n          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n      }\n}\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                locatorDriver\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForAncestors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForCssSelectors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(driver: LocatorDriver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/widget-object.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        driver\n                                                  \n                                                        \n                                                                        LocatorDriver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorDriver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocatorDriver\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForAncestors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:45\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a parent with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForCssSelectors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:38\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:52\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector and text when called.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForCssSelectors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForAncestors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoldTextRendererComponent.html":{"url":"components/BoldTextRendererComponent.html","title":"component - BoldTextRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoldTextRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n\n\n    \n        Description\n    \n    \n        A ComponentRenderer component that is used for rendering a bold text inside a column cell template\n\n    \n\n\n    \n        Implements\n    \n    \n                    ComponentRenderer\n    \n\n    \n        Example\n    \n    \n                \n                    Example usage with RendererSpec:\ncolumns: GridColumn[] = [\n{\ndisplayName: 'Component Renderer',\nrenderer: RendererSpec(\n  BoldTextRendererComponent,\n  (record: MockRecord) => ({text: record.name})\n)\n}\n];\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-bold-text-renderer\n            \n\n\n\n            \n                template\n                {{ config.text }}\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         BoldTextRendererConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ComponentRenderer } from '../interfaces/component-renderer.interface';\nimport { ColumnComponentRendererSpec, ColumnRendererSpec } from '../interfaces/datagrid-column.interface';\n/**\n * {@link ComponentRenderer.config} type that the {@link BoldTextRendererComponent} can understand\n */\nexport interface BoldTextRendererConfig {\n    /**\n     * Text to be displayed in bold font\n     */\n    text: string;\n}\n\n/**\n * A {@link ComponentRenderer} component that is used for rendering a bold text inside a column cell template\n *\n * @example Example usage with RendererSpec:\n *     columns: GridColumn[] = [\n *       {\n *         displayName: 'Component Renderer',\n *         renderer: RendererSpec(\n *           BoldTextRendererComponent,\n *           (record: MockRecord) => ({text: record.name})\n *         )\n *       }\n *     ];\n */\n@Component({\n    selector: 'vcd-bold-text-renderer',\n    template: ` {{ config.text }} `,\n})\nexport class BoldTextRendererComponent implements ComponentRenderer {\n    @Input()\n    config: BoldTextRendererConfig;\n}\n\n/**\n * Creates a {@link ColumnRendererSpec} for rendering bold text in a column.\n */\nexport function BoldTextRenderer(\n    textExtractor: (record: R) => string\n): ColumnRendererSpec {\n    return ColumnComponentRendererSpec({\n        type: BoldTextRendererComponent,\n        config(record): BoldTextRendererConfig {\n            return {\n                text: textExtractor(record),\n            };\n        },\n    });\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ config.text }}'\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoldTextRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BoldTextRendererConfig.html":{"url":"interfaces/BoldTextRendererConfig.html","title":"interface - BoldTextRendererConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BoldTextRendererConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n        \n\n            \n                Description\n            \n            \n                ComponentRenderer.config type that the BoldTextRendererComponent can understand\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text to be displayed in bold font\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ComponentRenderer } from '../interfaces/component-renderer.interface';\nimport { ColumnComponentRendererSpec, ColumnRendererSpec } from '../interfaces/datagrid-column.interface';\n/**\n * {@link ComponentRenderer.config} type that the {@link BoldTextRendererComponent} can understand\n */\nexport interface BoldTextRendererConfig {\n    /**\n     * Text to be displayed in bold font\n     */\n    text: string;\n}\n\n/**\n * A {@link ComponentRenderer} component that is used for rendering a bold text inside a column cell template\n *\n * @example Example usage with RendererSpec:\n *     columns: GridColumn[] = [\n *       {\n *         displayName: 'Component Renderer',\n *         renderer: RendererSpec(\n *           BoldTextRendererComponent,\n *           (record: MockRecord) => ({text: record.name})\n *         )\n *       }\n *     ];\n */\n@Component({\n    selector: 'vcd-bold-text-renderer',\n    template: ` {{ config.text }} `,\n})\nexport class BoldTextRendererComponent implements ComponentRenderer {\n    @Input()\n    config: BoldTextRendererConfig;\n}\n\n/**\n * Creates a {@link ColumnRendererSpec} for rendering bold text in a column.\n */\nexport function BoldTextRenderer(\n    textExtractor: (record: R) => string\n): ColumnRendererSpec {\n    return ColumnComponentRendererSpec({\n        type: BoldTextRendererComponent,\n        config(record): BoldTextRendererConfig {\n            return {\n                text: textExtractor(record),\n            };\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoldTextRendererWidgetObject.html":{"url":"classes/BoldTextRendererWidgetObject.html","title":"class - BoldTextRendererWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoldTextRendererWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts\n        \n\n            \n                Description\n            \n            \n                Widget Object for the bold text renderer.\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-bold-text-renderer'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { WidgetObject } from '../../utils/test/widget-object';\nimport { BoldTextRendererComponent } from './bold-text-renderer.component';\n\n/**\n * Widget Object for the bold text renderer.\n */\nexport class BoldTextRendererWidgetObject extends WidgetObject {\n    static tagName = 'vcd-bold-text-renderer';\n\n    get text(): string {\n        return this.findElement('strong').nativeElement.textContent;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanBeReadOnly.html":{"url":"interfaces/CanBeReadOnly.html","title":"interface - CanBeReadOnly","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanBeReadOnly\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/interfaces/can-be-read-only.interface.ts\n        \n\n            \n                Description\n            \n            \n                Components that can be made readonly should implement this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isReadOnly\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isReadOnly\n                                    \n                                \n                                \n                                    \n                                        isReadOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This being true implies that any controls that may edit data will not allow editing or be removed\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CanBeReadOnly {\n    /**\n     * This being true implies that any controls that may edit data will not allow editing or be removed\n     */\n    isReadOnly: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CliptextConfig.html":{"url":"interfaces/CliptextConfig.html","title":"interface - CliptextConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CliptextConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.ts\n        \n\n            \n                Description\n            \n            \n                The configuration information for the cliptext within the cells of the datagrid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        mouseoutDelay\n                                \n                                \n                                            Optional\n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the cliptext should be disabled.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mouseoutDelay\n                                    \n                                \n                                \n                                    \n                                        mouseoutDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The time delay from mouse off to hide the cliptext.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         TooltipSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TooltipSize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The size of the tooltip to be displayed in the cell.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n\nexport enum TooltipPosition {\n    tl = 'tooltip-top-left',\n    tr = 'tooltip-top-right',\n    br = 'tooltip-bottom-right',\n    bl = 'tooltip-bottom-left',\n}\n\nexport enum TooltipSize {\n    sm = '100px',\n    md = '200px',\n    lg = '400px',\n}\n\n/**\n * The configuration information for the cliptext within the cells of the datagrid.\n */\nexport interface CliptextConfig {\n    /**\n     * The size of the tooltip to be displayed in the cell.\n     */\n    size?: TooltipSize;\n    /**\n     * The time delay from mouse off to hide the cliptext.\n     */\n    mouseoutDelay?: number;\n    /**\n     * If the cliptext should be disabled.\n     */\n    disabled?: boolean;\n}\n\n/**\n * Singleton tooltip created by directive\n */\nconst tip = {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n};\n\ntype EventHandler = (e: MouseEvent) => void;\n\nfunction watchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.addEventListener('mouseenter', mouseIn);\n    el.addEventListener('mouseleave', mouseOut);\n}\n\nfunction unwatchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.removeEventListener('mouseenter', mouseIn);\n    el.removeEventListener('mouseleave', mouseOut);\n}\n\nfunction setStyle(el: HTMLElement, style: Partial): void {\n    Object.assign(el.style, style);\n}\n\n/**\n * Displays a clarity tooltip with the full contents of a host element on hover but only if\n * the elements is clipped.\n */\n@Directive({\n    selector: '[vcdShowClippedText]',\n})\nexport class ShowClippedTextDirective implements OnDestroy, OnInit {\n    /** To destroy the tooltip when no longer needed */\n    static instanceCount = 0;\n\n    @Input('vcdShowClippedText')\n    set config(config: CliptextConfig) {\n        if (config && config.mouseoutDelay) {\n            this.mouseoutDelay = config.mouseoutDelay;\n        }\n        if (config && config.size) {\n            this.tooltipSize = config.size;\n        }\n        const nextDisabled = config !== undefined && config.disabled;\n        if (this.disabled === nextDisabled) {\n            return;\n        }\n        this.disabled = nextDisabled;\n        if (this.disabled) {\n            this.deactivate();\n        } else {\n            this.activate();\n        }\n    }\n\n    mouseoutDelay = 500;\n    tooltipSize = TooltipSize.md;\n    disabled = false;\n\n    /**\n     * The HTML element receiving the directive\n     */\n    public hostElement: HTMLElement = this.host.nativeElement;\n\n    constructor(private host: ElementRef) {}\n\n    ngOnInit(): void {\n        if (!this.disabled) {\n            this.activate();\n        }\n    }\n\n    activate(): void {\n        ShowClippedTextDirective.instanceCount++;\n        tip.create();\n        watchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n\n        // A host must have the following styles to show text ellipsis when overflowing\n        setStyle(this.hostElement, {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (!this.disabled) {\n            this.deactivate();\n        }\n    }\n\n    deactivate(): void {\n        ShowClippedTextDirective.instanceCount--;\n        unwatchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n        if (ShowClippedTextDirective.instanceCount === 0) {\n            tip.destroy();\n        }\n    }\n\n    private onMouseIn = (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    };\n\n    private onMouseOut = () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    };\n\n    private isOverflowing(): boolean {\n        // Text overflows when the content element's width is less than its scrollWidth.\n        return Math.ceil(this.hostElement.getBoundingClientRect().width)  {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnConfigInternal.html":{"url":"interfaces/ColumnConfigInternal.html","title":"interface - ColumnConfigInternal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnConfigInternal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                For simplifying logic inside the HTML template to differentiate between different GridColumn.renderer\ntypes.\n\n            \n\n            \n                Extends\n            \n            \n                        GridColumn\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fieldColumnRendererSpec\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fieldRenderer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldColumnRendererSpec\n                                    \n                                \n                                \n                                    \n                                        fieldColumnRendererSpec:         ColumnRendererSpec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnRendererSpec\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldRenderer\n                                    \n                                \n                                \n                                    \n                                        fieldRenderer:         FunctionRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FunctionRenderer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColumnRendererSpec.html":{"url":"interfaces/ColumnRendererSpec.html","title":"interface - ColumnRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ColumnRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\ncomponent. used by the ComponentRendererOutletDirective\n\n            \n\n            \n                Extends\n            \n            \n                        ComponentRendererSpec\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A function that creates a config object required for the configuration of component that will be rendered in the column\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonUtil.html":{"url":"classes/CommonUtil.html","title":"class - CommonUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/common-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createBufferedPromise\n                            \n                            \n                                    Static\n                                isFunction\n                            \n                            \n                                    Static\n                                roundTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createBufferedPromise\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createBufferedPromise(fn: T, scope: unknown, buffer: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/common-util.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Creates a function that when called, actually calls the function parameter fn after a certain amount of time,\nwhich is the value of buffer parameter. The created function then resolves the promise it returned and the same\npromise is reused for all the calls that get buffered\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nFunction to be debounced\n\n\n                                    \n                                \n                                \n                                    scope\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nThe function scope of the parameter fn\n\n\n                                    \n                                \n                                \n                                    buffer\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        300\n                                    \n\n                                    \n                                        \nHow long since the last call to the debounced function to wait before calling fn\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        A function that when called, will delay the calls to the fn that was passed in. That function will return\nthe same promise each time a call is made and buffered. This means that callers need to be sure to ignore previous\ncalls. This is not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFunction(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/common-util.ts:22\n                \n            \n\n\n            \n                \n                    Verifies if the passed value is of type Function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            roundTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    roundTo(value: number, digits: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/common-util.ts:12\n                \n            \n\n\n            \n                \n                    Rounds number to given floating point, 2 by default.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        number from float data type\n\n                                    \n                                \n                                \n                                    digits\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        2\n                                    \n\n                                    \n                                        how many numbers will be shown after decimal point\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class CommonUtil {\n    /**\n     * Rounds number to given floating point, 2 by default.\n     * @param value number from float data type\n     * @param digits how many numbers will be shown after decimal point\n     */\n    static roundTo(value: number, digits: number = 2): number {\n        if (!value) {\n            value = 0;\n        }\n        return Number(Math.round(Number(value + 'e' + digits)) + 'e-' + digits);\n    }\n\n    /**\n     * Verifies if the passed value is of type Function\n     */\n    static isFunction(value: any): value is (...args: unknown[]) => unknown {\n        return typeof value === 'function';\n    }\n\n    /**\n     * Creates a function that when called, actually calls the function parameter `fn` after a certain amount of time,\n     * which is the value of `buffer` parameter. The created function then resolves the promise it returned and the same\n     * promise is reused for all the calls that get buffered\n     *\n     * @param fn - Function to be debounced\n     * @param scope - The function scope of the parameter `fn`\n     * @param buffer - How long since the last call to the debounced function to wait before calling `fn`\n     * @return A function that when called, will delay the calls to the `fn` that was passed in. That function will return\n     * the same promise each time a call is made and buffered. This means that callers need to be sure to ignore previous\n     * calls. This is not\n     */\n    static createBufferedPromise any>(\n        fn: T,\n        scope: unknown,\n        buffer = 300\n    ): (...args: Parameters) => Promise> {\n        let timerId: any;\n        let pendingPromise: Promise> = null;\n        // tslint:disable-next-line:ban-types\n        let resolver: Function;\n        // tslint:disable-next-line:only-arrow-functions\n        return function (): Promise {\n            if (!pendingPromise) {\n                pendingPromise = new Promise((resolve) => {\n                    resolver = resolve;\n                });\n            }\n            const callArgs = Array.from(arguments);\n            if (timerId) {\n                clearTimeout(timerId);\n                timerId = null;\n            }\n\n            timerId = setTimeout(() => {\n                const retValue = fn.apply(scope, callArgs);\n                resolver(retValue);\n                pendingPromise = null;\n                timerId = null;\n            }, buffer);\n            return pendingPromise;\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentRenderer.html":{"url":"interfaces/ComponentRenderer.html","title":"interface - ComponentRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n        \n\n            \n                Description\n            \n            \n                Implemented by all the component renderers. The components that have to be rendered dynamically.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object used by the component renderers inside their HTML template\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n/**\n * Implemented by all the component renderers. The components that have to be rendered dynamically.\n */\nexport interface ComponentRenderer {\n    /**\n     * Object used by the component renderers inside their HTML template\n     */\n    config: T;\n}\n\n/**\n * Used for the type safety of {@link ColumnRendererSpec#type}\n */\nexport type ComponentRendererConstructor = Type>;\n\n/**\n * An object that contains the constructor of a component of {@link ComponentRenderer} type that has to be rendered dynamically.\n *\n * {@link ComponentRendererOutletDirective} uses this object to render the component. It is responsible for setting the\n * component's configuration{@link ComponentRenderer#config} after dynamically initializing it. But the caller is responsible\n * for providing a config\n */\nexport interface ComponentRendererSpec {\n    /**\n     * Constructor of a specific type of component to be rendered\n     */\n    type: ComponentRendererConstructor;\n    /**\n     * {@link ComponentRenderer.config}. In the case of a {@link ColumnRendererSpec} it is a function that takes a rest\n     * item as input and returns an object of {@link ComponentRenderer.config}\n     */\n    config: C | ((restItem: unknown) => C);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ComponentRendererOutletDirective.html":{"url":"directives/ComponentRendererOutletDirective.html","title":"directive - ComponentRendererOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ComponentRendererOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Component that acts as a host element for dynamic rendering of component constructors.\nIt takes ComponentRendererSpec and also 'context' as input in case of a ColumnRendererSpec that serves as argument for\nColumnRendererSpec.config method. Attaches the component to be rendered to the view container of host element\nand updates it's configuration whenever changed.\nExample usage:\n\n\n\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [vcdComponentRendererOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentRef\n                            \n                            \n                                    Private\n                                componentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assignValue\n                            \n                            \n                                    Private\n                                attachRenderer\n                            \n                            \n                                    Private\n                                detachRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                vcdComponentRendererOutlet\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    vcdComponentRendererOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, cfr: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cfr\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        vcdComponentRendererOutlet\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:40\n                            \n                        \n                \n                    \n                        Sets the component that this outlet should render. Where rendererSpec is the\nComponentRendererSpec that details how to render the component and context\nis any information that the component needs to render.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assignValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignValue(config:  | T, context: R)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:63\n                \n            \n\n\n            \n                \n                    Updates the configuration of instantiated component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                             | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            R\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            attachRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attachRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:52\n                \n            \n\n\n            \n                \n                    Attaches the passed component type to the view of this directive host\n\n\n                    \n                        Returns :         ComponentRef>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            detachRenderer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detachRenderer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRendererConstructor\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        vcdComponentRendererOutlet\n                    \n                \n\n\n                \n                    \n                        setvcdComponentRendererOutlet(renderer: literal type)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts:40\n                                \n                            \n                    \n                        \n                                Sets the component that this outlet should render. Where rendererSpec is the\nComponentRendererSpec that details how to render the component and context\nis any information that the component needs to render.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            renderer\n                                                    \n                                                            \n                                                                        literal type\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { ComponentFactoryResolver, ComponentRef, Directive, Input, ViewContainerRef } from '@angular/core';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Component that acts as a host element for dynamic rendering of component constructors.\n * It takes {@link ComponentRendererSpec} and also 'context' as input in case of a {@link ColumnRendererSpec} that serves as argument for\n * {@link ColumnRendererSpec.config} method. Attaches the component to be rendered to the view container of host element\n * and updates it's configuration whenever changed.\n *\n * Example usage:\n * \n *\n */\n@Directive({\n    selector: '[vcdComponentRendererOutlet]',\n})\nexport class ComponentRendererOutletDirective {\n    private componentRef: ComponentRef>;\n    private componentType: ComponentRendererConstructor;\n\n    constructor(private viewContainerRef: ViewContainerRef, private cfr: ComponentFactoryResolver) {}\n\n    /**\n     * Sets the component that this outlet should render. Where rendererSpec is the\n     * {@link ComponentRendererSpec} that details how to render the component and context\n     * is any information that the component needs to render.\n     */\n    @Input()\n    set vcdComponentRendererOutlet(renderer: { rendererSpec: ComponentRendererSpec; context?: R }) {\n        if (this.componentType !== renderer.rendererSpec.type) {\n            // Cache the componentType to avoid redundant detaching and attaching of component to this host\n            this.componentType = renderer.rendererSpec.type;\n            this.componentRef = this.attachRenderer();\n        }\n        this.assignValue(renderer.rendererSpec.config, renderer.context);\n    }\n\n    /**\n     * Attaches the passed component type to the view of this directive host\n     */\n    private attachRenderer(): ComponentRef> {\n        if (this.componentRef) {\n            this.detachRenderer();\n        }\n        const componentFactory = this.cfr.resolveComponentFactory(this.componentType);\n        return this.viewContainerRef.createComponent(componentFactory);\n    }\n\n    /**\n     * Updates the configuration of instantiated component\n     */\n    private assignValue(config: ((r: R) => T) | T, context: R): void {\n        if (!this.componentRef || !this.componentRef.instance) {\n            return;\n        }\n        this.componentRef.instance.config = config instanceof Function ? config(context) : config;\n    }\n\n    private detachRenderer(): void {\n        this.viewContainerRef.remove();\n        this.componentRef = null;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentRendererSpec.html":{"url":"interfaces/ComponentRendererSpec.html","title":"interface - ComponentRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ComponentRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n        \n\n            \n                Description\n            \n            \n                An object that contains the constructor of a component of ComponentRenderer type that has to be rendered dynamically.\nComponentRendererOutletDirective uses this object to render the component. It is responsible for setting the\ncomponent's configurationComponentRenderer after dynamically initializing it. But the caller is responsible\nfor providing a config\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     C | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ComponentRenderer.config. In the case of a ColumnRendererSpec it is a function that takes a rest\nitem as input and returns an object of ComponentRenderer.config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         ComponentRendererConstructor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentRendererConstructor\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Constructor of a specific type of component to be rendered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@angular/core';\n\n/**\n * Implemented by all the component renderers. The components that have to be rendered dynamically.\n */\nexport interface ComponentRenderer {\n    /**\n     * Object used by the component renderers inside their HTML template\n     */\n    config: T;\n}\n\n/**\n * Used for the type safety of {@link ColumnRendererSpec#type}\n */\nexport type ComponentRendererConstructor = Type>;\n\n/**\n * An object that contains the constructor of a component of {@link ComponentRenderer} type that has to be rendered dynamically.\n *\n * {@link ComponentRendererOutletDirective} uses this object to render the component. It is responsible for setting the\n * component's configuration{@link ComponentRenderer#config} after dynamically initializing it. But the caller is responsible\n * for providing a config\n */\nexport interface ComponentRendererSpec {\n    /**\n     * Constructor of a specific type of component to be rendered\n     */\n    type: ComponentRendererConstructor;\n    /**\n     * {@link ComponentRenderer.config}. In the case of a {@link ColumnRendererSpec} it is a function that takes a rest\n     * item as input and returns an object of {@link ComponentRenderer.config}\n     */\n    config: C | ((restItem: unknown) => C);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CsvExporterService.html":{"url":"injectables/CsvExporterService.html","title":"injectable - CsvExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CsvExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/csv-exporter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createCsv\n                            \n                            \n                                    Public\n                                downloadCsvFile\n                            \n                            \n                                    Public\n                                hasPotentialInjection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createCsv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCsv(rows: any[][], shouldSanitize)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:21\n                \n            \n\n\n            \n                \n                    Creates a string that can be used to create a Blob for a CSV\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            any[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        2D array of data. First row is the names for the fields\n\n                                    \n                                \n                                \n                                    shouldSanitize\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If a cell starting with a control character should be edited to prevent\npossible code injection\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            downloadCsvFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadCsvFile(csvFile: string, filename: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:39\n                \n            \n\n\n            \n                \n                    Does a client side download\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    csvFile\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The string contents of a CSV file to be downloaded\n\n                                    \n                                \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the file to be downloaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasPotentialInjection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasPotentialInjection(rows: any[][])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/csv-exporter.service.ts:30\n                \n            \n\n\n            \n                \n                    Whether the CSV that would result from the export is at risk of code injection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            any[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        2D array of data. First row is the names for the fields\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\n/**\n * Encodes a data set to be downloaded as a CSV\n */\nexport class CsvExporterService {\n    /**\n     * Creates a string that can be used to create a Blob for a CSV\n     * @param rows 2D array of data. First row is the names for the fields\n     * @param shouldSanitize If a cell starting with a control character should be edited to prevent\n     * possible code injection\n     */\n    public createCsv(rows: any[][], shouldSanitize = false): string {\n        // BOM Mark to help Excel open the CSV when it contains UTF-8 characters\n        return '\\ufeff' + rows.map((row) => processRow(row, shouldSanitize)).join('\\n');\n    }\n\n    /**\n     * Whether the CSV that would result from the export is at risk of code injection\n     * @param rows 2D array of data. First row is the names for the fields\n     */\n    public hasPotentialInjection(rows: any[][]): boolean {\n        return rows.some(hasPotentialInjection);\n    }\n\n    /**\n     * Does a client side download\n     * @param csvFile The string contents of a CSV file to be downloaded\n     * @param filename The name of the file to be downloaded\n     */\n    public downloadCsvFile(csvFile: string, filename: string): void {\n        const mimeType = 'text/csv;charset=utf-8;';\n        const blob = new Blob([csvFile], { type: mimeType });\n        // Jan 1, 2020 - Chrome and IE support this\n        if (navigator.msSaveBlob) {\n            navigator.msSaveBlob(blob, filename);\n        } else {\n            const link = document.createElement('a');\n            const url = URL.createObjectURL(blob);\n            link.setAttribute('href', url);\n            link.setAttribute('download', filename);\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n\nconst LEADING_CONTROL_CHAR = /^[-+=@]/;\n\n/**\n * Whether the given row data is at risk of code injection when exported to CSV.\n */\nfunction hasPotentialInjection(row: unknown[]): boolean {\n    return row.some((cell) => LEADING_CONTROL_CHAR.test(encodeValue(cell, false)));\n}\n\n/**\n * Returns a string\n * @param row A list of cells to be turned into a CSV string, separated by commas\n * @param shouldSanitize If a cell starting with a control character should be edited to prevent\n * possible code injection\n */\nfunction processRow(row: unknown[], shouldSanitize: boolean): string {\n    return row.map((cell) => encodeValue(cell, shouldSanitize)).join(',');\n}\n\n/**\n * Returns a cell's cellValue encoded against spaces, quotes, and CSV injection character\n * @param cellValue Cell cellValue to be encoded\n * @param shouldSanitize If this cellValue starts with a control should it be\n * prefixed with the tab character\n */\nfunction encodeValue(cellValue: unknown, shouldSanitize: boolean): string {\n    let innerValue = cellValue == null ? '' : cellValue.toString();\n    if (cellValue instanceof Date) {\n        innerValue = cellValue.toLocaleString();\n    } else if (cellValue && typeof cellValue === 'object') {\n        innerValue = JSON.stringify(cellValue);\n    }\n    // Double quotes are doubled\n    let result = innerValue.replace(/\"/g, '\"\"');\n\n    // Add quotes around the whole thing if it contains new lines\n    if (result.search(/[\",\\n]/g) >= 0) {\n        result = `\"${result}\"`;\n    }\n    // Escape against\n    if (shouldSanitize) {\n        return sanitizeString(result);\n    }\n    return result;\n}\n\n/**\n * Prevents CSV injection by prefixing with a tab character if the string contains a\n * special character.\n */\nfunction sanitizeString(value: string): string {\n    if (LEADING_CONTROL_CHAR.test(value)) {\n        return '\\t' + value;\n    }\n    return value;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CypressLocatorDriver.html":{"url":"classes/CypressLocatorDriver.html","title":"class - CypressLocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CypressLocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Cypress chainables in the DOM.\nT is the type of data that this will output when you call unwrap.\nIn almost all cases, this should be a Cypress.Chainable.\nWe chose to provide this as a generic because for reasons seen in\nthis PR\nwe could not load the Cypress types in our library.\n\n            \n\n\n            \n                Implements\n            \n            \n                            LocatorDriver\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findWidget\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                getBase\n                            \n                            \n                                getByText\n                            \n                            \n                                parents\n                            \n                            \n                                unwrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chainable: T, isRoot: boolean, alias: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chainable\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isRoot\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getBase\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBase()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:72\n                \n            \n\n\n            \n                \n                    Gives the correct base for this current query.\nThis is to override the behavior where calls to .find will permanently change the scope of the query.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CypressLocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-object.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CypressWidgetObjectFinder } from './cypress-widget-finder';\nimport { BaseWidgetObject, CorrectReturnTypes, FindableWidget, LocatorDriver } from './widget-object';\n\ndeclare const cy;\n\n/**\n * Knows how to find Cypress chainables in the DOM.\n *\n * T is the type of data that this will output when you call `unwrap`.\n * In almost all cases, this should be a `Cypress.Chainable`.\n * We chose to provide this as a generic because for reasons seen in\n * [this PR](https://github.com/vmware/vmware-cloud-director-ui-components/pull/248)\n * we could not load the Cypress types in our library.\n */\nexport class CypressLocatorDriver implements LocatorDriver {\n    constructor(private chainable: T, private isRoot: boolean, private alias: string) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        return new CypressLocatorDriver(root.find(cssSelector, options), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        const queryOptions = { matchCase: false, ...(options ? (options as object) : {}) };\n        return new CypressLocatorDriver(root.contains(cssSelector, value, queryOptions), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string, options?: unknown): CypressLocatorDriver {\n        const root = this.getBase();\n        return new CypressLocatorDriver(root.parents(cssSelector, options), false, this.alias);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): T {\n        return this.chainable;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T> {\n        return new CypressWidgetObjectFinder().find(widget, '@' + this.alias, cssSelector) as CorrectReturnTypes,\n            T\n        >;\n    }\n\n    /**\n     * Gives the correct base for this current query.\n     * This is to override the behavior where calls to .find will permanently change the scope of the query.\n     */\n    private getBase(): any {\n        if (this.isRoot) {\n            return cy.get('@' + this.alias);\n        } else {\n            return this.chainable;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CypressWidgetObjectFinder.html":{"url":"classes/CypressWidgetObjectFinder.html","title":"class - CypressWidgetObjectFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CypressWidgetObjectFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find Cypress widget objects within the DOM.\nT is the type of data that this will output when you call unwrap.\nIn almost all cases, this should be a Cypress.Chainable.\nWe chose to provide this as a generic because for reasons seen in\nthis PR\nwe could not load the Cypress types in our library.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(widgetConstructor: C, ancestor?: string, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/cypress-widget-finder.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    widgetConstructor\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe constructor of the widget to use\n\n\n                                    \n                                \n                                \n                                    ancestor\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe CSS query or alias of the parent to begin the search from.\nthis will be passed to cy.get and is a global search.\n\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe cssSelector to append to the tagName for the search\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IdGenerator } from '../../id-generator/id-generator';\nimport { CypressLocatorDriver } from './cypress-widget-object';\nimport { BaseWidgetObject, CorrectReturnTypes, FindableWidget } from './widget-object';\n\ndeclare const cy;\nconst idGenerator = new IdGenerator('cy-id');\n\n/**\n * Knows how to find Cypress widget objects within the DOM.\n *\n * T is the type of data that this will output when you call `unwrap`.\n * In almost all cases, this should be a `Cypress.Chainable`.\n * We chose to provide this as a generic because for reasons seen in\n * [this PR](https://github.com/vmware/vmware-cloud-director-ui-components/pull/248)\n * we could not load the Cypress types in our library.\n */\nexport class CypressWidgetObjectFinder {\n    /**\n     * Finds a single widget object\n     *\n     * @param widgetConstructor - The constructor of the widget to use\n     * @param ancestor - The CSS query or alias of the parent to begin the search from.\n     *                 this will be passed to `cy.get` and is a global search.\n     * @param cssSelector - The cssSelector to append to the tagName for the search\n     *\n     */\n    public find, C extends FindableWidget>(\n        widgetConstructor: C,\n        ancestor?: string,\n        cssSelector?: string\n    ): CorrectReturnTypes, T> {\n        let tagName = widgetConstructor.tagName;\n        if (cssSelector) {\n            tagName += `${cssSelector}`;\n        }\n        const id = idGenerator.generate();\n        const search = ancestor ? cy.get(ancestor).find(tagName) : cy.get(tagName);\n        const root = search.as(id);\n        const widget = new widgetConstructor(new CypressLocatorDriver(root, true, id));\n        return (widget as any) as CorrectReturnTypes, T>;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataExportRequestEvent.html":{"url":"interfaces/DataExportRequestEvent.html","title":"interface - DataExportRequestEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataExportRequestEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.component.ts\n        \n\n            \n                Description\n            \n            \n                Information passed to the caller so they can fetch the data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exportData\n                                \n                                \n                                        selectedColumns\n                                \n                                \n                                        updateProgress\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportData\n                                    \n                                \n                                \n                                    \n                                        exportData:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Call this when all records have been fetched to initiate the CSV creation.\nThis should only be called once after all data fetching is finished\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedColumns\n                                    \n                                \n                                \n                                    \n                                        selectedColumns:         ExportColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExportColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Columns selected by the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateProgress\n                                    \n                                \n                                \n                                    \n                                        updateProgress:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Call this to indicate a new value to be displayed in the progress indicator.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDropdown } from '@clr/angular';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { CsvExporterService } from './csv-exporter.service';\n\n/**\n * Identifiers for each column that user is allowed to select\n */\nexport interface ExportColumn {\n    /**\n     * Displayed in the list of columns. If there is no displayName, the default value is fieldName\n     */\n    displayName?: string;\n    /**\n     * The name of the field in the JSON that is returned and converted to a viewable format\n     */\n    fieldName: string;\n}\n\nexport enum UserOptions {\n    selectAll = 'selectAll',\n    friendlyNames = 'friendlyNames',\n    sanitize = 'sanitize',\n}\n\n/**\n * Information passed to the caller so they can fetch the data\n */\nexport interface DataExportRequestEvent {\n    /**\n     * Call this to indicate a new value to be displayed in the progress indicator.\n     * @param progress A number from 0 to 1 indicating download progress. Passing -1 will make it an indeterminate\n     */\n    updateProgress: (progress: number) => void;\n\n    /**\n     * Call this when all records have been fetched to initiate the CSV creation.\n     * This should only be called once after all data fetching is finished\n     * @param records Records to be converted into a csv file\n     * @return a promise of the resulting CSV to indicate when this potentially lengthy process is over\n     */\n    exportData: (records: object[]) => Promise;\n\n    /**\n     * Columns selected by the user.\n     */\n    selectedColumns: ExportColumn[];\n}\n\n/**\n * A dialog to export data\n *\n *  - Allows the UI to select columns to be exported\n *  - Provides a progress indicator\n *  - Converts the data that is fetched by the caller into a CSV\n */\n@Component({\n    selector: 'vcd-data-exporter',\n    templateUrl: 'data-exporter.component.html',\n    styleUrls: ['./data-exporter.component.scss'],\n})\nexport class DataExporterComponent implements OnInit, OnDestroy {\n    constructor(private csvExporterService: CsvExporterService, private translationService: TranslationService) {}\n\n    @ViewChild(ClrDropdown) set columnDropdown(columnDropdown: ClrDropdown) {\n        if (!columnDropdown) {\n            return;\n        }\n        this.subscriptionTracker.subscribe(columnDropdown.toggleService.openChange, (opened) => {\n            this.isDropdownOpen = opened;\n        });\n    }\n\n    _columns: ExportColumn[] = [];\n\n    /**\n     * List of columns that can be exported, user may deselect some before sending the download request.\n     * Display name defaults to field name if there is no displayName\n     */\n    @Input()\n    set columns(cols: ExportColumn[]) {\n        this._columns = cols;\n        this.updateFieldNameMap(cols);\n    }\n\n    get columns(): ExportColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * The name of the file to be downloaded\n     */\n    @Input() fileName = 'data-export.csv';\n\n    /**\n     * Text for the Dialog Header\n     */\n    @Input()\n    dialogHeader: LazyString = this.translationService.translateAsync('vcd.cc.data-exporter.title');\n\n    /**\n     * Text for the cancel button.\n     */\n    @Input()\n    cancelText: LazyString = this.translationService.translateAsync('vcd.cc.cancel');\n\n    /**\n     * Text for the export all button.\n     */\n    @Input()\n    exportAllText: LazyString = this.translationService.translateAsync('vcd.cc.export.all');\n\n    /**\n     * Text for the select columns dropdown button.\n     */\n    @Input()\n    selectColumnsText: LazyString = this.translationService.translateAsync('vcd.cc.select.columns');\n\n    /**\n     * Text for the export button.\n     */\n    @Input()\n    exportText: LazyString = this.translationService.translateAsync('vcd.cc.export');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    yesText: LazyString = this.translationService.translateAsync('vcd.cc.yes');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    noText: LazyString = this.translationService.translateAsync('vcd.cc.no');\n\n    /**\n     * Text label that is next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.question');\n\n    /**\n     * Text the info message next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.info');\n\n    /**\n     * Text the hint message below the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesHint: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.hint');\n\n    /**\n     * Text label that is next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.question');\n\n    /**\n     * Hint message that is below the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxHint: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.hint');\n\n    /**\n     * Text the info message next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.info');\n\n    /**\n     * The message that is displayed while the data is downloading.\n     */\n    @Input()\n    downloadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.downloading');\n\n    /**\n     * The message that is displayed while the data is writing to file.\n     */\n    @Input()\n    writingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.writing');\n\n    /**\n     * Whether the dialog is open\n     */\n    @Input()\n    set open(value: boolean) {\n        this._open = value;\n        this.openChange.emit(value);\n    }\n    get open(): boolean {\n        return this._open;\n    }\n\n    private _open = false;\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    forceDropdownOpen = false;\n\n    /**\n     * Fires when {@link _open} changes. Its parameter indicates the new state.\n     */\n    @Output() openChange = new EventEmitter();\n\n    /**\n     * Called when the export is ready to be created\n     */\n    @Output() dataExportRequest = new EventEmitter();\n\n    /**\n     * True between the time {@link dataExportRequest} fires and {@link DataExportRequestEvent.exportData} is called\n     * or an error is thrown\n     */\n    get isRequestPending(): boolean {\n        return this._isRequestPending;\n    }\n    private _isRequestPending = false;\n\n    /**\n     * Number between 0-1, used for displaying the progress bar.\n     */\n    get progress(): number {\n        return this._progress;\n    }\n    private _progress = 0;\n\n    private fieldNameMap = new Map();\n\n    formGroup: FormGroup;\n\n    exportStage: LazyString;\n\n    optionsFormGroup = new FormGroup({\n        [UserOptions.selectAll]: new FormControl(true),\n        [UserOptions.friendlyNames]: new FormControl(true),\n        [UserOptions.sanitize]: new FormControl(true),\n    });\n\n    /**\n     * Says if the column dropdown is open.\n     */\n    isDropdownOpen = false;\n\n    onClickExport(): void {\n        this.exportStage = this.downloadingMessage;\n        this._isRequestPending = true;\n        this.dataExportRequest.emit({\n            exportData: this.exportData.bind(this),\n            updateProgress: this.updateProgress.bind(this),\n            selectedColumns: this.selectedColumns,\n        });\n    }\n\n    get selectAllControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.selectAll) as FormControl;\n    }\n\n    get sanitizeControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.sanitize) as FormControl;\n    }\n\n    get friendlyFieldsControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.friendlyNames) as FormControl;\n    }\n\n    get isExportEnabled(): boolean {\n        if (this.isRequestPending) {\n            return false;\n        }\n        for (const column of this.columns) {\n            if (this.formGroup.controls[column.fieldName].value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get shouldShowBubbles(): boolean {\n        return !this.selectAllControl.value && !this.isDropdownOpen;\n    }\n\n    /**\n     * Gives a list of all the columns that are selected.\n     */\n    get selectedColumns(): ExportColumn[] {\n        return this.columns.filter((col) => this.formGroup.controls[col.fieldName].value);\n    }\n\n    /**\n     * Sets the selected value of the given column.\n     */\n    selectColumn(column: ExportColumn, selected: boolean): void {\n        this.formGroup.controls[column.fieldName].setValue(selected);\n    }\n\n    ngOnInit(): void {\n        const controls = this.columns.reduce((previousValue, currentValue) => {\n            previousValue[currentValue.fieldName] = new FormControl(true);\n            return previousValue;\n        }, {});\n        this.formGroup = new FormGroup(controls);\n        this.subscriptionTracker.subscribe(this.selectAllControl.valueChanges, (change) => {\n            if (change) {\n                for (const column of this.columns) {\n                    this.formGroup.controls[column.fieldName].setValue(true);\n                }\n            } else {\n                this.forceDropdownOpen = true;\n                this.isDropdownOpen = true;\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n\n    private exportData(records: object[]): Promise {\n        if (!this.open) {\n            return;\n        }\n\n        const rows = [\n            // First row is the display names\n            Object.keys(records[0]).map((fieldName) =>\n                this.friendlyFieldsControl.value ? this.getDisplayNameForField(fieldName) : fieldName\n            ),\n            // Then the data\n            ...records.map((rec) => Object.keys(rec).map((key) => rec[key])),\n        ];\n        return this.downloadData(rows, this.sanitizeControl.value);\n    }\n\n    downloadData(data: any[][], shouldSanitize: boolean = false): Promise {\n        this.exportStage = this.writingMessage;\n        return new Promise((resolve) => {\n            // We need to setTimeout because we changed how the message should be displayed\n            // but we need to interrupt the current task to get the message to display\n            // We tried to use window.requestAnimationFrame, but this didn't work so we had to use\n            // setTimeout().\n            setTimeout(() => {\n                this._isRequestPending = false;\n                const csvFile = this.csvExporterService.createCsv(data, shouldSanitize);\n                this.csvExporterService.downloadCsvFile(csvFile, this.fileName);\n                this.open = false;\n                resolve(csvFile);\n            });\n        });\n    }\n\n    private updateProgress(progress: number): void {\n        this._progress = progress;\n    }\n\n    private getDisplayNameForField(fieldName: string): string {\n        if (this.fieldNameMap.has(fieldName)) {\n            const exportColumn = this.fieldNameMap.get(fieldName);\n            return this.getDisplayNameForColumn(exportColumn);\n        } else {\n            return fieldName;\n        }\n    }\n\n    getDisplayNameForColumn(col: ExportColumn): string {\n        return col.displayName || col.fieldName;\n    }\n\n    private updateFieldNameMap(cols: ExportColumn[]): void {\n        this.fieldNameMap = new Map(cols.map((col) => [col.fieldName, col]));\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataExporterWidgetObject.html":{"url":"classes/DataExporterWidgetObject.html","title":"class - DataExporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataExporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.wo.ts\n        \n\n            \n                Description\n            \n            \n                Testing Object for DataExporterComponent\n\n            \n\n            \n                Extends\n            \n            \n                        BaseWidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getCancelButton\n                            \n                            \n                                getColumnBubbles\n                            \n                            \n                                getColumnCheckboxes\n                            \n                            \n                                getColumnDropdown\n                            \n                            \n                                getExportButton\n                            \n                            \n                                getProgress\n                            \n                            \n                                getToggleFriendlyNames\n                            \n                            \n                                getToggleSanitize\n                            \n                            \n                                getToggleSelectAll\n                            \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorDriver\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForAncestors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForCssSelectors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColumnCheckbox\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCancelButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.cancel')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.cancel')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:27\n                            \n                        \n\n                \n                    \n                        Gets the cancel button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnBubbles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.column-container .column-label')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.column-container .column-label')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:17\n                            \n                        \n\n                \n                    \n                        The strings for the available column bubbles.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnCheckboxes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('li .column-checkbox')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('li .column-checkbox')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:22\n                            \n                        \n\n                \n                    \n                        The strings for the available column checkboxes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumnDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.dropdown-button')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.dropdown-button')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:37\n                            \n                        \n\n                \n                    \n                        Gets the arrow to open/close the column dropdown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExportButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.locatorForText('button', 'export')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForText('button', 'export')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:32\n                            \n                        \n\n                \n                    \n                        Gets the export button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('progress')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('progress')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:57\n                            \n                        \n\n                \n                    \n                        Gets the progress bar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleFriendlyNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.friendly-names')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.friendly-names')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:52\n                            \n                        \n\n                \n                    \n                        Gets the friendly field names switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleSanitize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.sanitize-cells')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.sanitize-cells')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:47\n                            \n                        \n\n                \n                    \n                        Gets the sanitization switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToggleSelectAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('.export-all')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('.export-all')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:42\n                            \n                        \n\n                \n                    \n                        Gets the export all switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-data-exporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorDriver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocatorDriver\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForAncestors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:45\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a parent with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForCssSelectors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:38\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:52\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector and text when called.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnCheckbox\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnCheckbox(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/data-exporter/data-exporter.wo.ts:63\n                \n            \n\n\n            \n                \n                    Gets the checkbox next to a given column\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of column, 0 based\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseWidgetObject } from '../utils/test/widget-object/widget-object';\n\n/**\n * Testing Object for {@link DataExporterComponent}\n */\nexport class DataExporterWidgetObject extends BaseWidgetObject {\n    static tagName = 'vcd-data-exporter';\n\n    /**\n     * The strings for the available column bubbles.\n     */\n    getColumnBubbles = this.locatorForCssSelectors('.column-container .column-label');\n\n    /**\n     * The strings for the available column checkboxes.\n     */\n    getColumnCheckboxes = this.locatorForCssSelectors('li .column-checkbox');\n\n    /**\n     * Gets the cancel button.\n     */\n    getCancelButton = this.locatorForCssSelectors('.cancel');\n\n    /**\n     * Gets the export button.\n     */\n    getExportButton = this.locatorForText('button', 'export');\n\n    /**\n     * Gets the arrow to open/close the column dropdown.\n     */\n    getColumnDropdown = this.locatorForCssSelectors('.dropdown-button');\n\n    /**\n     * Gets the export all switch\n     */\n    getToggleSelectAll = this.locatorForCssSelectors('.export-all');\n\n    /**\n     * Gets the sanitization switch\n     */\n    getToggleSanitize = this.locatorForCssSelectors('.sanitize-cells');\n\n    /**\n     * Gets the friendly field names switch\n     */\n    getToggleFriendlyNames = this.locatorForCssSelectors('.friendly-names');\n\n    /**\n     * Gets the progress bar.\n     */\n    getProgress = this.locatorForCssSelectors('progress');\n\n    /**\n     * Gets the checkbox next to a given column\n     * @param index Index of column, 0 based\n     */\n    getColumnCheckbox(index: number): T {\n        return this.locatorDriver.get(`.dropdown-item:nth-of-type(${index + 1})  .column-checkbox input`).unwrap();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatagridFilter.html":{"url":"classes/DatagridFilter.html","title":"class - DatagridFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatagridFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Extended by filter components used in DatagridComponent. Those components can only be used inside a\nclr-dg-filter component and are dynamically rendered by ComponentRendererOutletDirective using\nGridColumn.filter\nV is the type of filter input value that is passed into setValue method\nC extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n\n            \n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n                            ClrDatagridFilterInterface\n                            ComponentRenderer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                                \n                                    queryField\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:71\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:87\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:60\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:137\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:112\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:99\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:122\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:127\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:107\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:117\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:72\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:80\n                                \n                            \n\n                \n                    \n                        setconfig(val)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:72\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        queryField\n                    \n                \n\n                \n                    \n                        getqueryField()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-filter.ts:147\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridMultiSelectFilterComponent.html":{"url":"components/DatagridMultiSelectFilterComponent.html","title":"component - DatagridMultiSelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridMultiSelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Used within a clarity grid column DatagridComponent to render a filter widget with list of checkboxes to select\nmultiple options\nExample usage:\ncolumns: GridColumn[] = [{\n      displayName: 'Custom Select filter',\n      renderer: 'state',\n      queryFieldName: 'state',\n      filterRendererSpec: FilterComponentRendererSpec({\n          type: DatagridMultiSelectFilterComponent,\n          config: {\n              options: [{\n                  value: 'CA',\n                  display: 'California'\n              }, {\n                  value: 'MA',\n                  display: 'Massachusetts'\n              }],\n              value: ['MA', 'NC'],\n          },\n      }),\n   }]\n\n    \n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-multiselect-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./datagrid-multiselect-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onBeforeSetConfig\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \nonBeforeSetConfig(config: DatagridMultiSelectFilterConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:88\n                \n            \n\n\n            \n                \n                    Overrides the config property because, the formGroup controls are defined by the config set by the caller.\nValue of each option becomes a formControl name inside the formGroup.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DatagridMultiSelectFilterConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(values: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MultiSelectOptionInternal[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts:78\n                            \n                        \n\n                \n                    \n                        Used inside the HTML to instantiate checkbox options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent\n    extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map((option) => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach((control) => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach((option) => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach((frmCtrl) => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter((formControl) => this.formGroup.get(formControl).value)\n            .map((selectedOption) => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter((frmCtrl) => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                \n                    {{ option.isTranslatable ? (option.display | translate) : option.display }}\n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ option.isTranslatable ? (option.display | translate) : option.display }}                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridMultiSelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridMultiSelectFilterConfig.html":{"url":"interfaces/DatagridMultiSelectFilterConfig.html","title":"interface - DatagridMultiSelectFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridMultiSelectFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     MultiSelectOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MultiSelectOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of select options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent\n    extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map((option) => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach((control) => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach((option) => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach((frmCtrl) => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter((formControl) => this.formGroup.get(formControl).value)\n            .map((selectedOption) => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter((frmCtrl) => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridNumericFilterComponent.html":{"url":"components/DatagridNumericFilterComponent.html","title":"component - DatagridNumericFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridNumericFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n\n\n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-numeric-filter\n            \n\n            \n                styleUrls\n                datagrid-numeric-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                datagrid-numeric-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _unit\n                            \n                            \n                                    Private\n                                _unitOptions\n                            \n                            \n                                fromInput\n                            \n                            \n                                maxNumberLength\n                            \n                            \n                                toInput\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                unit\n                            \n                            \n                                unitOptions\n                            \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    unitOptions\n                                \n                                \n                                    unit\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        unit\n                    \n                \n                \n                    \n                        Type :         Unit\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unitOptions\n                    \n                \n                \n                    \n                        Type :         Unit[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: DatagridNumericFilterConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DatagridNumericFilterConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(values: DatagridNumericFilterValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                DatagridNumericFilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _unit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Unit\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:62\n                            \n                        \n\n                \n                    \n                        Base unit to which selected units are converted\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _unitOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Unit[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:48\n                            \n                        \n\n                \n                    \n                        Options for the select input of units\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NumberWithUnitFormInputComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('from')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxNumberLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Number.MAX_SAFE_INTEGER.toString().length\n\n                        \n                    \n                    \n                        \n                            Default value : Number.MAX_SAFE_INTEGER.toString().length\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NumberWithUnitFormInputComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('to')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        unitOptions\n                    \n                \n\n                \n                    \n                        getunitOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:55\n                                \n                            \n\n                \n                    \n                        setunitOptions(val: [])\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        unit\n                    \n                \n\n                \n                    \n                        getunit()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:70\n                                \n                            \n\n                \n                    \n                        setunit(val)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Host, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { NumberWithUnitFormInputComponent } from '../../form';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { Unit } from '../../utils/unit/unit';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nenum FormFields {\n    from = 'from',\n    to = 'to',\n}\n\n/**\n * The type of value that goes in the {@link DatagridNumericFilterConfig}.\n */\nexport type DatagridNumericFilterValue = [number, number];\n\n/**\n * Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n */\nexport interface DatagridNumericFilterConfig extends FilterConfig {\n    unit?: Unit;\n    unitOptions?: Unit[];\n}\n\n@Component({\n    selector: 'vcd-dg-numeric-filter',\n    templateUrl: 'datagrid-numeric-filter.component.html',\n    styleUrls: ['datagrid-numeric-filter.component.scss'],\n})\nexport class DatagridNumericFilterComponent\n    extends DatagridFilter\n    implements OnInit, OnDestroy {\n    maxNumberLength = Number.MAX_SAFE_INTEGER.toString().length;\n\n    @ViewChild('from') fromInput: NumberWithUnitFormInputComponent;\n    @ViewChild('to') toInput: NumberWithUnitFormInputComponent;\n\n    /**\n     * Options for the select input of units\n     */\n    private _unitOptions: Unit[];\n    @Input() set unitOptions(val: Unit[]) {\n        this._unitOptions = val;\n        if (!this.unit && this.unitOptions && this.unitOptions.length) {\n            this.unit = this.unitOptions[0];\n        }\n    }\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * Base unit to which selected units are converted\n     */\n    private _unit: Unit;\n    @Input() set unit(val: Unit) {\n        if (!val && this.unitOptions && this.unitOptions.length) {\n            this._unit = this.unitOptions[0];\n            return;\n        }\n        this._unit = val;\n    }\n    get unit(): Unit {\n        return this._unit;\n    }\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            [FormFields.from]: new FormControl(null),\n            [FormFields.to]: new FormControl(null),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    protected onBeforeSetConfig(config: DatagridNumericFilterConfig): void {\n        this.unitOptions = config.unitOptions;\n        this.unit = config.unit;\n    }\n\n    setValue(values: DatagridNumericFilterValue): void {\n        if (!values) {\n            return;\n        }\n        if (typeof values[0] === 'number') {\n            this.formGroup.get(FormFields.from).setValue(values[0]);\n        } else {\n            this.formGroup.get(FormFields.from).setValue(null);\n        }\n        if (typeof values[1] === 'number') {\n            this.formGroup.get(FormFields.to).setValue(values[1]);\n        } else {\n            this.formGroup.get(FormFields.to).setValue(null);\n        }\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const from = this.formGroup.get(FormFields.from).value;\n        const to = this.formGroup.get(FormFields.to).value;\n        if (typeof from === 'number' && typeof to !== 'number') {\n            return filterBuilder.greaterThan(from).getString();\n        }\n        if (typeof from !== 'number' && typeof to === 'number') {\n            return filterBuilder.lessThan(to).getString();\n        }\n        if (typeof from === 'number' && typeof to === 'number') {\n            return filterBuilder.betweenNumbers([from, to]).getString();\n        }\n    }\n\n    isActive(): boolean {\n        return !!(\n            this.formGroup &&\n            (typeof this.formGroup.get(FormFields.from).value === 'number' ||\n                typeof this.formGroup.get(FormFields.to).value === 'number')\n        );\n    }\n\n    close(): void {\n        this.filterContainer.open = false;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param value the default value that should go in this numeric filter.\n * @param unit initial value for unit input to be selected\n * @param unitOptions Select dropdown options for unit input\n */\nexport function DatagridNumericFilter(\n    value?: DatagridNumericFilterValue,\n    unitOptions?: Unit[],\n    unit?: Unit\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridNumericFilterComponent,\n        config: {\n            value,\n            unit,\n            unitOptions,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n    \n\n    \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    datagrid-numeric-filter.component.scss\n                \n                vcd-form-input {\n    & ::ng-deep .clr-form-control,\n    & ::ng-deep .clr-subtext {\n        margin-top: 0;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridNumericFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridNumericFilterConfig.html":{"url":"interfaces/DatagridNumericFilterConfig.html","title":"interface - DatagridNumericFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridNumericFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        unit\n                                \n                                \n                                            Optional\n                                        unitOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                    \n                                \n                                \n                                    \n                                        unit:         Unit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitOptions\n                                    \n                                \n                                \n                                    \n                                        unitOptions:         Unit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { NumberWithUnitFormInputComponent } from '../../form';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { Unit } from '../../utils/unit/unit';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nenum FormFields {\n    from = 'from',\n    to = 'to',\n}\n\n/**\n * The type of value that goes in the {@link DatagridNumericFilterConfig}.\n */\nexport type DatagridNumericFilterValue = [number, number];\n\n/**\n * Numeric filter UI widget has only single configuration. So there are no properties in addition to FilterConfig\n */\nexport interface DatagridNumericFilterConfig extends FilterConfig {\n    unit?: Unit;\n    unitOptions?: Unit[];\n}\n\n@Component({\n    selector: 'vcd-dg-numeric-filter',\n    templateUrl: 'datagrid-numeric-filter.component.html',\n    styleUrls: ['datagrid-numeric-filter.component.scss'],\n})\nexport class DatagridNumericFilterComponent\n    extends DatagridFilter\n    implements OnInit, OnDestroy {\n    maxNumberLength = Number.MAX_SAFE_INTEGER.toString().length;\n\n    @ViewChild('from') fromInput: NumberWithUnitFormInputComponent;\n    @ViewChild('to') toInput: NumberWithUnitFormInputComponent;\n\n    /**\n     * Options for the select input of units\n     */\n    private _unitOptions: Unit[];\n    @Input() set unitOptions(val: Unit[]) {\n        this._unitOptions = val;\n        if (!this.unit && this.unitOptions && this.unitOptions.length) {\n            this.unit = this.unitOptions[0];\n        }\n    }\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * Base unit to which selected units are converted\n     */\n    private _unit: Unit;\n    @Input() set unit(val: Unit) {\n        if (!val && this.unitOptions && this.unitOptions.length) {\n            this._unit = this.unitOptions[0];\n            return;\n        }\n        this._unit = val;\n    }\n    get unit(): Unit {\n        return this._unit;\n    }\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            [FormFields.from]: new FormControl(null),\n            [FormFields.to]: new FormControl(null),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    protected onBeforeSetConfig(config: DatagridNumericFilterConfig): void {\n        this.unitOptions = config.unitOptions;\n        this.unit = config.unit;\n    }\n\n    setValue(values: DatagridNumericFilterValue): void {\n        if (!values) {\n            return;\n        }\n        if (typeof values[0] === 'number') {\n            this.formGroup.get(FormFields.from).setValue(values[0]);\n        } else {\n            this.formGroup.get(FormFields.from).setValue(null);\n        }\n        if (typeof values[1] === 'number') {\n            this.formGroup.get(FormFields.to).setValue(values[1]);\n        } else {\n            this.formGroup.get(FormFields.to).setValue(null);\n        }\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const from = this.formGroup.get(FormFields.from).value;\n        const to = this.formGroup.get(FormFields.to).value;\n        if (typeof from === 'number' && typeof to !== 'number') {\n            return filterBuilder.greaterThan(from).getString();\n        }\n        if (typeof from !== 'number' && typeof to === 'number') {\n            return filterBuilder.lessThan(to).getString();\n        }\n        if (typeof from === 'number' && typeof to === 'number') {\n            return filterBuilder.betweenNumbers([from, to]).getString();\n        }\n    }\n\n    isActive(): boolean {\n        return !!(\n            this.formGroup &&\n            (typeof this.formGroup.get(FormFields.from).value === 'number' ||\n                typeof this.formGroup.get(FormFields.to).value === 'number')\n        );\n    }\n\n    close(): void {\n        this.filterContainer.open = false;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param value the default value that should go in this numeric filter.\n * @param unit initial value for unit input to be selected\n * @param unitOptions Select dropdown options for unit input\n */\nexport function DatagridNumericFilter(\n    value?: DatagridNumericFilterValue,\n    unitOptions?: Unit[],\n    unit?: Unit\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridNumericFilterComponent,\n        config: {\n            value,\n            unit,\n            unitOptions,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridSelectFilterComponent.html":{"url":"components/DatagridSelectFilterComponent.html","title":"component - DatagridSelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridSelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n\n\n    \n        Description\n    \n    \n        Used within a clarity grid column DatagridComponent to render a filter widget with select input\nExample usage:\ncolumns: GridColumn[] = [{\n      displayName: 'Custom Select filter',\n      renderer: 'age',\n      queryFieldName: 'age',\n      filterRendererSpec: FilterComponentRendererSpec({\n          type: DatagridSelectFilterComponent,\n          config: {\n              options: [{\n                  value: 30,\n                  display: 'Thirty'\n              }, {\n                  value: 60,\n                  display: 'sixty'\n              }],\n              value: 60,\n          },\n      }),\n   }]\n\n    \n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-select-filter\n            \n\n\n\n\n            \n                templateUrl\n                datagrid-select-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anyChoice\n                            \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            anyChoice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectOption\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        value: '',\n        display: '',\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/datagrid/filters/datagrid-select-filter.component.ts:59\n                            \n                        \n\n                \n                    \n                        Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * List of select options and initial value for the filter are passed through this\n */\nexport interface DatagridSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: SelectOption[];\n\n    /**\n     * Switch to disable conversion of filter value to FIQL. Used by {@link DatagridSelectFilterComponent#getValue}\n     */\n    customFiql?: boolean;\n}\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with select input\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'age',\n *      queryFieldName: 'age',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 30,\n *                  display: 'Thirty'\n *              }, {\n *                  value: 60,\n *                  display: 'sixty'\n *              }],\n *              value: 60,\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-select-filter',\n    templateUrl: 'datagrid-select-filter.component.html',\n})\nexport class DatagridSelectFilterComponent\n    extends DatagridFilter\n    implements OnInit, OnDestroy {\n    /**\n     * Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n     */\n    anyChoice: SelectOption = {\n        value: '',\n        display: '',\n    };\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterSelect: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter, private fb: FormBuilder) {\n        super(filterContainer);\n        this.formGroup = this.fb.group({\n            filterSelect: '',\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 0;\n    }\n\n    setValue(value: string | number): void {\n        if (!this.config.options.find((option) => option.value === value)) {\n            throw Error('The value being set on select filter is not equal to any of the options');\n        }\n        this.formGroup.setValue({\n            filterSelect: value,\n        });\n    }\n\n    getValue(): string {\n        if (this.config.customFiql) {\n            return this.formGroup.get('filterSelect').value;\n        }\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const value = this.formGroup.get('filterSelect').value;\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterSelect').value;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this select filter.\n * @param customFiql when set as true will disable any formatting by {@link DatagridSelectFilterComponent#getValue}\n */\nexport function DatagridSelectFilter(\n    options: SelectOption[],\n    value?: string | number,\n    customFiql?: boolean\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridSelectFilterComponent,\n        config: {\n            options,\n            value,\n            customFiql,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    {{ anyChoice.display }}\n                    \n                        {{ option.isTranslatable ? (option.display | translate) : option.display }}\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ anyChoice.display }}                                            {{ option.isTranslatable ? (option.display | translate) : option.display }}                                                            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridSelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridSelectFilterConfig.html":{"url":"interfaces/DatagridSelectFilterConfig.html","title":"interface - DatagridSelectFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridSelectFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                List of select options and initial value for the filter are passed through this\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customFiql\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFiql\n                                    \n                                \n                                \n                                    \n                                        customFiql:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Switch to disable conversion of filter value to FIQL. Used by DatagridSelectFilterComponent\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         SelectOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of select options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * List of select options and initial value for the filter are passed through this\n */\nexport interface DatagridSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: SelectOption[];\n\n    /**\n     * Switch to disable conversion of filter value to FIQL. Used by {@link DatagridSelectFilterComponent#getValue}\n     */\n    customFiql?: boolean;\n}\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with select input\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'age',\n *      queryFieldName: 'age',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 30,\n *                  display: 'Thirty'\n *              }, {\n *                  value: 60,\n *                  display: 'sixty'\n *              }],\n *              value: 60,\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-select-filter',\n    templateUrl: 'datagrid-select-filter.component.html',\n})\nexport class DatagridSelectFilterComponent\n    extends DatagridFilter\n    implements OnInit, OnDestroy {\n    /**\n     * Displayed as the first option with a falsy value. Selecting this option would deactivate the filter\n     */\n    anyChoice: SelectOption = {\n        value: '',\n        display: '',\n    };\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterSelect: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter, private fb: FormBuilder) {\n        super(filterContainer);\n        this.formGroup = this.fb.group({\n            filterSelect: '',\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 0;\n    }\n\n    setValue(value: string | number): void {\n        if (!this.config.options.find((option) => option.value === value)) {\n            throw Error('The value being set on select filter is not equal to any of the options');\n        }\n        this.formGroup.setValue({\n            filterSelect: value,\n        });\n    }\n\n    getValue(): string {\n        if (this.config.customFiql) {\n            return this.formGroup.get('filterSelect').value;\n        }\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        const value = this.formGroup.get('filterSelect').value;\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterSelect').value;\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this select filter.\n * @param customFiql when set as true will disable any formatting by {@link DatagridSelectFilterComponent#getValue}\n */\nexport function DatagridSelectFilter(\n    options: SelectOption[],\n    value?: string | number,\n    customFiql?: boolean\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridSelectFilterComponent,\n        config: {\n            options,\n            value,\n            customFiql,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatagridStringFilterComponent.html":{"url":"components/DatagridStringFilterComponent.html","title":"component - DatagridStringFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatagridStringFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n\n\n\n    \n        Extends\n    \n    \n                DatagridFilter\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-dg-string-filter\n            \n\n\n\n\n            \n                templateUrl\n                datagrid-string-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _config\n                            \n                            \n                                changes\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addWildCard\n                            \n                            \n                                createFormGroup\n                            \n                            \n                                getValue\n                            \n                            \n                                isActive\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setValue\n                            \n                            \n                                accepts\n                            \n                            \n                                    Abstract\n                                createFormGroup\n                            \n                            \n                                    Protected\n                                getDebounceTimeMs\n                            \n                            \n                                    Abstract\n                                getValue\n                            \n                            \n                                    Abstract\n                                isActive\n                            \n                            \n                                    Abstract\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onBeforeSetConfig\n                            \n                            \n                                    Abstract\n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterContainer: ClrDatagridFilter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterContainer\n                                                  \n                                                        \n                                                                        ClrDatagridFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     C\n\n                    \n                \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:72\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addWildCard\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addWildCard(input: string, position: WildCardPosition, wildcardCharacter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:65\n                \n            \n\n\n            \n                \n                    Wraps a string with a wrapCharacter in given position;\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    position\n                                    \n                                                WildCardPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    wildcardCharacter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '*'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/filters/datagrid-string-filter.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            accepts\n                        \n                        \n                    \n                \n            \n            \n                \naccepts()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:137\n\n                \n            \n\n\n            \n                \n                    Required by Clarity but ignored since we don't support client side filtering\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:112\n\n                \n            \n\n\n            \n                \n                    To initialize the formGroup from sub classes\n\n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getDebounceTimeMs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDebounceTimeMs()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:99\n\n                \n            \n\n\n            \n                \n                    To override the default delay time for emission of changes\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:122\n\n                \n            \n\n\n            \n                \n                    For getting the filter UI widget values in FIQL formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:127\n\n                \n            \n\n\n            \n                \n                    Return true if the filter is currently activated (e.g. a value is provided)\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            onBeforeSetConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onBeforeSetConfig(config: C)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:107\n\n                \n            \n\n\n            \n                \n                    Called inside setter of DatagridFilter and Defined in the derived classes to perform some logic before\nassigning the UI widget configuration and setting a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            setValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setValue(value: V)\n                \n            \n\n\n            \n                \n                    Inherited from         DatagridFilter\n\n                \n            \n            \n                \n                        Defined in         DatagridFilter:117\n\n                \n            \n\n\n            \n                \n                    Used for assigning a value to a filter from outside\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            V\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     C\n\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:71\n\n                            \n                        \n\n                \n                    \n                        Sets the configuration needed for a filter UI widget and also it's value.\nAssigned from ComponentRendererOutletDirective after the filter component is created.\nUsed by the getValue method in sub classes to format the FIQL string output.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:87\n\n                            \n                        \n\n                \n                    \n                        Emits whenever a filter form inputs changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.createFormGroup()\n\n                        \n                    \n                    \n                        \n                            Default value : this.createFormGroup()\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:59\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                            \n                                \n                                    Inherited from         DatagridFilter\n\n                                \n                            \n                        \n                            \n                                    Defined in         DatagridFilter:60\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nexport enum WildCardPosition {\n    NONE = 0,\n    START = 1,\n    END = 2,\n    WRAP = WildCardPosition.START | WildCardPosition.END,\n}\n\n/**\n * Configures the '*' position in the FIQL string output\n */\nexport interface DatagridStringFilterConfig extends FilterConfig {\n    wildCardPosition?: WildCardPosition;\n}\n\n@Component({\n    selector: 'vcd-dg-string-filter',\n    templateUrl: 'datagrid-string-filter.component.html',\n})\nexport class DatagridStringFilterComponent\n    extends DatagridFilter\n    implements OnDestroy {\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterText: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    setValue(value: string): void {\n        this.formGroup.setValue({\n            filterText: value,\n        });\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        let value = this.formGroup.get('filterText').value;\n        if (this.config && this.config.wildCardPosition) {\n            value = this.addWildCard(value, this.config.wildCardPosition);\n        }\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterText').value;\n    }\n\n    /**\n     * Wraps a string with a `wrapCharacter` in given position;\n     */\n    private addWildCard(input: string, position: WildCardPosition, wildcardCharacter = '*'): string {\n        const start = getWrapCharacter(position, WildCardPosition.START);\n        const end = getWrapCharacter(position, WildCardPosition.END);\n        return `${start}${input}${end}`;\n        /**\n         * @return `wrapCharacter` if the passed in position should show it, an empty string otherwise\n         */\n        function getWrapCharacter(inputPosition: WildCardPosition, checkPosition: WildCardPosition): string {\n            return inputPosition & checkPosition ? wildcardCharacter : '';\n        }\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param wildCardPosition where the * should go in the FIQL string output.\n * @param value the default value of the filter\n */\nexport function DatagridStringFilter(\n    wildCardPosition?: WildCardPosition,\n    value?: string\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridStringFilterComponent,\n        config: {\n            wildCardPosition,\n            value,\n        },\n    });\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatagridStringFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatagridStringFilterConfig.html":{"url":"interfaces/DatagridStringFilterConfig.html","title":"interface - DatagridStringFilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatagridStringFilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Configures the '*' position in the FIQL string output\n\n            \n\n            \n                Extends\n            \n            \n                        FilterConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        wildCardPosition\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        wildCardPosition\n                                    \n                                \n                                \n                                    \n                                        wildCardPosition:         WildCardPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WildCardPosition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\nexport enum WildCardPosition {\n    NONE = 0,\n    START = 1,\n    END = 2,\n    WRAP = WildCardPosition.START | WildCardPosition.END,\n}\n\n/**\n * Configures the '*' position in the FIQL string output\n */\nexport interface DatagridStringFilterConfig extends FilterConfig {\n    wildCardPosition?: WildCardPosition;\n}\n\n@Component({\n    selector: 'vcd-dg-string-filter',\n    templateUrl: 'datagrid-string-filter.component.html',\n})\nexport class DatagridStringFilterComponent\n    extends DatagridFilter\n    implements OnDestroy {\n    createFormGroup(): FormGroup {\n        return new FormGroup({\n            filterText: new FormControl(''),\n        });\n    }\n\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    setValue(value: string): void {\n        this.formGroup.setValue({\n            filterText: value,\n        });\n    }\n\n    getValue(): string {\n        const filterBuilder = new FilterBuilder().is(this.queryField);\n        let value = this.formGroup.get('filterText').value;\n        if (this.config && this.config.wildCardPosition) {\n            value = this.addWildCard(value, this.config.wildCardPosition);\n        }\n        return filterBuilder.equalTo(value).getString();\n    }\n\n    isActive(): boolean {\n        return !!this.formGroup && this.formGroup.get('filterText').value;\n    }\n\n    /**\n     * Wraps a string with a `wrapCharacter` in given position;\n     */\n    private addWildCard(input: string, position: WildCardPosition, wildcardCharacter = '*'): string {\n        const start = getWrapCharacter(position, WildCardPosition.START);\n        const end = getWrapCharacter(position, WildCardPosition.END);\n        return `${start}${input}${end}`;\n        /**\n         * @return `wrapCharacter` if the passed in position should show it, an empty string otherwise\n         */\n        function getWrapCharacter(inputPosition: WildCardPosition, checkPosition: WildCardPosition): string {\n            return inputPosition & checkPosition ? wildcardCharacter : '';\n        }\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param wildCardPosition where the * should go in the FIQL string output.\n * @param value the default value of the filter\n */\nexport function DatagridStringFilter(\n    wildCardPosition?: WildCardPosition,\n    value?: string\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridStringFilterComponent,\n        config: {\n            wildCardPosition,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailPane.html":{"url":"interfaces/DetailPane.html","title":"interface - DetailPane","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailPane\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration objet used to create the detail pane on the datagrid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        component\n                                \n                                \n                                        header\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:         ComponentRendererConstructor>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentRendererConstructor>\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The contents that go within this detail pane.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header that goes on top of this detail pane.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailPaneConfig.html":{"url":"interfaces/DetailPaneConfig.html","title":"interface - DetailPaneConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailPaneConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration object that is passed to the detail pane component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        record\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:     R\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The record that this detail pane should render.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DetailRowConfig.html":{"url":"interfaces/DetailRowConfig.html","title":"interface - DetailRowConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DetailRowConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The configuration object that is passed to the detail row component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        index\n                                \n                                \n                                        record\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of rows in the datagrid.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The index this detail row is in the datagrid.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        record\n                                    \n                                \n                                \n                                    \n                                        record:     R\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The record that this detail row should render.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DomUtil.html":{"url":"classes/DomUtil.html","title":"class - DomUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DomUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/dom-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                scrollToElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            scrollToElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollToElement(elRef: ElementRef, classSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/dom-util.ts:19\n                \n            \n\n\n            \n                \n                    Scrolls view to a element so that the element becomes visible in the viewport.\nIf a css style selector is provided then the element to scroll is the html element\ndescribed by the css selector which parent is the provided element.\nId a css style selector is not provided then the element to scroll is the provided\nelement itself.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    elRef\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the view's element.\n\n                                    \n                                \n                                \n                                    classSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        the css-style selector for the element to scroll to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ElementRef } from '@angular/core';\n\nexport class DomUtil {\n    /**\n     * Scrolls view to a element so that the element becomes visible in the viewport.\n     * If a css style selector is provided then the element to scroll is the html element\n     * described by the css selector which parent is the provided element.\n     * Id a css style selector is not provided then the element to scroll is the provided\n     * element itself.\n     *\n     * @param elRef the view's element.\n     * @param classSelector the css-style selector for the element to scroll to.\n     */\n    public static scrollToElement(elRef: ElementRef, classSelector?: string): void {\n        if (!elRef || !elRef.nativeElement) {\n            return;\n        }\n        const el: HTMLElement = elRef.nativeElement as HTMLElement;\n        const elementToScroll = classSelector ? el.querySelector(classSelector) : el;\n\n        if (elementToScroll) {\n            elementToScroll.scrollIntoView({ block: 'nearest', behavior: 'smooth' });\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropdownFocusHandlerDirective.html":{"url":"directives/DropdownFocusHandlerDirective.html","title":"directive - DropdownFocusHandlerDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropdownFocusHandlerDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n        \n\n            \n                Description\n            \n            \n                Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\nneighbors in the 4 directions. It then uses the DropdownFocusHandlerService to move the DOM focus between the menu items.\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        vcd-dropdown[vcdDropdownFocusHandler]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                closeVcdDropdown\n                            \n                            \n                                    Private\n                                clrDropdownMenuEl\n                            \n                            \n                                    Private\n                                dropdownTriggerEl\n                            \n                            \n                                    Private\n                                isRootDropdown\n                            \n                            \n                                menuItems\n                            \n                            \n                                    Private\n                                menuTrigger\n                            \n                            \n                                    Private\n                                subscriptionTracker\n                            \n                            \n                                    Private\n                                timeoutId\n                            \n                            \n                                    Private\n                                unlistenRightArrowKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDropdownItemElement\n                            \n                            \n                                    Private\n                                linkMenuItems\n                            \n                            \n                                    Private\n                                linkVertical\n                            \n                            \n                                    Private\n                                listenToRightArrowKeyPressOnNestedTrigger\n                            \n                            \n                                    Private\n                                moveFocusToFirstItem\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                registerRootMenuContainer\n                            \n                            \n                                    Private\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rootMenuTrigger\n                                \n                                \n                                    nestedMenuTrigger\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parentVcdDropdown: DropdownComponent, parentFocusHandler: DropdownFocusHandlerDirective, hostVcdDropdown: DropdownComponent, focusHandlerService: DropdownFocusHandlerService, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parentVcdDropdown\n                                                  \n                                                        \n                                                                        DropdownComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentFocusHandler\n                                                  \n                                                        \n                                                                    DropdownFocusHandlerDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hostVcdDropdown\n                                                  \n                                                        \n                                                                        DropdownComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        focusHandlerService\n                                                  \n                                                        \n                                                                        DropdownFocusHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDropdownItemElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDropdownItemElement(item: Element)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            linkMenuItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    linkMenuItems()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            linkVertical\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    linkVertical()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            listenToRightArrowKeyPressOnNestedTrigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listenToRightArrowKeyPressOnNestedTrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:118\n                \n            \n\n\n            \n                \n                    Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\nthe event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\narrow on a nested menu is opening other sibling menus as well\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            moveFocusToFirstItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    moveFocusToFirstItem()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:94\n                \n            \n\n\n            \n                \n                    After a dropdown menu is opened, it creates MenuItem for each of the menu items along with their trigger menu item and links\nthem. It also then moves the focus to first item in the opened menu list.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerRootMenuContainer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerRootMenuContainer()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeVcdDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:193\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            clrDropdownMenuEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isRootDropdown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     !this.parentVcdDropdown\n\n                        \n                    \n                    \n                        \n                            Default value : !this.parentVcdDropdown\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:78\n                            \n                        \n\n                \n                    \n                        List of focusable menu items with their neighbors in 4 directions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuTrigger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:82\n                            \n                        \n\n                \n                    \n                        The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptionTracker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionTracker\n\n                        \n                    \n                    \n                        \n                            Default value : new SubscriptionTracker(this)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeoutId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            unlistenRightArrowKeyPress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:88\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rootMenuTrigger\n                    \n                \n\n                \n                    \n                        getrootMenuTrigger()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:197\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nestedMenuTrigger\n                    \n                \n\n                \n                    \n                        getnestedMenuTrigger()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.directive.ts:204\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, Host, OnDestroy, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { DropdownFocusHandlerService } from './dropdown-focus-handler.service';\nimport { DropdownComponent } from './dropdown.component';\n\n/**\n * To filter out the non-activatable separator item type when creating linked menu list {@link #linkMenuItems}. Because, we don't\n * want the focus to go to separator item type when navigating using the arrow keys\n */\nenum ActivatableMenuItemType {\n    /**\n     * Menu item that results in executing of an action when clicked\n     */\n    BUTTON = 'button',\n    /**\n     * Activating this would open a nested menu\n     */\n    NESTED_VCD_DROPDOWN = 'vcd-dropdown',\n}\n\nconst NESTED_DROPDOWN_TRIGGER = 'clr-dropdown > button';\n\n/**\n * Arrow keys directions\n */\nexport enum Direction {\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n\n/**\n * Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n */\nexport interface MenuItem {\n    /**\n     * The HTML element of this dropdown menu item\n     */\n    element: HTMLElement;\n    /**\n     * Neighboring menu items in all the 4 directions\n     */\n    up?: MenuItem;\n    down?: MenuItem;\n    left?: MenuItem;\n    right?: MenuItem;\n    /**\n     * Call back to close the menu for which this menu item can be a trigger. called from {@link DropdownFocusHandlerService}\n     */\n    closeMenu?: () => void;\n}\n\n/**\n * Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\n * neighbors in the 4 directions. It then uses the {@link DropdownFocusHandlerService} to move the DOM focus between the menu items.\n */\n@Directive({\n    selector: 'vcd-dropdown[vcdDropdownFocusHandler]',\n})\nexport class DropdownFocusHandlerDirective implements AfterViewInit, OnDestroy {\n    constructor(\n        @Optional() @SkipSelf() private parentVcdDropdown: DropdownComponent,\n        @Optional() @SkipSelf() private parentFocusHandler: DropdownFocusHandlerDirective,\n        @Host() private hostVcdDropdown: DropdownComponent,\n        private focusHandlerService: DropdownFocusHandlerService,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * List of focusable menu items with their neighbors in 4 directions.\n     */\n    menuItems: MenuItem[];\n    /**\n     * The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n     */\n    private menuTrigger: MenuItem;\n    private dropdownTriggerEl: HTMLElement;\n    private clrDropdownMenuEl: HTMLElement;\n    private isRootDropdown = !this.parentVcdDropdown;\n    private timeoutId: number;\n    private subscriptionTracker = new SubscriptionTracker(this);\n    private unlistenRightArrowKeyPress: (...argArray: any[]) => any;\n\n    /**\n     * After a dropdown menu is opened, it creates {@link MenuItem} for each of the menu items along with their trigger menu item and links\n     * them. It also then moves the focus to first item in the opened menu list.\n     */\n    ngAfterViewInit(): void {\n        this.dropdownTriggerEl = this.hostVcdDropdown._dropdownTriggerEl;\n        this.listenToRightArrowKeyPressOnNestedTrigger();\n\n        this.subscriptionTracker.subscribe(this.hostVcdDropdown.dropdownMenuUpdated, (dropdown) => {\n            if (!dropdown) {\n                this.reset();\n                return;\n            }\n            this.clrDropdownMenuEl = dropdown.menu;\n            // We have to wait till the dropdown is opened for getting the menus trigger because, in case of a nested menu, the trigger is\n            // obtained from parent menus menuItems and they are not initialized even if we wait till the ngAfterViewInit hook\n            this.menuTrigger = this.isRootDropdown ? this.rootMenuTrigger : this.nestedMenuTrigger;\n            this.registerRootMenuContainer();\n            this.linkMenuItems();\n            this.moveFocusToFirstItem();\n        });\n    }\n\n    /**\n     * Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\n     * the event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\n     * arrow on a nested menu is opening other sibling menus as well\n     */\n    private listenToRightArrowKeyPressOnNestedTrigger(): void {\n        if (this.isRootDropdown) {\n            return;\n        }\n        this.unlistenRightArrowKeyPress = this.renderer.listen(\n            this.dropdownTriggerEl,\n            'keydown.arrowright',\n            (event: Event) => event.stopPropagation()\n        );\n    }\n\n    private reset(): void {\n        if (this.isRootDropdown) {\n            this.focusHandlerService.unlistenFuncs.forEach((unlisten) => unlisten());\n        }\n        this.menuTrigger = null;\n        this.menuItems = null;\n    }\n\n    ngOnDestroy(): void {\n        if (this.unlistenRightArrowKeyPress) {\n            this.unlistenRightArrowKeyPress();\n        }\n    }\n\n    private registerRootMenuContainer(): void {\n        if (this.isRootDropdown) {\n            const rootMenuContainer = this.clrDropdownMenuEl;\n            this.focusHandlerService.listenToArrowKeys(rootMenuContainer);\n        }\n    }\n\n    private moveFocusToFirstItem(): void {\n        this.focusHandlerService.moveFocusTo(this.menuTrigger);\n        // After the menu is opened, the ClrDropdownMenu wouldn't be attached to the DOM until the next change detection cycle.\n        // So setTimeout is the only way to wait for the ClrDropdownMenu to be ready to move focus to first item.\n        this.timeoutId = window.setTimeout(() => {\n            if (this.parentVcdDropdown) {\n                this.focusHandlerService.moveFocus(Direction.RIGHT);\n            } else {\n                this.focusHandlerService.moveFocus(Direction.DOWN);\n            }\n            window.clearTimeout(this.timeoutId);\n        });\n    }\n\n    private getDropdownItemElement(item: Element): HTMLElement {\n        // We only need the underlying button that opens the nested dropdown as that is the activatable/focusable item\n        return (item.matches(ActivatableMenuItemType.BUTTON)\n            ? item\n            : item.querySelector(NESTED_DROPDOWN_TRIGGER)) as HTMLElement;\n    }\n\n    private linkMenuItems(): void {\n        const menuChildren: Element[] = Array.from(this.clrDropdownMenuEl.children);\n        this.menuItems = menuChildren\n            .filter(\n                (child) =>\n                    child.matches(ActivatableMenuItemType.BUTTON) ||\n                    child.matches(ActivatableMenuItemType.NESTED_VCD_DROPDOWN)\n            )\n            .map((child) => ({\n                element: this.getDropdownItemElement(child),\n                left: this.menuTrigger,\n            }));\n        this.linkVertical();\n        // Lint to menu trigger\n        if (this.isRootDropdown) {\n            this.menuTrigger.down = this.menuItems[0];\n        } else {\n            // If there is a parent dropdown, We have to link these menu items to their trigger in the parent dropdown\n            this.menuTrigger.right = this.menuItems[0];\n        }\n    }\n\n    private closeVcdDropdown = () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    };\n\n    private get rootMenuTrigger(): MenuItem {\n        return {\n            element: this.dropdownTriggerEl,\n            closeMenu: this.closeVcdDropdown,\n        };\n    }\n\n    private get nestedMenuTrigger(): MenuItem {\n        const menuTrigger = this.parentFocusHandler.menuItems.find((item) => {\n            return Object.is(item.element.innerText, this.dropdownTriggerEl.innerText);\n        });\n        menuTrigger.closeMenu = this.closeVcdDropdown;\n        return menuTrigger;\n    }\n\n    private linkVertical(): void {\n        this.menuItems.forEach((menuItem: MenuItem, index: number) => {\n            if (index > 0) {\n                menuItem.up = this.menuItems[index - 1];\n            }\n            if (index  1) {\n            this.menuItems[0].up = this.menuItems[this.menuItems.length - 1];\n            this.menuItems[this.menuItems.length - 1].down = this.menuItems[0];\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DropdownFocusHandlerService.html":{"url":"injectables/DropdownFocusHandlerService.html","title":"injectable - DropdownFocusHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DropdownFocusHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Provided at the injector level of root DropdownComponent. The same service object is used for all the nested menus along\nwith the root menu. This is responsible for listening to arrow key presses within the root dropdown menu container and updating the\nfocused item on the DOM across all the nested and root menus.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentFocusedItem\n                            \n                            \n                                unlistenFuncs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                escapePressed\n                            \n                            \n                                listenToArrowKeys\n                            \n                            \n                                moveFocus\n                            \n                            \n                                moveFocusTo\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapePressed\n                        \n                        \n                    \n                \n            \n            \n                \nescapePressed()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:106\n                \n            \n\n\n            \n                \n                    Whenever escape is pressed on dropdown item, the menu has to be closed and the focus has to be moved to parent menu if any... Just\nlike when left arrow key is pressed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenToArrowKeys\n                        \n                        \n                    \n                \n            \n            \n                \nlistenToArrowKeys(menuContainer: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:72\n                \n            \n\n\n            \n                \n                    Attaches arrow key event listeners to the root menu container in all direction except right. This is because, when a right arrow is\npressed, Clarity opens the nested dropdown menu and the logic inside DropdownFocusHandlerDirective.ngAfterViewInit\nautomatically moves the focus to first item in the menu on the right side\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuContainer\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveFocus\n                        \n                        \n                    \n                \n            \n            \n                \nmoveFocus(direction: Direction)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:28\n                \n            \n\n\n            \n                \n                    Moves the focus to HTML element in the given direction and returns true if the focus is moved and false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                                Direction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveFocusTo\n                        \n                        \n                    \n                \n            \n            \n                \nmoveFocusTo(item: MenuItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:51\n                \n            \n\n\n            \n                \n                    Calls the HTML focus method on the HTML element passed and removed focus on currently focused element.\nReturns true if the focus is moved and false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                MenuItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentFocusedItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuItem\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlistenFuncs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     (function)[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dropdown-focus-handler.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy, Renderer2 } from '@angular/core';\nimport { Direction, MenuItem } from './dropdown-focus-handler.directive';\n\n/**\n * Provided at the injector level of root {@link DropdownComponent}. The same service object is used for all the nested menus along\n * with the root menu. This is responsible for listening to arrow key presses within the root dropdown menu container and updating the\n * focused item on the DOM across all the nested and root menus.\n */\n@Injectable()\nexport class DropdownFocusHandlerService implements OnDestroy {\n    currentFocusedItem: MenuItem;\n    unlistenFuncs: (() => void)[] = [];\n\n    constructor(private renderer: Renderer2) {}\n\n    ngOnDestroy(): void {\n        this.unlistenFuncs.forEach((unlisten) => unlisten());\n    }\n\n    /**\n     * Moves the focus to HTML element in the given direction and returns true if the focus is moved and false otherwise\n     */\n    moveFocus(direction: Direction): boolean {\n        let moved;\n        switch (direction) {\n            case Direction.DOWN:\n                moved = this.moveFocusTo(this.currentFocusedItem.down);\n                break;\n            case Direction.LEFT:\n                moved = this.moveFocusTo(this.currentFocusedItem.left);\n                break;\n            case Direction.UP:\n                moved = this.moveFocusTo(this.currentFocusedItem.up);\n                break;\n            case Direction.RIGHT:\n                moved = this.moveFocusTo(this.currentFocusedItem.right);\n                break;\n        }\n        return moved;\n    }\n\n    /**\n     * Calls the HTML focus method on the HTML element passed and removed focus on currently focused element.\n     * Returns true if the focus is moved and false otherwise.\n     */\n    moveFocusTo(item: MenuItem): boolean {\n        if (!item) {\n            return false;\n        }\n        if (this.currentFocusedItem) {\n            // Sometimes, when navigating to a nested menu using right arrow, the nested menu trigger gets focused multiple times\n            if (Object.is(this.currentFocusedItem.element, item.element)) {\n                return false;\n            }\n            this.currentFocusedItem.element.blur();\n        }\n        item.element.focus();\n        this.currentFocusedItem = item;\n        return true;\n    }\n\n    /**\n     * Attaches arrow key event listeners to the root menu container in all direction except right. This is because, when a right arrow is\n     * pressed, Clarity opens the nested dropdown menu and the logic inside {@link DropdownFocusHandlerDirective.ngAfterViewInit}\n     * automatically moves the focus to first item in the menu on the right side\n     */\n    listenToArrowKeys(menuContainer: HTMLElement): void {\n        // We call event.preventDefault below to prevent scrolling of page underneath the dropdown when arrow keys are pressed\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowdown', (event: Event) => {\n                event.stopPropagation();\n                this.moveFocus(Direction.DOWN);\n                event.preventDefault();\n            })\n        );\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowup', (event: Event) => {\n                event.stopPropagation();\n                this.moveFocus(Direction.UP);\n                event.preventDefault();\n            })\n        );\n        this.unlistenFuncs.push(\n            this.renderer.listen(menuContainer, 'keydown.arrowleft', (event: Event) => {\n                if (!this.currentFocusedItem.left) {\n                    return;\n                }\n                // Close the nested menu before moving focus to left side\n                this.currentFocusedItem.left.closeMenu();\n                event.stopPropagation();\n                this.moveFocus(Direction.LEFT);\n                event.preventDefault();\n            })\n        );\n    }\n\n    /**\n     * Whenever escape is pressed on dropdown item, the menu has to be closed and the focus has to be moved to parent menu if any... Just\n     * like when left arrow key is pressed\n     */\n    escapePressed(): void {\n        if (!this.currentFocusedItem.left) {\n            return;\n        }\n        // Close the nested menu before moving focus to left side\n        this.currentFocusedItem.left.closeMenu();\n        this.moveFocus(Direction.LEFT);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_DropdownComponent_providers\n\n\n\ncluster_DropdownModule_imports\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownFocusHandlerDirective\n\nDropdownFocusHandlerDirective\n\nDropdownModule -->\n\nDropdownFocusHandlerDirective->DropdownModule\n\n\n\n\n\nDynamicDropdownPositionDirective\n\nDynamicDropdownPositionDirective\n\nDropdownModule -->\n\nDynamicDropdownPositionDirective->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective  -->\n\nDropdownModule->DropdownFocusHandlerDirective \n\n\n\n\n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective  -->\n\nDropdownModule->DynamicDropdownPositionDirective \n\n\n\n\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDropdownComponent -->\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER->DropdownComponent\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nDropdownModule -->\n\nShowClippedTextDirectiveModule->DropdownModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                        \n                            DropdownFocusHandlerDirective\n                        \n                        \n                            DynamicDropdownPositionDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                        \n                            DropdownFocusHandlerDirective\n                        \n                        \n                            DynamicDropdownPositionDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { DropdownFocusHandlerDirective } from './dropdown-focus-handler.directive';\nimport { DropdownComponent } from './dropdown.component';\nimport { DynamicDropdownPositionDirective } from './dynamic-dropdown-position.directive';\n\n@NgModule({\n    declarations: [DropdownComponent, DynamicDropdownPositionDirective, DropdownFocusHandlerDirective],\n    imports: [CommonModule, ReactiveFormsModule, ClarityModule, I18nModule, ShowClippedTextDirectiveModule],\n    exports: [DropdownComponent, DynamicDropdownPositionDirective, DropdownFocusHandlerDirective],\n})\nexport class DropdownModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicDropdownPositionDirective.html":{"url":"directives/DynamicDropdownPositionDirective.html","title":"directive - DynamicDropdownPositionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DynamicDropdownPositionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive for ClrDropDown which repositions the drop-down menu dynamically based on the available space.\nIf there is not enough space to show the whole drop-down menu, then leave the default position which is bottom and\nusers have to scroll down to access it.\n\n            \n\n            \n                Implements\n            \n            \n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            ```\n * \n *     \n *         {{ 'vm.actions' | translate }}\n *         \n *         \n *     \n *         Dropdown header\n *         Action 1\n *         Action 2\n *         \n *         Link 1\n *         Link 2\n *     \n * \n * ```\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        clr-dropdown[vcdDynamicDropdown]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contentAreaElement\n                            \n                            \n                                    Private\n                                dropdownMenuElement\n                            \n                            \n                                    Private\n                                dropdownMenuRect\n                            \n                            \n                                    Private\n                                dropdownTriggerElement\n                            \n                            \n                                    Private\n                                dropdownTriggerRect\n                            \n                            \n                                    Private\n                                isInsideModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Private\n                                resetPosition\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dropdownMenu\n                                \n                                \n                                    positionTop\n                                \n                                \n                                    positionLeft\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, renderer: Renderer2, document: Document, dropDownBtn: ClrDropdown, parentDropdown: DynamicDropdownPositionDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dropDownBtn\n                                                  \n                                                        \n                                                                    ClrDropdown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parentDropdown\n                                                  \n                                                        \n                                                                    DynamicDropdownPositionDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:198\n                \n            \n\n\n            \n                \n                    On window resize, close the dropdown when it is open, otherwise we need to recalculate again its position\nand reposition it, which may not be a good user experience.\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPosition(element: HTMLElement, top: number, left: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:188\n                \n            \n\n\n            \n                \n                    Reposition the dropdown element by setting top and left position.\nNote: The dropdown is position absolute by setting position, top and left properties AND then is position\nrelatively to itself by setting transform: translateX/Y property.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    left\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contentAreaElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownMenuElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownMenuRect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DOMRect\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dropdownTriggerRect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DOMRect\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isInsideModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:63\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropdownMenu\n                    \n                \n\n\n                \n                    \n                        setdropdownMenu(dropdown)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            dropdown\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        positionTop\n                    \n                \n\n                \n                    \n                        getpositionTop()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        positionLeft\n                    \n                \n\n                \n                    \n                        getpositionLeft()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/dropdown/dynamic-dropdown-position.directive.ts:134\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    ElementRef,\n    HostListener,\n    Inject,\n    Optional,\n    Renderer2,\n    SkipSelf,\n} from '@angular/core';\nimport { ClrDropdown, ClrDropdownMenu } from '@clr/angular';\n\nconst CONTENT_AREA_SELECTOR = '.content-area';\nconst NO_SCROLLING_CLASSNAME = 'no-scrolling'; // Set by Clarity when a modal is opened\n// Extra space on the right and left of drop down menus to shift them left or right and prevent any clipping\nconst MENU_BUFFER_SPACE = 150;\n\n/**\n * Directive for ClrDropDown which repositions the drop-down menu dynamically based on the available space.\n *\n * If there is not enough space to show the whole drop-down menu, then leave the default position which is `bottom` and\n * users have to scroll down to access it.\n *\n * @example\n * ```\n * \n *     \n *         {{ 'vm.actions' | translate }}\n *         \n *         \n *     \n *         Dropdown header\n *         Action 1\n *         Action 2\n *         \n *         Link 1\n *         Link 2\n *     \n * \n * ```\n */\n/**\n * This component is marked as dynamic to suppress the '\"strictMetadataEmit\": true' error being reported on DI of Document\n */\n/** @dynamic */\n@Directive({\n    selector: 'clr-dropdown[vcdDynamicDropdown]',\n})\nexport class DynamicDropdownPositionDirective implements AfterContentInit {\n    private contentAreaElement: HTMLElement;\n    private dropdownTriggerElement: HTMLElement;\n    private dropdownMenuElement: HTMLElement;\n    private dropdownTriggerRect: DOMRect;\n    private dropdownMenuRect: DOMRect;\n    // Drop downs should be position absolutely to the window when they are in modal\n    private isInsideModal = false;\n\n    @ContentChild(ClrDropdownMenu, { static: false })\n    set dropdownMenu(dropdown: ClrDropdownMenu) {\n        if (dropdown) {\n            this.dropdownTriggerElement = this.elRef.nativeElement;\n            this.dropdownMenuElement = this.dropdownTriggerElement.querySelector('clr-dropdown-menu');\n            if (this.dropdownMenuElement) {\n                // Recalculate the dropdown position on open\n                this.dropdownTriggerRect = this.dropdownTriggerElement.getBoundingClientRect();\n                this.dropdownMenuRect = this.dropdownMenuElement.getBoundingClientRect();\n                this.resetPosition(this.dropdownMenuElement, this.positionTop, this.positionLeft);\n            }\n            try {\n                // Internal API\n                (dropdown as any).popoverInstance.removeScrollEventListeners();\n            } catch (e) {\n                console.error('Clarity has changed ClrDropdownMenu internal API. Please fix me!');\n                throw new Error('Clarity has changed ClrDropdownMenu internal API. Please fix me!');\n            }\n        }\n    }\n\n    constructor(\n        private elRef: ElementRef,\n        private renderer: Renderer2,\n        @Inject(DOCUMENT) private document: Document,\n        private dropDownBtn: ClrDropdown,\n        @Optional() @SkipSelf() private parentDropdown: DynamicDropdownPositionDirective\n    ) {}\n\n    ngAfterContentInit(): void {\n        this.isInsideModal = this.document.body.classList.contains(NO_SCROLLING_CLASSNAME);\n        if (!this.isInsideModal) {\n            this.contentAreaElement = this.document.body.querySelector(CONTENT_AREA_SELECTOR) as HTMLElement;\n        }\n    }\n\n    private get positionTop(): number {\n        const dropdownTriggerRect = this.dropdownTriggerRect;\n        const dropdownTriggerHeight = dropdownTriggerRect.bottom - dropdownTriggerRect.top;\n        const dropdownMenuRect = this.dropdownMenuRect;\n        const dropdownMenuHeight = dropdownMenuRect.bottom - dropdownMenuRect.top;\n\n        // When the dropdown is inside a modal and it's being clipped, its position is determined based on the window\n        if (this.isInsideModal && dropdownMenuRect.bottom > window.innerHeight) {\n            return -(dropdownMenuHeight + dropdownTriggerHeight + 1);\n        }\n        if (!this.contentAreaElement) {\n            return 0;\n        }\n        const contentAreaRect = this.contentAreaElement.getBoundingClientRect();\n        // When not in a modal, the position is relative to the `.content-area` element\n        if (dropdownMenuRect.bottom = contentAreaRect.top) {\n            // If the dropdown trigger is a dropdown item instead of a button, we shift it up by less number of pixels to avoid space\n            // between dropdown trigger and the dropdown menu\n            const isFirstDropdownTrigger = !!this.dropdownTriggerElement.querySelector('button.first-dropdown-toggle');\n            return isFirstDropdownTrigger ? -(dropdownTriggerHeight + dropdownMenuHeight) : -dropdownMenuHeight;\n        }\n        if (dropdownTriggerRect.top - dropdownMenuRect.height = contentAreaRect.right &&\n            dropdownTriggerRect.left - dropdownMenuRect.width >= contentAreaRect.left\n        ) {\n            const marginLeft = triggerComputedStyles ? parseInt(triggerComputedStyles.marginLeft, 10) : 0;\n            // If the dropdown being clipped is at the 2nd level, we want to shift it furthur left such that it would\n            // not over lap and cover the 1st level of dropdown underneath it\n            if (this.parentDropdown) {\n                const parentDropdownMenuRect = this.parentDropdown.dropdownMenuElement.getBoundingClientRect();\n                const parentDropdownWidth = parentDropdownMenuRect.right - parentDropdownMenuRect.left;\n                return -(parentDropdownWidth + dropdownMenuRect.width + marginLeft);\n            }\n            return -(dropdownMenuRect.width + marginLeft);\n        }\n        // if the dropdown is clipped at the bottom and if it is also being clipped at the top and pushed down, shift it to right\n        if (\n            dropdownMenuRect.bottom > contentAreaRect.bottom &&\n            dropdownTriggerRect.top - dropdownMenuRect.height \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorBannerComponent.html":{"url":"components/ErrorBannerComponent.html","title":"component - ErrorBannerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorBannerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/error/error-banner.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays the error message only if a non empty errorMessage is passed in\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-error-banner\n            \n\n            \n                styleUrls\n                ./error-banner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-banner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _errorMessage\n                            \n                            \n                                closed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onAlertClosedChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alertClosable\n                            \n                            \n                                alertType\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dismissed\n                            \n                            \n                                errorMessageChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorMessage\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alertClosable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:41\n                            \n                        \n                \n                    \n                        Marks clr-alert as closable or not\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        alertType\n                    \n                \n                \n                    \n                        Type :     \"danger\" | \"warning\" | \"info\" | \"success\"\n\n                    \n                \n                \n                    \n                        Default value : 'danger'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:36\n                            \n                        \n                \n                    \n                        Sets clr-alert type\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:29\n                            \n                        \n                \n                    \n                        Two way bound errorMessage, will be cleared when the user dismisses the alert\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dismissed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:24\n                            \n                        \n                \n                    \n                        Emits events when the error banner is dismissed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:54\n                            \n                        \n                \n                    \n                        Emits an event when the error message is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAlertClosedChange\n                        \n                        \n                    \n                \n            \n            \n                \nonAlertClosedChange(closed: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/error/error-banner.component.ts:59\n                \n            \n\n\n            \n                \n                    Clears the error message when the alert is closed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    closed\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n\n\n                \n                    \n                        seterrorMessage(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/error/error-banner.component.ts:46\n                                \n                            \n                    \n                        \n                                Sets the error message displayed by this error banner.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Component that displays the error message only if a non empty errorMessage is passed in\n */\n@Component({\n    selector: 'vcd-error-banner',\n    templateUrl: './error-banner.component.html',\n    styleUrls: ['./error-banner.component.scss'],\n})\nexport class ErrorBannerComponent {\n    private _errorMessage = '';\n\n    closed = true;\n\n    /**\n     * Emits events when the error banner is dismissed.\n     */\n    @Output() dismissed = new EventEmitter();\n\n    /**\n     * Two way bound errorMessage, will be cleared when the user dismisses the alert\n     */\n    @Input() get errorMessage(): string {\n        return this._errorMessage;\n    }\n\n    /**\n     * Sets clr-alert type\n     */\n    @Input() alertType: 'danger' | 'warning' | 'info' | 'success' = 'danger';\n\n    /**\n     * Marks clr-alert as closable or not\n     */\n    @Input() alertClosable = true;\n\n    /**\n     * Sets the error message displayed by this error banner.\n     */\n    set errorMessage(val: string) {\n        this._errorMessage = val;\n        this.closed = !val;\n    }\n\n    /**\n     * Emits an event when the error message is changed.\n     */\n    @Output() errorMessageChange = new EventEmitter();\n\n    /**\n     * Clears the error message when the alert is closed.\n     */\n    onAlertClosedChange(closed: boolean): void {\n        this._errorMessage = '';\n        this.errorMessageChange.emit('');\n        this.dismissed.next();\n    }\n}\n\n    \n\n    \n        \n    \n        {{ errorMessage }}\n    \n\n\n    \n\n    \n                \n                    ./error-banner.component.scss\n                \n                /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nclr-alert ::ng-deep .alert {\n    margin-left: 0;\n    margin-right: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ errorMessage }}    '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorBannerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorBannerWidgetObject.html":{"url":"classes/ErrorBannerWidgetObject.html","title":"class - ErrorBannerWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorBannerWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/error/error-banner.wo.ts\n        \n\n            \n                Description\n            \n            \n                Testing Widget Object for ErrorBannerComponent\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ariaRole\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-error-banner'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/error/error-banner.wo.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ariaRole\n                    \n                \n\n                \n                    \n                        getariaRole()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/error/error-banner.wo.ts:18\n                                \n                            \n                    \n                        \n                                The ARIA role of the component.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { WidgetObject } from '../../utils/test/widget-object';\nimport { ErrorBannerComponent } from './error-banner.component';\n\n/**\n * Testing Widget Object for {@link ErrorBannerComponent}\n */\nexport class ErrorBannerWidgetObject extends WidgetObject {\n    static tagName = 'vcd-error-banner';\n\n    /**\n     * The ARIA role of the component.\n     */\n    get ariaRole(): string {\n        return this.findElement('clr-alert').nativeElement.getAttribute('role');\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExportColumn.html":{"url":"interfaces/ExportColumn.html","title":"interface - ExportColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExportColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.component.ts\n        \n\n            \n                Description\n            \n            \n                Identifiers for each column that user is allowed to select\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        fieldName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Displayed in the list of columns. If there is no displayName, the default value is fieldName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the field in the JSON that is returned and converted to a viewable format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { ClrDropdown } from '@clr/angular';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { CsvExporterService } from './csv-exporter.service';\n\n/**\n * Identifiers for each column that user is allowed to select\n */\nexport interface ExportColumn {\n    /**\n     * Displayed in the list of columns. If there is no displayName, the default value is fieldName\n     */\n    displayName?: string;\n    /**\n     * The name of the field in the JSON that is returned and converted to a viewable format\n     */\n    fieldName: string;\n}\n\nexport enum UserOptions {\n    selectAll = 'selectAll',\n    friendlyNames = 'friendlyNames',\n    sanitize = 'sanitize',\n}\n\n/**\n * Information passed to the caller so they can fetch the data\n */\nexport interface DataExportRequestEvent {\n    /**\n     * Call this to indicate a new value to be displayed in the progress indicator.\n     * @param progress A number from 0 to 1 indicating download progress. Passing -1 will make it an indeterminate\n     */\n    updateProgress: (progress: number) => void;\n\n    /**\n     * Call this when all records have been fetched to initiate the CSV creation.\n     * This should only be called once after all data fetching is finished\n     * @param records Records to be converted into a csv file\n     * @return a promise of the resulting CSV to indicate when this potentially lengthy process is over\n     */\n    exportData: (records: object[]) => Promise;\n\n    /**\n     * Columns selected by the user.\n     */\n    selectedColumns: ExportColumn[];\n}\n\n/**\n * A dialog to export data\n *\n *  - Allows the UI to select columns to be exported\n *  - Provides a progress indicator\n *  - Converts the data that is fetched by the caller into a CSV\n */\n@Component({\n    selector: 'vcd-data-exporter',\n    templateUrl: 'data-exporter.component.html',\n    styleUrls: ['./data-exporter.component.scss'],\n})\nexport class DataExporterComponent implements OnInit, OnDestroy {\n    constructor(private csvExporterService: CsvExporterService, private translationService: TranslationService) {}\n\n    @ViewChild(ClrDropdown) set columnDropdown(columnDropdown: ClrDropdown) {\n        if (!columnDropdown) {\n            return;\n        }\n        this.subscriptionTracker.subscribe(columnDropdown.toggleService.openChange, (opened) => {\n            this.isDropdownOpen = opened;\n        });\n    }\n\n    _columns: ExportColumn[] = [];\n\n    /**\n     * List of columns that can be exported, user may deselect some before sending the download request.\n     * Display name defaults to field name if there is no displayName\n     */\n    @Input()\n    set columns(cols: ExportColumn[]) {\n        this._columns = cols;\n        this.updateFieldNameMap(cols);\n    }\n\n    get columns(): ExportColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * The name of the file to be downloaded\n     */\n    @Input() fileName = 'data-export.csv';\n\n    /**\n     * Text for the Dialog Header\n     */\n    @Input()\n    dialogHeader: LazyString = this.translationService.translateAsync('vcd.cc.data-exporter.title');\n\n    /**\n     * Text for the cancel button.\n     */\n    @Input()\n    cancelText: LazyString = this.translationService.translateAsync('vcd.cc.cancel');\n\n    /**\n     * Text for the export all button.\n     */\n    @Input()\n    exportAllText: LazyString = this.translationService.translateAsync('vcd.cc.export.all');\n\n    /**\n     * Text for the select columns dropdown button.\n     */\n    @Input()\n    selectColumnsText: LazyString = this.translationService.translateAsync('vcd.cc.select.columns');\n\n    /**\n     * Text for the export button.\n     */\n    @Input()\n    exportText: LazyString = this.translationService.translateAsync('vcd.cc.export');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    yesText: LazyString = this.translationService.translateAsync('vcd.cc.yes');\n\n    /**\n     * Text for the yes button.\n     */\n    @Input()\n    noText: LazyString = this.translationService.translateAsync('vcd.cc.no');\n\n    /**\n     * Text label that is next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.question');\n\n    /**\n     * Text the info message next to the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.info');\n\n    /**\n     * Text the hint message below the friendly field names checkbox.\n     */\n    @Input()\n    friendlyNamesHint: LazyString = this.translationService.translateAsync('vcd.cc.friendly.names.hint');\n\n    /**\n     * Text label that is next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxLabel: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.question');\n\n    /**\n     * Hint message that is below the sanitize checkbox.\n     */\n    @Input()\n    sanitizeCheckboxHint: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.hint');\n\n    /**\n     * Text the info message next to the sanitize checkbox.\n     */\n    @Input()\n    sanitizeInfoMessage: LazyString = this.translationService.translateAsync('vcd.cc.sanitize.info');\n\n    /**\n     * The message that is displayed while the data is downloading.\n     */\n    @Input()\n    downloadingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.downloading');\n\n    /**\n     * The message that is displayed while the data is writing to file.\n     */\n    @Input()\n    writingMessage: LazyString = this.translationService.translateAsync('vcd.cc.exporter.writing');\n\n    /**\n     * Whether the dialog is open\n     */\n    @Input()\n    set open(value: boolean) {\n        this._open = value;\n        this.openChange.emit(value);\n    }\n    get open(): boolean {\n        return this._open;\n    }\n\n    private _open = false;\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    forceDropdownOpen = false;\n\n    /**\n     * Fires when {@link _open} changes. Its parameter indicates the new state.\n     */\n    @Output() openChange = new EventEmitter();\n\n    /**\n     * Called when the export is ready to be created\n     */\n    @Output() dataExportRequest = new EventEmitter();\n\n    /**\n     * True between the time {@link dataExportRequest} fires and {@link DataExportRequestEvent.exportData} is called\n     * or an error is thrown\n     */\n    get isRequestPending(): boolean {\n        return this._isRequestPending;\n    }\n    private _isRequestPending = false;\n\n    /**\n     * Number between 0-1, used for displaying the progress bar.\n     */\n    get progress(): number {\n        return this._progress;\n    }\n    private _progress = 0;\n\n    private fieldNameMap = new Map();\n\n    formGroup: FormGroup;\n\n    exportStage: LazyString;\n\n    optionsFormGroup = new FormGroup({\n        [UserOptions.selectAll]: new FormControl(true),\n        [UserOptions.friendlyNames]: new FormControl(true),\n        [UserOptions.sanitize]: new FormControl(true),\n    });\n\n    /**\n     * Says if the column dropdown is open.\n     */\n    isDropdownOpen = false;\n\n    onClickExport(): void {\n        this.exportStage = this.downloadingMessage;\n        this._isRequestPending = true;\n        this.dataExportRequest.emit({\n            exportData: this.exportData.bind(this),\n            updateProgress: this.updateProgress.bind(this),\n            selectedColumns: this.selectedColumns,\n        });\n    }\n\n    get selectAllControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.selectAll) as FormControl;\n    }\n\n    get sanitizeControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.sanitize) as FormControl;\n    }\n\n    get friendlyFieldsControl(): FormControl {\n        return this.optionsFormGroup.get(UserOptions.friendlyNames) as FormControl;\n    }\n\n    get isExportEnabled(): boolean {\n        if (this.isRequestPending) {\n            return false;\n        }\n        for (const column of this.columns) {\n            if (this.formGroup.controls[column.fieldName].value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get shouldShowBubbles(): boolean {\n        return !this.selectAllControl.value && !this.isDropdownOpen;\n    }\n\n    /**\n     * Gives a list of all the columns that are selected.\n     */\n    get selectedColumns(): ExportColumn[] {\n        return this.columns.filter((col) => this.formGroup.controls[col.fieldName].value);\n    }\n\n    /**\n     * Sets the selected value of the given column.\n     */\n    selectColumn(column: ExportColumn, selected: boolean): void {\n        this.formGroup.controls[column.fieldName].setValue(selected);\n    }\n\n    ngOnInit(): void {\n        const controls = this.columns.reduce((previousValue, currentValue) => {\n            previousValue[currentValue.fieldName] = new FormControl(true);\n            return previousValue;\n        }, {});\n        this.formGroup = new FormGroup(controls);\n        this.subscriptionTracker.subscribe(this.selectAllControl.valueChanges, (change) => {\n            if (change) {\n                for (const column of this.columns) {\n                    this.formGroup.controls[column.fieldName].setValue(true);\n                }\n            } else {\n                this.forceDropdownOpen = true;\n                this.isDropdownOpen = true;\n            }\n        });\n    }\n\n    ngOnDestroy(): void {}\n\n    private exportData(records: object[]): Promise {\n        if (!this.open) {\n            return;\n        }\n\n        const rows = [\n            // First row is the display names\n            Object.keys(records[0]).map((fieldName) =>\n                this.friendlyFieldsControl.value ? this.getDisplayNameForField(fieldName) : fieldName\n            ),\n            // Then the data\n            ...records.map((rec) => Object.keys(rec).map((key) => rec[key])),\n        ];\n        return this.downloadData(rows, this.sanitizeControl.value);\n    }\n\n    downloadData(data: any[][], shouldSanitize: boolean = false): Promise {\n        this.exportStage = this.writingMessage;\n        return new Promise((resolve) => {\n            // We need to setTimeout because we changed how the message should be displayed\n            // but we need to interrupt the current task to get the message to display\n            // We tried to use window.requestAnimationFrame, but this didn't work so we had to use\n            // setTimeout().\n            setTimeout(() => {\n                this._isRequestPending = false;\n                const csvFile = this.csvExporterService.createCsv(data, shouldSanitize);\n                this.csvExporterService.downloadCsvFile(csvFile, this.fileName);\n                this.open = false;\n                resolve(csvFile);\n            });\n        });\n    }\n\n    private updateProgress(progress: number): void {\n        this._progress = progress;\n    }\n\n    private getDisplayNameForField(fieldName: string): string {\n        if (this.fieldNameMap.has(fieldName)) {\n            const exportColumn = this.fieldNameMap.get(fieldName);\n            return this.getDisplayNameForColumn(exportColumn);\n        } else {\n            return fieldName;\n        }\n    }\n\n    getDisplayNameForColumn(col: ExportColumn): string {\n        return col.displayName || col.fieldName;\n    }\n\n    private updateFieldNameMap(cols: ExportColumn[]): void {\n        this.fieldNameMap = new Map(cols.map((col) => [col.fieldName, col]));\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterBuilder.html":{"url":"classes/FilterBuilder.html","title":"class - FilterBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/filter-builder.ts\n        \n\n            \n                Description\n            \n            \n                Utility to reduce the verbosity required when creating complex query filter expressions.\nUsage:\nconst builder = new FilterBuilder();\nconst filter = builder\n          .is(\"isVappTemplate\").equalTo(true)\n          .and()\n          .is(\"vcd\").equalTo(vcdId)\n          .and().or(\n              builder.is(\"created\").before(userInputDate),\n              builder.is(\"uptime\").greaterThan(user)\n          );\nWill produce:\nisVappTemplate==true;vcd==some-urn-here;(created=lt=DATETIME,uptime=gt=3600000)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentOperator\n                            \n                            \n                                    Private\n                                parent\n                            \n                            \n                                    Private\n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                after\n                            \n                            \n                                    Public\n                                all\n                            \n                            \n                                    Public\n                                and\n                            \n                            \n                                    Public\n                                any\n                            \n                            \n                                    Public\n                                before\n                            \n                            \n                                    Public\n                                betweenNumbers\n                            \n                            \n                                    Private\n                                buildPartial\n                            \n                            \n                                    Private\n                                clear\n                            \n                            \n                                    Private\n                                condition\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                            \n                                    Public\n                                getString\n                            \n                            \n                                    Public\n                                greaterThan\n                            \n                            \n                                    Public\n                                greaterThanOrEqualTo\n                            \n                            \n                                    Public\n                                is\n                            \n                            \n                                    Public\n                                lessThan\n                            \n                            \n                                    Public\n                                lessThanOrEqualTo\n                            \n                            \n                                    Public\n                                notEqualTo\n                            \n                            \n                                    Public\n                                or\n                            \n                            \n                                    Public\n                                wrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: FilterBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/filter-builder.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        FilterBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentOperator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/filter-builder.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            after\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    after(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:246\n                \n            \n\n\n            \n                \n                    Match a filter expression to be after a date\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:106\n                \n            \n\n\n            \n                \n                    Top level AND operator\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            and\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    and(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:72\n                \n            \n\n\n            \n                \n                    Conjunct expressions\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            any\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    any(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:160\n                \n            \n\n\n            \n                \n                    Top level OR operator\nconditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            before\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    before(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:238\n                \n            \n\n\n            \n                \n                    Match a filter expression to be before a date\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            betweenNumbers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    betweenNumbers(values: number[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:256\n                \n            \n\n\n            \n                \n                    Match a filter expression to be between two numbers.\nLower limit is greater or equal and upper limit is less or equal.\nIf for either of the limit is not provided value, the limit is not included in the filter expression.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buildPartial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildPartial()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            condition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    condition(operator: string, value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    operator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            equalTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    equalTo(value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:190\n                \n            \n\n\n            \n                \n                    Match a filter expression to be equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getString()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:62\n                \n            \n\n\n            \n                \n                    Create a string representing the filter parameter to be used in a query\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the filter expression\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            greaterThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterThan(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:222\n                \n            \n\n\n            \n                \n                    Match a filter expression to be greater than a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            greaterThanOrEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    greaterThanOrEqualTo(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:230\n                \n            \n\n\n            \n                \n                    Match a filter expression to be greater than or equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            is\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    is(property: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:52\n                \n            \n\n\n            \n                \n                    Initialize a filter expression\n  property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The created FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lessThan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lessThan(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:206\n                \n            \n\n\n            \n                \n                    Match a filter expression to be less than a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lessThanOrEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lessThanOrEqualTo(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:214\n                \n            \n\n\n            \n                \n                    Match a filter expression to be less than or equal to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            notEqualTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notEqualTo(value: Primitives, moreValues: Primitives[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:198\n                \n            \n\n\n            \n                \n                    Match a filter expression to be different to a value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Primitives\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moreValues\n                                    \n                                                Primitives[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            or\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    or(conditions: FilterBuilder[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:126\n                \n            \n\n\n            \n                \n                    Disjunct expressions\n  conditions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                FilterBuilder[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            wrap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    wrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/filter-builder.ts:180\n                \n            \n\n\n            \n                \n                    Wrap the current expression in ()\n\n\n                    \n                    \n                    \n                        Returns :         FilterBuilder\n\n                    \n                    \n                        The FilterBuilder instance\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const Operators: { [key: string]: string } = {\n    OR: ',',\n    AND: ';',\n    GT: '=gt=',\n    GE: '=ge=',\n    LT: '=lt=',\n    LE: '=le=',\n    EQ: '==',\n    NEQ: '!=',\n};\n\nexport type Primitives = boolean | string | number;\n\n/**\n * Utility to reduce the verbosity required when creating complex query filter expressions.\n *\n * Usage:\n * const builder = new FilterBuilder();\n * const filter = builder\n *          .is(\"isVappTemplate\").equalTo(true)\n *          .and()\n *          .is(\"vcd\").equalTo(vcdId)\n *          .and().or(\n *              builder.is(\"created\").before(userInputDate),\n *              builder.is(\"uptime\").greaterThan(user)\n *          );\n *\n * Will produce:\n * isVappTemplate==true;vcd==some-urn-here;(created=lt=DATETIME,uptime=gt=3600000)\n */\nexport class FilterBuilder {\n    private result = '';\n    private parent: FilterBuilder;\n    private currentOperator: string;\n\n    constructor(parent: FilterBuilder = null) {\n        this.parent = parent;\n    }\n\n    /**\n     * Initialize a filter expression\n     *  property\n     * @returns The created FilterBuilder instance\n     */\n    public is(property: string): FilterBuilder {\n        const fb = new FilterBuilder(this);\n        fb.result = property;\n        return fb;\n    }\n\n    /**\n     * Create a string representing the filter parameter to be used in a query\n     * @returns the filter expression\n     */\n    public getString(): string {\n        const query = this.buildPartial();\n        return query;\n    }\n\n    /**\n     * Conjunct expressions\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public and(...conditions: FilterBuilder[]): FilterBuilder {\n        if (!conditions.length) {\n            if (\n                this.currentOperator === Operators.OR ||\n                (this.parent && this.parent.currentOperator === Operators.OR)\n            ) {\n                if (this.parent) {\n                    this.parent.result = '(' + this.parent.result;\n                    this.result += ')';\n                } else {\n                    this.wrap();\n                }\n                this.currentOperator = Operators.AND;\n            }\n            this.result += Operators.AND;\n        } else {\n            this.result += '(';\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach((condition) => {\n                partial += Operators.AND + condition.buildPartial();\n            });\n\n            this.result += partial + ')';\n        }\n        return this;\n    }\n\n    /**\n     * Top level AND operator\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public all(...conditions: FilterBuilder[]): FilterBuilder {\n        if (conditions.length) {\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach((condition) => {\n                partial += Operators.AND + condition.buildPartial();\n            });\n\n            this.result += partial;\n        }\n\n        return this;\n    }\n\n    /**\n     * Disjunct expressions\n     *  conditions\n     * @returns The FilterBuilder instance\n     */\n    public or(...conditions: FilterBuilder[]): FilterBuilder {\n        if (!conditions.length) {\n            if (\n                this.currentOperator === Operators.AND ||\n                (this.parent && this.parent.currentOperator === Operators.AND)\n            ) {\n                if (this.parent) {\n                    this.parent.result = '(' + this.parent.result;\n                    this.result += ')';\n                } else {\n                    this.wrap();\n                }\n                this.currentOperator = Operators.OR;\n            }\n            this.result += Operators.OR;\n        } else {\n            this.result += '(';\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n\n            conditions.forEach((condition) => {\n                partial += Operators.OR + condition.buildPartial();\n            });\n\n            this.result += partial + ')';\n        }\n        return this;\n    }\n\n    /**\n     * Top level OR operator\n     * conditions\n     * @returns The FilterBuilder instance\n     */\n    public any(...conditions: FilterBuilder[]): FilterBuilder {\n        if (conditions.length) {\n            const first = conditions.shift();\n            let partial = first.buildPartial();\n            first.clear();\n\n            conditions.forEach((condition) => {\n                partial += Operators.OR + condition.buildPartial();\n                condition.clear();\n            });\n            this.result += partial;\n        }\n\n        return this;\n    }\n\n    /**\n     * Wrap the current expression in ()\n     * @returns The FilterBuilder instance\n     */\n    public wrap(): FilterBuilder {\n        this.result = '(' + this.result + ')';\n        this.currentOperator = null;\n        return this;\n    }\n\n    /**\n     * Match a filter expression to be equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public equalTo(value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        return this.condition(Operators.EQ, value, ...moreValues);\n    }\n\n    /**\n     * Match a filter expression to be different to a value\n     * @returns The FilterBuilder instance\n     */\n    public notEqualTo(value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        return this.condition(Operators.NEQ, value, ...moreValues);\n    }\n\n    /**\n     * Match a filter expression to be less than a value\n     * @returns The FilterBuilder instance\n     */\n    public lessThan(value: number): FilterBuilder {\n        return this.condition(Operators.LT, value);\n    }\n\n    /**\n     * Match a filter expression to be less than or equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public lessThanOrEqualTo(value: number): FilterBuilder {\n        return this.condition(Operators.LE, value);\n    }\n\n    /**\n     * Match a filter expression to be greater than a value\n     * @returns The FilterBuilder instance\n     */\n    public greaterThan(value: number): FilterBuilder {\n        return this.condition(Operators.GT, value);\n    }\n\n    /**\n     * Match a filter expression to be greater than or equal to a value\n     * @returns The FilterBuilder instance\n     */\n    public greaterThanOrEqualTo(value: number): FilterBuilder {\n        return this.condition(Operators.GE, value);\n    }\n\n    /**\n     * Match a filter expression to be before a date\n     * @returns The FilterBuilder instance\n     */\n    public before(date: Date): FilterBuilder {\n        return this.condition(Operators.LT, date.toISOString());\n    }\n\n    /**\n     * Match a filter expression to be after a date\n     * @returns The FilterBuilder instance\n     */\n    public after(date: Date): FilterBuilder {\n        return this.condition(Operators.GT, date.toISOString());\n    }\n\n    /**\n     * Match a filter expression to be between two numbers.\n     * Lower limit is greater or equal and upper limit is less or equal.\n     * If for either of the limit is not provided value, the limit is not included in the filter expression.\n     * @returns The FilterBuilder instance\n     */\n    public betweenNumbers(values: number[]): FilterBuilder {\n        const builders: FilterBuilder[] = [];\n\n        if (typeof values[0] === 'number') {\n            builders.push(new FilterBuilder().is(this.result).condition(Operators.GE, values[0]));\n        }\n\n        if (typeof values[1] === 'number') {\n            builders.push(new FilterBuilder().is(this.result).condition(Operators.LE, values[1]));\n        }\n\n        return new FilterBuilder().is('').and(...builders);\n    }\n\n    private condition(operator: string, value: Primitives, ...moreValues: Primitives[]): FilterBuilder {\n        const name = this.result;\n        this.result += (operator + value) as string;\n        if (moreValues.length) {\n            moreValues.forEach((val) => {\n                this.result += (',' + name + operator + val) as string;\n            });\n            this.currentOperator = Operators.OR;\n        }\n        return this;\n    }\n\n    private clear(): void {\n        this.result = '';\n        this.currentOperator = '';\n        if (this.parent) {\n            this.parent.clear();\n            this.parent = null;\n        }\n    }\n\n    private buildPartial(): string {\n        if (this.parent) {\n            return `${this.parent.buildPartial()}${this.result}`;\n        } else {\n            return this.result;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterConfig.html":{"url":"interfaces/FilterConfig.html","title":"interface - FilterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Properties required by all the grid filters\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        queryField\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queryField\n                                    \n                                \n                                \n                                    \n                                        queryField:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used as a query field for server side filtering of the grid column\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     V\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     V\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Value with which grid data can be filtered before initially being rendered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterRendererSpec.html":{"url":"interfaces/FilterRendererSpec.html","title":"interface - FilterRendererSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterRendererSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-filter.ts\n        \n\n            \n                Description\n            \n            \n                Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\ncomponent. used by the ComponentRendererOutletDirective\n\n            \n\n            \n                Extends\n            \n            \n                        ComponentRendererSpec\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     C\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     C\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Config object required for the configuration of component that will be rendered in the column filter widget\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { ClrDatagridFilterInterface } from '@clr/angular/data/datagrid/interfaces/filter.interface';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport {\n    ComponentRenderer,\n    ComponentRendererConstructor,\n    ComponentRendererSpec,\n} from '../interfaces/component-renderer.interface';\n\n/**\n * Number of milliseconds delayed before emitting the filter has changed observable\n */\nexport const DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES = 300;\n\n/**\n * Properties required by all the grid filters\n */\nexport interface FilterConfig {\n    /**\n     * Used as a query field for server side filtering of the grid column\n     */\n    queryField?: string;\n\n    /**\n     * Value with which grid data can be filtered before initially being rendered\n     */\n    value?: V;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in a filter widget and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface FilterRendererSpec extends ComponentRendererSpec {\n    /**\n     *  Config object required for the configuration of component that will be rendered in the column filter widget\n     */\n    config: C;\n}\n\n/**\n * Extended by filter components used in {@link DatagridComponent}. Those components can only be used inside a\n * clr-dg-filter component and are dynamically rendered by {@link ComponentRendererOutletDirective} using\n * {@link GridColumn.filter}\n * V is the type of filter input value that is passed into setValue method\n * C extends FilterConfig is configuration of a filter that contains queryField and a value of type V\n */\nexport abstract class DatagridFilter>\n    implements OnInit, OnDestroy, ClrDatagridFilterInterface, ComponentRenderer {\n    formGroup = this.createFormGroup();\n    private subscriptionTracker = new SubscriptionTracker(this);\n\n    protected constructor(filterContainer: ClrDatagridFilter) {\n        filterContainer.setFilter(this);\n    }\n\n    /**\n     * Sets the configuration needed for a filter UI widget and also it's value.\n     * Assigned from {@link ComponentRendererOutletDirective#assignValue} after the filter component is created.\n     * Used by the getValue method in sub classes to format the FIQL string output.\n     */\n    protected _config: C;\n    @Input() set config(val: C) {\n        this.onBeforeSetConfig(val);\n        this._config = val;\n        if (this._config.value) {\n            this.setValue(this._config.value);\n        }\n    }\n\n    get config(): C {\n        return this._config;\n    }\n\n    /**\n     * Emits whenever a filter form inputs changes\n     */\n    changes = new Subject();\n\n    ngOnInit(): void {\n        const obs = this.getDebounceTimeMs()\n            ? this.formGroup.valueChanges.pipe(debounceTime(this.getDebounceTimeMs()))\n            : this.formGroup.valueChanges;\n        this.subscriptionTracker.subscribe(obs, () => this.changes.next());\n    }\n\n    /**\n     * To override the default delay time for emission of changes\n     */\n    protected getDebounceTimeMs(): number {\n        return DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES;\n    }\n\n    /**\n     * Called inside setter of {@link DatagridFilter#config} and Defined in the derived classes to perform some logic before\n     * assigning the UI widget configuration and setting a value\n     */\n    protected onBeforeSetConfig(config: C): void {}\n\n    /**\n     * To initialize the {@link formGroup} from sub classes\n     */\n    abstract createFormGroup(): FormGroup;\n\n    /**\n     * Used for assigning a value to a filter from outside\n     */\n    abstract setValue(value: V): void;\n\n    /**\n     * For getting the filter UI widget values in FIQL formatted string\n     */\n    abstract getValue(): string;\n\n    /**\n     * Return true if the filter is currently activated (e.g. a value is provided)\n     */\n    abstract isActive(): boolean;\n\n    /**\n     * @inheritdoc\n     */\n    abstract ngOnDestroy(): void;\n\n    /**\n     * Required by Clarity but ignored since we don't support client side filtering\n     */\n    accepts(): boolean {\n        return true;\n    }\n\n    /**\n     * @see unit tests of sub class {@link DatagridStringFilterComponent} for unit tests of following methods\n     */\n    /**\n     * Used in the {@link #getValue} method to make it part of the FIQL formatted string\n     */\n    get queryField(): string {\n        if (this._config) {\n            if (this._config.queryField) {\n                return this._config.queryField;\n            }\n            throw Error('Query field is not specified');\n        }\n    }\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specifications of {@link FilterRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   filterRendererSpec: FilterComponentRendererSpec({type: DatagridNumericFilterComponent, config: {value: [1, 2]}}),\n * }\n *\n * In the above examples these methods help in making sure that:\n * - Value \"v\" of the config property is of [number, number] type for gridColumn.filterRendererSpec\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function FilterComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: C & {};\n}): FilterRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterTestHostComponent.html":{"url":"components/FilterTestHostComponent.html","title":"component - FilterTestHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterTestHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/utils/test/datagrid/filter-utils.ts\n\n\n    \n        Description\n    \n    \n        TestHostComponent that has only single column for filter testing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                    Static\n                                filterColumn\n                            \n                            \n                                gridData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFilter\n                        \n                        \n                    \n                \n            \n            \n                \nsetFilter(filterType: Type>, finder: AngularWidgetObjectFinder, config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:130\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        V\n                        C\n                    \n                \n            \n\n            \n                \n                    Creates the filterRendererSpec and adds it to the grid column above\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterType\n                                    \n                                                Type>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    finder\n                                    \n                                                AngularWidgetObjectFinder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            column\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterTestHostComponent.filterColumn\n\n                        \n                    \n                    \n                        \n                            Default value : FilterTestHostComponent.filterColumn\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:121\n                            \n                        \n\n                \n                    \n                        Used inside the html template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            filterColumn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GridColumn\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        displayName: 'Filter',\n        renderer: 'Does not matter',\n        queryFieldName: 'queryFieldName',\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:113\n                            \n                        \n\n                \n                    \n                        Made static so that it can be called in filter unit tests to make sure the FIQL string outputs have the queryFieldName\nvalue given in the column definition below\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GridDataFetchResult\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        items: [],\n    }\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/filter-utils.ts:123\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Type } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { MockTranslationService, TranslationService } from '@vcd/i18n';\nimport {\n    DatagridFilter,\n    FilterComponentRendererSpec,\n    GridColumn,\n    GridDataFetchResult,\n    VcdDatagridModule,\n} from '../../../datagrid';\nimport { MockRecord } from '../../../datagrid/mock-data';\nimport { IdGenerator } from '../../id-generator/id-generator';\nimport { AngularWidgetObjectFinder } from '../widget-object/angular-widget-finder';\nimport { TestElement } from '../widget-object/angular-widget-object';\nimport { ClrDatagridWidgetObject } from './datagrid.wo';\n\nfunction getFilter(element: TestElement, filterType: Type>): DatagridFilter {\n    return element.parents('body').queryDirective(filterType);\n}\n\n/**\n * Creates a testing module with {@link FilterTestHostComponent} that has only single column for filter testing\n */\nasync function configureTestingModule(): Promise {\n    await TestBed.configureTestingModule({\n        imports: [VcdDatagridModule],\n        declarations: [FilterTestHostComponent],\n        providers: [\n            {\n                provide: TranslationService,\n                useClass: MockTranslationService,\n            },\n            {\n                provide: IdGenerator,\n                useValue: new IdGenerator('vcd-id'),\n            },\n        ],\n    }).compileComponents();\n}\n\n/**\n * Used inside beforeEach functions of filter tests and it does the following:\n * - Creates a testing module with {@link FilterTestHostComponent} that has only single column for filter testing\n * - Sets the filter on the column of host component({@link FilterTestHostComponent})\n * - Opens the filter and returns a component instance of the filter created\n *\n * @param filterType to be created in the test host component grid's column\n * @param config The configuration for the filter\n *\n * Example:\n * beforeEach(function(this: HasDgStringFilter): void {\n *     this.filter = createDatagridFilterTestHelper(\n *         DatagridStringFilterComponent,\n *         { wildCardPosition: WildCardPosition.END, value: 'testInput-1' }\n *     );\n * });\n */\nexport function createDatagridFilterTestHelper(\n    filterType: Type>,\n    config?: C\n): DatagridFilter {\n    configureTestingModule();\n\n    // Add the filter to grid column\n    const finder = new AngularWidgetObjectFinder(FilterTestHostComponent);\n    const grid = finder.find(ClrDatagridWidgetObject);\n\n    finder.hostComponent.setFilter(filterType, finder, config || ({} as C));\n    grid.clrDatagrid.fixture.detectChanges();\n    grid.filterToggle.click();\n    return getFilter(grid.clrDatagrid, filterType);\n}\n\n/**\n * Same as the above function but used for tests which need finder\n */\nexport function createDatagridFilterTestHelperWithFinder(\n    filterType: Type>,\n    config?: C\n): { finder: AngularWidgetObjectFinder; filter: DatagridFilter } {\n    configureTestingModule();\n\n    // Add the filter to grid column\n    const finder = new AngularWidgetObjectFinder(FilterTestHostComponent);\n    const grid = finder.find(ClrDatagridWidgetObject);\n    finder.hostComponent.setFilter(filterType, finder, config || ({} as C));\n    grid.clrDatagrid.fixture.detectChanges();\n    grid.filterToggle.click();\n\n    return {\n        finder,\n        filter: getFilter(grid.clrDatagrid, filterType),\n    };\n}\n\n/**\n * TestHostComponent that has only single column for filter testing.\n */\n@Component({\n    template: `  `,\n})\nexport class FilterTestHostComponent {\n    /**\n     * Made static so that it can be called in filter unit tests to make sure the FIQL string outputs have the queryFieldName\n     * value given in the column definition below\n     */\n    static filterColumn: GridColumn = {\n        displayName: 'Filter',\n        renderer: 'Does not matter',\n        queryFieldName: 'queryFieldName',\n    };\n    /**\n     * Used inside the html template\n     */\n    column = FilterTestHostComponent.filterColumn;\n\n    gridData: GridDataFetchResult = {\n        items: [],\n    };\n\n    /**\n     * Creates the filterRendererSpec and adds it to the grid column above\n     */\n    setFilter(filterType: Type>, finder: AngularWidgetObjectFinder, config: C): void {\n        this.column.filter = FilterComponentRendererSpec({ type: filterType, config });\n        finder.detectChanges();\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FilterTestHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindParams.html":{"url":"interfaces/FindParams.html","title":"interface - FindParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Arguments for WidgetFinder and WidgetFinder\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ancestor\n                                \n                                \n                                            Optional\n                                        className\n                                \n                                \n                                        woConstructor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ancestor\n                                    \n                                \n                                \n                                    \n                                        ancestor:         DebugElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If provided, search starts from this container. It defaults to the fixture's root debugElement\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class name that can be used when there could be multiple instances of the object within the\nfixture tree\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        woConstructor\n                                    \n                                \n                                \n                                    \n                                        woConstructor:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The constructor of the widget to be found\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindableWidget.html":{"url":"interfaces/FindableWidget.html","title":"interface - FindableWidget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindableWidget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Subclasses should implement the FindableWidget interface so they can be found with WidgetFinder\nNote\nThis is done by creating a static property tagNameon your subclass, not a regular instance, since this\ninterface represents a constructor for a WidgetObject, not an instance.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tagName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagName\n                                    \n                                \n                                \n                                    \n                                        tagName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindableWidget-1.html":{"url":"interfaces/FindableWidget-1.html","title":"interface - FindableWidget-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindableWidget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\nhave a static tagName.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tagName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tagName\n                                    \n                                \n                                \n                                    \n                                        tagName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForCssSelectors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForAncestors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormCheckboxComponent.html":{"url":"components/FormCheckboxComponent.html","title":"component - FormCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-checkbox/form-checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        FormControl wrapper around a input HTML element of checkbox type. The label input from\nBaseFormControl is used for displaying a label on the left of a form field and the text input is used for\ndisplaying label on the right of checkbox. Use the 'styling' property with a value of 'checkbox' or 'toggle-switch'\nto display a checkbox or toggle switch on the UI.\nExample:\n      \n      \n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-checkbox\n            \n\n\n\n\n            \n                templateUrl\n                ./form-checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconShape\n                            \n                            \n                                rightLabel\n                            \n                            \n                                styling\n                            \n                            \n                                text\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isCheckbox\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDirective: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDirective\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iconShape\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:49\n                            \n                        \n                \n                    \n                        A shape for the icon that appears next to the checkbox.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        rightLabel\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:44\n                            \n                        \n                \n                    \n                        Put the label text on the right.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        styling\n                    \n                \n                \n                    \n                        Type :         CheckBoxStyling\n\n                    \n                \n                \n                    \n                        Default value : CheckBoxStyling.CHECKBOX\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:39\n                            \n                        \n                \n                    \n                        Styling for the checkbox.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:34\n                            \n                        \n                \n                    \n                        The label that appears next to the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isCheckbox\n                    \n                \n\n                \n                    \n                        getisCheckbox()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/form-checkbox/form-checkbox.component.ts:51\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BaseFormControl } from '../base-form-control';\n\nexport enum CheckBoxStyling {\n    CHECKBOX = 'checkbox',\n    TOGGLESWITCH = 'toggle-switch',\n}\n\n/**\n * {@link FormControl} wrapper around a input HTML element of checkbox type. The label input from\n * {@link BaseFormControl} is used for displaying a label on the left of a form field and the text input is used for\n * displaying label on the right of checkbox. Use the 'styling' property with a value of 'checkbox' or 'toggle-switch'\n * to display a checkbox or toggle switch on the UI.\n *\n * Example:\n *      \n *      \n */\n@Component({\n    selector: 'vcd-form-checkbox',\n    templateUrl: './form-checkbox.component.html',\n})\nexport class FormCheckboxComponent extends BaseFormControl {\n    /**\n     * The label that appears next to the control\n     */\n    @Input() text: string;\n\n    /**\n     * Styling for the checkbox.\n     */\n    @Input() styling: CheckBoxStyling = CheckBoxStyling.CHECKBOX;\n\n    /**\n     * Put the label text on the right.\n     */\n    @Input() rightLabel = false;\n\n    /**\n     * A shape for the icon that appears next to the checkbox.\n     */\n    @Input() iconShape: string;\n\n    get isCheckbox(): boolean {\n        return this.styling === CheckBoxStyling.CHECKBOX;\n    }\n\n    constructor(@Self() @Optional() controlDirective: NgControl) {\n        super(controlDirective);\n    }\n}\n\n    \n\n    \n        \n    \n        {{ label }}\n        \n            \n                \n                \n                    \n                    {{ text }}\n                \n            \n            \n                \n                    {{ key | translate: formControl.value }}\n                \n            \n            \n                {{ description }}\n            \n        \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ label }}                                                                                            {{ text }}                                                                            {{ key | translate: formControl.value }}                                                        {{ description }}                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormInputComponent.html":{"url":"components/FormInputComponent.html","title":"component - FormInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-input/form-input.component.ts\n\n\n    \n        Description\n    \n    \n        A FormControl that contains an input that supports string, number and datetime-local input types\nExample:\n      \n      \n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-input\n            \n\n            \n                styleUrls\n                ../form.scss,./form-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                textInput\n                            \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                inputChanged\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                writeValue\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hint\n                            \n                            \n                                hintPosition\n                            \n                            \n                                max\n                            \n                            \n                                maxlength\n                            \n                            \n                                min\n                            \n                            \n                                placeholder\n                            \n                            \n                                size\n                            \n                            \n                                type\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                enterClicked\n                            \n                            \n                                escapeClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDirective: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-input/form-input.component.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDirective\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:77\n                            \n                        \n                \n                    \n                        Hint to display in the content of a signpost\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'top-left'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:72\n                            \n                        \n                \n                    \n                        The direction for displaying the hint\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Number.MAX_SAFE_INTEGER\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:52\n                            \n                        \n                \n                    \n                        Maximum value allowed.\n(This is an input specified in the component attribute.)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:67\n                            \n                        \n                \n                    \n                        Maximum number of characters (in UTF-16 code units) that the user can enter.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Number.MIN_SAFE_INTEGER\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:46\n                            \n                        \n                \n                    \n                        Minimum value allowed.\n(This is an input specified in the component attribute.)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:40\n                            \n                        \n                \n                    \n                        Input 'placeholder' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:62\n                            \n                        \n                \n                    \n                        Input 'size' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:57\n                            \n                        \n                \n                    \n                        Input 'type' field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        enterClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:88\n                            \n                        \n                \n                    \n                        Emitted when enter key is released for callers to handle the event like... closing a filter widget\nDatagridNumericFilterComponent.close\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        escapeClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:93\n                            \n                        \n                \n                    \n                        Emitted when escape key is released for callers to handle the event\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputChanged\n                        \n                        \n                    \n                \n            \n            \n                \ninputChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/form-input/form-input.component.ts:104\n                \n            \n\n\n            \n                \n                    Input fields in the vcd-ui app does not support IME input on chrome browser. So in order to fix it, the value\nbeing assigned to the form control has to be given to the input HTML element's value using the 'viewChild' query\nselector inside writeValue function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('textInput', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/form-input/form-input.component.ts:82\n                            \n                        \n\n                \n                    \n                        The input field element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BaseFormControl } from '../base-form-control';\n\n/**\n * A {@link FormControl} that contains an input that supports string, number and datetime-local input types\n *\n * Example:\n *      \n *      \n */\n@Component({\n    selector: 'vcd-form-input',\n    templateUrl: './form-input.component.html',\n    styleUrls: ['../form.scss', './form-input.component.scss'],\n})\nexport class FormInputComponent extends BaseFormControl implements AfterViewInit {\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Minimum value allowed.\n     * (This is an input specified in the component attribute.)\n     */\n    @Input() min: number = Number.MIN_SAFE_INTEGER;\n\n    /**\n     * Maximum value allowed.\n     * (This is an input specified in the component attribute.)\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'type' field.\n     */\n    @Input() type = 'text';\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = null;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The input field element\n     */\n    @ViewChild('textInput', { static: true }) textInput: ElementRef;\n\n    /**\n     * Emitted when enter key is released for callers to handle the event like... closing a filter widget\n     * {@link DatagridNumericFilterComponent.close}\n     */\n    @Output() enterClicked = new EventEmitter(false);\n\n    /**\n     * Emitted when escape key is released for callers to handle the event\n     */\n    @Output() escapeClicked = new EventEmitter(false);\n\n    constructor(@Self() @Optional() controlDirective: NgControl) {\n        super(controlDirective);\n    }\n\n    /**\n     * Input fields in the vcd-ui app does not support IME input on chrome browser. So in order to fix it, the value\n     * being assigned to the form control has to be given to the input HTML element's value using the 'viewChild' query\n     * selector inside writeValue function.\n     */\n    writeValue(value: any): void {\n        // The textInput view child element is undefined the first time. So, the initial value is stored in a variable\n        // to assign it later to the input field value.\n        this.initialValue = value;\n        if (!this.textInput) {\n            return;\n        }\n\n        if (typeof value === 'number') {\n            value = value.toString(10);\n        }\n        if (this.type === 'datetime-local') {\n            value = getFormattedDateValue(value);\n        }\n        this.textInput.nativeElement.value = value;\n    }\n\n    ngAfterViewInit(): void {\n        // The textInput view child element is only defined after this life cycle hook. So, the writeValue is called\n        // here.\n        this.writeValue(this.initialValue);\n    }\n\n    inputChanged(): void {\n        const value = this.textInput.nativeElement.value;\n        this.initialValue = value;\n\n        if (this.type === 'number') {\n            if (!value) {\n                this.onChange(value);\n            } else {\n                this.onChange(parseFloat(value));\n            }\n            return;\n        }\n        if (this.type === 'datetime-local' && value !== '') {\n            const isoDateValue = new Date(getFormattedDateValue(value)).toISOString();\n            this.onChange(isoDateValue);\n            return;\n        }\n        this.onChange(value);\n    }\n}\n\n/**\n * To format a date string into a value which can be given to the input html element\n */\nexport function getFormattedDateValue(value: string): string {\n    const date = new Date(value);\n    return (\n        date.getFullYear() +\n        '-' +\n        pad(date.getMonth() + 1) +\n        '-' +\n        pad(date.getDate()) +\n        'T' +\n        pad(date.getHours()) +\n        ':' +\n        pad(date.getMinutes())\n    );\n}\n\nexport function pad(num: number): string | number {\n    if (num \n    \n\n    \n        \n    \n        {{\n            label\n        }}\n        \n            \n                \n                \n            \n            \n                \n                    {{ key | translate: formControl.value:min.toString():max }}\n                \n            \n            \n                {{ description }}\n            \n        \n        \n        \n            \n                {{ hint }}\n            \n        \n    \n\n\n    \n\n\n    \n\n    \n                \n                    ../form.scss\n                \n                .required-field:after {\n    content: '*';\n    color: red;\n    padding-left: 5px;\n}\n\n                \n                    ./form-input.component.scss\n                \n                .form-group >>> aside {\n    margin-top: 6px;\n    margin-bottom: 6px;\n    flex-grow: 1;\n}\n\n.form-group.hide-label {\n    padding-left: 0;\n}\n\n.input-aside {\n    display: flex;\n    width: 100%;\n}\n\n:host-context(.modal):not(.adjust-aside-left) {\n    .form-label {\n        flex-grow: 1;\n    }\n    .form-label > input {\n        width: 100%;\n    }\n}\n\n.form-group-description {\n    margin-bottom: 15px;\n}\n\nclr-signpost p:first-child {\n    margin-top: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{            label        }}                                                                                                                {{ key | translate: formControl.value:min.toString():max }}                                                        {{ description }}                                                                {{ hint }}                            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSelectComponent.html":{"url":"components/FormSelectComponent.html","title":"component - FormSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/form/form-select/form-select.component.ts\n\n\n    \n        Description\n    \n    \n        FormControl wrapper around a select HTML element\n\n    \n\n    \n        Extends\n    \n    \n                BaseFormControl\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-form-select\n            \n\n            \n                styleUrls\n                ../form.scss,./form-select.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                formControlNameDirective\n                            \n                            \n                                id\n                            \n                            \n                                    Protected\n                                initialValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                description\n                            \n                            \n                                errorLabels\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                label\n                            \n                            \n                                showAsterisk\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedOption\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngControl: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/form-select/form-select.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngControl\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         SelectOption[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/form/form-select/form-select.component.ts:23\n                            \n                        \n                \n                    \n                        The displayed options for the select element\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '\\u00A0'\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:52\n\n                            \n                        \n                \n                    \n                        The description that appears below the control\n\\u00A0 is   (non-breaking space)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:62\n\n                            \n                        \n                \n                    \n                        Error labels to be used instead of NgControl error keys\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReadOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:57\n\n                            \n                        \n                \n                    \n                        Whether this component is in readonly mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:46\n\n                            \n                        \n                \n                    \n                        The label that appears before the control\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsterisk\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:41\n\n                            \n                        \n                \n                    \n                        Show the asterisk next to the control when true\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onChange\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: (args: unknown[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:109\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    onTouched\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:113\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFormControl\n\n                \n            \n            \n                \n                        Defined in         BaseFormControl:117\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:36\n\n                            \n                        \n\n                \n                    \n                        Whether the control is disabled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formControlNameDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:67\n\n                            \n                        \n\n                \n                    \n                        FormControlName directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:21\n\n                            \n                        \n\n                \n                    \n                        Auto generated ID for the input field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initialValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | string | boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:72\n\n                            \n                        \n\n                \n                    \n                        To store the initial value of the input form control.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:26\n\n                            \n                        \n\n                \n                    \n                        Change callback.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFormControl:31\n\n                            \n                        \n\n                \n                    \n                        Touch callback.\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedOption\n                    \n                \n\n                \n                    \n                        getselectedOption()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/form-select/form-select.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { BaseFormControl } from '../base-form-control';\n\n/**\n * {@link FormControl} wrapper around a select HTML element\n */\n@Component({\n    selector: 'vcd-form-select',\n    templateUrl: 'form-select.component.html',\n    styleUrls: ['../form.scss', './form-select.component.scss'],\n})\nexport class FormSelectComponent extends BaseFormControl {\n    /**\n     * The displayed options for the select element\n     */\n    @Input() options: SelectOption[] = [];\n\n    constructor(@Self() @Optional() ngControl: NgControl) {\n        super(ngControl);\n    }\n\n    get selectedOption(): SelectOption {\n        if (!this.options || this.formControl.value === null || this.formControl.value === undefined) {\n            return undefined;\n        }\n        // option.value and formControl.value can be of type number or string\n        return this.options.find((option) => option.value.toString() === this.formControl.value.toString());\n    }\n}\n\n    \n\n    \n        \n    \n        {{\n            label\n        }}\n        \n            {{ selectedOption.isTranslatable ? (selectedOption.display | translate) : selectedOption.display }}\n        \n        \n            \n                \n                    \n                        {{ option.isTranslatable ? (option.display | translate) : option.display }}\n                    \n                \n                \n            \n\n            \n\n            \n                \n                    {{ key | translate: [formControl.value] }}\n                \n            \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ../form.scss\n                \n                .required-field:after {\n    content: '*';\n    color: red;\n    padding-left: 5px;\n}\n\n                \n                    ./form-select.component.scss\n                \n                .form-group.hide-label {\n    padding-left: 0;\n}\n\n.form-group.hide-label label:first-child {\n    visibility: hidden;\n}\n\n.error-content {\n    white-space: normal;\n}\n\n:host(.site-selector-single-site) {\n    display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{            label        }}                    {{ selectedOption.isTranslatable ? (selectedOption.display | translate) : selectedOption.display }}                                                                                        {{ option.isTranslatable ? (option.display | translate) : option.display }}                                                                                                                            {{ key | translate: [formControl.value] }}                                                        '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormValidators.html":{"url":"classes/FormValidators.html","title":"class - FormValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/validators.ts\n        \n\n            \n                Description\n            \n            \n                validators used for form control validations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createNullSafeValidator\n                            \n                            \n                                    Static\n                                isNumberInRange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createNullSafeValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNullSafeValidator(validator: (args: any[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/validators.ts:17\n                \n            \n\n\n            \n                \n                    A wrapper that validates that a control's value is defined before running the validator function.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    validator\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The validator function to run if the control's value is defined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isNumberInRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumberInRange(min: number, max: number, translationKey: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/validators.ts:32\n                \n            \n\n\n            \n                \n                    Create a validator that requires a number to be within a range.\nAlso checks that the value is numeric\nAccepts a translation key to display proper error messaging\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    translationKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'vcd.cc.warning.numRange'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormControl, ValidatorFn, Validators } from '@angular/forms';\n\n/**\n * validators used for form control validations.\n */\nexport class FormValidators {\n    /**\n     * A wrapper that validates that a control's value is defined before running the validator function.\n     *\n     * @param validator The validator function to run if the control's value is defined.\n     */\n    static createNullSafeValidator(validator: (...args: any[]) => unknown): ValidatorFn {\n        const res = (control: FormControl) => {\n            if (Validators.required(control)) {\n                return null;\n            }\n            return validator(control);\n        };\n        return res;\n    }\n\n    /**\n     * Create a validator that requires a number to be within a range.\n     * Also checks that the value is numeric\n     * Accepts a translation key to display proper error messaging\n     */\n    static isNumberInRange(min: number, max: number, translationKey = 'vcd.cc.warning.numRange'): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const isNumber = !isNaN(parseFloat(control.value)) && isFinite(control.value);\n            return control.value >= min && control.value \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlyInputComponent.html":{"url":"components/FormlyInputComponent.html","title":"component - FormlyInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlyInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/input/formly-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-input\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onEnterClicked\n                            \n                            \n                                onEscapeClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                                \n                                    type\n                                \n                                \n                                    hintPosition\n                                \n                                \n                                    errorLabels\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEnterClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonEnterClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:67\n                \n            \n\n\n            \n                \n                    FormInputComponent.enterClicked\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onEscapeClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonEscapeClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:75\n                \n            \n\n\n            \n                \n                    FormInputComponent.escapeClicked\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:37\n                                \n                            \n                    \n                        \n                                FormInputComponent.min\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:43\n                                \n                            \n                    \n                        \n                                FormInputComponent.max\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:49\n                                \n                            \n                    \n                        \n                                FormInputComponent.type\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n\n                \n                    \n                        gethintPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:55\n                                \n                            \n                    \n                        \n                                FormInputComponent.hintPosition\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/input/formly-input.component.ts:61\n                                \n                            \n                    \n                        \n                                FormInputComponent.errorLabels\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n    selector: 'vcd-formly-input',\n    template: `\n        \n        \n    `,\n})\nexport class FormlyInputComponent extends FieldType {\n    /**\n     * {@link FormInputComponent.min}\n     */\n    get min(): number {\n        return this.to.min || Number.MIN_SAFE_INTEGER;\n    }\n    /**\n     * {@link FormInputComponent.max}\n     */\n    get max(): number {\n        return this.to.max || Number.MAX_SAFE_INTEGER;\n    }\n    /**\n     * {@link FormInputComponent.type}\n     */\n    get type(): string {\n        return this.to.type || 'text';\n    }\n    /**\n     * {@link FormInputComponent.hintPosition}\n     */\n    get hintPosition(): string {\n        return this.to.hintPosition || 'top-left';\n    }\n    /**\n     * {@link FormInputComponent.errorLabels}\n     */\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n    /**\n     * {@link FormInputComponent.enterClicked}\n     */\n    onEnterClicked(): any {\n        if (this.to.onEnterClicked) {\n            return this.to.onEnterClicked(this.field);\n        }\n    }\n    /**\n     * {@link FormInputComponent.escapeClicked}\n     */\n    onEscapeClicked(): any {\n        if (this.to.onEscapeClicked) {\n            return this.to.onEscapeClicked(this.field);\n        }\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlyInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlyNumberWithUnitInputComponent.html":{"url":"components/FormlyNumberWithUnitInputComponent.html","title":"component - FormlyNumberWithUnitInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlyNumberWithUnitInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-number-with-unit-input\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorLabels\n                                \n                                \n                                    min\n                                \n                                \n                                    max\n                                \n                                \n                                    hintPosition\n                                \n                                \n                                    showUnlimitedOption\n                                \n                                \n                                    unlimitedValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:39\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.errorLabels\n\n\n                                \n                                    Returns :     string[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n\n                \n                    \n                        getmin()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:45\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.min\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n\n                \n                    \n                        getmax()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:51\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.max\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hintPosition\n                    \n                \n\n                \n                    \n                        gethintPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:57\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.hintPosition\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        showUnlimitedOption\n                    \n                \n\n                \n                    \n                        getshowUnlimitedOption()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:63\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.showUnlimitedOption\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unlimitedValue\n                    \n                \n\n                \n                    \n                        getunlimitedValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts:72\n                                \n                            \n                    \n                        \n                                NumberWithUnitFormInputComponent.unlimitedValue\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { UNLIMITED } from '../../../../form/number-with-unit-input/number-with-unit-form-input.component';\n\n@Component({\n    selector: 'vcd-formly-number-with-unit-input',\n    template: `\n        \n        \n    `,\n})\nexport class FormlyNumberWithUnitInputComponent extends FieldType {\n    /**\n     * {@link NumberWithUnitFormInputComponent.errorLabels}\n     */\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.min}\n     */\n    get min(): number {\n        return this.to.min || UNLIMITED;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.max}\n     */\n    get max(): number {\n        return this.to.max || Number.MAX_SAFE_INTEGER;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.hintPosition}\n     */\n    get hintPosition(): string {\n        return this.to.hintPosition || 'top-left';\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.showUnlimitedOption}\n     */\n    get showUnlimitedOption(): boolean {\n        if (typeof this.to.showUnlimitedOption !== 'boolean') {\n            return true;\n        }\n        return this.to.showUnlimitedOption;\n    }\n    /**\n     * {@link NumberWithUnitFormInputComponent.unlimitedValue}\n     */\n    get unlimitedValue(): number {\n        return this.to.unlimitedValue || UNLIMITED;\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlyNumberWithUnitInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormlySelectComponent.html":{"url":"components/FormlySelectComponent.html","title":"component - FormlySelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormlySelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/formly/vcd/inputs/select/formly-select.component.ts\n\n\n\n    \n        Extends\n    \n    \n            FieldType\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-formly-select\n            \n\n\n\n            \n                template\n                \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorLabels\n                                \n                                \n                                    selectOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorLabels\n                    \n                \n\n                \n                    \n                        geterrorLabels()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/select/formly-select.component.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectOptions\n                    \n                \n\n                \n                    \n                        getselectOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/formly/vcd/inputs/select/formly-select.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { Observable, of } from 'rxjs';\nimport { SelectOption } from '../../../../common/interfaces/select-option';\n\n@Component({\n    selector: 'vcd-formly-select',\n    template: `\n        \n        \n    `,\n})\nexport class FormlySelectComponent extends FieldType {\n    get errorLabels(): string[] {\n        return this.to.errorLabels || [];\n    }\n\n    get selectOptions(): Observable {\n        if (!(this.to.options instanceof Observable)) {\n            return of(this.to.options);\n        }\n        return this.to.options;\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormlySelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FunctionRenderer.html":{"url":"interfaces/FunctionRenderer.html","title":"interface - FunctionRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FunctionRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Column renderer as a function. Defined in calling component when the cell value is calculated from different\nproperties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [record: T]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :         string\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FunctionRendererPipe.html":{"url":"pipes/FunctionRendererPipe.html","title":"pipe - FunctionRendererPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FunctionRendererPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/datagrid/pipes/function-renderer.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Used for executing the functions of column cells which use functions to calculate their values from different\nproperties of an object\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        functionRenderer\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(item: any, renderer: (val: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/datagrid/pipes/function-renderer.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    renderer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Used for executing the functions of column cells which use functions to calculate their values from different\n * properties of an object\n */\n@Pipe({\n    name: 'functionRenderer',\n    pure: true,\n})\nexport class FunctionRendererPipe implements PipeTransform {\n    public transform(item: any, renderer: (val: any) => any): string {\n        if (!item || !renderer) {\n            return null;\n        }\n        return renderer(item);\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridColumn.html":{"url":"interfaces/GridColumn.html","title":"interface - GridColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration object defined in the caller. This contains properties for the column header (text, filtering,\nsorting, toggling etc.,) and content for row cells.\nExample:\nconst gridColumn: GridColumn = {\n   displayName: \"Column Heading\",\n   renderer: \"someRecord.property\",\n   hideable: \"NEVER\"\n}\nThe above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\nThe value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cliptextConfig\n                                \n                                \n                                            Optional\n                                        clrDgColumnClassName\n                                \n                                \n                                        displayName\n                                \n                                \n                                            Optional\n                                        emptyColumnPlaceholder\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hideable\n                                \n                                \n                                            Optional\n                                        queryFieldName\n                                \n                                \n                                        renderer\n                                \n                                \n                                            Optional\n                                        sortable\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cliptextConfig\n                                    \n                                \n                                \n                                    \n                                        cliptextConfig:         CliptextConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CliptextConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The configuration for the cliptext in the datagrid.\nDefaults to size: 'lg', mouseoutDelay: undefined.\nIf null, will disable cliptext\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clrDgColumnClassName\n                                    \n                                \n                                \n                                    \n                                        clrDgColumnClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class of the column header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Header text for the column\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyColumnPlaceholder\n                                    \n                                \n                                \n                                    \n                                        emptyColumnPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When there is no data, show this message.\nTry to avoid showing this before initial load.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     FilterRendererSpec>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterRendererSpec>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    TODO: Should this be made to work with top level search on grids across all columns?\n  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideable\n                                    \n                                \n                                \n                                    \n                                        hideable:         GridColumnHideable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GridColumnHideable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryFieldName\n                                    \n                                \n                                \n                                    \n                                        queryFieldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for sorting/filtering. Not needed for columns not filterable/sortable\nTODO: do we need to support array type for querying across multiple columns?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderer\n                                    \n                                \n                                \n                                    \n                                        renderer:     string | FunctionRenderer | ColumnRendererSpec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | FunctionRenderer | ColumnRendererSpec\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the renderer passed in is a\n\nstring: Used as default renderer. Can be a dot separated string to identify a nested property of the item\nFunctionRenderer: When you want to create a calculated column, but don't need custom HTML\nTemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\nColumnRendererSpec: When HTML is needed and when the HTML is provided as a component\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                    \n                                \n                                \n                                    \n                                        sortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to show the column as sortable. Defaults to true\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TextIcon } from '../../common/interfaces/action-item.interface';\nimport { CliptextConfig } from '../../lib/directives/show-clipped-text.directive';\nimport { FilterConfig, FilterRendererSpec } from '../filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './component-renderer.interface';\n\nexport enum GridColumnHideable {\n    /**\n     * Does not show up in column toggle box\n     */\n    Never = 'NEVER',\n    /**\n     * Shows up in column toggle box, column is visible\n     */\n    Shown = 'SHOWN',\n    /**\n     * Shows up in column toggle box, column is hidden\n     */\n    Hidden = 'HIDDEN',\n}\n\n/**\n * Column renderer as a function. Defined in calling component when the cell value is calculated from different\n * properties.\n * @param record The record for the row being rendered\n * @return The string to be displayed for that cell\n */\nexport interface FunctionRenderer {\n    (record: T): string;\n}\n\n/**\n * Renderer specification of a column that contains component type to be rendered in the cell and configuration for that\n * component. used by the {@link ComponentRendererOutletDirective}\n */\nexport interface ColumnRendererSpec extends ComponentRendererSpec {\n    /**\n     * A function that creates a config object required for the configuration of component that will be rendered in the column\n     * @param record An object to be transformed into {@link ComponentRenderer#config}. It's passed in by the calling\n     * component\n     */\n    config: (record?: R) => C;\n}\n\n/**\n * Configuration object defined in the caller. This contains properties for the column header (text, filtering,\n * sorting, toggling etc.,) and content for row cells.\n *\n * Example:\n * const gridColumn: GridColumn = {\n *   displayName: \"Column Heading\",\n *   renderer: \"someRecord.property\",\n *   hideable: \"NEVER\"\n * }\n *\n * The above column is rendered with \"Column Heading\" text in it's heading and it is not shown in the column toggler.\n * The value of the property \"someRecord.property\" is rendered in cells corresponding to the column.\n */\nexport interface GridColumn {\n    /**\n     * Header text for the column\n     */\n    displayName: string;\n\n    /**\n     * Used for sorting/filtering. Not needed for columns not filterable/sortable\n     * TODO: do we need to support array type for querying across multiple columns?\n     */\n    queryFieldName?: string;\n\n    /**\n     * If the renderer passed in is a\n     * - string: Used as default renderer. Can be a dot separated string to identify a nested property of the item\n     * - {@link FunctionRenderer}: When you want to create a calculated column, but don't need custom HTML\n     * - TemplateRef: When custom HTML is needed and when it has to be passed in as a inline HTML\n     * - {@link ColumnRendererSpec}: When HTML is needed and when the HTML is provided as a component\n     */\n    renderer: string | FunctionRenderer | ColumnRendererSpec;\n\n    /**\n     * Whether the column shows up in the column toggler and if the column shows up, it reflects the toggle state\n     */\n    hideable?: GridColumnHideable;\n\n    /**\n     * When there is no data, show this message.\n     *\n     * Try to avoid showing this before initial load.\n     */\n    emptyColumnPlaceholder?: string;\n\n    /**\n     * TODO: Should this be made to work with top level search on grids across all columns?\n     *  The above to-do is going to be worked on as part of https://jira.eng.vmware.com/browse/VDUCC-27 and\n     */\n    filter?: FilterRendererSpec>;\n\n    /**\n     * The configuration for the cliptext in the datagrid.\n     * Defaults to size: 'lg', mouseoutDelay: undefined.\n     * If null, will disable cliptext\n     */\n    cliptextConfig?: CliptextConfig;\n\n    /**\n     * Whether to show the column as sortable. Defaults to true\n     */\n    sortable?: boolean;\n\n    /**\n     * The class of the column header.\n     */\n    clrDgColumnClassName?: string;\n}\n\n/**\n * Utility function to enforce type safety on config object of components of {@link ComponentRenderer} type. Used for creating\n * component renderer specification of {@link ColumnRendererSpec} type\n *\n * Example usage:\n * const gridColumn = {\n *   renderer: ColumnComponentRendererSpec({type: BoldTextRendererComponent, config: record => ({text: ''})\n * }\n *\n * In the above example this method helps in making sure that:\n * - Value \"v\" returned by the config function is of BoldTextRendererConfig type for gridColumn.renderer\n *\n * #Note: 'C & {}' below makes the inference site for C be the constructor type from the first argument.\n * {@link https://stackoverflow.com/questions/59055154/typescript-generics-infer-type-from-the-type-of-function-arguments}\n */\nexport function ColumnComponentRendererSpec(componentRendererSpec: {\n    type: ComponentRendererConstructor;\n    config: (record?: R) => C & {};\n}): ColumnRendererSpec {\n    return componentRendererSpec;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridDataFetchResult.html":{"url":"interfaces/GridDataFetchResult.html","title":"interface - GridDataFetchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridDataFetchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                Representation of data required for rendering contents of cells and pagination information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                            Optional\n                                        totalItems\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     R[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     R[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items to be listed in the grid\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridState.html":{"url":"interfaces/GridState.html","title":"interface - GridState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\npart of the event DatagridComponent.gridRefresh. The handler then used this object to construct a query.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        filters\n                                \n                                \n                                            Optional\n                                        pagination\n                                \n                                \n                                            Optional\n                                        sortColumn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FIQL formatted list of active filters\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                    \n                                \n                                \n                                    \n                                        pagination:         PagionationInformation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PagionationInformation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The pagination information that the datagrid should show.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortColumn\n                                    \n                                \n                                \n                                    \n                                        sortColumn:         SortedColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortedColumn\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The currently sorted column in the datagrid.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HasFinder.html":{"url":"interfaces/HasFinder.html","title":"interface - HasFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HasFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Can be used in tests that use this to share a finder with before/AfterEach instead of leaky closures\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        finder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        finder\n                                    \n                                \n                                \n                                    \n                                        finder:         WidgetFinder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WidgetFinder\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubscriptionTracker.html":{"url":"interfaces/ISubscriptionTracker.html","title":"interface - ISubscriptionTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISubscriptionTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/subscription/subscription-tracker.ts\n        \n\n            \n                Description\n            \n            \n                An interface that knows how to subscribe and unsubscribe from observables.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscribe\n                                \n                                \n                                    unsubscribe\n                                \n                                \n                                    unsubscribeAll\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observable: Observable, observerOrNext?: PartialObserver | , error?: (error?: any) => void, complete?: () => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\nWill call the {@param complete} when complete, and {@param error} when errors happen.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observerOrNext\n                                    \n                                            PartialObserver | \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    complete\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:28\n                \n            \n\n\n            \n                \n                    Unsubscribes from the given {@param subscription}.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:33\n                \n            \n\n\n            \n                \n                    Unsubscribes from all subscriptions on this Subscribable.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { OnDestroy } from '@angular/core';\nimport { Observable, PartialObserver, Subscription } from 'rxjs';\nimport { toSubscriber } from 'rxjs/internal-compatibility';\n\n/**\n * An interface that knows how to subscribe and unsubscribe from observables.\n */\nexport interface ISubscriptionTracker {\n    /**\n     * Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\n     * Will call the {@param complete} when complete, and {@param error} when errors happen.\n     */\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription;\n\n    /**\n     * Unsubscribes from the given {@param subscription}.\n     */\n    unsubscribe(subscription: Subscription): Subscription;\n\n    /**\n     * Unsubscribes from all subscriptions on this {@link Subscribable}.\n     */\n    unsubscribeAll(): void;\n}\n\n/**\n * Components can use this to have subscriptions automatically removed when the component is destroyed\n */\nexport class SubscriptionTracker implements ISubscriptionTracker {\n    private subscriptions: Subscription[] = [];\n\n    /**\n     * Constructs this tracker to call {@link unsubscribeAll} when {@link OnDestroy.ngOnDestroy} is called.\n     */\n    constructor(destroyable: OnDestroy) {\n        const originalOnDestroy = destroyable.ngOnDestroy;\n        destroyable.ngOnDestroy = () => {\n            this.unsubscribeAll();\n            originalOnDestroy.call(destroyable);\n        };\n    }\n\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription {\n        const subscription = observable.subscribe(toSubscriber(observerOrNext, error, complete));\n        this.subscriptions.push(subscription);\n        return subscription;\n    }\n\n    unsubscribe(subscription: Subscription): Subscription {\n        subscription.unsubscribe();\n        const indexOfSubscription = this.subscriptions.indexOf(subscription);\n        if (indexOfSubscription === -1) {\n            throw new Error('Unsubscribing to untracked subscription');\n        }\n        this.subscriptions.splice(indexOfSubscription, 1);\n        return subscription;\n    }\n\n    unsubscribeAll(): void {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdGenerator.html":{"url":"classes/IdGenerator.html","title":"class - IdGenerator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdGenerator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/id-generator/id-generator.ts\n        \n\n            \n                Description\n            \n            \n                Generates unique IDs\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                idCounter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/id-generator/id-generator.ts:17\n                            \n                        \n\n                \n                    \n                            The string to be prefixed for IdGenerator returned\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            idCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/id-generator/id-generator.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generate\n                        \n                        \n                    \n                \n            \n            \n                \ngenerate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/id-generator/id-generator.ts:15\n                \n            \n\n\n            \n                \n                    Getter that returns the a unique ID\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class IdGenerator {\n    private static idCounter = 0;\n\n    /**\n     * Getter that returns the a unique ID\n     */\n    generate(): string {\n        return `${this.prefix}-${IdGenerator.idCounter++}`;\n    }\n\n    /**\n     * The string to be prefixed for {@link IdGenerator#id} returned\n     */\n    constructor(private prefix: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingIndicatorComponent.html":{"url":"components/LoadingIndicatorComponent.html","title":"component - LoadingIndicatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingIndicatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/loading/loading-indicator.component.ts\n\n\n    \n        Description\n    \n    \n        Loading indicator for blocking modal dialogs while loading.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-loading-indicator\n            \n\n            \n                styleUrls\n                loading-indicator.component.scss\n            \n\n\n\n            \n                templateUrl\n                loading-indicator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _size\n                            \n                            \n                                    Private\n                                    Readonly\n                                defaultSpinnerSize\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loadingTextKey\n                            \n                            \n                                showSpinner\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:43\n                            \n                        \n                \n                    \n                        Show/hide the loading indicator.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loadingTextKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:55\n                            \n                        \n                \n                    \n                        Text to show next to the spinner.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showSpinner\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:49\n                            \n                        \n                \n                    \n                        Show/hide the spinner if only an overlay is required.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         SpinnerSize\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:62\n                            \n                        \n                \n                    \n                        Spinner size setter.\nSets default size if provided value is not from specified sized.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpinnerSize\n\n                        \n                    \n                    \n                        \n                            Default value : this.defaultSpinnerSize\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:38\n                            \n                        \n\n                \n                    \n                        Spinner size.\nSpinners can be displayed in three sizes:\n\nsm(Small): This is the required sizing for inline spinners (see above). It measures 18x18 pixels.\nmd(Medium): Medium spinners measure 36x36 pixels. Default.\nlg(Large): This is the default size for page spinners (see above).\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            defaultSpinnerSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpinnerSize\n\n                        \n                    \n                    \n                        \n                            Default value : SIZES.md\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:27\n                            \n                        \n\n                \n                    \n                        Default spinner size set to \"md\" - medium used within the modal dialogs\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:73\n                                \n                            \n                    \n                        \n                                Gives the size of this loading indicator.\n\n\n                                \n                                    Returns :         SpinnerSize\n\n                                \n                        \n                    \n\n                \n                    \n                        setsize(size)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/common/loading/loading-indicator.component.ts:62\n                                \n                            \n                    \n                        \n                                Spinner size setter.\nSets default size if provided value is not from specified sized.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            size\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nexport enum SIZES {\n    sm = 'sm',\n    md = 'md',\n    lg = 'lg',\n}\nexport type SpinnerSize = keyof typeof SIZES;\n\n/**\n * Loading indicator for blocking modal dialogs while loading.\n */\n@Component({\n    selector: 'vcd-loading-indicator',\n    templateUrl: 'loading-indicator.component.html',\n    styleUrls: ['loading-indicator.component.scss'],\n})\nexport class LoadingIndicatorComponent {\n    /**\n     * Default spinner size set to \"md\" - medium used within the modal dialogs\n     */\n    private readonly defaultSpinnerSize: SpinnerSize = SIZES.md;\n    /**\n     * Spinner size.\n     *\n     * Spinners can be displayed in three sizes:\n     *\n     *  - sm(Small): This is the required sizing for inline spinners (see above). It measures 18x18 pixels.\n     *  - md(Medium): Medium spinners measure 36x36 pixels. Default.\n     *  - lg(Large): This is the default size for page spinners (see above).\n     *\n     */\n    private _size: SpinnerSize = this.defaultSpinnerSize;\n    /**\n     * Show/hide the loading indicator.\n     */\n    @Input()\n    public isLoading: boolean;\n\n    /**\n     * Show/hide the spinner if only an overlay is required.\n     */\n    @Input()\n    public showSpinner = true;\n\n    /**\n     * Text to show next to the spinner.\n     */\n    @Input()\n    public loadingTextKey: string = null;\n\n    /**\n     * Spinner size setter.\n     * Sets default size if provided value is not from specified sized.\n     */\n    @Input()\n    set size(size: SpinnerSize) {\n        if (!size || Object.keys(SIZES).indexOf(size) === -1) {\n            this._size = this.defaultSpinnerSize;\n        } else {\n            this._size = size;\n        }\n    }\n\n    /**\n     * Gives the size of this loading indicator.\n     */\n    get size(): SpinnerSize {\n        return this._size;\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n             \n            {{ loadingTextKey | translate }}\n        \n    \n\n\n\n    \n\n    \n                \n                    loading-indicator.component.scss\n                \n                $overlay-background-color-default: rgba(250, 250, 250, 0.5);\n$overlay-background-color-modal: rgba(255, 255, 255, 0.5);\n\n@mixin full-height {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n\n:host {\n    display: block;\n    position: relative;\n}\n\n:host-context(.modal-body) .overlay {\n    background-color: $overlay-background-color-modal;\n}\n\n.overlay {\n    background-color: $overlay-background-color-default;\n    @include full-height();\n    z-index: 10;\n}\n\n.indicator-container {\n    z-index: 600;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    @include full-height();\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         {{ loadingTextKey | translate }}            '\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingIndicatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocatorDriver.html":{"url":"interfaces/LocatorDriver.html","title":"interface - LocatorDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocatorDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Knows how to find elements of a given type T in the DOM.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    findWidget\n                                \n                                \n                                    get\n                                \n                                \n                                    getByText\n                                \n                                \n                                    parents\n                                \n                                \n                                    unwrap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findWidget\n                        \n                        \n                    \n                \n            \n            \n                \nfindWidget(widget: C, cssSelector?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:79\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        W\n                        C\n                    \n                \n            \n\n            \n                \n                    Returns an instance of the given widget within this widget object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    widget\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CorrectReturnTypes, T>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:64\n                \n            \n\n\n            \n                \n                    Finds all child elements that match the given cssSelector.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByText\n                        \n                        \n                    \n                \n            \n            \n                \ngetByText(cssSelector: string, value: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:69\n                \n            \n\n\n            \n                \n                    Finds all child elements that match the given cssSelector and have text that contains the given value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string, options?: unknown)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:74\n                \n            \n\n\n            \n                \n                    Finds the closest parent that matches the given cssSelector.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocatorDriver\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unwrap\n                        \n                        \n                    \n                \n            \n            \n                \nunwrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/widget-object.ts:87\n                \n            \n\n\n            \n                \n                    Unwraps the value from this query and turns it into the resulting object type.\n\n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        type ElementLocator = (options?: unknown) => T;\n\n/**\n * A class that is able to make queries to the DOM and be instantiated by a widget finder.\n * Widget objects should be used only to find elements in the DOM. You should not attempt to take\n * actions on these elements in a given widget object.\n *\n * All widget objects should extend this base class.\n *\n * @example\n *\n * class LoginWidgetObject extends BaseWidgetObject {\n *      getUsernameField = this.locatorForChild('.username');\n *\n *      getOkButton(): T {\n *          return this.driver.getByText('button', 'Ok').unwrap();\n *      }\n *\n *      getOkButtonContainer(): T {\n *          return this.driver.getByText('button', 'Ok').parent('.button-container').unwrap();\n *      }\n * }\n */\nexport class BaseWidgetObject {\n    protected locatorDriver?: LocatorDriver;\n    constructor(driver: LocatorDriver) {\n        this.locatorDriver = driver;\n    }\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector when called.\n     */\n    protected locatorForCssSelectors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a parent with the given cssSelector when called.\n     */\n    protected locatorForAncestors? = (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    };\n\n    /**\n     * Returns an element locator that will find a child with the given cssSelector and text when called.\n     */\n    protected locatorForText? = (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    };\n}\n\n/**\n * Knows how to find elements of a given type T in the DOM.\n */\nexport interface LocatorDriver {\n    /**\n     * Finds all child elements that match the given cssSelector.\n     */\n    get(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds all child elements that match the given cssSelector and have text that contains the given value.\n     */\n    getByText(cssSelector: string, value: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Finds the closest parent that matches the given cssSelector.\n     */\n    parents(cssSelector: string, options?: unknown): LocatorDriver;\n\n    /**\n     * Returns an instance of the given widget within this widget object.\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, T>;\n\n    /**\n     * Unwraps the value from this query and turns it into the resulting object type.\n     */\n    unwrap(): T;\n}\n\ntype ConvertGenericOnly = unknown extends CR ? R : CorrectReturnTypes;\n\n/**\n * Changes the class so that all functions/getters return R.\n */\nexport type CorrectReturnTypes = {\n    [P in keyof T]: T[P] extends (...args: any[]) => infer CR\n        ? (...args: Parameters) => ConvertGenericOnly\n        : ConvertGenericOnly;\n};\n\n/**\n * The interface that all WidgetObject classes must satisfy. This means that they must extend BaseWidgetObject and\n * have a static tagName.\n */\nexport interface FindableWidget> {\n    new (driver: LocatorDriver): W;\n    tagName: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n        \n\n            \n                Description\n            \n            \n                Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        closeMenu\n                                \n                                \n                                            Optional\n                                        down\n                                \n                                \n                                        element\n                                \n                                \n                                            Optional\n                                        left\n                                \n                                \n                                            Optional\n                                        right\n                                \n                                \n                                            Optional\n                                        up\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeMenu\n                                    \n                                \n                                \n                                    \n                                        closeMenu:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Call back to close the menu for which this menu item can be a trigger. called from DropdownFocusHandlerService\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        down\n                                    \n                                \n                                \n                                    \n                                        down:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                    \n                                \n                                \n                                    \n                                        element:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTML element of this dropdown menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        up\n                                    \n                                \n                                \n                                    \n                                        up:         MenuItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuItem\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Neighboring menu items in all the 4 directions\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, Directive, Host, OnDestroy, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { DropdownFocusHandlerService } from './dropdown-focus-handler.service';\nimport { DropdownComponent } from './dropdown.component';\n\n/**\n * To filter out the non-activatable separator item type when creating linked menu list {@link #linkMenuItems}. Because, we don't\n * want the focus to go to separator item type when navigating using the arrow keys\n */\nenum ActivatableMenuItemType {\n    /**\n     * Menu item that results in executing of an action when clicked\n     */\n    BUTTON = 'button',\n    /**\n     * Activating this would open a nested menu\n     */\n    NESTED_VCD_DROPDOWN = 'vcd-dropdown',\n}\n\nconst NESTED_DROPDOWN_TRIGGER = 'clr-dropdown > button';\n\n/**\n * Arrow keys directions\n */\nexport enum Direction {\n    UP = 'up',\n    DOWN = 'down',\n    LEFT = 'left',\n    RIGHT = 'right',\n}\n\n/**\n * Object wrapping the focusable HTML elements of dropdown menu with the neighbors in 4 directions of each menu item.\n */\nexport interface MenuItem {\n    /**\n     * The HTML element of this dropdown menu item\n     */\n    element: HTMLElement;\n    /**\n     * Neighboring menu items in all the 4 directions\n     */\n    up?: MenuItem;\n    down?: MenuItem;\n    left?: MenuItem;\n    right?: MenuItem;\n    /**\n     * Call back to close the menu for which this menu item can be a trigger. called from {@link DropdownFocusHandlerService}\n     */\n    closeMenu?: () => void;\n}\n\n/**\n * Added on to vcd-dropdown component to link menu items of the dropdown on which this directive is added. each item is linked to its\n * neighbors in the 4 directions. It then uses the {@link DropdownFocusHandlerService} to move the DOM focus between the menu items.\n */\n@Directive({\n    selector: 'vcd-dropdown[vcdDropdownFocusHandler]',\n})\nexport class DropdownFocusHandlerDirective implements AfterViewInit, OnDestroy {\n    constructor(\n        @Optional() @SkipSelf() private parentVcdDropdown: DropdownComponent,\n        @Optional() @SkipSelf() private parentFocusHandler: DropdownFocusHandlerDirective,\n        @Host() private hostVcdDropdown: DropdownComponent,\n        private focusHandlerService: DropdownFocusHandlerService,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * List of focusable menu items with their neighbors in 4 directions.\n     */\n    menuItems: MenuItem[];\n    /**\n     * The menu item which can toggle this menu. This can be the root dropdown trigger or nested menu trigger\n     */\n    private menuTrigger: MenuItem;\n    private dropdownTriggerEl: HTMLElement;\n    private clrDropdownMenuEl: HTMLElement;\n    private isRootDropdown = !this.parentVcdDropdown;\n    private timeoutId: number;\n    private subscriptionTracker = new SubscriptionTracker(this);\n    private unlistenRightArrowKeyPress: (...argArray: any[]) => any;\n\n    /**\n     * After a dropdown menu is opened, it creates {@link MenuItem} for each of the menu items along with their trigger menu item and links\n     * them. It also then moves the focus to first item in the opened menu list.\n     */\n    ngAfterViewInit(): void {\n        this.dropdownTriggerEl = this.hostVcdDropdown._dropdownTriggerEl;\n        this.listenToRightArrowKeyPressOnNestedTrigger();\n\n        this.subscriptionTracker.subscribe(this.hostVcdDropdown.dropdownMenuUpdated, (dropdown) => {\n            if (!dropdown) {\n                this.reset();\n                return;\n            }\n            this.clrDropdownMenuEl = dropdown.menu;\n            // We have to wait till the dropdown is opened for getting the menus trigger because, in case of a nested menu, the trigger is\n            // obtained from parent menus menuItems and they are not initialized even if we wait till the ngAfterViewInit hook\n            this.menuTrigger = this.isRootDropdown ? this.rootMenuTrigger : this.nestedMenuTrigger;\n            this.registerRootMenuContainer();\n            this.linkMenuItems();\n            this.moveFocusToFirstItem();\n        });\n    }\n\n    /**\n     * Sometimes when the right arrow key is pressed on a nested menu trigger, the event is propagating to sibling nested menu triggers and\n     * the event handlers attached to the menu triggers by clarity to toggle the menus are being invoked. Because of this, pressing right\n     * arrow on a nested menu is opening other sibling menus as well\n     */\n    private listenToRightArrowKeyPressOnNestedTrigger(): void {\n        if (this.isRootDropdown) {\n            return;\n        }\n        this.unlistenRightArrowKeyPress = this.renderer.listen(\n            this.dropdownTriggerEl,\n            'keydown.arrowright',\n            (event: Event) => event.stopPropagation()\n        );\n    }\n\n    private reset(): void {\n        if (this.isRootDropdown) {\n            this.focusHandlerService.unlistenFuncs.forEach((unlisten) => unlisten());\n        }\n        this.menuTrigger = null;\n        this.menuItems = null;\n    }\n\n    ngOnDestroy(): void {\n        if (this.unlistenRightArrowKeyPress) {\n            this.unlistenRightArrowKeyPress();\n        }\n    }\n\n    private registerRootMenuContainer(): void {\n        if (this.isRootDropdown) {\n            const rootMenuContainer = this.clrDropdownMenuEl;\n            this.focusHandlerService.listenToArrowKeys(rootMenuContainer);\n        }\n    }\n\n    private moveFocusToFirstItem(): void {\n        this.focusHandlerService.moveFocusTo(this.menuTrigger);\n        // After the menu is opened, the ClrDropdownMenu wouldn't be attached to the DOM until the next change detection cycle.\n        // So setTimeout is the only way to wait for the ClrDropdownMenu to be ready to move focus to first item.\n        this.timeoutId = window.setTimeout(() => {\n            if (this.parentVcdDropdown) {\n                this.focusHandlerService.moveFocus(Direction.RIGHT);\n            } else {\n                this.focusHandlerService.moveFocus(Direction.DOWN);\n            }\n            window.clearTimeout(this.timeoutId);\n        });\n    }\n\n    private getDropdownItemElement(item: Element): HTMLElement {\n        // We only need the underlying button that opens the nested dropdown as that is the activatable/focusable item\n        return (item.matches(ActivatableMenuItemType.BUTTON)\n            ? item\n            : item.querySelector(NESTED_DROPDOWN_TRIGGER)) as HTMLElement;\n    }\n\n    private linkMenuItems(): void {\n        const menuChildren: Element[] = Array.from(this.clrDropdownMenuEl.children);\n        this.menuItems = menuChildren\n            .filter(\n                (child) =>\n                    child.matches(ActivatableMenuItemType.BUTTON) ||\n                    child.matches(ActivatableMenuItemType.NESTED_VCD_DROPDOWN)\n            )\n            .map((child) => ({\n                element: this.getDropdownItemElement(child),\n                left: this.menuTrigger,\n            }));\n        this.linkVertical();\n        // Lint to menu trigger\n        if (this.isRootDropdown) {\n            this.menuTrigger.down = this.menuItems[0];\n        } else {\n            // If there is a parent dropdown, We have to link these menu items to their trigger in the parent dropdown\n            this.menuTrigger.right = this.menuItems[0];\n        }\n    }\n\n    private closeVcdDropdown = () => {\n        this.hostVcdDropdown.clrDropdown.toggleService.open = false;\n    };\n\n    private get rootMenuTrigger(): MenuItem {\n        return {\n            element: this.dropdownTriggerEl,\n            closeMenu: this.closeVcdDropdown,\n        };\n    }\n\n    private get nestedMenuTrigger(): MenuItem {\n        const menuTrigger = this.parentFocusHandler.menuItems.find((item) => {\n            return Object.is(item.element.innerText, this.dropdownTriggerEl.innerText);\n        });\n        menuTrigger.closeMenu = this.closeVcdDropdown;\n        return menuTrigger;\n    }\n\n    private linkVertical(): void {\n        this.menuItems.forEach((menuItem: MenuItem, index: number) => {\n            if (index > 0) {\n                menuItem.up = this.menuItems[index - 1];\n            }\n            if (index  1) {\n            this.menuItems[0].up = this.menuItems[this.menuItems.length - 1];\n            this.menuItems[this.menuItems.length - 1].down = this.menuItems[0];\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockRecord.html":{"url":"interfaces/MockRecord.html","title":"interface - MockRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MockRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/mock-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        age\n                                \n                                \n                                        city\n                                \n                                \n                                        details\n                                \n                                \n                                        name\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MockRecord {\n    name: string;\n    city: string;\n    state: string;\n    details: {\n        gender: string;\n    };\n    age: number;\n}\n\nexport const mockData: MockRecord[] = [\n    {\n        name: 'Person 1',\n        city: 'Palo Alto',\n        state: 'CA',\n        details: {\n            gender: 'Male',\n        },\n        age: 30,\n    },\n    {\n        name: 'Person 2',\n        city: 'Boston',\n        state: 'MA',\n        details: {\n            gender: 'Female',\n        },\n        age: 60,\n    },\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiSelectOption.html":{"url":"interfaces/MultiSelectOption.html","title":"interface - MultiSelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiSelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Same as the SelectOption but value is always a string\n\n            \n\n            \n                Extends\n            \n            \n                        SelectOption\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent\n    extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map((option) => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach((control) => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach((option) => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach((frmCtrl) => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter((formControl) => this.formGroup.get(formControl).value)\n            .map((selectedOption) => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter((frmCtrl) => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MultiSelectOptionInternal.html":{"url":"interfaces/MultiSelectOptionInternal.html","title":"interface - MultiSelectOptionInternal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MultiSelectOptionInternal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n        \n\n            \n                Description\n            \n            \n                Used internally for DatagridMultiSelectFilterComponent.options to add unique IDs to filter options. The IDs are used for\nassociating checkbox options with their labels in the HTML\n\n            \n\n            \n                Extends\n            \n            \n                        MultiSelectOption\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for each checkbox option instantiated in the HTML\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Host, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClrDatagridFilter } from '@clr/angular';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { FilterBuilder } from '../../utils/filter-builder';\nimport { IdGenerator } from '../../utils/id-generator/id-generator';\nimport { DatagridFilter, FilterComponentRendererSpec, FilterConfig, FilterRendererSpec } from './datagrid-filter';\n\n/**\n * Same as the {@link SelectOption} but value is always a string\n */\nexport interface MultiSelectOption extends SelectOption {\n    value: string;\n}\n\nexport interface DatagridMultiSelectFilterConfig extends FilterConfig {\n    /**\n     * List of select options\n     */\n    options: MultiSelectOption[];\n}\n\n/**\n * Used internally for {@link DatagridMultiSelectFilterComponent.options} to add unique IDs to filter options. The IDs are used for\n * associating checkbox options with their labels in the HTML\n */\ninterface MultiSelectOptionInternal extends MultiSelectOption {\n    /**\n     * Unique identifier for each checkbox option instantiated in the HTML\n     */\n    id: string;\n}\n\nconst idGenerator = new IdGenerator('vcd-multiselect-filter-id');\n\n/**\n * Used within a clarity grid column {@link DatagridComponent} to render a filter widget with list of checkboxes to select\n * multiple options\n * Example usage:\n * columns: GridColumn[] = [{\n *      displayName: 'Custom Select filter',\n *      renderer: 'state',\n *      queryFieldName: 'state',\n *      filterRendererSpec: FilterComponentRendererSpec({\n *          type: DatagridMultiSelectFilterComponent,\n *          config: {\n *              options: [{\n *                  value: 'CA',\n *                  display: 'California'\n *              }, {\n *                  value: 'MA',\n *                  display: 'Massachusetts'\n *              }],\n *              value: ['MA', 'NC'],\n *          },\n *      }),\n *   }]\n */\n@Component({\n    selector: 'vcd-dg-multiselect-filter',\n    templateUrl: './datagrid-multiselect-filter.component.html',\n})\nexport class DatagridMultiSelectFilterComponent\n    extends DatagridFilter\n    implements OnDestroy {\n    constructor(private filterContainer: ClrDatagridFilter) {\n        super(filterContainer);\n    }\n\n    /**\n     * Used inside the HTML to instantiate checkbox options\n     */\n    options: MultiSelectOptionInternal[];\n\n    createFormGroup(): FormGroup {\n        return new FormGroup({});\n    }\n\n    /**\n     * Overrides the config property because, the formGroup controls are defined by the config set by the caller.\n     * Value of each option becomes a formControl name inside the formGroup.\n     */\n    onBeforeSetConfig(config: DatagridMultiSelectFilterConfig): void {\n        this.options = config.options.map((option) => ({\n            ...option,\n            id: idGenerator.generate(),\n        }));\n        // Remove all the form controls in the form before adding new controls\n        Object.keys(this.formGroup.controls).forEach((control) => {\n            this.formGroup.removeControl(control);\n        });\n        config.options.forEach((option) => {\n            this.formGroup.addControl(option.value, new FormControl(false));\n        });\n    }\n\n    protected getDebounceTimeMs(): number {\n        return 1000;\n    }\n\n    setValue(values: string[]): void {\n        values.forEach((frmCtrl) => {\n            const correspondingFormCtrl = this.formGroup.get(frmCtrl);\n            if (!correspondingFormCtrl) {\n                throw Error(`A multi select filter option with value '${frmCtrl}' does not exist`);\n            }\n            correspondingFormCtrl.setValue(true);\n        });\n    }\n\n    getValue(): string {\n        const selectedFilters = Object.keys(this.formGroup.getRawValue())\n            .filter((formControl) => this.formGroup.get(formControl).value)\n            .map((selectedOption) => new FilterBuilder().is(this.queryField).equalTo(selectedOption));\n        return new FilterBuilder().any(...selectedFilters).getString();\n    }\n\n    isActive(): boolean {\n        return (\n            this.formGroup &&\n            !!Object.keys(this.formGroup.getRawValue()).filter((frmCtrl) => this.formGroup.get(frmCtrl).value).length\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n\n/**\n * Creates a {@link FilterRendererSpec} with the given config.\n * @param options List of options for select input\n * @param value the default value that should go in this multi-select filter.\n */\nexport function DatagridMultiSelectFilter(\n    options: MultiSelectOption[],\n    value?: string[]\n): FilterRendererSpec {\n    return FilterComponentRendererSpec({\n        type: DatagridMultiSelectFilterComponent,\n        config: {\n            options,\n            value,\n        },\n    });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/NestedPropertyPipe.html":{"url":"pipes/NestedPropertyPipe.html","title":"pipe - NestedPropertyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  NestedPropertyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/pipes/nested-property.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Used for extracting the value of nested property of an object.\nExample:\nconst obj = {\n     a: {\n         b: {\n             c: 'c'\n         }\n     }\n}\nInvoking {{ obj | nestedProperty: 'a.b.c' }} in a template produces c\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        nestedProperty\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(item: any, property: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/pipes/nested-property.pipe.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DatePipe, DecimalPipe } from '@angular/common';\nimport { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';\n\nconst OBJECT_PROPERTY_SEPARATOR = '.';\nconst DATE_OBJECT_CLASS = '[object Date]';\n\n/**\n * Used for extracting the value of nested property of an object.\n *\n * Example:\n * const obj = {\n *     a: {\n *         b: {\n *             c: 'c'\n *         }\n *     }\n * }\n *\n * Invoking `{{ obj | nestedProperty: 'a.b.c' }}` in a template produces c\n */\n@Pipe({\n    name: 'nestedProperty',\n    pure: true,\n})\nexport class NestedPropertyPipe implements PipeTransform {\n    constructor(@Inject(LOCALE_ID) private localeId: string) {}\n    public transform(item: any, property: string): string {\n        if (!item || !property) {\n            return null;\n        }\n        const splitProperty = property.split(OBJECT_PROPERTY_SEPARATOR);\n        let returnValue;\n        if (splitProperty.length > 1) {\n            let value = item;\n            for (const nestedProp of splitProperty) {\n                if (isNullOrUndefined(value) || isNullOrUndefined(value[nestedProp])) {\n                    return null;\n                }\n                value = value[nestedProp];\n            }\n            returnValue = value;\n        } else {\n            if (isNullOrUndefined(item[property])) {\n                return null;\n            }\n            returnValue = item[property];\n        }\n\n        if (typeof returnValue === 'number') {\n            return new DecimalPipe(this.localeId).transform(returnValue);\n        }\n        return returnValue instanceof Date ? new DatePipe(this.localeId).transform(returnValue) : returnValue;\n    }\n}\n\n/**\n * Utility method for covering the 'null' and 'undefined' checks as 'value == null' is equivalent to 'value === null || value === undefined'\n */\nfunction isNullOrUndefined(value: unknown): boolean {\n    return value == null;\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoUnit.html":{"url":"classes/NoUnit.html","title":"class - NoUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                INSTANCE\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                getUnitNameTranslationKey\n                            \n                            \n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NoUnit\n\n                        \n                    \n                    \n                        \n                            Default value : new NoUnit(1, '')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:490\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:491\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:495\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:499\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AfterContentChecked,\n    Component,\n    Injectable,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Self,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, NgControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { TranslationService } from '@vcd/i18n';\nimport { SelectOption } from '../../common/interfaces';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport { FormValidators } from '../../form/validators';\nimport { Unit } from '../../utils/unit/unit';\nimport { UnitFormatter } from '../../utils/unit/unit-formatter';\nimport { BaseFormControl } from '../base-form-control';\nimport { FormInputComponent } from '../form-input/form-input.component';\nimport { FormSelectComponent } from '../form-select/form-select.component';\n\n/**\n * -1 is the number to specify a value of unlimited.\n */\nexport const UNLIMITED = -1;\n\n/**\n * A numerical form input component with unit selection and unlimited checkbox.\n *\n * If a single element array is provided for the units, then there is no unit selection\n * but rather a string notation for the unit. If the array is empty then there are no units at all.\n *\n * The display of unlimited checkbox is configurable.\n */\n@Component({\n    selector: 'vcd-number-with-unit-form-input',\n    templateUrl: './number-with-unit-form-input.component.html',\n    styleUrls: ['./number-with-unit-form-input.component.scss'],\n})\nexport class NumberWithUnitFormInputComponent\n    extends BaseFormControl\n    implements OnChanges, OnInit, OnDestroy, AfterContentChecked {\n    /**\n     * List of available units. Consider the following options for the array:\n     * # array with more than one elements\n     *    - a dropdown unit selection is shown. You must also provide {@link inputValueUnit}\n     * # single element array\n     *    - a string notation for no dropdown, {@link inputValueUnit} is derived from the element\n     * # empty array\n     *    - no units at all\n     */\n    @Input()\n    set unitOptions(unitOptions: Unit[]) {\n        this._unitOptions = unitOptions || [];\n\n        if (this._unitOptions.length === 1) {\n            this.inputValueUnit = this._unitOptions[0];\n        }\n\n        this.comboOptionUnitMap.clear();\n        this.comboOptions = [];\n        this._unitOptions.forEach((unitOption) => {\n            const comboOption: SelectOption = {\n                display: unitOption.getUnitName(),\n                value: unitOption.getMultiplier(),\n            };\n            this.comboOptionUnitMap.set(comboOption, unitOption);\n            this.comboOptions.push(comboOption);\n        });\n    }\n\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * The base unit of the component. The value of this FormControl is calculated based on this property.\n     * Required when a multi element array is provided for {@link unitOptions} and it should be one of those values.\n     */\n    @Input() inputValueUnit: Unit;\n\n    /**\n     * The initial display unit.\n     * This is useful if you want to prevent finding best match when displaying a value for the first time.\n     * For example if you provide 1024 MB and you want it to be displayed as 1024MB instead of 1GB\n     */\n    @Input() initialValueUnit: Unit;\n\n    /**\n     * Show the Unlimited checkbox. Can be set just once only at render time.\n     */\n    @Input() showUnlimitedOption = true;\n\n    /**\n     * The value when the component is set to unlimited. Default is -1.\n     */\n    @Input() unlimitedValue: number = UNLIMITED;\n\n    /**\n     * Minimum value allowed relevant to {@link inputValueUnit}. Default is 0.\n     */\n    @Input() min: number = 0;\n\n    /**\n     * Maximum value allowed relevant to {@link inputValueUnit}. Default is {@link Number.MAX_SAFE_INTEGER}.\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = 10;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    public formGroup: FormGroup;\n\n    private _unitOptions: Unit[] = [];\n\n    /**\n     * A drop down of available units\n     *\n     * This list is constructed from list of\n     * available units in {@link unitOptions}\n     */\n    comboOptions: SelectOption[] = [];\n\n    /**\n     * Map of SelectOption and Unit which is used to\n     * extract Unit for a given SelectOption.\n     */\n    private comboOptionUnitMap: Map = new Map();\n\n    // value set to the number input of the formGroup\n    private bestValue: number = null;\n\n    // unit set to the selected dropdown select of the formGroup\n    private bestUnit: Unit;\n\n    /**\n     * The minimum value calculated from the {@link min} value converted to the currently selected unit\n     */\n    unitMin: number;\n\n    /**\n     * The maximum value calculated from the {@link max} value converted to the currently selected unit\n     */\n    unitMax: number;\n\n    /**\n     * This is the last real value for the input. Used in case when user toggles the unlimited checkbox twice in a row.\n     * When unlimited is checked the value of the input is cleared, then when toggled again, the input value should be\n     * set to the last value.\n     */\n    lastRealValue: number = null;\n\n    /**\n     * Set the unit in the dropdown.\n     * @param value Should be one of the value that you pass in {@link #unitOptions} to select the Unit.\n     */\n    set selectedUnit(value: number) {\n        this.formGroup.get('comboUnitOptions').setValue(value);\n    }\n\n    @ViewChild('unitDropdown', { static: false }) unitDropdown: FormSelectComponent;\n    @ViewChild('limitedInput', { static: false }) limitedInput: FormInputComponent;\n\n    tracker = new SubscriptionTracker(this);\n\n    constructor(\n        @Self() @Optional() controlDirective: NgControl,\n        private fb: FormBuilder,\n        private translationService: TranslationService,\n        private unitFormatter: UnitFormatter\n    ) {\n        super(controlDirective);\n    }\n\n    ngOnDestroy(): void {\n        this.tracker.unsubscribeAll();\n    }\n\n    ngOnInit(): void {\n        // Calculate the best unit and value. Take into account if initial unit is provided.\n        if (this.initialValueUnit) {\n            this.bestUnit = this.initialValueUnit;\n            this.bestValue = this.initialValue\n                ? this.inputValueUnit.getOutputValue(this.initialValue, this.bestUnit)\n                : null;\n        } else {\n            this.computeBestUnitAndValue(this.initialValue as number);\n        }\n\n        // Build the form group based on the best unit and value, considering also if unlimited is enabled\n        if (!this.showUnlimitedOption) {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: this.bestUnit.getMultiplier(),\n            });\n        } else {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: [this.bestUnit.getMultiplier()],\n                unlimited: this.bestValue === this.unlimitedValue,\n            });\n            // Remember the value in case the control value is programmatically set to unlimited\n            if (this.bestValue !== this.unlimitedValue) {\n                this.lastRealValue = this.bestValue;\n            }\n            this.tracker.subscribe(this.formGroup.get('unlimited').valueChanges, (unlimitedChecked) => {\n                const input = this.formGroup.get('limited');\n                if (unlimitedChecked) {\n                    // When going to unlimited remember the value of the input before clearing it\n                    this.lastRealValue = input.value;\n                    input.setValue(null);\n                } else {\n                    input.setValue(this.lastRealValue);\n                }\n                this.updateUnlimitedDisabledState();\n            });\n        }\n        this.tracker.subscribe(this.formGroup.get('comboUnitOptions').valueChanges, () => {\n            // Mark the input as dirty since if it was not touched no error will be displayed even if there are some\n            this.recalculateUnitMinMax();\n            this.onChange(this.getValue());\n        });\n        this.tracker.subscribe(this.formGroup.get('limited').valueChanges, () => {\n            this.onChange(this.getValue());\n        });\n        this.recalculateUnitMinMax();\n        this.updateUnlimitedDisabledState();\n        // This code should be here since the formGroup has been created in the ngOnInit. If the disabled()\n        // call has been done in a constructor this component would not have been initialized\n        if (this.disabled) {\n            this.updateDisabledState(true, true);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.recalculateUnitMinMax();\n    }\n\n    ngAfterContentChecked(): void {\n        if (!this.limitedInput) {\n            return;\n        }\n        Object.defineProperty(this.limitedInput, 'showErrors', {\n            get: this.limitedInputShowErrors,\n        });\n    }\n\n    limitedInputShowErrors = () => {\n        return this.showErrors && this.errors ? {} : null;\n    };\n\n    writeValue(value: number): void {\n        if (!this.formGroup) {\n            this.initialValue = value;\n            return;\n        }\n        const input = this.formGroup.get('limited');\n        if (value === null) {\n            if (this.showUnlimitedOption) {\n                // Set Unlimited checkbox to false because the form control was reset\n                this.formGroup.get('unlimited').setValue(false);\n            }\n            input.setValue(null);\n            this.updateUnlimitedDisabledState();\n            return;\n        }\n\n        if (this.showUnlimitedOption) {\n            if (value !== this.unlimitedValue) {\n                this.computeBestUnitAndValue(value);\n                this.lastRealValue = this.bestValue;\n                input.setValue(this.bestValue);\n                this.selectedUnit = this.bestUnit.getMultiplier();\n            }\n            this.formGroup.get('unlimited').setValue(value === this.unlimitedValue);\n        } else {\n            this.computeBestUnitAndValue(value);\n            this.lastRealValue = this.bestValue;\n            input.setValue(this.bestValue);\n            this.selectedUnit = this.bestUnit.getMultiplier();\n        }\n\n        this.updateUnlimitedDisabledState();\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.updateDisabledState(isDisabled, true);\n    }\n\n    private updateUnlimitedDisabledState(): void {\n        if (!this.showUnlimitedOption || this.disabled) {\n            return;\n        }\n        this.updateDisabledState(this.formGroup?.get('unlimited')?.value, false);\n    }\n\n    updateDisabledState(isDisabled: boolean, updateUnlimitedCheckbox: boolean): void {\n        if (this.formGroup) {\n            // Do not emit when changing the disable state\n            if (isDisabled) {\n                this.formGroup.get('comboUnitOptions').disable({ emitEvent: false });\n                this.formGroup.get('limited').disable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.disable({ emitEvent: false });\n                }\n            } else {\n                this.formGroup.get('comboUnitOptions').enable({ emitEvent: false });\n                this.formGroup.get('limited').enable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.enable({ emitEvent: false });\n                }\n            }\n        }\n    }\n\n    private computeBestUnitAndValue(value: number): void {\n        if (this.unitOptions.length === 0) {\n            this.bestValue = value;\n            this.bestUnit = NoUnit.INSTANCE;\n        } else if (value === null) {\n            this.bestValue = null;\n            this.bestUnit = this.unitOptions[0];\n        } else {\n            this.bestUnit = this.inputValueUnit.findBestUnit(value, this.unitOptions);\n            this.bestValue = this.inputValueUnit.getOutputValue(value, this.bestUnit);\n        }\n    }\n\n    private getValue(): number {\n        if (this.formGroup.get('unlimited')?.value) {\n            return this.unlimitedValue;\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value && this.unitOptions.length) {\n            return this.getSelectedUnit().getOutputValue(value, this.inputValueUnit);\n        }\n        return value;\n    }\n\n    private getSelectedUnit(): Unit {\n        const value = this.formGroup.get('comboUnitOptions').value;\n        const selectedComboUnit = this.comboOptions.find(\n            // tslint:disable-next-line:triple-equals\n            (co) => co.value == value\n        );\n        const selectedUnit = this.comboOptionUnitMap.get(selectedComboUnit);\n        return selectedUnit;\n    }\n\n    private recalculateUnitMinMax(): void {\n        if (!this.formGroup) {\n            return;\n        }\n        const selectedUnit = this.getSelectedUnit();\n        this.unitMin = selectedUnit ? this.inputValueUnit.getOutputValue(this.min, selectedUnit) : this.min;\n        this.unitMax = selectedUnit ? this.inputValueUnit.getOutputValue(this.max, selectedUnit) : this.max;\n    }\n\n    get displayValue(): string {\n        if (this.formGroup.get('unlimited') && this.formGroup.get('unlimited').value) {\n            return this.translationService.translate('vcd.cc.unlimited');\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value) {\n            if (this.unitDropdown) {\n                // Return the value and the selected unit.\n                const inputUnit: Unit = this.comboOptionUnitMap.get(this.unitDropdown.selectedOption);\n                return this.unitFormatter.bestFormat(value, inputUnit, this.unitOptions);\n            } else if (this.unitOptions.length === 1) {\n                // Return the value and the predefined unit. For example, 100 %.\n                return this.unitFormatter.bestFormat(value, this.unitOptions[0], this.unitOptions);\n            } else if (this.isReadOnly) {\n                // Return the value with best unit when #limited FormControl.value\n                // is set programmatically\n\n                const displayComboUnit = this.comboOptions.find(\n                    // tslint:disable-next-line:triple-equals\n                    (co) => co.value == this.formGroup.get('comboUnitOptions').value\n                );\n                const displayUnit = this.comboOptionUnitMap.get(displayComboUnit);\n                if (displayUnit) {\n                    return this.unitFormatter.bestFormat(value, displayUnit, this.unitOptions);\n                }\n            }\n            // Return only the value when unitOptions was not set.\n            return value.toString();\n        }\n        return;\n    }\n\n    /**\n     * Up to now (when this function has been introduced) all our form errors were in the form\n     * `{ [key]: true }` which made it quite impossible to add custom parameters for translation.\n     *  `errorLabels` are a perfect example for this use case\n     *\n     * Now the errors are in format `{ [key]: any }` where any can be either an array [] for positional\n     * based message format or `{msgKey: string}` for a named message format.\n     *\n     * For `errorLabels` we\n     *\n     */\n    get errors(): ValidationErrors {\n        if (this.errorLabels.length) {\n            return this.errorLabels.reduce(\n                (acc, cur) => ({\n                    ...acc,\n                    [cur]: true,\n                }),\n                {}\n            );\n        }\n        return this.formControl.errors;\n    }\n\n    getErrorTranslationParams(errorObjectValue: any): any {\n        // `errorObjectValue === true` is the 'old' case see comments for `errors`\n        if (!errorObjectValue || errorObjectValue === true) {\n            return [this.getValue(), this.min.toString(), this.max.toString()];\n        }\n        return errorObjectValue;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NumberWithUnitsFormValidatorsFactory {\n    constructor(private unitFormatter: UnitFormatter) {}\n\n    public isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited = -1): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const value = control.value;\n\n            const isNumber = !isNaN(Number(control.value)) && isFinite(control.value);\n\n            if (isNumber) {\n                if (value >= min && value \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberUnit.html":{"url":"classes/NumberUnit.html","title":"class - NumberUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of the comparison number\n\n            \n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:89\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:112\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NumberWithUnitFormInputWidgetObject.html":{"url":"classes/NumberWithUnitFormInputWidgetObject.html","title":"class - NumberWithUnitFormInputWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NumberWithUnitFormInputWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts\n        \n\n            \n                Description\n            \n            \n                Test wrapper for the VCD Number With Unit Form Input component.\n\n            \n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNativeElement\n                            \n                            \n                                selectUnit\n                            \n                            \n                                setInputValueUnit\n                            \n                            \n                                setUnitOptionsToNone\n                            \n                            \n                                setUnitOptionsToPercent\n                            \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formControl\n                                \n                                \n                                    displayValue\n                                \n                                \n                                    readonlyText\n                                \n                                \n                                    unlimitedFormControl\n                                \n                                \n                                    valueFormControl\n                                \n                                \n                                    unitFormControl\n                                \n                                \n                                    selectedUnit\n                                \n                                \n                                    selectedUnitDisplayValue\n                                \n                                \n                                    isUnitDropDownDisplayed\n                                \n                                \n                                    singleUnitDisplayText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-number-with-unit-form-input'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNativeElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetNativeElement(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HTMLElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectUnit\n                        \n                        \n                    \n                \n            \n            \n                \nselectUnit(unit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInputValueUnit\n                        \n                        \n                    \n                \n            \n            \n                \nsetInputValueUnit(unit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUnitOptionsToNone\n                        \n                        \n                    \n                \n            \n            \n                \nsetUnitOptionsToNone()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUnitOptionsToPercent\n                        \n                        \n                    \n                \n            \n            \n                \nsetUnitOptionsToPercent()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n\n                \n                    \n                        getformControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        displayValue\n                    \n                \n\n                \n                    \n                        getdisplayValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readonlyText\n                    \n                \n\n                \n                    \n                        getreadonlyText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:28\n                                \n                            \n                    \n                        \n                                Reads from the readonly section. If widget is not readonly, it returns an empty string;\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unlimitedFormControl\n                    \n                \n\n                \n                    \n                        getunlimitedFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        valueFormControl\n                    \n                \n\n                \n                    \n                        getvalueFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unitFormControl\n                    \n                \n\n                \n                    \n                        getunitFormControl()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedUnit\n                    \n                \n\n                \n                    \n                        getselectedUnit()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedUnitDisplayValue\n                    \n                \n\n                \n                    \n                        getselectedUnitDisplayValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isUnitDropDownDisplayed\n                    \n                \n\n                \n                    \n                        getisUnitDropDownDisplayed()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        singleUnitDisplayText\n                    \n                \n\n                \n                    \n                        getsingleUnitDisplayText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts:88\n                                \n                            \n                    \n                        \n                                Returns an empty string if there is no HTML for single unit\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\nimport { WidgetObject } from '../../utils/test/widget-object';\nimport { Percent, Unit } from '../../utils/unit/unit';\nimport { NumberWithUnitFormInputComponent } from './number-with-unit-form-input.component';\n\n/**\n * Test wrapper for the VCD Number With Unit Form Input component.\n */\nexport class NumberWithUnitFormInputWidgetObject extends WidgetObject {\n    static tagName = 'vcd-number-with-unit-form-input';\n\n    get formControl(): AbstractControl {\n        return this.component.formControl;\n    }\n\n    get displayValue(): string {\n        return this.component.displayValue;\n    }\n\n    /**\n     * Reads from the readonly section. If widget is not readonly, it returns an empty string;\n     */\n    get readonlyText(): string {\n        return this.getText('.readonly-text');\n    }\n\n    get unlimitedFormControl(): AbstractControl {\n        return this.component.formGroup.get('unlimited');\n    }\n\n    get valueFormControl(): AbstractControl {\n        return this.component.formGroup.get('limited');\n    }\n\n    get unitFormControl(): AbstractControl {\n        return this.component.formGroup.get('comboUnitOptions');\n    }\n\n    selectUnit(unit: Unit): void {\n        this.component.selectedUnit = unit.getMultiplier();\n    }\n\n    setInputValueUnit(unit: Unit): void {\n        this.component.inputValueUnit = unit;\n    }\n\n    get selectedUnit(): number {\n        return this.component.formGroup.get('comboUnitOptions').value;\n    }\n\n    get selectedUnitDisplayValue(): string {\n        return (\n            this.component.unitOptions\n                // tslint:disable-next-line:triple-equals\n                .find((item) => item.getMultiplier() == this.selectedUnit)\n                .getUnitName()\n        );\n    }\n\n    setUnitOptionsToPercent(): void {\n        this.component.unitOptions = [Percent.ZERO_TO_100];\n        this.component.inputValueUnit = Percent.ZERO_TO_1;\n        this.unitFormControl.setValue(this.component.unitOptions[0].getMultiplier());\n        this.fixture.detectChanges();\n    }\n\n    setUnitOptionsToNone(): void {\n        this.component.unitOptions = [];\n        this.fixture.detectChanges();\n    }\n\n    getNativeElement(cssSelector: string): HTMLElement {\n        return this.findElement(cssSelector) && this.findElement(cssSelector).nativeElement;\n    }\n\n    get isUnitDropDownDisplayed(): boolean {\n        return !!this.getNativeElement('.combo-options');\n    }\n\n    /**\n     * Returns an empty string if there is no HTML for single unit\n     */\n    get singleUnitDisplayText(): string {\n        const element = this.getNativeElement('.single-option');\n        return element ? element.innerHTML : '';\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NumberWithUnitsFormValidatorsFactory.html":{"url":"injectables/NumberWithUnitsFormValidatorsFactory.html","title":"injectable - NumberWithUnitsFormValidatorsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NumberWithUnitsFormValidatorsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isInRange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(unitFormatter: UnitFormatter)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:460\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        unitFormatter\n                                                  \n                                                        \n                                                                        UnitFormatter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isInRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts:463\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unlimited\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        -1\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    AfterContentChecked,\n    Component,\n    Injectable,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Self,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, NgControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { TranslationService } from '@vcd/i18n';\nimport { SelectOption } from '../../common/interfaces';\nimport { SubscriptionTracker } from '../../common/subscription';\nimport { FormValidators } from '../../form/validators';\nimport { Unit } from '../../utils/unit/unit';\nimport { UnitFormatter } from '../../utils/unit/unit-formatter';\nimport { BaseFormControl } from '../base-form-control';\nimport { FormInputComponent } from '../form-input/form-input.component';\nimport { FormSelectComponent } from '../form-select/form-select.component';\n\n/**\n * -1 is the number to specify a value of unlimited.\n */\nexport const UNLIMITED = -1;\n\n/**\n * A numerical form input component with unit selection and unlimited checkbox.\n *\n * If a single element array is provided for the units, then there is no unit selection\n * but rather a string notation for the unit. If the array is empty then there are no units at all.\n *\n * The display of unlimited checkbox is configurable.\n */\n@Component({\n    selector: 'vcd-number-with-unit-form-input',\n    templateUrl: './number-with-unit-form-input.component.html',\n    styleUrls: ['./number-with-unit-form-input.component.scss'],\n})\nexport class NumberWithUnitFormInputComponent\n    extends BaseFormControl\n    implements OnChanges, OnInit, OnDestroy, AfterContentChecked {\n    /**\n     * List of available units. Consider the following options for the array:\n     * # array with more than one elements\n     *    - a dropdown unit selection is shown. You must also provide {@link inputValueUnit}\n     * # single element array\n     *    - a string notation for no dropdown, {@link inputValueUnit} is derived from the element\n     * # empty array\n     *    - no units at all\n     */\n    @Input()\n    set unitOptions(unitOptions: Unit[]) {\n        this._unitOptions = unitOptions || [];\n\n        if (this._unitOptions.length === 1) {\n            this.inputValueUnit = this._unitOptions[0];\n        }\n\n        this.comboOptionUnitMap.clear();\n        this.comboOptions = [];\n        this._unitOptions.forEach((unitOption) => {\n            const comboOption: SelectOption = {\n                display: unitOption.getUnitName(),\n                value: unitOption.getMultiplier(),\n            };\n            this.comboOptionUnitMap.set(comboOption, unitOption);\n            this.comboOptions.push(comboOption);\n        });\n    }\n\n    get unitOptions(): Unit[] {\n        return this._unitOptions;\n    }\n\n    /**\n     * The base unit of the component. The value of this FormControl is calculated based on this property.\n     * Required when a multi element array is provided for {@link unitOptions} and it should be one of those values.\n     */\n    @Input() inputValueUnit: Unit;\n\n    /**\n     * The initial display unit.\n     * This is useful if you want to prevent finding best match when displaying a value for the first time.\n     * For example if you provide 1024 MB and you want it to be displayed as 1024MB instead of 1GB\n     */\n    @Input() initialValueUnit: Unit;\n\n    /**\n     * Show the Unlimited checkbox. Can be set just once only at render time.\n     */\n    @Input() showUnlimitedOption = true;\n\n    /**\n     * The value when the component is set to unlimited. Default is -1.\n     */\n    @Input() unlimitedValue: number = UNLIMITED;\n\n    /**\n     * Minimum value allowed relevant to {@link inputValueUnit}. Default is 0.\n     */\n    @Input() min: number = 0;\n\n    /**\n     * Maximum value allowed relevant to {@link inputValueUnit}. Default is {@link Number.MAX_SAFE_INTEGER}.\n     */\n    @Input() max: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Input 'placeholder' field.\n     */\n    @Input() placeholder: string = null;\n\n    /**\n     * Input 'size' field.\n     */\n    @Input() size: number = 10;\n\n    /**\n     * Maximum number of characters (in UTF-16 code units) that the user can enter.\n     */\n    @Input() maxlength: number = null;\n\n    /**\n     * Hint to display in the content of a signpost\n     */\n    @Input() hint: string;\n\n    /**\n     * The direction for displaying the hint\n     */\n    @Input() hintPosition = 'top-left';\n\n    public formGroup: FormGroup;\n\n    private _unitOptions: Unit[] = [];\n\n    /**\n     * A drop down of available units\n     *\n     * This list is constructed from list of\n     * available units in {@link unitOptions}\n     */\n    comboOptions: SelectOption[] = [];\n\n    /**\n     * Map of SelectOption and Unit which is used to\n     * extract Unit for a given SelectOption.\n     */\n    private comboOptionUnitMap: Map = new Map();\n\n    // value set to the number input of the formGroup\n    private bestValue: number = null;\n\n    // unit set to the selected dropdown select of the formGroup\n    private bestUnit: Unit;\n\n    /**\n     * The minimum value calculated from the {@link min} value converted to the currently selected unit\n     */\n    unitMin: number;\n\n    /**\n     * The maximum value calculated from the {@link max} value converted to the currently selected unit\n     */\n    unitMax: number;\n\n    /**\n     * This is the last real value for the input. Used in case when user toggles the unlimited checkbox twice in a row.\n     * When unlimited is checked the value of the input is cleared, then when toggled again, the input value should be\n     * set to the last value.\n     */\n    lastRealValue: number = null;\n\n    /**\n     * Set the unit in the dropdown.\n     * @param value Should be one of the value that you pass in {@link #unitOptions} to select the Unit.\n     */\n    set selectedUnit(value: number) {\n        this.formGroup.get('comboUnitOptions').setValue(value);\n    }\n\n    @ViewChild('unitDropdown', { static: false }) unitDropdown: FormSelectComponent;\n    @ViewChild('limitedInput', { static: false }) limitedInput: FormInputComponent;\n\n    tracker = new SubscriptionTracker(this);\n\n    constructor(\n        @Self() @Optional() controlDirective: NgControl,\n        private fb: FormBuilder,\n        private translationService: TranslationService,\n        private unitFormatter: UnitFormatter\n    ) {\n        super(controlDirective);\n    }\n\n    ngOnDestroy(): void {\n        this.tracker.unsubscribeAll();\n    }\n\n    ngOnInit(): void {\n        // Calculate the best unit and value. Take into account if initial unit is provided.\n        if (this.initialValueUnit) {\n            this.bestUnit = this.initialValueUnit;\n            this.bestValue = this.initialValue\n                ? this.inputValueUnit.getOutputValue(this.initialValue, this.bestUnit)\n                : null;\n        } else {\n            this.computeBestUnitAndValue(this.initialValue as number);\n        }\n\n        // Build the form group based on the best unit and value, considering also if unlimited is enabled\n        if (!this.showUnlimitedOption) {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: this.bestUnit.getMultiplier(),\n            });\n        } else {\n            this.formGroup = this.fb.group({\n                limited: [this.bestValue === this.unlimitedValue ? null : this.bestValue],\n                comboUnitOptions: [this.bestUnit.getMultiplier()],\n                unlimited: this.bestValue === this.unlimitedValue,\n            });\n            // Remember the value in case the control value is programmatically set to unlimited\n            if (this.bestValue !== this.unlimitedValue) {\n                this.lastRealValue = this.bestValue;\n            }\n            this.tracker.subscribe(this.formGroup.get('unlimited').valueChanges, (unlimitedChecked) => {\n                const input = this.formGroup.get('limited');\n                if (unlimitedChecked) {\n                    // When going to unlimited remember the value of the input before clearing it\n                    this.lastRealValue = input.value;\n                    input.setValue(null);\n                } else {\n                    input.setValue(this.lastRealValue);\n                }\n                this.updateUnlimitedDisabledState();\n            });\n        }\n        this.tracker.subscribe(this.formGroup.get('comboUnitOptions').valueChanges, () => {\n            // Mark the input as dirty since if it was not touched no error will be displayed even if there are some\n            this.recalculateUnitMinMax();\n            this.onChange(this.getValue());\n        });\n        this.tracker.subscribe(this.formGroup.get('limited').valueChanges, () => {\n            this.onChange(this.getValue());\n        });\n        this.recalculateUnitMinMax();\n        this.updateUnlimitedDisabledState();\n        // This code should be here since the formGroup has been created in the ngOnInit. If the disabled()\n        // call has been done in a constructor this component would not have been initialized\n        if (this.disabled) {\n            this.updateDisabledState(true, true);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.recalculateUnitMinMax();\n    }\n\n    ngAfterContentChecked(): void {\n        if (!this.limitedInput) {\n            return;\n        }\n        Object.defineProperty(this.limitedInput, 'showErrors', {\n            get: this.limitedInputShowErrors,\n        });\n    }\n\n    limitedInputShowErrors = () => {\n        return this.showErrors && this.errors ? {} : null;\n    };\n\n    writeValue(value: number): void {\n        if (!this.formGroup) {\n            this.initialValue = value;\n            return;\n        }\n        const input = this.formGroup.get('limited');\n        if (value === null) {\n            if (this.showUnlimitedOption) {\n                // Set Unlimited checkbox to false because the form control was reset\n                this.formGroup.get('unlimited').setValue(false);\n            }\n            input.setValue(null);\n            this.updateUnlimitedDisabledState();\n            return;\n        }\n\n        if (this.showUnlimitedOption) {\n            if (value !== this.unlimitedValue) {\n                this.computeBestUnitAndValue(value);\n                this.lastRealValue = this.bestValue;\n                input.setValue(this.bestValue);\n                this.selectedUnit = this.bestUnit.getMultiplier();\n            }\n            this.formGroup.get('unlimited').setValue(value === this.unlimitedValue);\n        } else {\n            this.computeBestUnitAndValue(value);\n            this.lastRealValue = this.bestValue;\n            input.setValue(this.bestValue);\n            this.selectedUnit = this.bestUnit.getMultiplier();\n        }\n\n        this.updateUnlimitedDisabledState();\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.updateDisabledState(isDisabled, true);\n    }\n\n    private updateUnlimitedDisabledState(): void {\n        if (!this.showUnlimitedOption || this.disabled) {\n            return;\n        }\n        this.updateDisabledState(this.formGroup?.get('unlimited')?.value, false);\n    }\n\n    updateDisabledState(isDisabled: boolean, updateUnlimitedCheckbox: boolean): void {\n        if (this.formGroup) {\n            // Do not emit when changing the disable state\n            if (isDisabled) {\n                this.formGroup.get('comboUnitOptions').disable({ emitEvent: false });\n                this.formGroup.get('limited').disable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.disable({ emitEvent: false });\n                }\n            } else {\n                this.formGroup.get('comboUnitOptions').enable({ emitEvent: false });\n                this.formGroup.get('limited').enable({ emitEvent: false });\n                if (updateUnlimitedCheckbox) {\n                    this.formGroup.get('unlimited')?.enable({ emitEvent: false });\n                }\n            }\n        }\n    }\n\n    private computeBestUnitAndValue(value: number): void {\n        if (this.unitOptions.length === 0) {\n            this.bestValue = value;\n            this.bestUnit = NoUnit.INSTANCE;\n        } else if (value === null) {\n            this.bestValue = null;\n            this.bestUnit = this.unitOptions[0];\n        } else {\n            this.bestUnit = this.inputValueUnit.findBestUnit(value, this.unitOptions);\n            this.bestValue = this.inputValueUnit.getOutputValue(value, this.bestUnit);\n        }\n    }\n\n    private getValue(): number {\n        if (this.formGroup.get('unlimited')?.value) {\n            return this.unlimitedValue;\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value && this.unitOptions.length) {\n            return this.getSelectedUnit().getOutputValue(value, this.inputValueUnit);\n        }\n        return value;\n    }\n\n    private getSelectedUnit(): Unit {\n        const value = this.formGroup.get('comboUnitOptions').value;\n        const selectedComboUnit = this.comboOptions.find(\n            // tslint:disable-next-line:triple-equals\n            (co) => co.value == value\n        );\n        const selectedUnit = this.comboOptionUnitMap.get(selectedComboUnit);\n        return selectedUnit;\n    }\n\n    private recalculateUnitMinMax(): void {\n        if (!this.formGroup) {\n            return;\n        }\n        const selectedUnit = this.getSelectedUnit();\n        this.unitMin = selectedUnit ? this.inputValueUnit.getOutputValue(this.min, selectedUnit) : this.min;\n        this.unitMax = selectedUnit ? this.inputValueUnit.getOutputValue(this.max, selectedUnit) : this.max;\n    }\n\n    get displayValue(): string {\n        if (this.formGroup.get('unlimited') && this.formGroup.get('unlimited').value) {\n            return this.translationService.translate('vcd.cc.unlimited');\n        }\n\n        const value = this.formGroup.get('limited').value;\n        if (value) {\n            if (this.unitDropdown) {\n                // Return the value and the selected unit.\n                const inputUnit: Unit = this.comboOptionUnitMap.get(this.unitDropdown.selectedOption);\n                return this.unitFormatter.bestFormat(value, inputUnit, this.unitOptions);\n            } else if (this.unitOptions.length === 1) {\n                // Return the value and the predefined unit. For example, 100 %.\n                return this.unitFormatter.bestFormat(value, this.unitOptions[0], this.unitOptions);\n            } else if (this.isReadOnly) {\n                // Return the value with best unit when #limited FormControl.value\n                // is set programmatically\n\n                const displayComboUnit = this.comboOptions.find(\n                    // tslint:disable-next-line:triple-equals\n                    (co) => co.value == this.formGroup.get('comboUnitOptions').value\n                );\n                const displayUnit = this.comboOptionUnitMap.get(displayComboUnit);\n                if (displayUnit) {\n                    return this.unitFormatter.bestFormat(value, displayUnit, this.unitOptions);\n                }\n            }\n            // Return only the value when unitOptions was not set.\n            return value.toString();\n        }\n        return;\n    }\n\n    /**\n     * Up to now (when this function has been introduced) all our form errors were in the form\n     * `{ [key]: true }` which made it quite impossible to add custom parameters for translation.\n     *  `errorLabels` are a perfect example for this use case\n     *\n     * Now the errors are in format `{ [key]: any }` where any can be either an array [] for positional\n     * based message format or `{msgKey: string}` for a named message format.\n     *\n     * For `errorLabels` we\n     *\n     */\n    get errors(): ValidationErrors {\n        if (this.errorLabels.length) {\n            return this.errorLabels.reduce(\n                (acc, cur) => ({\n                    ...acc,\n                    [cur]: true,\n                }),\n                {}\n            );\n        }\n        return this.formControl.errors;\n    }\n\n    getErrorTranslationParams(errorObjectValue: any): any {\n        // `errorObjectValue === true` is the 'old' case see comments for `errors`\n        if (!errorObjectValue || errorObjectValue === true) {\n            return [this.getValue(), this.min.toString(), this.max.toString()];\n        }\n        return errorObjectValue;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class NumberWithUnitsFormValidatorsFactory {\n    constructor(private unitFormatter: UnitFormatter) {}\n\n    public isInRange(min: number, max: number, inputUnit: Unit, availableUnits: Unit[], unlimited = -1): ValidatorFn {\n        const res = FormValidators.createNullSafeValidator((control: any) => {\n            const value = control.value;\n\n            const isNumber = !isNaN(Number(control.value)) && isFinite(control.value);\n\n            if (isNumber) {\n                if (value >= min && value \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ObjectAndResponse.html":{"url":"interfaces/ObjectAndResponse.html","title":"interface - ObjectAndResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ObjectAndResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n        \n\n            \n                Description\n            \n            \n                A combination of some object and the response that gave that object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        object\n                                \n                                \n                                        response\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                    \n                                \n                                \n                                    \n                                        object:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The data that was returned from a given activity, if any.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:         ActivityResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActivityResponse\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The response that an activity returned.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ActivityResponse {\n    /**\n     * The error message, if any, from the activity.\n     *\n     * A response without an error is assumed to have succeeded.\n     */\n    error?: string;\n    /**\n     * The response message, if any, from the activity.\n     */\n    success?: string;\n}\n\n/**\n * A combination of some object and the response that gave that object.\n */\nexport interface ObjectAndResponse {\n    /**\n     * The data that was returned from a given activity, if any.\n     */\n    object?: T;\n    /**\n     * The response that an activity returned.\n     */\n    response: ActivityResponse;\n}\n\n/**\n * A class that understands how to take a promise and turn it into some response message for display.\n * A client of this library will override {@link ActivityPromiseResolver} to process their specific type of promise.\n * This override will know how to generate a {@link ObjectAndResponse} from the type of promise it processes.\n *\n * @param T The type that is returned from a promise that this resolver processes.\n */\nexport class ActivityPromiseResolver {\n    /**\n     * Takes a Promise and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivity(activityResolutionPromise: Promise, successMessage?: string): Promise> {\n        return activityResolutionPromise\n            .then((result) => {\n                return {\n                    object: result,\n                    response: { ...result, success: successMessage || result },\n                };\n            })\n            .catch((error) => {\n                return { response: { error } };\n            });\n    }\n\n    /**\n     * Takes a Promise of many items and turns it to some activity status\n     * @param activityResolutionPromise The activity that this resolver will generate a response from. It generates\n     * either a sucesss or a failure condition. There are many entities contained in this response.\n     * @param successMessage The success message this method should return if the activity succeeds. If undefined is passed,\n     * a succeeded promise will return an empty response parameter which is assumed to mean success.\n     */\n    resolveActivities(\n        activityResolutionPromises: Promise,\n        successMessage?: string\n    ): Promise[]> {\n        return activityResolutionPromises\n            .then((result) => {\n                return [\n                    {\n                        object: result[0],\n                        response: { ...result, success: successMessage },\n                    },\n                ];\n            })\n            .catch((error) => {\n                return [{ response: { error } }];\n            });\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationCallback.html":{"url":"interfaces/PaginationCallback.html","title":"interface - PaginationCallback","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationCallback\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                A function that can be used to render the pagination data in the grid.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Unamed property\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n                                    \n                                        \n                                            Signature :\n                                            \n                                            \n                                                \n                                                    [firstItem: number, lastItem: number, totalItems: number]\n                                            \n                                        \n                                    \n\n\n                                    \n                                        \n                                            Returns :     string | Observable\n\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationConfiguration.html":{"url":"interfaces/PaginationConfiguration.html","title":"interface - PaginationConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information the user gives to show page size and page size options in the pagination footer.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pageSize\n                                \n                                \n                                            Optional\n                                        pageSizeOptions\n                                \n                                \n                                            Optional\n                                        rowHeight\n                                \n                                \n                                            Optional\n                                        shouldShowPageNumberInput\n                                \n                                \n                                            Optional\n                                        shouldShowPageSizeSelector\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number | \"Magic\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | \"Magic\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\nnumber of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\nMagic: Auto calculates the size based on available height of the container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSizeOptions\n                                    \n                                \n                                \n                                    \n                                        pageSizeOptions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Available page size options in the dropdown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowHeight\n                                    \n                                \n                                \n                                    \n                                        rowHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The height of a row in the datagrid. If not set, will use the default of ROW_HEIGHT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldShowPageNumberInput\n                                    \n                                \n                                \n                                    \n                                        shouldShowPageNumberInput:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the page number input should be shown.\nDefaults to false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldShowPageSizeSelector\n                                    \n                                \n                                \n                                    \n                                        shouldShowPageSizeSelector:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the page size option dropdown should be shown.\nDefaults to false.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagionationInformation.html":{"url":"interfaces/PagionationInformation.html","title":"interface - PagionationInformation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagionationInformation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information about pagionation that will be exposed.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        itemsPerPage\n                                \n                                \n                                        pageNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How many items belong on a page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageNumber\n                                    \n                                \n                                \n                                    \n                                        pageNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    What page is currently selected.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PartialResult.html":{"url":"interfaces/PartialResult.html","title":"interface - PartialResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PartialResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes partial search result, i.e. result that do not contain all the items that match the\nsearch criteria {@see QuickSearchComponent#hasPartialResult}\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastItem\n                                \n                                \n                                        totalItems\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastItem\n                                    \n                                \n                                \n                                    \n                                        lastItem:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of the last item of the result\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of items in the result\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            // This code will get called for each of the key strokes that gets typed during the buffer time. This means if there were 10\n            // characters typed during the de-bouncing time, this code will be called 10 times after the promise is resolved from a provider\n            // search function. However, we don't currently see any problem with that because the following code just re assigns variables\n            // with same values\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Percent.html":{"url":"classes/Percent.html","title":"class - Percent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Percent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Percent is handled differently compared to other Units.\nCan be represented in two different formats -\nZERO_TO_100 - ex: 50 %\nZERO_TO_1 - ex: 0.5 %\nIn both formats single unitName - \"%\" is used represent the value\n\n            \n\n            \n                Extends\n            \n            \n                        Unit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                unitTranslationKey\n                            \n                            \n                                    Static\n                                valueWithUnitTranslationKey\n                            \n                            \n                                    Static\n                                ZERO_TO_1\n                            \n                            \n                                    Static\n                                ZERO_TO_100\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findBestUnit\n                            \n                            \n                                getUnitNameTranslationKey\n                            \n                            \n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(multiplier: number)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit.ts:188\n                            \n                        \n\n                \n                    \n                            Percent always has unitName as \"%\"\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        multiplier\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            unitTranslationKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.units.percent'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            valueWithUnitTranslationKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.display.percent'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:187\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            ZERO_TO_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Percent\n\n                        \n                    \n                    \n                        \n                            Default value : new Percent(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:196\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            ZERO_TO_100\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Percent\n\n                        \n                    \n                    \n                        \n                            Default value : new Percent(0.01)\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:197\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, unitList: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:213\n                \n            \n\n\n            \n                \n                    Percent is always best represented in ZERO_TO_100 format\nand so returns ZERO_TO_100\nEx: 50 % is the display format for ZERO_TO_100 for value - 50\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unitList\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nNestedPropertyPipe\n\nNestedPropertyPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nNestedPropertyPipe->PipesModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nPipesModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nPipesModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nPipesModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nPipesModule->NumberWithUnitFormInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NestedPropertyPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { NestedPropertyPipe } from './nested-property.pipe';\n\nconst declarations = [NestedPropertyPipe];\n\n@NgModule({\n    declarations,\n    exports: [...declarations],\n})\nexport class PipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PowerTwoUnit.html":{"url":"classes/PowerTwoUnit.html","title":"class - PowerTwoUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PowerTwoUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of 1024\n\n            \n\n            \n                Extends\n            \n            \n                        NumberUnit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUnitMultiplier\n                            \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:89\n\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:112\n\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuickSearchModule.html":{"url":"modules/QuickSearchModule.html","title":"module - QuickSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    QuickSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuickSearchModule\n\n\n\ncluster_QuickSearchModule_declarations\n\n\n\ncluster_QuickSearchModule_exports\n\n\n\n\nQuickSearchComponent\n\nQuickSearchComponent\n\n\n\nQuickSearchModule\n\nQuickSearchModule\n\nQuickSearchModule -->\n\nQuickSearchComponent->QuickSearchModule\n\n\n\n\n\nQuickSearchComponent \n\nQuickSearchComponent \n\nQuickSearchComponent  -->\n\nQuickSearchModule->QuickSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            QuickSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuickSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { QuickSearchComponent } from './quick-search.component';\n\n@NgModule({\n    imports: [CommonModule, ClarityModule, FormsModule, ReactiveFormsModule, I18nModule],\n    declarations: [QuickSearchComponent],\n    exports: [QuickSearchComponent],\n})\nexport class QuickSearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchProvider.html":{"url":"interfaces/QuickSearchProvider.html","title":"interface - QuickSearchProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.provider.ts\n        \n\n            \n                Description\n            \n            \n                The interface a search providers should implement in order to register itself with the QuickSearchService\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        order\n                                \n                                \n                                        sectionName\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    search\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.provider.ts:36\n                \n            \n\n\n            \n                \n                    Returns an array or a promise of array of items that comply with the search criteria.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search string provided by the user when typing in the Quick Search Component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     unknown\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A custom property available throughout all the providers. Not designed for any specific scenario.\nUse it according to the specific needs you may have.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n-1 means append\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionName\n                                    \n                                \n                                \n                                    \n                                        sectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Every search provider gets displayed in a separate section. This will be used as the section header.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CommonUtil } from '../utils';\nimport { QuickSearchResultsType } from './quick-search-result';\n\nexport const PROVIDER_SEARCH_DEBOUNCE_TIME = 300;\n\n/**\n * The interface a search providers should implement in order to register itself with the {@link QuickSearchService}\n */\nexport interface QuickSearchProvider {\n    /**\n     * Every search provider gets displayed in a separate section. This will be used as the section header.\n     */\n    sectionName: string;\n\n    /**\n     * The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n     * -1 means append\n     */\n    order: number;\n\n    /**\n     * A custom property available throughout all the providers. Not designed for any specific scenario.\n     * Use it according to the specific needs you may have.\n     */\n    data: unknown;\n\n    /**\n     * Returns an array or a promise of array of items that comply with the search criteria.\n     * @param criteria The search string provided by the user when typing in the Quick Search Component\n     */\n    search(criteria: string): QuickSearchResultsType;\n}\n\nexport abstract class QuickSearchProviderDefaults implements QuickSearchProvider {\n    sectionName = '';\n    order = -1;\n    data: unknown;\n    abstract search(criteria: string): QuickSearchResultsType;\n\n    /**\n     * @param shouldDebounceInput Indicates if a provider has to wait for {@link PROVIDER_SEARCH_DEBOUNCE_TIME} milliseconds\n     */\n    constructor(shouldDebounceInput: boolean) {\n        if (shouldDebounceInput) {\n            // The return type is being ignored because, createBufferedPromise function returns a function that returns a Promise which\n            // in turn wraps the return value of search function and TS compiler is not accepting () => Promise\n            // as () => QuickSearchResultsType. However, this is not a problem because, QuickSearchResultsType can be of type\n            // Promise and Promise> can be assigned to Promise\n            // @ts-ignore\n            this.search = CommonUtil.createBufferedPromise(this.search, this, PROVIDER_SEARCH_DEBOUNCE_TIME);\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuickSearchProviderDefaults.html":{"url":"classes/QuickSearchProviderDefaults.html","title":"class - QuickSearchProviderDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuickSearchProviderDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.provider.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            QuickSearchProvider\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                order\n                            \n                            \n                                sectionName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shouldDebounceInput: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/quick-search/quick-search.provider.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        shouldDebounceInput\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Indicates if a provider has to wait for {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     unknown\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     -1\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.provider.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(criteria: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.provider.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    criteria\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QuickSearchResultsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommonUtil } from '../utils';\nimport { QuickSearchResultsType } from './quick-search-result';\n\nexport const PROVIDER_SEARCH_DEBOUNCE_TIME = 300;\n\n/**\n * The interface a search providers should implement in order to register itself with the {@link QuickSearchService}\n */\nexport interface QuickSearchProvider {\n    /**\n     * Every search provider gets displayed in a separate section. This will be used as the section header.\n     */\n    sectionName: string;\n\n    /**\n     * The order of the section in the quick search results. The lower the order, the closer to the beginning of the list.\n     * -1 means append\n     */\n    order: number;\n\n    /**\n     * A custom property available throughout all the providers. Not designed for any specific scenario.\n     * Use it according to the specific needs you may have.\n     */\n    data: unknown;\n\n    /**\n     * Returns an array or a promise of array of items that comply with the search criteria.\n     * @param criteria The search string provided by the user when typing in the Quick Search Component\n     */\n    search(criteria: string): QuickSearchResultsType;\n}\n\nexport abstract class QuickSearchProviderDefaults implements QuickSearchProvider {\n    sectionName = '';\n    order = -1;\n    data: unknown;\n    abstract search(criteria: string): QuickSearchResultsType;\n\n    /**\n     * @param shouldDebounceInput Indicates if a provider has to wait for {@link PROVIDER_SEARCH_DEBOUNCE_TIME} milliseconds\n     */\n    constructor(shouldDebounceInput: boolean) {\n        if (shouldDebounceInput) {\n            // The return type is being ignored because, createBufferedPromise function returns a function that returns a Promise which\n            // in turn wraps the return value of search function and TS compiler is not accepting () => Promise\n            // as () => QuickSearchResultsType. However, this is not a problem because, QuickSearchResultsType can be of type\n            // Promise and Promise> can be assigned to Promise\n            // @ts-ignore\n            this.search = CommonUtil.createBufferedPromise(this.search, this, PROVIDER_SEARCH_DEBOUNCE_TIME);\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuickSearchRegistrarService.html":{"url":"injectables/QuickSearchRegistrarService.html","title":"injectable - QuickSearchRegistrarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuickSearchRegistrarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-registrar.service.ts\n        \n\n            \n                Description\n            \n            \n                Allows components to register with QuickSearchService and automatically unregister when the component is destroyed.\nMust be provided by the component itself in its providers: [QuickSearchRegistrarService]\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(quickSearchService: QuickSearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quickSearchService\n                                                  \n                                                        \n                                                                        QuickSearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuickSearchProvider[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search-registrar.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\n/**\n * Allows components to register with {@link QuickSearchService} and automatically unregister when the component is destroyed.\n *\n * Must be provided by the component itself in its `providers: [QuickSearchRegistrarService]`\n */\n@Injectable()\nexport class QuickSearchRegistrarService implements OnDestroy {\n    constructor(private quickSearchService: QuickSearchService) {}\n\n    private providers: QuickSearchProvider[] = [];\n\n    register(provider: QuickSearchProvider): void {\n        this.providers.push(provider);\n        this.quickSearchService.registerProvider(provider);\n    }\n\n    ngOnDestroy(): void {\n        for (const provider of this.providers) {\n            this.quickSearchService.unregisterProvider(provider);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchResultItem.html":{"url":"interfaces/QuickSearchResultItem.html","title":"interface - QuickSearchResultItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchResultItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-result.ts\n        \n\n            \n                Description\n            \n            \n                The interface a quick search result item should implement\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayText\n                                \n                                \n                                        handler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayText\n                                    \n                                \n                                \n                                    \n                                        displayText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text that will be displayed in the quick search component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Function that is going to be called when this item is to be handled, i.e. when the\nuser clicks on this item or  selects it and presses the Enter key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface QuickSearchResults {\n    /**\n     * Item list returned by the search\n     */\n    items: QuickSearchResultItem[];\n\n    /**\n     * The current page returned by the search\n     */\n    page?: number;\n\n    /**\n     * The current page size returned by the search\n     */\n    pageSize?: number;\n\n    /**\n     * Total number of items\n     */\n    total?: number;\n}\n\n/**\n * The interface a quick search result item should implement\n */\nexport interface QuickSearchResultItem {\n    /**\n     * The text that will be displayed in the quick search component\n     */\n    displayText: string;\n\n    /**\n     * Function that is going to be called when this item is to be handled, i.e. when the\n     * user clicks on this item or  selects it and presses the Enter key.\n     */\n    handler: () => void;\n}\n\n/**\n * The type of the quick search result which can be a promise\n */\nexport type QuickSearchResultsType = QuickSearchResults | Promise;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickSearchResults.html":{"url":"interfaces/QuickSearchResults.html","title":"interface - QuickSearchResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuickSearchResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search-result.ts\n        \n\n            \n                Description\n            \n            \n                The interface of a quick search result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        total\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:         QuickSearchResultItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchResultItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Item list returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current page returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current page size returned by the search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of items\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface QuickSearchResults {\n    /**\n     * Item list returned by the search\n     */\n    items: QuickSearchResultItem[];\n\n    /**\n     * The current page returned by the search\n     */\n    page?: number;\n\n    /**\n     * The current page size returned by the search\n     */\n    pageSize?: number;\n\n    /**\n     * Total number of items\n     */\n    total?: number;\n}\n\n/**\n * The interface a quick search result item should implement\n */\nexport interface QuickSearchResultItem {\n    /**\n     * The text that will be displayed in the quick search component\n     */\n    displayText: string;\n\n    /**\n     * Function that is going to be called when this item is to be handled, i.e. when the\n     * user clicks on this item or  selects it and presses the Enter key.\n     */\n    handler: () => void;\n}\n\n/**\n * The type of the quick search result which can be a promise\n */\nexport type QuickSearchResultsType = QuickSearchResults | Promise;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuickSearchService.html":{"url":"injectables/QuickSearchService.html","title":"injectable - QuickSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuickSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registrations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRegisteredProviders\n                            \n                            \n                                    Public\n                                registerProvider\n                            \n                            \n                                    Public\n                                unregisterProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRegisteredProviders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegisteredProviders()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:62\n                \n            \n\n\n            \n                \n                    Get a list of all the registered search providers.\n\n\n                    \n                        Returns :         QuickSearchProvider[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            registerProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerProvider(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:19\n                \n            \n\n\n            \n                \n                    Register a search provider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search provider {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unregisterProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unregisterProvider(provider: QuickSearchProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/quick-search/quick-search.service.ts:51\n                \n            \n\n\n            \n                \n                    Unregister a search provider by providing the registration id.\nReturns true if un-registration was done.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                QuickSearchProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Provider to be unregistered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuickSearchProvider[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/quick-search/quick-search.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { QuickSearchProvider } from './quick-search.provider';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class QuickSearchService {\n    registrations: QuickSearchProvider[] = [];\n\n    /**\n     * Register a search provider\n     * @param provider The search provider {@link QuickSearchProvider}\n     */\n    public registerProvider(provider: QuickSearchProvider): void {\n        const order = typeof provider.order === 'undefined' ? -1 : provider.order;\n\n        let insertIndex = -1;\n        // Determine the position of the new registration\n        if (order > -1) {\n            insertIndex = this.registrations.findIndex((prov) => {\n                // If an item has a negative index, this means no order had been provided for that item\n                // which means we have found the insert index\n                if (prov.order  -1) {\n            this.registrations.splice(insertIndex, 0, provider);\n        } else {\n            this.registrations.push(provider);\n        }\n    }\n\n    /**\n     * Unregister a search provider by providing the registration id.\n     * Returns true if un-registration was done.\n     * @param provider Provider to be unregistered\n     */\n    public unregisterProvider(provider: QuickSearchProvider): boolean {\n        const index = this.registrations.findIndex((regProvider) => regProvider === provider);\n        if (index > -1) {\n            this.registrations.splice(index, 1);\n        }\n        return index > -1;\n    }\n\n    /**\n     * Get a list of all the registered search providers.\n     */\n    public getRegisteredProviders(): QuickSearchProvider[] {\n        return [...this.registrations];\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResultActivatedEvent.html":{"url":"interfaces/ResultActivatedEvent.html","title":"interface - ResultActivatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResultActivatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n            \n                Description\n            \n            \n                This interface describes the event emitted when a result item is activated,\ni.e. its event handler has been called.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        eventSource\n                                \n                                \n                                        itemDisplayText\n                                \n                                \n                                        sectionTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventSource\n                                    \n                                \n                                \n                                    \n                                        eventSource:     \"MouseEvent\" | \"KeyboardEvent\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"MouseEvent\" | \"KeyboardEvent\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemDisplayText\n                                    \n                                \n                                \n                                    \n                                        itemDisplayText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionTitle\n                                    \n                                \n                                \n                                    \n                                        sectionTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            // This code will get called for each of the key strokes that gets typed during the buffer time. This means if there were 10\n            // characters typed during the de-bouncing time, this code will be called 10 times after the promise is resolved from a provider\n            // search function. However, we don't currently see any problem with that because the following code just re assigns variables\n            // with same values\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchSection.html":{"url":"interfaces/SearchSection.html","title":"interface - SearchSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/quick-search/quick-search.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isLoading\n                                \n                                \n                                        provider\n                                \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         QuickSearchProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:         QuickSearchResults\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QuickSearchResults\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { DomUtil } from '../utils/dom-util';\nimport { QuickSearchResultItem, QuickSearchResults, QuickSearchResultsType } from './quick-search-result';\nimport { QuickSearchProvider } from './quick-search.provider';\nimport { QuickSearchService } from './quick-search.service';\n\ninterface SearchSection {\n    provider: QuickSearchProvider;\n    result: QuickSearchResults;\n    isLoading: boolean;\n}\n\n/**\n * This interface describes the event emitted when a result item is activated,\n * i.e. its event handler has been called.\n */\nexport interface ResultActivatedEvent {\n    itemDisplayText: string;\n    sectionTitle: string;\n    eventSource: 'MouseEvent' | 'KeyboardEvent';\n}\n\n/**\n * This interface describes partial search result, i.e. result that do not contain all the items that match the\n * search criteria {@see QuickSearchComponent#hasPartialResult}\n */\ninterface PartialResult {\n    /**\n     * The number of the last item of the result\n     */\n    lastItem: number;\n\n    /**\n     * Total number of items in the result\n     */\n    totalItems: number;\n}\n\n/**\n * The Quick Search component is inspired by the Spotlight Search in Mac OSX (cmd+space)\n * and the Search Everywhere in IntelliJ (shift+shift)\n *\n * This VCD Quick Search does not provide any search by itself. It is not also a single component\n * but rather a group of objects that work together in order to allow the developer to build a might search experience\n * for the end user.\n *\n * Basically the VCD Quick Search consists of:\n * \n *     QuickSearchComponent - the visual component that you should include in your template\n *     {@link QuickSearchService}QuickSearchService\n *     - the service that you should register your own providers with\n *     {@link QuickSearchProvider}QuickSearchProvider\n *     - the interface your search provider should implement.\n *     It can return either an array of {@link QuickSearchResults} or a promise for lazy loading of results\n * \n *\n * QuickSearchComponent:\n *\n *    \n *\n *\n * {@link QuickSearchService}:\n *\n * This service works along with the component in order to provide search results displayed. Those results are grouped\n * in sections based on the registered provider {@link QuickSearchProvider}.\n *\n * You can provide order of the search providers, hence the order of the displayed sections\n *\n * If there is just one search provider no section title is displayed.\n *\n * In case of multiple search providers the Quick Search can be configured to hide the entire section if it contains no data.\n *\n *\n * For a complete end-to-end running example please take a look at the `Examples` tab of the live-docs\n */\n@Component({\n    selector: 'vcd-quick-search',\n    templateUrl: './quick-search.component.html',\n    styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent {\n    /**\n     * Placeholder for the search input. Default is empty string;\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * This property alongside with `openChange` provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Input()\n    public set open(open: boolean) {\n        this.handleOpen(open);\n    }\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * This method along with `open` property provide two-way binding [(open)] for controlling the visibility state\n     * of the quick search component\n     */\n    @Output() openChange: EventEmitter = new EventEmitter(false);\n\n    /**\n     * Event dispatched when item has been activated, i.e. its event handler is called.\n     * This happens when item is clicked or 'Enter' is pressed when there is a selection.\n     */\n    @Output() resultActivated: EventEmitter = new EventEmitter();\n\n    constructor(\n        private searchService: QuickSearchService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private el: ElementRef,\n        public translationService: TranslationService\n    ) {}\n\n    get searchCriteria(): string {\n        return this._searchCriteria;\n    }\n\n    set searchCriteria(value: string) {\n        this._searchCriteria = value;\n        this.doSearch();\n    }\n    private _searchCriteria: string;\n\n    private _open = false;\n\n    @ViewChild('searchInput', { static: false, read: ElementRef }) searchInput: ElementRef;\n\n    private searchId = 0;\n\n    /**\n     * The search sections are provided by the {@link QuickSearchService} upon opening the Quick Search.\n     * This insures that new sections based on the current context of the application may appear.\n     */\n    searchSections: SearchSection[] = [];\n\n    selectedItem: QuickSearchResultItem;\n\n    itemClicked(item: QuickSearchResultItem): void {\n        this.handleItem(item, true);\n    }\n\n    onArrowDown(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(true);\n    }\n\n    onArrowUp(event: KeyboardEvent): void {\n        event.preventDefault();\n        this.selectNext(false);\n    }\n\n    onEnterKey(event): void {\n        event.preventDefault();\n        if (!this.selectedItem) {\n            return;\n        }\n        this.handleItem(this.selectedItem, false);\n    }\n\n    private doSearch(): void {\n        // Remember which is the current search. This will help us not to show results from an old search\n        const searchId = ++this.searchId;\n\n        this.selectedItem = null;\n\n        // Mark each sections in loading state. This flag is needed when trying to select the first item\n        // while the search is still in progress\n        this.searchSections.forEach((searchSection) => (searchSection.isLoading = true));\n\n        // Go through the available search sections, i.e. the registered search providers and request for results\n        this.searchSections.forEach(async (searchSection) => {\n            let searchResult: QuickSearchResults;\n            // Only request for data if the search is not empty\n            if (!!this.searchCriteria) {\n                const result = searchSection.provider.search(this.searchCriteria);\n\n                // Some of the results may be provided later, so mark the section as loading\n                if (result instanceof Promise) {\n                    searchResult = await result;\n                } else {\n                    searchResult = result;\n                }\n                // Use the closure to verify that the displayed data is going to be really from the latest search\n                if (searchId !== this.searchId) {\n                    return;\n                }\n            }\n            // This code will get called for each of the key strokes that gets typed during the buffer time. This means if there were 10\n            // characters typed during the de-bouncing time, this code will be called 10 times after the promise is resolved from a provider\n            // search function. However, we don't currently see any problem with that because the following code just re assigns variables\n            // with same values\n            searchSection.result = searchResult;\n            searchSection.isLoading = false;\n            if (!this.selectedItem) {\n                this.selectFirst(true);\n            }\n        });\n    }\n\n    /**\n     * Try to select the first item in the compound search result.\n     * @param ensureFirstSectionIsLoaded if true and if the topmost section is still loading then do not select an item\n     */\n    private selectFirst(ensureFirstSectionIsLoaded: boolean): void {\n        for (const section of this.searchSections) {\n            // The section is still loading. If it was requested to ensure the loading has completed than abort\n            // the attempt to select an item or just skip it and examine the next section.\n            if (section.isLoading) {\n                if (ensureFirstSectionIsLoaded) {\n                    return;\n                }\n                continue;\n            }\n            this.selectedItem = section.result?.items[0];\n            if (this.selectedItem) {\n                break;\n            }\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private selectNext(down: boolean): void {\n        // If there is no selection then just select the first available item\n        if (!this.selectedItem) {\n            this.selectFirst(false);\n            return;\n        }\n\n        // Get all the items form all the sections in a single flat array\n        const allResults = this.searchSections.reduce((acc, v) => [...acc, ...(v.result?.items || [])], []);\n\n        let selectedItemIndex = allResults.indexOf(this.selectedItem);\n\n        // There is a selected item but it is not one of the available ones, so just select the first from the list\n        if (selectedItemIndex  ({ provider, result: null, isLoading: true }));\n            this.doSearch();\n\n            setTimeout(() => {\n                this.searchInput.nativeElement.focus();\n                this.searchInput.nativeElement.select();\n            }, 0);\n        }\n\n        this._open = open;\n        this.openChange.emit(this._open);\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private handleItem(item: QuickSearchResultItem, clicked: boolean): void {\n        const searchSection: SearchSection = this.searchSections.find(\n            (section) =>\n                !section.isLoading &&\n                section.result?.items.some((resultItem) => resultItem.displayText === item.displayText)\n        );\n        const resultActivatedEvent: ResultActivatedEvent = {\n            itemDisplayText: item.displayText,\n            sectionTitle: searchSection.provider.sectionName,\n            eventSource: clicked ? 'MouseEvent' : 'KeyboardEvent',\n        };\n        item.handler();\n        this.resultActivated.emit(resultActivatedEvent);\n        this.open = false;\n    }\n\n    showSectionTitle(searchSection: SearchSection): boolean {\n        return !!(searchSection.provider.sectionName && this.searchCriteria);\n    }\n\n    /**\n     * Determines if the result in this section is partial (i.e. there are more items matching the criteria which are\n     * in the current list) or it is full (the current list contains all the items matching the criteria)\n     * If the result is partial then {@link PartialResult} object is returned. If the result contains all the items\n     * then null is returned\n     * @param searchSection the section which result items is to be checked\n     */\n    hasPartialResult(searchSection: SearchSection): PartialResult {\n        if (\n            searchSection.result?.total &&\n            searchSection.result?.items?.length &&\n            searchSection.result.items.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOption.html":{"url":"interfaces/SelectOption.html","title":"interface - SelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/interfaces/select-option.ts\n        \n\n            \n                Description\n            \n            \n                Options displayed in a select input option list\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                                \n                                            Optional\n                                        isTranslatable\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text to be shown for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTranslatable\n                                    \n                                \n                                \n                                    \n                                        isTranslatable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for translation of the SelectOption.display text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Value of a option\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SelectOption {\n    /**\n     * Value of a option\n     */\n    value: string | number;\n    /**\n     * Text to be shown for the option\n     */\n    display: string;\n    /**\n     * Used for translation of the {@link SelectOption.display} text\n     */\n    isTranslatable?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ShowClippedTextDirective.html":{"url":"directives/ShowClippedTextDirective.html","title":"directive - ShowClippedTextDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ShowClippedTextDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.ts\n        \n\n            \n                Description\n            \n            \n                Displays a clarity tooltip with the full contents of a host element on hover but only if\nthe elements is clipped.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [vcdShowClippedText]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                hostElement\n                            \n                            \n                                    Static\n                                instanceCount\n                            \n                            \n                                mouseoutDelay\n                            \n                            \n                                    Private\n                                onMouseIn\n                            \n                            \n                                    Private\n                                onMouseOut\n                            \n                            \n                                tooltipSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                    Private\n                                isOverflowing\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                vcdShowClippedText\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:253\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        vcdShowClippedText\n                    \n                \n                \n                    \n                        Type :         CliptextConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:227\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isOverflowing\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isOverflowing()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:248\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.host.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:253\n                            \n                        \n\n                \n                    \n                        The HTML element receiving the directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            instanceCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:224\n                            \n                        \n\n                \n                    \n                        To destroy the tooltip when no longer needed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseoutDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:246\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onMouseIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:290\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onMouseOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:301\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TooltipSize.md\n\n                        \n                    \n                    \n                        \n                            Default value : TooltipSize.md\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:247\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.ts:227\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\n\nexport enum TooltipPosition {\n    tl = 'tooltip-top-left',\n    tr = 'tooltip-top-right',\n    br = 'tooltip-bottom-right',\n    bl = 'tooltip-bottom-left',\n}\n\nexport enum TooltipSize {\n    sm = '100px',\n    md = '200px',\n    lg = '400px',\n}\n\n/**\n * The configuration information for the cliptext within the cells of the datagrid.\n */\nexport interface CliptextConfig {\n    /**\n     * The size of the tooltip to be displayed in the cell.\n     */\n    size?: TooltipSize;\n    /**\n     * The time delay from mouse off to hide the cliptext.\n     */\n    mouseoutDelay?: number;\n    /**\n     * If the cliptext should be disabled.\n     */\n    disabled?: boolean;\n}\n\n/**\n * Singleton tooltip created by directive\n */\nconst tip = {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n};\n\ntype EventHandler = (e: MouseEvent) => void;\n\nfunction watchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.addEventListener('mouseenter', mouseIn);\n    el.addEventListener('mouseleave', mouseOut);\n}\n\nfunction unwatchEvents(el: HTMLElement, mouseIn: EventHandler, mouseOut: EventHandler): void {\n    el.removeEventListener('mouseenter', mouseIn);\n    el.removeEventListener('mouseleave', mouseOut);\n}\n\nfunction setStyle(el: HTMLElement, style: Partial): void {\n    Object.assign(el.style, style);\n}\n\n/**\n * Displays a clarity tooltip with the full contents of a host element on hover but only if\n * the elements is clipped.\n */\n@Directive({\n    selector: '[vcdShowClippedText]',\n})\nexport class ShowClippedTextDirective implements OnDestroy, OnInit {\n    /** To destroy the tooltip when no longer needed */\n    static instanceCount = 0;\n\n    @Input('vcdShowClippedText')\n    set config(config: CliptextConfig) {\n        if (config && config.mouseoutDelay) {\n            this.mouseoutDelay = config.mouseoutDelay;\n        }\n        if (config && config.size) {\n            this.tooltipSize = config.size;\n        }\n        const nextDisabled = config !== undefined && config.disabled;\n        if (this.disabled === nextDisabled) {\n            return;\n        }\n        this.disabled = nextDisabled;\n        if (this.disabled) {\n            this.deactivate();\n        } else {\n            this.activate();\n        }\n    }\n\n    mouseoutDelay = 500;\n    tooltipSize = TooltipSize.md;\n    disabled = false;\n\n    /**\n     * The HTML element receiving the directive\n     */\n    public hostElement: HTMLElement = this.host.nativeElement;\n\n    constructor(private host: ElementRef) {}\n\n    ngOnInit(): void {\n        if (!this.disabled) {\n            this.activate();\n        }\n    }\n\n    activate(): void {\n        ShowClippedTextDirective.instanceCount++;\n        tip.create();\n        watchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n\n        // A host must have the following styles to show text ellipsis when overflowing\n        setStyle(this.hostElement, {\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            textOverflow: 'ellipsis',\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (!this.disabled) {\n            this.deactivate();\n        }\n    }\n\n    deactivate(): void {\n        ShowClippedTextDirective.instanceCount--;\n        unwatchEvents(this.hostElement, this.onMouseIn, this.onMouseOut);\n        if (ShowClippedTextDirective.instanceCount === 0) {\n            tip.destroy();\n        }\n    }\n\n    private onMouseIn = (e: MouseEvent) => {\n        tip.clearHideTimeout();\n        tip.isMouseOver = true;\n        if (this.isOverflowing()) {\n            tip.currentDirective = this;\n            tip.update();\n        } else {\n            tip.hideTooltip(this.mouseoutDelay);\n        }\n    };\n\n    private onMouseOut = () => {\n        tip.hideTooltip(this.mouseoutDelay);\n    };\n\n    private isOverflowing(): boolean {\n        // Text overflows when the content element's width is less than its scrollWidth.\n        return Math.ceil(this.hostElement.getBoundingClientRect().width)  {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShowClippedTextDirectiveModule.html":{"url":"modules/ShowClippedTextDirectiveModule.html","title":"module - ShowClippedTextDirectiveModule","body":"\n                   \n\n\n\n\n    Modules\n    ShowClippedTextDirectiveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShowClippedTextDirectiveModule\n\n\n\ncluster_ShowClippedTextDirectiveModule_declarations\n\n\n\ncluster_ShowClippedTextDirectiveModule_exports\n\n\n\n\nShowClippedTextDirective\n\nShowClippedTextDirective\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule -->\n\nShowClippedTextDirective->ShowClippedTextDirectiveModule\n\n\n\n\n\nShowClippedTextDirective \n\nShowClippedTextDirective \n\nShowClippedTextDirective  -->\n\nShowClippedTextDirectiveModule->ShowClippedTextDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ShowClippedTextDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShowClippedTextDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { ShowClippedTextDirective } from './show-clipped-text.directive';\n\n@NgModule({\n    declarations: [ShowClippedTextDirective],\n    exports: [ShowClippedTextDirective],\n})\nexport class ShowClippedTextDirectiveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShowClippedTextDirectiveTestHelper.html":{"url":"classes/ShowClippedTextDirectiveTestHelper.html","title":"class - ShowClippedTextDirectiveTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShowClippedTextDirectiveTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n        \n\n            \n                Description\n            \n            \n                Used to remove DOM specific code from the jasmine tests while testing this directive\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentInstance\n                            \n                            \n                                    Public\n                                hideDelay\n                            \n                            \n                                    Private\n                                host\n                            \n                            \n                                    Private\n                                secondHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                moveMouseOffHost\n                            \n                            \n                                moveMouseOffTooltip\n                            \n                            \n                                moveMouseOverHost\n                            \n                            \n                                moveMouseOverSecondHost\n                            \n                            \n                                moveMouseOverTooltip\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    hostPosition\n                                \n                                \n                                    disabled\n                                \n                                \n                                    hostText\n                                \n                                \n                                    tooltipSize\n                                \n                                \n                                    isTooltipVisible\n                                \n                                \n                                    tooltipText\n                                \n                                \n                                    tooltipPosition\n                                \n                                \n                                    tooltipCount\n                                \n                                \n                                    tooltipVisibility\n                                \n                                \n                                    tooltipContent\n                                \n                                \n                                    tooltip\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fixture: ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                        ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.fixture.componentInstance\n\n                        \n                    \n                    \n                        \n                            Default value : this.fixture.componentInstance\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     this.componentInstance.directive.mouseoutDelay\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.directive.mouseoutDelay\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.div.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            secondHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                    \n                        \n                            Default value : this.componentInstance.div2.nativeElement\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOffHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOffHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOffTooltip\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOffTooltip()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverSecondHost\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverSecondHost()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moveMouseOverTooltip\n                        \n                        \n                    \n                \n            \n            \n                \nmoveMouseOverTooltip()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(width: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hostPosition\n                    \n                \n\n\n                \n                    \n                        sethostPosition(quadrant)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            quadrant\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n\n                \n                    \n                        setdisabled(disabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            disabled\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        hostText\n                    \n                \n\n\n                \n                    \n                        sethostText(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:49\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipSize\n                    \n                \n\n                \n                    \n                        gettooltipSize()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTooltipVisible\n                    \n                \n\n                \n                    \n                        getisTooltipVisible()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipText\n                    \n                \n\n                \n                    \n                        gettooltipText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipPosition\n                    \n                \n\n                \n                    \n                        gettooltipPosition()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipCount\n                    \n                \n\n                \n                    \n                        gettooltipCount()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipVisibility\n                    \n                \n\n                \n                    \n                        gettooltipVisibility()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:102\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipContent\n                    \n                \n\n                \n                    \n                        gettooltipContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        tooltip\n                    \n                \n\n                \n                    \n                        gettooltip()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:114\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { ShowClippedTextDirective, TooltipPosition } from './show-clipped-text.directive';\n\n/**\n * Used to remove DOM specific code from the jasmine tests while testing this directive\n */\nexport class ShowClippedTextDirectiveTestHelper {\n    constructor(private fixture: ComponentFixture) {}\n\n    public componentInstance = this.fixture.componentInstance;\n\n    public hideDelay = this.componentInstance.directive.mouseoutDelay;\n\n    private host: HTMLElement = this.componentInstance.div.nativeElement;\n\n    private secondHost: HTMLElement = this.componentInstance.div2.nativeElement;\n\n    set width(width: string) {\n        this.host.style.width = width;\n    }\n\n    set hostPosition(quadrant: TooltipPosition) {\n        this.host.style.position = 'absolute';\n        const defaults = { top: '', left: '', bottom: '', right: '' };\n        if (quadrant === TooltipPosition.tl) {\n            Object.assign(defaults, { top: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.tr) {\n            Object.assign(defaults, { top: '0', right: '0' });\n        } else if (quadrant === TooltipPosition.bl) {\n            Object.assign(defaults, { bottom: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.br) {\n            Object.assign(defaults, { bottom: '0', right: '0' });\n        }\n\n        Object.assign(this.host.style, defaults);\n    }\n\n    set disabled(disabled: boolean) {\n        this.componentInstance.disabled = disabled;\n        this.fixture.detectChanges();\n    }\n\n    set hostText(text: string) {\n        this.componentInstance.text = text;\n        this.fixture.detectChanges();\n    }\n\n    get tooltipSize(): number {\n        return this.tooltipContent.offsetWidth;\n    }\n\n    moveMouseOverHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverSecondHost(): void {\n        this.secondHost.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOffHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    moveMouseOffTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    get isTooltipVisible(): boolean {\n        return !!this.tooltip && (this.tooltip.style.opacity === '1' || this.tooltip.style.opacity === '');\n    }\n\n    get tooltipText(): string {\n        return this.tooltipContent.innerText;\n    }\n\n    get tooltipPosition(): TooltipPosition {\n        const classes = this.tooltipContent.classList;\n        for (const className of Array.from(classes)) {\n            for (const key of Object.keys(TooltipPosition)) {\n                if (TooltipPosition[key] === className) {\n                    return TooltipPosition[key] as TooltipPosition;\n                }\n            }\n        }\n        return null;\n    }\n\n    public get tooltipCount(): number {\n        return document.querySelectorAll('.tooltip.vcd-show-clipped-text').length;\n    }\n\n    public get tooltipVisibility(): string {\n        return this.tooltipContent.style.visibility;\n    }\n\n    public destroy(): void {\n        this.fixture.destroy();\n    }\n\n    private get tooltipContent(): HTMLElement {\n        return this.tooltip.querySelector('.tooltip-content');\n    }\n\n    private get tooltip(): HTMLElement {\n        return document.querySelector('.tooltip.vcd-show-clipped-text');\n    }\n}\n\n@Component({\n    template: `\n        {{ text }}\n        {{ text2 }}\n    `,\n})\nexport class ShowClippedTextDirectiveTestHostComponent {\n    @ViewChild(ShowClippedTextDirective) directive!: ShowClippedTextDirective;\n    @ViewChild('div') div!: ElementRef;\n    @ViewChild('div2') div2!: ElementRef;\n\n    public text = 'texting';\n    public text2 = 'texting too';\n    public disabled = false;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowClippedTextDirectiveTestHostComponent.html":{"url":"components/ShowClippedTextDirectiveTestHostComponent.html","title":"component - ShowClippedTextDirectiveTestHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShowClippedTextDirectiveTestHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                template\n                {{ text }}\n{{ text2 }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                directive\n                            \n                            \n                                    Public\n                                disabled\n                            \n                            \n                                div\n                            \n                            \n                                div2\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                text2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            directive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ShowClippedTextDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ShowClippedTextDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:126\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            div\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('div')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            div2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('div2')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:128\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'texting'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'texting too'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts:131\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { ShowClippedTextDirective, TooltipPosition } from './show-clipped-text.directive';\n\n/**\n * Used to remove DOM specific code from the jasmine tests while testing this directive\n */\nexport class ShowClippedTextDirectiveTestHelper {\n    constructor(private fixture: ComponentFixture) {}\n\n    public componentInstance = this.fixture.componentInstance;\n\n    public hideDelay = this.componentInstance.directive.mouseoutDelay;\n\n    private host: HTMLElement = this.componentInstance.div.nativeElement;\n\n    private secondHost: HTMLElement = this.componentInstance.div2.nativeElement;\n\n    set width(width: string) {\n        this.host.style.width = width;\n    }\n\n    set hostPosition(quadrant: TooltipPosition) {\n        this.host.style.position = 'absolute';\n        const defaults = { top: '', left: '', bottom: '', right: '' };\n        if (quadrant === TooltipPosition.tl) {\n            Object.assign(defaults, { top: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.tr) {\n            Object.assign(defaults, { top: '0', right: '0' });\n        } else if (quadrant === TooltipPosition.bl) {\n            Object.assign(defaults, { bottom: '0', left: '0' });\n        } else if (quadrant === TooltipPosition.br) {\n            Object.assign(defaults, { bottom: '0', right: '0' });\n        }\n\n        Object.assign(this.host.style, defaults);\n    }\n\n    set disabled(disabled: boolean) {\n        this.componentInstance.disabled = disabled;\n        this.fixture.detectChanges();\n    }\n\n    set hostText(text: string) {\n        this.componentInstance.text = text;\n        this.fixture.detectChanges();\n    }\n\n    get tooltipSize(): number {\n        return this.tooltipContent.offsetWidth;\n    }\n\n    moveMouseOverHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverSecondHost(): void {\n        this.secondHost.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOverTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseenter'));\n    }\n\n    moveMouseOffHost(): void {\n        this.host.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    moveMouseOffTooltip(): void {\n        this.tooltip.dispatchEvent(new MouseEvent('mouseleave'));\n    }\n\n    get isTooltipVisible(): boolean {\n        return !!this.tooltip && (this.tooltip.style.opacity === '1' || this.tooltip.style.opacity === '');\n    }\n\n    get tooltipText(): string {\n        return this.tooltipContent.innerText;\n    }\n\n    get tooltipPosition(): TooltipPosition {\n        const classes = this.tooltipContent.classList;\n        for (const className of Array.from(classes)) {\n            for (const key of Object.keys(TooltipPosition)) {\n                if (TooltipPosition[key] === className) {\n                    return TooltipPosition[key] as TooltipPosition;\n                }\n            }\n        }\n        return null;\n    }\n\n    public get tooltipCount(): number {\n        return document.querySelectorAll('.tooltip.vcd-show-clipped-text').length;\n    }\n\n    public get tooltipVisibility(): string {\n        return this.tooltipContent.style.visibility;\n    }\n\n    public destroy(): void {\n        this.fixture.destroy();\n    }\n\n    private get tooltipContent(): HTMLElement {\n        return this.tooltip.querySelector('.tooltip-content');\n    }\n\n    private get tooltip(): HTMLElement {\n        return document.querySelector('.tooltip.vcd-show-clipped-text');\n    }\n}\n\n@Component({\n    template: `\n        {{ text }}\n        {{ text2 }}\n    `,\n})\nexport class ShowClippedTextDirectiveTestHostComponent {\n    @ViewChild(ShowClippedTextDirective) directive!: ShowClippedTextDirective;\n    @ViewChild('div') div!: ElementRef;\n    @ViewChild('div2') div2!: ElementRef;\n\n    public text = 'texting';\n    public text2 = 'texting too';\n    public disabled = false;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}{{ text2 }}'\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShowClippedTextDirectiveTestHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SortedColumn.html":{"url":"interfaces/SortedColumn.html","title":"interface - SortedColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SortedColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.component.ts\n        \n\n            \n                Description\n            \n            \n                The information about the currently sorted column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        reverse\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the column that is sorted.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reverse\n                                    \n                                \n                                \n                                    \n                                        reverse:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the column is sorted normally or reversed.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    TrackByFunction,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ClrDatagrid, ClrDatagridPagination, ClrDatagridStateInterface } from '@clr/angular';\nimport { SelectionType } from '@clr/angular/data/datagrid/enums/selection-type';\nimport { columnStateFactory } from '@clr/angular/data/datagrid/providers/column-state.provider';\nimport { LazyString, TranslationService } from '@vcd/i18n';\nimport { Observable } from 'rxjs';\nimport { ActionMenuComponent } from '../action-menu/action-menu.component';\nimport { ActivityReporter } from '../common/activity-reporter';\nimport {\n    ActionDisplayConfig,\n    ActionHandlerType,\n    ActionItem,\n    ActionType,\n} from '../common/interfaces/action-item.interface';\nimport { SubscriptionTracker } from '../common/subscription';\nimport { TooltipSize } from '../lib/directives/show-clipped-text.directive';\nimport { DatagridFilter } from './filters/datagrid-filter';\nimport { ComponentRendererConstructor, ComponentRendererSpec } from './interfaces/component-renderer.interface';\nimport {\n    ColumnRendererSpec,\n    FunctionRenderer,\n    GridColumn,\n    GridColumnHideable,\n} from './interfaces/datagrid-column.interface';\n\n/**\n * An enum that describes where the contextual buttons should display.\n */\nexport enum ContextualActionPosition {\n    TOP = 'TOP',\n    ROW = 'ROW',\n}\n\n/**\n * The default number of items on a single page.\n */\nconst DEFAULT_SIZE = 15;\n\n/**\n * The default items to show in the page size dropdown.\n */\nconst DEFAULT_SIZE_OPTIONS = [DEFAULT_SIZE, 20, 50, 100];\n\n/**\n * The maximum allowed .datagrid-header element clientHeight in pixels.\n */\nconst MAX_HEADER_HEIGHT = 40;\n\n/**\n * The default clr-dr-row element clientHeight in pixels.\n */\nconst ROW_HEIGHT = 37;\n\n/**\n * Key used for translation of pagination when a translation key is not given as input from the caller\n */\nexport const DEFAULT_PAGINATION_TRANSLATION_KEY = 'vcd.cc.grid.default.pagination';\n\n/**\n * Different types of row selection on the grid\n */\nexport enum GridSelectionType {\n    /**\n     * For selecting multiple rows\n     */\n    Multi = 'MULTI',\n    /**\n     * For selecting only one row at a time\n     */\n    Single = 'SINGLE',\n    /**\n     * Disables the selection\n     */\n    None = 'NONE',\n}\n\n/**\n * Representation of data required for rendering contents of cells and pagination information\n */\nexport interface GridDataFetchResult {\n    /**\n     * Items to be listed in the grid\n     */\n    items: R[];\n    /**\n     * Total number of items\n     */\n    totalItems?: number;\n}\n\n/**\n * The information about the currently sorted column.\n */\nexport interface SortedColumn {\n    /**\n     * Whether the column is sorted normally or reversed.\n     */\n    reverse: boolean;\n    /**\n     * The name of the column that is sorted.\n     */\n    name: string;\n}\n\n/**\n * The types of activity indicators that can be displayed on top of the grid.\n */\nexport enum ActivityIndicatorType {\n    /**\n     * Display a {@link SpinnerActivityReporterComponent} indicator\n     */\n    SPINNER,\n    /**\n     * Display a {@link BannerActivityReporterComponent} indicator\n     */\n    BANNER,\n}\n\n/**\n * The information about pagionation that will be exposed.\n */\nexport interface PagionationInformation {\n    /**\n     * What page is currently selected.\n     */\n    pageNumber: number;\n    /**\n     * How many items belong on a page.\n     */\n    itemsPerPage: number;\n}\n\n/**\n * The information the user gives to show page size and page size options in the pagination footer.\n */\nexport interface PaginationConfiguration {\n    /**\n     * Available page size options in the dropdown\n     */\n    pageSizeOptions?: number[];\n\n    /**\n     * Number of items to be displayed on one page. As a result, the server will return a set of pages with the defined\n     * number of items per page(They can be smaller than the number here in case of last page, filtering etc.,)\n     *\n     * Magic: Auto calculates the size based on available height of the container\n     */\n    pageSize: number | 'Magic';\n\n    /**\n     * The height of a row in the datagrid. If not set, will use the default of {@link ROW_HEIGHT}.\n     */\n    rowHeight?: number;\n    /**\n     * If the page size option dropdown should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageSizeSelector?: boolean;\n    /**\n     * If the page number input should be shown.\n     * Defaults to false.\n     */\n    shouldShowPageNumberInput?: boolean;\n}\n\n/**\n * The configuration object that is passed to the detail row component.\n */\nexport interface DetailRowConfig {\n    /**\n     * The record that this detail row should render.\n     */\n    record: R;\n    /**\n     * The index this detail row is in the datagrid.\n     */\n    index: number;\n    /**\n     * The total number of rows in the datagrid.\n     */\n    count: number;\n}\n\n/**\n * The configuration object that is passed to the detail pane component.\n */\nexport interface DetailPaneConfig {\n    /**\n     * The record that this detail pane should render.\n     */\n    record: R;\n}\n\n/**\n * The configuration objet used to create the detail pane on the datagrid.\n */\nexport interface DetailPane {\n    /**\n     * The header that goes on top of this detail pane.\n     */\n    header: (record: R) => string;\n    /**\n     * The contents that go within this detail pane.\n     */\n    component: ComponentRendererConstructor>;\n}\n\n/**\n * The current state of various features of the grid like filtering, sorting, pagination. This object is emitted as\n * part of the event {@link DatagridComponent.gridRefresh}. The handler then used this object to construct a query.\n */\nexport interface GridState {\n    /**\n     * FIQL formatted list of active filters\n     */\n    filters?: string[];\n    /**\n     * The currently sorted column in the datagrid.\n     */\n    sortColumn?: SortedColumn;\n    /**\n     * The pagination information that the datagrid should show.\n     */\n    pagination?: PagionationInformation;\n}\n\n/**\n * A function that can be used to render the pagination data in the grid.\n */\nexport interface PaginationCallback {\n    (firstItem: number, lastItem: number, totalItems: number): string | Observable;\n}\n\n/**\n * For simplifying logic inside the HTML template to differentiate between different {@link GridColumn.renderer}\n * types.\n */\ninterface ColumnConfigInternal extends GridColumn {\n    fieldName?: string;\n    fieldRenderer?: FunctionRenderer;\n    fieldColumnRendererSpec?: ColumnRendererSpec;\n}\n\n/**\n * Component used for saving the time required for developing a data grid. It takes different properties required for\n * rendering as Inputs and Outputs.\n *\n * Example usage in a component:\n * In the component view, different properties required for the grid are wired as Inputs and Outputs.\n *\n * @example\n * \n *  \n *\n */\n@Component({\n    selector: 'vcd-datagrid',\n    templateUrl: './datagrid.component.html',\n    styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * Sets the configuration of columns on the grid and updates the {@link columnsConfig} array. Also pushes\n     * notifications for listeners to make changes to the _columns array\n     */\n    @Input()\n    set columns(cols: GridColumn[]) {\n        this._columns = cols;\n        this.updateColumnsConfig();\n        this.columnsUpdated.emit();\n    }\n    get columns(): GridColumn[] {\n        return this._columns;\n    }\n\n    /**\n     * Set from the caller component using this grid. The input is set upon fetching data by the caller\n     */\n    @Input() set gridData(result: GridDataFetchResult) {\n        this.isLoading = false;\n        this.items = result.items;\n        this.totalItems = result.totalItems;\n        /**\n         * This is due to a known bug in clarity (@link https://github.com/vmware/clarity/issues/2265)\n         * where using trackBy breaks the select all functionality unless you\n         * add a detectChanges before updating the selection manually.\n         */\n        if (this.viewInitted) {\n            this.changeDetectorRef.detectChanges();\n        }\n        this.updateSelectedItems();\n\n        /**\n         * This is to patch fix a bug in Clarity where the detail pane does not follow trackBy.\n         * (@link https://github.com/vmware/clarity/issues/4806)\n         * Remove this when we upgrade our version of Clarity.\n         */\n        if (this.datagrid.detailService.state && this.datagrid.detailService.isOpen) {\n            const row = this.datagrid.rows.find((findRow, index) => {\n                return this.trackBy(index, findRow.item) === this.trackBy(index, this.datagrid.detailService.state);\n            });\n\n            /**\n             * Reopen updated row or close it\n             */\n            row ? this.datagrid.detailService.open(row.item, row.detailButton) : this.datagrid.detailService.close();\n        }\n    }\n\n    /**\n     * Type of row selection on the grid\n     */\n    @Input() set selectionType(selectionType: GridSelectionType) {\n        this._selectionType = selectionType;\n        this.clearSelectionInformation();\n    }\n\n    /**\n     * Filters contextual actions from the list of actions to be displayed in a grid row\n     */\n    contextualActions: ActionItem[];\n\n    private hasStaticActions: boolean;\n\n    /**\n     * List of actions given by the caller\n     */\n    @Input() set actions(actions: ActionItem[]) {\n        this._actions = actions.map((action) => {\n            const actionCopy = { ...action };\n            const actionHandler: ActionHandlerType = actionCopy.handler;\n            actionCopy.handler = (selectedEntities, handlerData) => {\n                const actionHandlerResponse = actionHandler(selectedEntities, handlerData);\n                if (actionHandlerResponse && this.actionReporter) {\n                    this.actionReporter.monitorGet(actionHandlerResponse);\n                }\n            };\n            return actionCopy;\n        });\n        this.hasStaticActions = this.actions.some(\n            (action) => action.actionType === ActionType.STATIC_FEATURED || action.actionType === ActionType.STATIC\n        );\n        this.contextualActions = this.getContextualActions();\n    }\n    private _actions: ActionItem[] = [];\n    get actions(): ActionItem[] {\n        return this._actions;\n    }\n\n    /**\n     * To display static and contextual actions in a action bar on top of a grid\n     */\n    get shouldShowActionBarOnTop(): boolean {\n        return (\n            this.actions.length &&\n            (this.hasStaticActions || (!!this.contextualActions.length && this.shouldDisplayContextualActionsOnTop))\n        );\n    }\n\n    constructor(\n        private node: ElementRef,\n        private translationService: TranslationService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * The pagination information that the user should supply.\n     */\n    @Input() set pagination(pagination: PaginationConfiguration) {\n        this._pagination = { ...pagination };\n        if (this._pagination.pageSizeOptions === undefined) {\n            this._pagination.pageSizeOptions = [];\n        }\n        if (this._pagination.shouldShowPageSizeSelector === undefined) {\n            this._pagination.shouldShowPageSizeSelector = false;\n        }\n        if (this._pagination.shouldShowPageNumberInput === undefined) {\n            this._pagination.shouldShowPageNumberInput = false;\n        }\n        this.updatePagination();\n    }\n\n    get pagination(): PaginationConfiguration {\n        return this._pagination;\n    }\n\n    /**\n     * Desired height of the grid in pixels. If unspecificed, the grid fills the parent container.\n     */\n    @Input() set height(height: number) {\n        this._height = height;\n        const heightCssValue = this.height ? `${this.height}px` : 'unset';\n        this.node.nativeElement.style.setProperty('--datagrid-height', heightCssValue);\n        this.updatePagination();\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    @HostBinding('class.fill-parent') get shouldFillParent(): boolean {\n        return this.height === undefined;\n    }\n\n    /**\n     * Returns the items selected in the VCD datagrid.\n     */\n    @Input()\n    get datagridSelection(): B[] {\n        if (this.datagrid.selection.currentSingle) {\n            return [this.datagrid.selection.currentSingle];\n        }\n        if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n            return this.datagrid.selection.current;\n        }\n        return [];\n    }\n\n    /**\n     * Sets the items selected in the VCD datagrid.\n     */\n    set datagridSelection(selection: B[]) {\n        if (!this.viewInitted) {\n            this.initialSelection = selection;\n            return;\n        }\n\n        if (this._selectionType === GridSelectionType.Single) {\n            if (selection) {\n                this.datagrid.selection.currentSingle = selection[0];\n            } else {\n                this.datagrid.selection.currentSingle = null;\n            }\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.selection.current = selection;\n        }\n    }\n\n    /**\n     * If the contextual buttons should display on the top of a grid.\n     */\n    get shouldDisplayContextualActionsOnTop(): boolean {\n        return (\n            this.contextualActionPosition &&\n            this.contextualActionPosition === ContextualActionPosition.TOP &&\n            this.datagridSelection.length !== 0\n        );\n    }\n\n    /**\n     * If the contextual buttons should display in a row.\n     */\n    get shouldDisplayContextualActionsInRow(): boolean {\n        return this.contextualActionPosition && this.contextualActionPosition === ContextualActionPosition.ROW;\n    }\n\n    /**\n     * The {@link #maxFeaturedActionsOnRow} value depends in the contextual featured actions config which belongs to the\n     * {@link ActionMenuComponent} being used in the rows. So, we wait for action menus in rows to be initialized and then calculate\n     * the value\n     */\n    @ViewChildren('actionMenuInRow') set actionMenusInRow(actionMenus: QueryList>) {\n        if (!actionMenus || !actionMenus.length) {\n            this.maxFeaturedActionsOnRow = 0;\n            return;\n        }\n        let max = 0;\n        actionMenus.forEach((actionMenu) => {\n            const contextualFeaturedActions = actionMenu.contextualFeaturedActions;\n            max = Math.max(contextualFeaturedActions.length + 1, max);\n        });\n        this.maxFeaturedActionsOnRow = max;\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private initialSelection: (B | R)[] = [];\n\n    /**\n     * An output that emits when the selection changes on the grid.\n     */\n    @Output() datagridSelectionChange = new EventEmitter();\n    /**\n     * An output that emits when the selection changes on the grid.\n     *\n     * @deprecated\n     */\n    @Output() selectionChanged = this.datagridSelectionChange;\n\n    /**\n     * How to display the static and contextual actions.\n     */\n    @Input() actionDisplayConfig: ActionDisplayConfig;\n\n    /**\n     * Whether to display contextual actions inside the row or on top of the grid\n     */\n    @Input() contextualActionPosition: ContextualActionPosition = ContextualActionPosition.TOP;\n\n    /**\n     * Emitted whenever {@link #columns} input is updated\n     */\n    @Output() columnsUpdated = new EventEmitter();\n\n    /**\n     * Columns are updated using set columns, addColumn and removeColumn methods. This cache helps in preserving changes\n     * made by each of the methods to columns array and helps in not overwriting the changes made by one of the methods\n     * with changes made by another method\n     */\n    private _columns: GridColumn[];\n    /**\n     * A optional string to be displayed above the grid.\n     */\n    @Input()\n    header?: string;\n\n    /**\n     * The type of activity indicator that should sit ontop of the grid.\n     */\n    @Input()\n    indicatorType: ActivityIndicatorType;\n\n    GridColumnHideable = GridColumnHideable;\n    TooltipSize = TooltipSize;\n    ActivityIndicatorType = ActivityIndicatorType;\n\n    /**\n     * The component that sound be rendered for this detail row.\n     *\n     * @param R The type of record that this detail component will display.\n     */\n    @Input() detailComponent: ComponentRendererConstructor>;\n\n    /**\n     * Specifies if the row is expanded. The default is false.\n     */\n    @Input() isRowExpanded = false;\n\n    /**\n     * A detail pane that will be displayed when a user selects to expand a row.\n     *\n     * @param R The type of record that this detail pane will display.\n     */\n    @Input() detailPane: DetailPane;\n    private _selectionType: GridSelectionType = GridSelectionType.None;\n\n    /**\n     * The CSS class to use for the Clarity datagrid.\n     */\n    @Input() clrDatagridCssClass = '';\n\n    /**\n     * The text placed next to the pagination number dropdown.\n     */\n    @Input() paginationDropdownText = '';\n\n    /**\n     * When there is no data, show this message.\n     */\n    @Input()\n    emptyGridPlaceholder: string;\n\n    private _pagination: PaginationConfiguration = {\n        pageSize: 'Magic',\n        pageSizeOptions: DEFAULT_SIZE_OPTIONS,\n    };\n\n    /**\n     * The page size to display.\n     */\n    pageSize = DEFAULT_SIZE;\n\n    /**\n     * The complete set of options to show the user.\n     */\n    pageSizeOptions = DEFAULT_SIZE_OPTIONS;\n\n    private _height: number;\n\n    /**\n     * Loading indicator on the grid\n     */\n    isLoading = false;\n\n    /**\n     * Used for simplifying logic inside the HTML template to differentiate between different\n     * {@link GridColumn.renderer} types.\n     */\n    columnsConfig: ColumnConfigInternal[];\n\n    /**\n     * List of items used for displaying rows on the grid\n     */\n    items: R[] = [];\n\n    /**\n     * The total number of items that could be displayed in the grid.\n     */\n    totalItems?: number;\n\n    /**\n     * Emitted during the initial rendering, and is emitted whenever filtering/sorting/paging params change\n     * {@link #GridState} is the type of value emitted\n     */\n    @Output()\n    gridRefresh: EventEmitter> = new EventEmitter>();\n\n    @ViewChild(ClrDatagrid, { static: true }) datagrid: ClrDatagrid;\n    /**\n     * The pagination display within the datagrid.\n     */\n    @ViewChild(ClrDatagridPagination) paginationComponent: ClrDatagridPagination;\n    /**\n     * The activity reporter that all activites are displayed on\n     */\n    @ViewChild('actionReporter') actionReporter: ActivityReporter;\n\n    private viewInitted = false;\n\n    /**\n     * Used for translating pagination information displayed in the grid\n     */\n    @Input() paginationTranslationKey: string = DEFAULT_PAGINATION_TRANSLATION_KEY;\n\n    private subTracker = new SubscriptionTracker(this);\n\n    /**\n     * Used for calculating the width of actions column\n     */\n    maxFeaturedActionsOnRow = 0;\n\n    /**\n     * If selection should be preserved when the item is not loaded to the grid.\n     *\n     * Defaults to false;\n     */\n    @Input() preserveSelection = false;\n\n    private currentPaneSpecRecord: R;\n    private currentPaneSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private currentDetailRowConfig: {\n        record: R;\n        count: number;\n        index: number;\n    };\n    private currentDetailRowRenderSpec: { rendererSpec: ComponentRendererSpec> };\n\n    private getContextualActions(): ActionItem[] {\n        return this.actions.filter(\n            (action) => action.actionType !== ActionType.STATIC_FEATURED && action.actionType !== ActionType.STATIC\n        );\n    }\n\n    /**\n     * To add or replace a column of this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public addColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns[colIndex] = col;\n        } else {\n            this._columns.push(col);\n        }\n        this.updateColumnsConfig();\n    }\n\n    /**\n     * To remove a column from this datagrid columns. Exposed for columns modifiers(eg: directives) that listen to\n     * {@link columnsUpdated} event and want to modify the columns set by components using this datagrid.\n     */\n    public removeColumn(col: GridColumn): void {\n        if (!col) {\n            return;\n        }\n        const colIndex = this.findColumnIndex(col);\n        if (colIndex !== -1) {\n            this._columns.splice(colIndex, 1);\n            this.updateColumnsConfig();\n        }\n    }\n\n    private findColumnIndex(col: GridColumn): number {\n        return this.columns.findIndex((column) => col.displayName === column.displayName);\n    }\n\n    private updateColumnsConfig(): void {\n        this.columnsConfig = this.getColumnsConfig(this.columns);\n    }\n\n    /**\n     * Returns an identifier for the given record at the given index.\n     *\n     * If the record has a href, defaults to that. Else, defaults to index.\n     */\n    @Input() trackBy: TrackByFunction = (index: number, record): string => {\n        return (record as any).href;\n    };\n\n    /**\n     * Returns an identifier for the given column at the given index.\n     */\n    columnTrackBy(index: number, column: ColumnConfigInternal): string {\n        return column.displayName;\n    }\n\n    /**\n     * Gives the render spec to create the detail row for the row with the given record, at the given index, and\n     * in a datagrid with the given count of total items.\n     */\n    getDetailRowRenderSpec(\n        record: R,\n        index: number,\n        count: number\n    ): { rendererSpec: ComponentRendererSpec> } {\n        if (\n            !this.currentDetailRowConfig ||\n            this.currentDetailRowConfig.record !== record ||\n            this.currentDetailRowConfig.index !== index ||\n            this.currentDetailRowConfig.count !== count\n        ) {\n            this.currentDetailRowConfig = { record, index, count };\n            this.currentDetailRowRenderSpec = {\n                rendererSpec: {\n                    type: this.detailComponent,\n                    config: this.currentDetailRowConfig,\n                },\n            };\n        }\n        return this.currentDetailRowRenderSpec;\n    }\n\n    /**\n     * Gives the render spec to create the detail pane for the row with the given record.\n     */\n    getDetailPaneRenderSpec(record: R): { rendererSpec: ComponentRendererSpec> } {\n        if (this.currentPaneSpecRecord !== record) {\n            this.currentPaneSpecRecord = record;\n            this.currentPaneSpec = {\n                rendererSpec: {\n                    type: this.detailPane.component,\n                    config: { record },\n                },\n            };\n        }\n        return this.currentPaneSpec;\n    }\n\n    /**\n     * Gives the CSS class to use for a given datarow based on its relative index and entity definition.\n     */\n    @Input() clrDatarowCssClassGetter(row: R, index: number): string {\n        return '';\n    }\n\n    private updateSelectedItems(): void {\n        if (!this.preserveSelection) {\n            if (this._selectionType === GridSelectionType.Single && this.datagrid.selection.currentSingle) {\n                // Tries to find the currently selected item. If it isn't found, clears the selection.\n                const current = this.datagrid.selection.currentSingle as R;\n                const found = this.mapSelectedRecords([current], this.items)[0];\n                if (!found) {\n                    this.datagrid.selection.clearSelection();\n                } else {\n                    this.datagrid.selection.setSelected(found, true);\n                }\n            } else if (this._selectionType === GridSelectionType.Multi) {\n                // Tries to find the currently selected items. If an item isn't found, clears the selection for that item.\n                if (this.datagrid.selection.current && this.datagrid.selection.current.length) {\n                    const current = [...this.datagrid.selection.current] as R[];\n                    this.datagrid.selection.clearSelection();\n                    const nextSelection = this.mapSelectedRecords(current, this.items).filter((item) => item);\n                    this.datagrid.selection.updateCurrent(nextSelection, false);\n                }\n            }\n        }\n        if (this.datagrid.rows) {\n            this.datagrid.rows.notifyOnChanges();\n        }\n    }\n\n    /**\n     * Given an existing selection that is made up of records that are about to become stale,\n     * and new records to be loaded into the grid, returns the selection mapped to records\n     * from the newly added records, excluding any records that may not be present in the\n     * new selection because they are not present in the new data.\n     */\n    private mapSelectedRecords(currentSelection: R[], newRecords: R[]): R[] {\n        return currentSelection.map((selected, selectedIndex) => {\n            const found = newRecords.find(\n                (item, itemIndex) => this.trackBy(itemIndex, item) === this.trackBy(selectedIndex, selected)\n            );\n            return found;\n        });\n    }\n\n    private clearSelectionInformation(): void {\n        if (!this.datagrid) {\n            return;\n        }\n        if (this._selectionType === GridSelectionType.Single) {\n            this.datagrid.selected = undefined;\n            this.datagrid.singleSelected = null;\n        } else if (this._selectionType === GridSelectionType.Multi) {\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = [];\n        } else if (this._selectionType === GridSelectionType.None) {\n            this.datagrid.selected = [];\n            this.datagrid.singleSelected = undefined;\n            this.datagrid.selected = undefined;\n        }\n    }\n\n    /**\n     * Called when the {@param state} of the Clarity datagrid changes.\n     */\n    gridStateChanged(state: ClrDatagridStateInterface): void {\n        const vcdDgState: GridState = {\n            pagination: {\n                pageNumber: state.page ? state.page.current : 1,\n                itemsPerPage: state.page ? state.page.size : DEFAULT_SIZE,\n            },\n        };\n        if (state.filters) {\n            vcdDgState.filters = state.filters.map((filter: DatagridFilter) => filter.getValue());\n        }\n        if (state.sort && typeof state.sort.by === 'string') {\n            vcdDgState.sortColumn = {\n                name: state.sort.by,\n                reverse: state.sort.reverse,\n            };\n        }\n        this.gridRefresh.emit(vcdDgState);\n    }\n\n    /**\n     * Is the given column able to be hidden by the user through the show/hide menu.\n     */\n    isColumnHideable(column: GridColumn): boolean {\n        return column && column.hideable !== GridColumnHideable.Never;\n    }\n\n    /**\n     * Resets the pagination to page 1.\n     */\n    resetToPageOne(): void {\n        this.paginationComponent.currentPage = 1;\n    }\n\n    /**\n     * Gives the correct string to display for the pagination.\n     */\n    getPaginationTranslation(paginationData: ClrDatagridPagination): LazyString {\n        return this.translationService.translateAsync(this.paginationTranslationKey, [\n            {\n                firstItem: paginationData.firstItem + 1,\n                lastItem: paginationData.lastItem + 1,\n                totalItems: paginationData.totalItems,\n            },\n        ]);\n    }\n\n    /**\n     * The number of rows in a single page.\n     */\n    private getPageSize(): number {\n        if (typeof this.pagination.pageSize === 'number') {\n            return this.pagination.pageSize;\n        }\n        if (this.pagination.pageSize === 'Magic' && this.viewInitted) {\n            return this.calculatePageSize();\n        }\n        return DEFAULT_SIZE;\n    }\n\n    /**\n     * Available page size options in the dropdown\n     */\n    private getPageSizeOptions(): number[] {\n        let options = this.pagination.pageSizeOptions.map((size) => size);\n        if (options.indexOf(this.pageSize) === -1) {\n            options.push(this.pageSize);\n            options = options.sort((a, b) => a - b);\n        }\n        return options;\n    }\n\n    /**\n     *  Calculates the pageSize from the available space in the datagrid body\n     */\n    private calculatePageSize(): number {\n        const grid = this.node.nativeElement;\n        const gridHeight = grid.parentNode.clientHeight;\n\n        const headerHeight = grid.querySelector('.datagrid-header').offsetHeight;\n        const footerHeight = grid.querySelector('clr-dg-footer').offsetHeight;\n        const rowHeight = this.pagination.rowHeight || ROW_HEIGHT;\n\n        // Substracting the height of the header, actionbar and footer\n        let availableHeight = (this.height || gridHeight) - headerHeight - footerHeight;\n        if (!this.height) {\n            const header = grid.querySelector('.vcd-header');\n            availableHeight -= header ? header.offsetHeight : 0;\n        }\n        if (this.shouldShowActionBarOnTop) {\n            availableHeight -= ROW_HEIGHT;\n        }\n\n        // Calculate the pageSize by dividing the available height by the row height.\n        const pageSize = Math.floor(availableHeight / rowHeight);\n\n        // If the calculated pageSize is less than the default, set the pageSize to the default one.\n        return Math.max(DEFAULT_SIZE, pageSize);\n    }\n\n    /**\n     * Updates the pagination information by recalculating pageSize if needed.\n     */\n    private updatePagination(): void {\n        this.pageSize = this.getPageSize();\n        this.pageSizeOptions = this.getPageSizeOptions();\n    }\n\n    /**\n     * Defines the {@property columnsConfig} by adding extra property required for differentiating different kinds\n     * of renderers which is required in the HTML template.\n     */\n    public getColumnsConfig(columns): ColumnConfigInternal[] {\n        return columns.map((column) => {\n            const columnConfig: ColumnConfigInternal = {\n                ...column,\n            };\n\n            if (column.renderer instanceof Function) {\n                columnConfig.fieldRenderer = column.renderer as FunctionRenderer;\n            } else if ((column.renderer as ColumnRendererSpec).config) {\n                columnConfig.fieldColumnRendererSpec = column.renderer as ColumnRendererSpec;\n            } else {\n                columnConfig.fieldName = column.renderer as string;\n            }\n\n            // Add query filed required for the column filtering. This is then used in DatagridFilter.queryField\n            if (column.queryFieldName && column.filter) {\n                column.filter.config.queryField = column.queryFieldName;\n            }\n\n            return columnConfig;\n        });\n    }\n\n    ngOnInit(): void {\n        this.isLoading = true;\n        this.clearSelectionInformation();\n    }\n\n    ngAfterViewInit(): void {\n        this.viewInitted = true;\n        this.datagridSelection = this.initialSelection;\n        if (this.pagination.pageSize === 'Magic') {\n            this.updatePagination();\n            // We need to update the page size in ngAfterViewInit because when it is set\n            // to magically calculate, we need to know that the rest of the page has been rendered.\n            // Yet, this causes a ExpressionChangedAfterItHasBeenCheckedError because we are changing\n            // pageSize in this method. So we need to detectChanges to avoid an error or\n            // calling a setTimeout.\n            this.changeDetectorRef.detectChanges();\n        }\n\n        this.datagrid.items.change.subscribe(() => {\n            if (this.datagrid.items.displayed.length > 0) {\n                (this.datagrid as any).organizer.resize();\n            }\n        });\n\n        this.columnsUpdated.subscribe(() => {\n            this.datagrid.columns.reset(this.datagrid.columns.toArray());\n        });\n    }\n\n    ngOnDestroy(): void {}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerActivityReporterComponent.html":{"url":"components/SpinnerActivityReporterComponent.html","title":"component - SpinnerActivityReporterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerActivityReporterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts\n\n\n    \n        Description\n    \n    \n        Spinner activity reporter shows the spinner until an error or success message is returned.\nAn error message is displayed through the error banner.\n\n    \n\n    \n        Extends\n    \n    \n                ActivityReporter\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                vcd-spinner-activity-reporter\n            \n\n\n\n\n            \n                templateUrl\n                ./spinner-activity-reporter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorText\n                            \n                            \n                                    Public\n                                running\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reportError\n                            \n                            \n                                reportSuccess\n                            \n                            \n                                startActivity\n                            \n                            \n                                    Async\n                                monitorEdit\n                            \n                            \n                                    Async\n                                monitorGet\n                            \n                            \n                                    Async\n                                monitorGetAll\n                            \n                            \n                                    Abstract\n                                reportError\n                            \n                            \n                                    Abstract\n                                reportSuccess\n                            \n                            \n                                    Abstract\n                                startActivity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(promiseResolver: ActivityPromiseResolver)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseResolver\n                                                  \n                                                        \n                                                                        ActivityPromiseResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \nreportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:44\n                \n            \n\n\n            \n                \n                    Hides the loading indicator and shows an error message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nreportSuccess()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:52\n                \n            \n\n\n            \n                \n                    Hides the loading indicator.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \nstartActivity()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:36\n                \n            \n\n\n            \n                \n                    Begins to show the loading indicator to the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorEdit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorEdit(activityResolutionPromise: Promise, successMessage?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:73\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity and posts a successMessage using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGet(activityResolutionPromise: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:38\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns an entity using ActivityPromiseResolver.monitorActivity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            monitorGetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    monitorGetAll(activityResolutionPromises: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:53\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Monitors a promise that returns many entities using ActivityPromiseResolver.monitorActivities.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityResolutionPromises\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportError(errorText: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:27\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom error reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text to display in the error alert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            reportSuccess\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reportSuccess(successMessage: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:33\n\n                \n            \n\n\n            \n                \n                    Override this method to provide custom success reporting behavior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    successMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A message to display to the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            startActivity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startActivity()\n                \n            \n\n\n            \n                \n                    Inherited from         ActivityReporter\n\n                \n            \n            \n                \n                        Defined in         ActivityReporter:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:27\n                            \n                        \n\n                \n                    \n                        When set show the error text\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts:22\n                            \n                        \n\n                \n                    \n                        When true show the spinner\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { ActivityPromiseResolver } from './activity-promise-resolver';\nimport { ActivityReporter } from './activity-reporter';\n\n/**\n * Spinner activity reporter shows the spinner until an error or success message is returned.\n * An error message is displayed through the error banner.\n */\n@Component({\n    selector: 'vcd-spinner-activity-reporter',\n    templateUrl: './spinner-activity-reporter.component.html',\n})\nexport class SpinnerActivityReporterComponent extends ActivityReporter {\n    /**\n     * When true show the spinner\n     */\n    public running = false;\n\n    /**\n     * When set show the error text\n     */\n    public errorText: string = null;\n\n    constructor(@Inject(ActivityPromiseResolver) promiseResolver: ActivityPromiseResolver) {\n        super(promiseResolver);\n    }\n\n    /**\n     * Begins to show the loading indicator to the user.\n     */\n    startActivity(): void {\n        this.running = true;\n        this.errorText = null;\n    }\n\n    /**\n     * Hides the loading indicator and shows an error message.\n     */\n    reportError(errorText: string): void {\n        this.errorText = errorText;\n        this.running = false;\n    }\n\n    /**\n     * Hides the loading indicator.\n     */\n    reportSuccess(): void {\n        this.running = false;\n    }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionMenuComponent', 'selector': 'vcd-action-menu'},{'name': 'BannerActivityReporterComponent', 'selector': 'vcd-banner-activity-reporter'},{'name': 'BoldTextRendererComponent', 'selector': 'vcd-bold-text-renderer'},{'name': 'DataExporterComponent', 'selector': 'vcd-data-exporter'},{'name': 'DatagridComponent', 'selector': 'vcd-datagrid'},{'name': 'DatagridMultiSelectFilterComponent', 'selector': 'vcd-dg-multiselect-filter'},{'name': 'DatagridNumericFilterComponent', 'selector': 'vcd-dg-numeric-filter'},{'name': 'DatagridSelectFilterComponent', 'selector': 'vcd-dg-select-filter'},{'name': 'DatagridStringFilterComponent', 'selector': 'vcd-dg-string-filter'},{'name': 'DropdownComponent', 'selector': 'vcd-dropdown'},{'name': 'ErrorBannerComponent', 'selector': 'vcd-error-banner'},{'name': 'FilterTestHostComponent', 'selector': ''},{'name': 'FormCheckboxComponent', 'selector': 'vcd-form-checkbox'},{'name': 'FormInputComponent', 'selector': 'vcd-form-input'},{'name': 'FormlyInputComponent', 'selector': 'vcd-formly-input'},{'name': 'FormlyNumberWithUnitInputComponent', 'selector': 'vcd-formly-number-with-unit-input'},{'name': 'FormlySelectComponent', 'selector': 'vcd-formly-select'},{'name': 'FormSelectComponent', 'selector': 'vcd-form-select'},{'name': 'LoadingIndicatorComponent', 'selector': 'vcd-loading-indicator'},{'name': 'NumberWithUnitFormInputComponent', 'selector': 'vcd-number-with-unit-form-input'},{'name': 'QuickSearchComponent', 'selector': 'vcd-quick-search'},{'name': 'ShowClippedTextDirectiveTestHostComponent', 'selector': ''},{'name': 'SpinnerActivityReporterComponent', 'selector': 'vcd-spinner-activity-reporter'}];\n    var DIRECTIVES = [{'name': 'ComponentRendererOutletDirective', 'selector': '[vcdComponentRendererOutlet]'},{'name': 'DropdownFocusHandlerDirective', 'selector': 'vcd-dropdown[vcdDropdownFocusHandler]'},{'name': 'DynamicDropdownPositionDirective', 'selector': 'clr-dropdown[vcdDynamicDropdown]'},{'name': 'ShowClippedTextDirective', 'selector': '[vcdShowClippedText]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerActivityReporterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpinnerActivityReporterWidgetObject.html":{"url":"classes/SpinnerActivityReporterWidgetObject.html","title":"class - SpinnerActivityReporterWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpinnerActivityReporterWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSpinner\n                            \n                            \n                                    Public\n                                isSpinnerSpinning\n                            \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    running\n                                \n                                \n                                    errorText\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd-spinner-activity-reporter'\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                            \n                                \n                                    Inherited from         WidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         WidgetObject:42\n\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSpinner\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpinner()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:24\n                \n            \n\n\n            \n                \n                    Gives the spinner for this element\n\n\n                    \n                        Returns :         DebugElement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isSpinnerSpinning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSpinnerSpinning()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:73\n\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:54\n\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:62\n\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:128\n\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:136\n\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:90\n\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Inherited from         WidgetObject\n\n                \n            \n            \n                \n                        Defined in         WidgetObject:114\n\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        running\n                    \n                \n\n                \n                    \n                        getrunning()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorText\n                    \n                \n\n                \n                    \n                        geterrorText()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DebugElement } from '@angular/core';\nimport { SpinnerActivityReporterComponent } from '../../../common/activity-reporter';\nimport { WidgetObject } from '../widget-object';\n\nexport class SpinnerActivityReporterWidgetObject extends WidgetObject {\n    static tagName = 'vcd-spinner-activity-reporter';\n\n    get running(): boolean {\n        return this.component.running;\n    }\n\n    get errorText(): string {\n        return this.component.errorText;\n    }\n\n    /**\n     * Gives the spinner for this element\n     */\n    private getSpinner(): DebugElement {\n        const element = this.findElement('.spinner');\n\n        if (!element) {\n            throw new Error('Could not find the spinner element.');\n        }\n        return element;\n    }\n\n    public isSpinnerSpinning(): boolean {\n        try {\n            return !!this.getSpinner();\n        } catch (error) {\n            return false;\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubscriptionTracker.html":{"url":"classes/SubscriptionTracker.html","title":"class - SubscriptionTracker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubscriptionTracker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/common/subscription/subscription-tracker.ts\n        \n\n            \n                Description\n            \n            \n                Components can use this to have subscriptions automatically removed when the component is destroyed\n\n            \n\n\n            \n                Implements\n            \n            \n                            ISubscriptionTracker\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(destroyable: OnDestroy)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/common/subscription/subscription-tracker.ts:40\n                            \n                        \n\n                \n                    \n                            Constructs this tracker to call unsubscribeAll when OnDestroy.ngOnDestroy is called.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        destroyable\n                                                  \n                                                        \n                                                                        OnDestroy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observable: Observable, observerOrNext?: PartialObserver | , error?: (error?: any) => void, complete?: () => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:53\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observerOrNext\n                                    \n                                            PartialObserver | \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    complete\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/common/subscription/subscription-tracker.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy } from '@angular/core';\nimport { Observable, PartialObserver, Subscription } from 'rxjs';\nimport { toSubscriber } from 'rxjs/internal-compatibility';\n\n/**\n * An interface that knows how to subscribe and unsubscribe from observables.\n */\nexport interface ISubscriptionTracker {\n    /**\n     * Subscribes to the given {@param observable}. Passes along the given {@param observerOrNext}.\n     * Will call the {@param complete} when complete, and {@param error} when errors happen.\n     */\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription;\n\n    /**\n     * Unsubscribes from the given {@param subscription}.\n     */\n    unsubscribe(subscription: Subscription): Subscription;\n\n    /**\n     * Unsubscribes from all subscriptions on this {@link Subscribable}.\n     */\n    unsubscribeAll(): void;\n}\n\n/**\n * Components can use this to have subscriptions automatically removed when the component is destroyed\n */\nexport class SubscriptionTracker implements ISubscriptionTracker {\n    private subscriptions: Subscription[] = [];\n\n    /**\n     * Constructs this tracker to call {@link unsubscribeAll} when {@link OnDestroy.ngOnDestroy} is called.\n     */\n    constructor(destroyable: OnDestroy) {\n        const originalOnDestroy = destroyable.ngOnDestroy;\n        destroyable.ngOnDestroy = () => {\n            this.unsubscribeAll();\n            originalOnDestroy.call(destroyable);\n        };\n    }\n\n    subscribe(\n        observable: Observable,\n        observerOrNext?: PartialObserver | ((value: T) => void),\n        error?: (error: any) => void,\n        complete?: () => void\n    ): Subscription {\n        const subscription = observable.subscribe(toSubscriber(observerOrNext, error, complete));\n        this.subscriptions.push(subscription);\n        return subscription;\n    }\n\n    unsubscribe(subscription: Subscription): Subscription {\n        subscription.unsubscribe();\n        const indexOfSubscription = this.subscriptions.indexOf(subscription);\n        if (indexOfSubscription === -1) {\n            throw new Error('Unsubscribing to untracked subscription');\n        }\n        this.subscriptions.splice(indexOfSubscription, 1);\n        return subscription;\n    }\n\n    unsubscribeAll(): void {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestElement.html":{"url":"classes/TestElement.html","title":"class - TestElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object/angular-widget-object.ts\n        \n\n            \n                Description\n            \n            \n                A wrapper around an array of DebugElements that adds convenience methods.\nAvoid accessing the debug elements at all costs.\nCan be used in a for ... of ... loop to inspect all the sub elements within this TestElement.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Iterable\n            \n\n            \n                Example\n            \n            \n                        \n                            for (const el of testElement) {\nexpect(el.enabled()).toBeTruthy()\n}\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elements\n                            \n                            \n                                    Public\n                                fixture\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                classes\n                            \n                            \n                                clear\n                            \n                            \n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                enabled\n                            \n                            \n                                    Private\n                                findParents\n                            \n                            \n                                getComponentInstance\n                            \n                            \n                                getInjector\n                            \n                            \n                                getStylePropertyValue\n                            \n                            \n                                length\n                            \n                            \n                                parents\n                            \n                            \n                                queryDirective\n                            \n                            \n                                queryElements\n                            \n                            \n                                sendKeyboardEvent\n                            \n                            \n                                text\n                            \n                            \n                                toArray\n                            \n                            \n                                value\n                            \n                            \n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elements: DebugElement[], fixture: ComponentFixture)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elements\n                                                  \n                                                        \n                                                                    DebugElement[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                    ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DebugElement[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:97\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            blur\n                        \n                        \n                    \n                \n            \n            \n                \nblur()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:131\n                \n            \n\n\n            \n                \n                    Blurs all the contained elements.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            classes\n                        \n                        \n                    \n                \n            \n            \n                \nclasses()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:185\n                \n            \n\n\n            \n                \n                    Returns classes of first element as a string array\n\n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:139\n                \n            \n\n\n            \n                \n                    Clears the input on all the contained elements.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:123\n                \n            \n\n\n            \n                \n                    Clicks all of the elements contained.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:154\n                \n            \n\n\n            \n                \n                    Runs change detection with the component fixture.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enabled\n                        \n                        \n                    \n                \n            \n            \n                \nenabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:116\n                \n            \n\n\n            \n                \n                    Says if this element is enabled.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findParents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParents(debugEl: DebugElement, cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:214\n                \n            \n\n\n            \n                \n                    Finds the first parent element that matches the CSS selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    debugEl\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComponentInstance\n                        \n                        \n                    \n                \n            \n            \n                \ngetComponentInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:200\n                \n            \n\n\n            \n                \n                    Returns componentInstance of the first element\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetInjector()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:207\n                \n            \n\n\n            \n                \n                    Returns injector of the first element\n\n\n                    \n                        Returns :         Injector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStylePropertyValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetStylePropertyValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:193\n                \n            \n\n\n            \n                \n                    Returns style property value of the first element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        specified CSS property\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            length\n                        \n                        \n                    \n                \n            \n            \n                \nlength()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:147\n                \n            \n\n\n            \n                \n                    Says how many elements are contained in this TestElement.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parents\n                        \n                        \n                    \n                \n            \n            \n                \nparents(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:224\n                \n            \n\n\n            \n                \n                    Returns the first parent element that matches css selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TestElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryDirective\n                        \n                        \n                    \n                \n            \n            \n                \nqueryDirective(type: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:232\n                \n            \n\n\n            \n                \n                    Returns componentInstance after query directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryElements\n                        \n                        \n                    \n                \n            \n            \n                \nqueryElements(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:239\n                \n            \n\n\n            \n                \n                    Returns children of the first element that matches css selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TestElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \nsendKeyboardEvent(eventType: string, eventProperties: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:172\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on this element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            text\n                        \n                        \n                    \n                \n            \n            \n                \ntext()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:102\n                \n            \n\n\n            \n                \n                    Gives the text of the first element.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toArray\n                        \n                        \n                    \n                \n            \n            \n                \ntoArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:161\n                \n            \n\n\n            \n                \n                    Gives the elements contained within this TestElement where each element is its own TestElement\n\n\n                    \n                        Returns :         TestElement[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:109\n                \n            \n\n\n            \n                \n                    Gives the value of the first element.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            \n                        \n                        \n                    \n                \n            \n            \n                \n()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object/angular-widget-object.ts:247\n                \n            \n\n\n            \n                \n                    Allows a TestElement to be used in a for ... of ... loop.\n\n\n                    \n                        Returns :         Iterator\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Injector, Type } from '@angular/core';\nimport { ComponentFixture } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport { AngularWidgetObjectFinder } from './angular-widget-finder';\nimport { BaseWidgetObject, FindableWidget } from './widget-object';\nimport { CorrectReturnTypes, LocatorDriver } from './widget-object';\n\n/**\n * Knows how to find Angular TestElements in the DOM.\n */\nexport class AngularLocatorDriver implements LocatorDriver {\n    constructor(private testElement: TestElement, private rootElement: DebugElement) {}\n\n    /**\n     * @inheritdoc\n     */\n    get(cssSelector: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        const nextElements = [].concat(...elements.map((element) => element.queryAll(By.css(cssSelector))));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getByText(cssSelector: string, value: string): AngularLocatorDriver {\n        const elements = this.testElement.elements;\n        let nextElements: DebugElement[] = [].concat(\n            ...elements.map((element) => element.queryAll(By.css(cssSelector)))\n        );\n        nextElements = nextElements.filter((el) => el.nativeElement.textContent.includes(value));\n        return new AngularLocatorDriver(new TestElement(nextElements, this.testElement.fixture), this.rootElement);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    parents(cssSelector: string): AngularLocatorDriver {\n        return new AngularLocatorDriver(\n            new TestElement(\n                this.testElement.elements.map((el) => this.findParent(cssSelector, el.parent)),\n                this.testElement.fixture\n            ),\n            this.rootElement\n        );\n    }\n\n    /**\n     * Looks up the chain of debug elements until it finds a parent that matches the CSS selector.\n     * Checks the given element.\n     */\n    private findParent(cssSelector: string, debugElement: DebugElement): DebugElement {\n        if (!debugElement) {\n            return undefined;\n        } else if (debugElement.nativeElement.matches(cssSelector)) {\n            return debugElement;\n        } else {\n            return this.findParent(cssSelector, debugElement.parent);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    unwrap(): TestElement {\n        return this.testElement;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findWidget, C extends FindableWidget>(\n        widget: C,\n        cssSelector?: string\n    ): CorrectReturnTypes, TestElement> {\n        return new AngularWidgetObjectFinder(this.testElement.fixture).find(widget, this.rootElement, cssSelector);\n    }\n}\n\n/**\n * A wrapper around an array of DebugElements that adds convenience methods.\n * Avoid accessing the debug elements at all costs.\n *\n * Can be used in a `for ... of ...` loop to inspect all the sub elements within this TestElement.\n *\n * @example\n * for (const el of testElement) {\n *     expect(el.enabled()).toBeTruthy()\n * }\n */\nexport class TestElement implements Iterable {\n    constructor(public elements: DebugElement[], public fixture: ComponentFixture) {}\n\n    /**\n     * Gives the text of the first element.\n     */\n    text(): string {\n        return this.elements[0].nativeElement.textContent.trim();\n    }\n\n    /**\n     * Gives the value of the first element.\n     */\n    value(): string {\n        return this.elements[0].nativeElement.value;\n    }\n\n    /**\n     * Says if this element is enabled.\n     */\n    enabled(): boolean {\n        return !this.elements[0].nativeElement.disabled;\n    }\n\n    /**\n     * Clicks all of the elements contained.\n     */\n    click(): void {\n        this.elements.map((element) => element.nativeElement.click());\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Blurs all the contained elements.\n     */\n    blur(): void {\n        this.elements.map((el) => el.nativeElement.dispatchEvent(new Event('blur')));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Clears the input on all the contained elements.\n     */\n    clear(): void {\n        this.elements.map((el) => (el.nativeElement.value = ''));\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Says how many elements are contained in this TestElement.\n     */\n    length(): number {\n        return this.elements.length;\n    }\n\n    /**\n     * Runs change detection with the component fixture.\n     */\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Gives the elements contained within this TestElement where each element is its own TestElement\n     */\n    toArray(): TestElement[] {\n        return this.elements.map((el) => new TestElement([el], this.fixture));\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on this element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     */\n    sendKeyboardEvent(eventType: string, eventProperties: { [name: string]: unknown }): void {\n        const element = this.elements[0].nativeElement as HTMLElement;\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        element.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Returns classes of first element as a string array\n     */\n    classes(): string[] {\n        return Object.keys(this.elements[0].classes);\n    }\n\n    /**\n     * Returns style property value of the first element\n     * @param key specified CSS property\n     */\n    getStylePropertyValue(key: string): string {\n        return this.elements[0].nativeElement.style.getPropertyValue(key);\n    }\n\n    /**\n     * Returns componentInstance of the first element\n     */\n    getComponentInstance(): any {\n        return this.elements[0].componentInstance;\n    }\n\n    /**\n     * Returns injector of the first element\n     */\n    getInjector(): Injector {\n        return this.elements[0].injector;\n    }\n\n    /**\n     * Finds the first parent element that matches the CSS selector\n     */\n    private findParents(debugEl: DebugElement, cssSelector: string): DebugElement {\n        if (!debugEl) {\n            return null;\n        }\n        return debugEl.nativeElement.matches(cssSelector) ? debugEl : this.findParents(debugEl.parent, cssSelector);\n    }\n\n    /**\n     * Returns the first parent element that matches css selector\n     */\n    parents(cssSelector: string): TestElement {\n        const result = this.findParents(this.elements[0].parent, cssSelector);\n        return new TestElement(result ? [result] : [], this.fixture);\n    }\n\n    /**\n     * Returns componentInstance after query directive\n     */\n    queryDirective(type: Type): any {\n        return this.elements[0].query(By.directive(type)).componentInstance;\n    }\n\n    /**\n     * Returns children of the first element that matches css selector\n     */\n    queryElements(cssSelector: string): TestElement {\n        const result = this.elements[0].queryAll(By.css(cssSelector));\n        return new TestElement(result ? result : [], this.fixture);\n    }\n\n    /**\n     * Allows a TestElement to be used in a `for ... of ...` loop.\n     */\n    [Symbol.iterator](): Iterator {\n        let counter = 0;\n        return {\n            next: () => {\n                counter += 1;\n                return {\n                    done: counter === this.elements.length,\n                    value: new TestElement([this.elements[counter]], this.fixture),\n                };\n            },\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThousandsUnit.html":{"url":"classes/ThousandsUnit.html","title":"class - ThousandsUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThousandsUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Finds the bestUnit by trying groups of 1000\n\n            \n\n            \n                Extends\n            \n            \n                        NumberUnit\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUnitMultiplier\n                            \n                            \n                                findBestUnit\n                            \n                            \n                                    Abstract\n                                getAllUnitTypes\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getUnitMultiplier\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         NumberUnit\n\n                                \n                            \n                        \n                            \n                                    Defined in         NumberUnit:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Unit\n\n                                \n                            \n                        \n                            \n                                    Defined in         Unit:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \ngetUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \nfindBestUnit(value: number, availableUnits: NumberUnit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:89\n\n                \n            \n\n\n            \n                \n                    Calculates the best unit out of available units to display in UI cell for a given input Unit\nand value\nBest unit is a Unit whose converted value is less than the comparison number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nValue of input Unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                            NumberUnit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.getAllUnitTypes()\n                                    \n\n                                    \n                                        \nArray of available Units to display in UI cell\navailableUnits array should be pre-sorted ascending by multiplier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getAllUnitTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUnitTypes()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     NumberUnit[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            getUnitMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:112\n\n                \n            \n\n\n            \n                \n                    Returns the number that you multiply by to get the next order unit.\n\n\n                    \n                        Example :\n                        \n                            1024 would be the multiplier for Byte.\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         NumberUnit\n\n                \n            \n            \n                \n                        Defined in         NumberUnit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:71\n\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:45\n\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:37\n\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:61\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Inherited from         Unit\n\n                \n            \n            \n                \n                        Defined in         Unit:54\n\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Unit.html":{"url":"classes/Unit.html","title":"class - Unit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Unit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to define different types of units with unitName and\nmultiplier that converts to baseUnit.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _multiplier\n                            \n                            \n                                    Private\n                                    Readonly\n                                _unitName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                findBestUnit\n                            \n                            \n                                    Public\n                                getBaseValue\n                            \n                            \n                                    Public\n                                getMultiplier\n                            \n                            \n                                    Public\n                                getOutputValue\n                            \n                            \n                                    Public\n                                getUnitName\n                            \n                            \n                                    Abstract\n                                getUnitNameTranslationKey\n                            \n                            \n                                    Abstract\n                                getValueWithUnitTranslationKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(multiplier: number, unitName: string)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        multiplier\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nValue that is used to convert this to base unit\n\n\n                                                        \n                                                \n                                                \n                                                        unitName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the Unit. Also used to construct translation\nkeys for each type of Unit.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _multiplier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _unitName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/unit/unit.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findBestUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findBestUnit(value: number, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:71\n                \n            \n\n\n            \n                \n                    Returns the best unit out of available units for given value of current unit\nBest unit is a Unit whose converted value is less than 1000\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nList of available Units out of which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Unit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBaseValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:45\n                \n            \n\n\n            \n                \n                    Returns the value in base unit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMultiplier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMultiplier()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutputValue(value, outputUnit: Unit)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:37\n                \n            \n\n\n            \n                \n                    Returns the value in outputUnit for this unit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nValue of this unit\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nUnit to which value is converted\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnitName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitName()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getUnitNameTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnitNameTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:61\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying unitName\nEx: MB, B, GHz, MHz, %\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getValueWithUnitTranslationKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueWithUnitTranslationKey()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit.ts:54\n                \n            \n\n\n            \n                \n                    Translation key to be used when displaying value with unit\nEx: 25 MB, 100 %, 2 GHz\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Unit {\n    private readonly _multiplier: number;\n    private readonly _unitName: string;\n\n    /**\n     * @param multiplier - Value that is used to convert this to base unit\n     * @param unitName - Name of the Unit. Also used to construct translation\n     * keys for each type of Unit.\n     */\n    constructor(private multiplier: number, private unitName: string) {\n        this._multiplier = multiplier;\n        this._unitName = unitName;\n    }\n\n    public getMultiplier(): number {\n        return this._multiplier;\n    }\n\n    public getUnitName(): string {\n        return this._unitName;\n    }\n\n    /**\n     * Returns the value in outputUnit for this unit\n     * @param value - Value of this unit\n     * @param outputUnit - Unit to which value is converted\n     */\n    public getOutputValue(value, outputUnit: Unit): number {\n        return this.getBaseValue(value) / outputUnit.multiplier;\n    }\n\n    /**\n     * Returns the value in base unit for this unit\n     * @param value - Value of this unit\n     */\n    public getBaseValue(value: number): number {\n        return value * this.multiplier;\n    }\n\n    /**\n     * Translation key to be used when displaying value with unit\n     *\n     * Ex: 25 MB, 100 %, 2 GHz\n     */\n    abstract getValueWithUnitTranslationKey(): string;\n\n    /**\n     * Translation key to be used when displaying unitName\n     *\n     * Ex: MB, B, GHz, MHz, %\n     */\n    abstract getUnitNameTranslationKey(): string;\n\n    /**\n     * Returns the best unit out of available units for given value of current unit\n     *\n     * Best unit is a Unit whose converted value is less than 1000\n     *\n     * @param value - Value of this unit\n     * @param availableUnits - List of available Units out of which best unit is calculated\n     */\n    abstract findBestUnit(value: number, availableUnits: Unit[]): Unit;\n}\n\n/**\n * Finds the bestUnit by trying groups of the comparison number\n */\nabstract class NumberUnit extends Unit {\n    /**\n     * Calculates the best unit out of available units to display in UI cell for a given input Unit\n     * and value\n     *\n     * Best unit is a Unit whose converted value is less than the comparison number\n     *\n     * @param value - Value of input Unit\n     * @param availableUnits - Array of available Units to display in UI cell\n     * availableUnits array should be pre-sorted ascending by multiplier\n     *\n     */\n    findBestUnit(value: number, availableUnits: NumberUnit[] = this.getAllUnitTypes()): Unit {\n        if (value >= this.getUnitMultiplier()) {\n            const baseValue = this.getBaseValue(value);\n            let outputNumber = baseValue;\n            const unitTypes = availableUnits;\n            let i = 0;\n            while (outputNumber >= this.getUnitMultiplier() && i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UnitFormatter.html":{"url":"injectables/UnitFormatter.html","title":"injectable - UnitFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UnitFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/unit/unit-formatter.ts\n        \n\n            \n                Description\n            \n            \n                UnitFormatter is used to format the value with unitName in localized string\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bestFormat\n                            \n                            \n                                format\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/unit/unit-formatter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bestFormat\n                        \n                        \n                    \n                \n            \n            \n                \nbestFormat(value: number, inputUnit: Unit, availableUnits: Unit[])\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit-formatter.ts:46\n                \n            \n\n\n            \n                \n                    Converts the value of inputUnit to best unit out of availableUnits and returns\nin localized string format ${value} ${outputUnit.unitName}\nEx: bestFormat(1000000, Unit.KB, [Unit.KB, Unit.MB, Unit.GB]) = \"1 GB\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        = value of inputUnit\n\n                                    \n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit of value\n\n\n                                    \n                                \n                                \n                                    availableUnits\n                                    \n                                                Unit[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlist of units from which best unit is calculated\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat(value: number, inputUnit: Unit, outputUnit: Unit, precision?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/unit/unit-formatter.ts:29\n                \n            \n\n\n            \n                \n                    Converts the value of inputUnit to outPutUnit returns in\nlocalized string format ${value} ${outputUnit.unitName}\nEx: format(1000, Unit.MB, Unit.GB, 2) = \"1 GB\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nvalue of inputUnit\n\n\n                                    \n                                \n                                \n                                    inputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit of value\n\n\n                                    \n                                \n                                \n                                    outputUnit\n                                    \n                                                Unit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nunit to which value is converted\n\n\n                                    \n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nhow many digits are shown after decimal\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslationService } from '@vcd/i18n';\nimport { CommonUtil } from '../common-util';\nimport { Unit } from './unit';\n\n/**\n * UnitFormatter is used to format the value with unitName in localized string\n */\n@Injectable()\nexport class UnitFormatter {\n    constructor(private translationService: TranslationService) {}\n\n    /**\n     * Converts the value of inputUnit to outPutUnit returns in\n     * localized string format `${value} ${outputUnit.unitName}`\n     *\n     * Ex: format(1000, Unit.MB, Unit.GB, 2) = \"1 GB\"\n     *\n     * @param value - value of inputUnit\n     * @param inputUnit - unit of value\n     * @param outputUnit - unit to which value is converted\n     * @param precision - how many digits are shown after decimal\n     */\n    format(value: number, inputUnit: Unit, outputUnit: Unit, precision?: number): string {\n        // TODO response from getOutputValue() needs to be formatted to localized number\n        return this.translationService.translate(outputUnit.getValueWithUnitTranslationKey(), [\n            CommonUtil.roundTo(inputUnit.getOutputValue(value, outputUnit), precision),\n        ]);\n    }\n\n    /**\n     * Converts the value of inputUnit to best unit out of availableUnits and returns\n     * in localized string format `${value} ${outputUnit.unitName}`\n     *\n     * Ex: bestFormat(1000000, Unit.KB, [Unit.KB, Unit.MB, Unit.GB]) = \"1 GB\"\n     *\n     * @param value = value of inputUnit\n     * @param inputUnit - unit of value\n     * @param availableUnits - list of units from which best unit is calculated\n     */\n    bestFormat(value: number, inputUnit: Unit, availableUnits: Unit[]): string {\n        return this.format(value, inputUnit, inputUnit.findBestUnit(value, availableUnits));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdActionMenuModule.html":{"url":"modules/VcdActionMenuModule.html","title":"module - VcdActionMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdActionMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdActionMenuModule\n\n\n\ncluster_VcdActionMenuModule_declarations\n\n\n\ncluster_VcdActionMenuModule_imports\n\n\n\ncluster_VcdActionMenuModule_exports\n\n\n\n\nActionMenuComponent\n\nActionMenuComponent\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdActionMenuModule -->\n\nActionMenuComponent->VcdActionMenuModule\n\n\n\n\n\nActionMenuComponent \n\nActionMenuComponent \n\nActionMenuComponent  -->\n\nVcdActionMenuModule->ActionMenuComponent \n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nVcdActionMenuModule -->\n\nDropdownModule->VcdActionMenuModule\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nVcdActionMenuModule -->\n\nShowClippedTextDirectiveModule->VcdActionMenuModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/action-menu/action-menu.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionMenuComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DropdownModule\n                        \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { DropdownModule } from '../dropdown/dropdown.module';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { ActionMenuComponent } from './action-menu.component';\n\n@NgModule({\n    imports: [ClarityModule, CommonModule, I18nModule, DropdownModule, ShowClippedTextDirectiveModule],\n    declarations: [ActionMenuComponent],\n    providers: [],\n    exports: [ActionMenuComponent],\n})\nexport class VcdActionMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdActivityReporterModule.html":{"url":"modules/VcdActivityReporterModule.html","title":"module - VcdActivityReporterModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdActivityReporterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdActivityReporterModule\n\n\n\ncluster_VcdActivityReporterModule_declarations\n\n\n\ncluster_VcdActivityReporterModule_imports\n\n\n\ncluster_VcdActivityReporterModule_exports\n\n\n\n\nBannerActivityReporterComponent\n\nBannerActivityReporterComponent\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule -->\n\nBannerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nSpinnerActivityReporterComponent\n\nSpinnerActivityReporterComponent\n\nVcdActivityReporterModule -->\n\nSpinnerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent  -->\n\nVcdActivityReporterModule->BannerActivityReporterComponent \n\n\n\n\n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent  -->\n\nVcdActivityReporterModule->SpinnerActivityReporterComponent \n\n\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdActivityReporterModule -->\n\nVcdErrorBannerModule->VcdActivityReporterModule\n\n\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdActivityReporterModule -->\n\nVcdLoadingIndicatorModule->VcdActivityReporterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/activity-reporter/activity-reporter.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VcdErrorBannerModule\n                        \n                        \n                            VcdLoadingIndicatorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BannerActivityReporterComponent\n                        \n                        \n                            SpinnerActivityReporterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdErrorBannerModule } from '../error/error-banner.module';\nimport { VcdLoadingIndicatorModule } from '../loading/loading-indicator.module';\nimport { BannerActivityReporterComponent } from './banner-activity-reporter.component';\nimport { SpinnerActivityReporterComponent } from './spinner-activity-reporter.component';\n\n@NgModule({\n    declarations: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n    imports: [CommonModule, ClarityModule, I18nModule, VcdErrorBannerModule, VcdLoadingIndicatorModule],\n    exports: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n    entryComponents: [BannerActivityReporterComponent, SpinnerActivityReporterComponent],\n})\nexport class VcdActivityReporterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdComponentsModule.html":{"url":"modules/VcdComponentsModule.html","title":"module - VcdComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdComponentsModule\n\n\n\ncluster_VcdComponentsModule_exports\n\n\n\n\nDropdownModule \n\nDropdownModule \n\n\n\nQuickSearchModule \n\nQuickSearchModule \n\n\n\nShowClippedTextDirectiveModule \n\nShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule \n\nVcdActionMenuModule \n\n\n\nVcdActivityReporterModule \n\nVcdActivityReporterModule \n\n\n\nVcdDataExporterModule \n\nVcdDataExporterModule \n\n\n\nVcdDatagridModule \n\nVcdDatagridModule \n\n\n\nVcdErrorBannerModule \n\nVcdErrorBannerModule \n\n\n\nVcdFormModule \n\nVcdFormModule \n\n\n\nVcdLoadingIndicatorModule \n\nVcdLoadingIndicatorModule \n\n\n\nVcdComponentsModule\n\nVcdComponentsModule\n\nDropdownModule  -->\n\nVcdComponentsModule->DropdownModule \n\n\n\nQuickSearchModule  -->\n\nVcdComponentsModule->QuickSearchModule \n\n\n\nShowClippedTextDirectiveModule  -->\n\nVcdComponentsModule->ShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule  -->\n\nVcdComponentsModule->VcdActionMenuModule \n\n\n\nVcdActivityReporterModule  -->\n\nVcdComponentsModule->VcdActivityReporterModule \n\n\n\nVcdDataExporterModule  -->\n\nVcdComponentsModule->VcdDataExporterModule \n\n\n\nVcdDatagridModule  -->\n\nVcdComponentsModule->VcdDatagridModule \n\n\n\nVcdErrorBannerModule  -->\n\nVcdComponentsModule->VcdErrorBannerModule \n\n\n\nVcdFormModule  -->\n\nVcdComponentsModule->VcdFormModule \n\n\n\nVcdLoadingIndicatorModule  -->\n\nVcdComponentsModule->VcdLoadingIndicatorModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            DropdownModule\n                        \n                        \n                            QuickSearchModule\n                        \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                        \n                            VcdActionMenuModule\n                        \n                        \n                            VcdActivityReporterModule\n                        \n                        \n                            VcdDataExporterModule\n                        \n                        \n                            VcdDatagridModule\n                        \n                        \n                            VcdErrorBannerModule\n                        \n                        \n                            VcdFormModule\n                        \n                        \n                            VcdLoadingIndicatorModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { VcdActionMenuModule } from './action-menu/index';\nimport { VcdActivityReporterModule } from './common/activity-reporter/activity-reporter.module';\nimport { VcdErrorBannerModule } from './common/error/error-banner.module';\nimport { VcdLoadingIndicatorModule } from './common/loading/loading-indicator.module';\nimport { VcdDataExporterModule } from './data-exporter/data-exporter.module';\nimport { VcdDatagridModule } from './datagrid/datagrid.module';\nimport { DropdownModule } from './dropdown/dropdown.module';\nimport { VcdFormModule } from './form/form.module';\nimport { ShowClippedTextDirectiveModule } from './lib/directives/show-clipped-text.directive.module';\nimport { QuickSearchModule } from './quick-search/quick-search.module';\n\n@NgModule({\n    exports: [\n        VcdDataExporterModule,\n        VcdDatagridModule,\n        ShowClippedTextDirectiveModule,\n        VcdErrorBannerModule,\n        VcdLoadingIndicatorModule,\n        VcdActivityReporterModule,\n        VcdFormModule,\n        QuickSearchModule,\n        VcdActionMenuModule,\n        DropdownModule,\n    ],\n})\nexport class VcdComponentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdDataExporterModule.html":{"url":"modules/VcdDataExporterModule.html","title":"module - VcdDataExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdDataExporterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdDataExporterModule\n\n\n\ncluster_VcdDataExporterModule_declarations\n\n\n\ncluster_VcdDataExporterModule_exports\n\n\n\n\nDataExporterComponent\n\nDataExporterComponent\n\n\n\nVcdDataExporterModule\n\nVcdDataExporterModule\n\nVcdDataExporterModule -->\n\nDataExporterComponent->VcdDataExporterModule\n\n\n\n\n\nDataExporterComponent \n\nDataExporterComponent \n\nDataExporterComponent  -->\n\nVcdDataExporterModule->DataExporterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/data-exporter/data-exporter.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataExporterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataExporterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { DataExporterComponent } from './data-exporter.component';\n\n@NgModule({\n    declarations: [DataExporterComponent],\n    imports: [CommonModule, ReactiveFormsModule, ClarityModule, I18nModule],\n    exports: [DataExporterComponent],\n})\nexport class VcdDataExporterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdDatagridModule.html":{"url":"modules/VcdDatagridModule.html","title":"module - VcdDatagridModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdDatagridModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdDatagridModule\n\n\n\ncluster_VcdDatagridModule_declarations\n\n\n\ncluster_VcdDatagridModule_imports\n\n\n\ncluster_VcdDatagridModule_exports\n\n\n\n\nBoldTextRendererComponent\n\nBoldTextRendererComponent\n\n\n\nVcdDatagridModule\n\nVcdDatagridModule\n\nVcdDatagridModule -->\n\nBoldTextRendererComponent->VcdDatagridModule\n\n\n\n\n\nComponentRendererOutletDirective\n\nComponentRendererOutletDirective\n\nVcdDatagridModule -->\n\nComponentRendererOutletDirective->VcdDatagridModule\n\n\n\n\n\nDatagridComponent\n\nDatagridComponent\n\nVcdDatagridModule -->\n\nDatagridComponent->VcdDatagridModule\n\n\n\n\n\nDatagridMultiSelectFilterComponent\n\nDatagridMultiSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridMultiSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridNumericFilterComponent\n\nDatagridNumericFilterComponent\n\nVcdDatagridModule -->\n\nDatagridNumericFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridSelectFilterComponent\n\nDatagridSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridStringFilterComponent\n\nDatagridStringFilterComponent\n\nVcdDatagridModule -->\n\nDatagridStringFilterComponent->VcdDatagridModule\n\n\n\n\n\nFunctionRendererPipe\n\nFunctionRendererPipe\n\nVcdDatagridModule -->\n\nFunctionRendererPipe->VcdDatagridModule\n\n\n\n\n\nBoldTextRendererComponent \n\nBoldTextRendererComponent \n\nBoldTextRendererComponent  -->\n\nVcdDatagridModule->BoldTextRendererComponent \n\n\n\n\n\nDatagridComponent \n\nDatagridComponent \n\nDatagridComponent  -->\n\nVcdDatagridModule->DatagridComponent \n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nVcdDatagridModule -->\n\nShowClippedTextDirectiveModule->VcdDatagridModule\n\n\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdDatagridModule -->\n\nVcdActionMenuModule->VcdDatagridModule\n\n\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdDatagridModule -->\n\nVcdActivityReporterModule->VcdDatagridModule\n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdDatagridModule -->\n\nVcdFormModule->VcdDatagridModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/datagrid/datagrid.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoldTextRendererComponent\n                        \n                        \n                            ComponentRendererOutletDirective\n                        \n                        \n                            DatagridComponent\n                        \n                        \n                            DatagridMultiSelectFilterComponent\n                        \n                        \n                            DatagridNumericFilterComponent\n                        \n                        \n                            DatagridSelectFilterComponent\n                        \n                        \n                            DatagridStringFilterComponent\n                        \n                        \n                            FunctionRendererPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            filters\n                        \n                        \n                            renderers\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShowClippedTextDirectiveModule\n                        \n                        \n                            VcdActionMenuModule\n                        \n                        \n                            VcdActivityReporterModule\n                        \n                        \n                            VcdFormModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoldTextRendererComponent\n                        \n                        \n                            DatagridComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2019 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdActionMenuModule } from '../action-menu/action-menu.module';\nimport { VcdActivityReporterModule } from '../common/activity-reporter/activity-reporter.module';\nimport { PipesModule } from '../common/pipes/pipes.module';\nimport { VcdFormModule } from '../form/form.module';\nimport { ShowClippedTextDirectiveModule } from '../lib/directives/show-clipped-text.directive.module';\nimport { DatagridComponent } from './datagrid.component';\nimport { ComponentRendererOutletDirective } from './directives/component-renderer-outlet.directive';\nimport { DatagridMultiSelectFilterComponent } from './filters/datagrid-multiselect-filter.component';\nimport { DatagridNumericFilterComponent } from './filters/datagrid-numeric-filter.component';\nimport { DatagridSelectFilterComponent } from './filters/datagrid-select-filter.component';\nimport { DatagridStringFilterComponent } from './filters/datagrid-string-filter.component';\nimport { FunctionRendererPipe } from './pipes/function-renderer.pipe';\nimport { BoldTextRendererComponent } from './renderers/bold-text-renderer.component';\n\nconst directives = [ComponentRendererOutletDirective];\nconst pipes = [FunctionRendererPipe];\nconst renderers = [BoldTextRendererComponent];\nconst filters = [\n    DatagridNumericFilterComponent,\n    DatagridStringFilterComponent,\n    DatagridSelectFilterComponent,\n    DatagridMultiSelectFilterComponent,\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ClarityModule,\n        RouterModule,\n        PipesModule,\n        ReactiveFormsModule,\n        ShowClippedTextDirectiveModule,\n        FormsModule,\n        I18nModule,\n        VcdActivityReporterModule,\n        VcdFormModule,\n        VcdActionMenuModule,\n    ],\n    declarations: [DatagridComponent, ...directives, ...renderers, ...pipes, ...filters],\n    providers: [],\n    exports: [DatagridComponent, ...renderers],\n    entryComponents: [...renderers, ...filters],\n})\nexport class VcdDatagridModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VcdDatagridWidgetObject.html":{"url":"classes/VcdDatagridWidgetObject.html","title":"class - VcdDatagridWidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VcdDatagridWidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts\n        \n\n            \n                Description\n            \n            \n                Widget Object for our VCD DataGrid\n\n            \n\n            \n                Extends\n            \n            \n                        BaseWidgetObject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getHeader\n                            \n                            \n                                    Static\n                                tagName\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorDriver\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForAncestors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForCssSelectors\n                            \n                            \n                                    Protected\n                                    Optional\n                                locatorForText\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clrDatagrid\n                                \n                                \n                                    vcdDatagrid\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         this.locatorForCssSelectors('h3')\n\n                        \n                    \n                    \n                        \n                            Default value : this.locatorForCssSelectors('h3')\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:18\n                            \n                        \n\n                \n                    \n                        Gives the header above the grid.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `vcd-datagrid`\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorDriver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LocatorDriver\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForAncestors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.parents(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:45\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a parent with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForCssSelectors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.get(cssSelector, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:38\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector when called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            locatorForText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         (cssSelector: string, text: string): ElementLocator => {\n        return (options?: unknown) => this.locatorDriver.getByText(cssSelector, text, options).unwrap();\n    }\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseWidgetObject\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseWidgetObject:52\n\n                            \n                        \n\n                \n                    \n                        Returns an element locator that will find a child with the given cssSelector and text when called.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        clrDatagrid\n                    \n                \n\n                \n                    \n                        getclrDatagrid()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:23\n                                \n                            \n                    \n                        \n                                Gives the widget object for this clr-datagrid.\n\n\n                                \n                                    Returns :     ClrDatagridWidgetObject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        vcdDatagrid\n                    \n                \n\n                \n                    \n                        getvcdDatagrid()\n                    \n                \n                            \n                                \n                                    Defined in projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts:31\n                                \n                            \n                    \n                        \n                                Unwraps the vcd-datagrid\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { BaseWidgetObject } from '../widget-object/widget-object';\nimport { ClrDatagridWidgetObject } from './datagrid.wo';\n\n/**\n * Widget Object for our VCD DataGrid\n */\nexport class VcdDatagridWidgetObject extends BaseWidgetObject {\n    static tagName = `vcd-datagrid`;\n\n    /**\n     * Gives the header above the grid.\n     */\n    getHeader = this.locatorForCssSelectors('h3');\n\n    /**\n     * Gives the widget object for this `clr-datagrid`.\n     */\n    get clrDatagrid(): ClrDatagridWidgetObject {\n        // @ts-ignore\n        return this.locatorDriver.findWidget(ClrDatagridWidgetObject);\n    }\n\n    /**\n     * Unwraps the `vcd-datagrid`\n     */\n    get vcdDatagrid(): T {\n        return this.locatorDriver.unwrap();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdErrorBannerModule.html":{"url":"modules/VcdErrorBannerModule.html","title":"module - VcdErrorBannerModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdErrorBannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdErrorBannerModule\n\n\n\ncluster_VcdErrorBannerModule_declarations\n\n\n\ncluster_VcdErrorBannerModule_exports\n\n\n\n\nErrorBannerComponent\n\nErrorBannerComponent\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule -->\n\nErrorBannerComponent->VcdErrorBannerModule\n\n\n\n\n\nErrorBannerComponent \n\nErrorBannerComponent \n\nErrorBannerComponent  -->\n\nVcdErrorBannerModule->ErrorBannerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/error/error-banner.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorBannerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { ErrorBannerComponent } from './error-banner.component';\n\n@NgModule({\n    declarations: [ErrorBannerComponent],\n    imports: [CommonModule, ClarityModule, I18nModule],\n    exports: [ErrorBannerComponent],\n    entryComponents: [ErrorBannerComponent],\n})\nexport class VcdErrorBannerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdFormModule.html":{"url":"modules/VcdFormModule.html","title":"module - VcdFormModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdFormModule\n\n\n\ncluster_VcdFormModule_declarations\n\n\n\ncluster_VcdFormModule_exports\n\n\n\ncluster_VcdFormModule_providers\n\n\n\n\nFormCheckboxComponent\n\nFormCheckboxComponent\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdFormModule -->\n\nFormCheckboxComponent->VcdFormModule\n\n\n\n\n\nFormInputComponent\n\nFormInputComponent\n\nVcdFormModule -->\n\nFormInputComponent->VcdFormModule\n\n\n\n\n\nFormSelectComponent\n\nFormSelectComponent\n\nVcdFormModule -->\n\nFormSelectComponent->VcdFormModule\n\n\n\n\n\nNumberWithUnitFormInputComponent\n\nNumberWithUnitFormInputComponent\n\nVcdFormModule -->\n\nNumberWithUnitFormInputComponent->VcdFormModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nVcdFormModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nVcdFormModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nVcdFormModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nVcdFormModule->NumberWithUnitFormInputComponent \n\n\n\n\n\nUnitFormatter\n\nUnitFormatter\n\nVcdFormModule -->\n\nUnitFormatter->VcdFormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UnitFormatter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormCheckboxComponent\n                        \n                        \n                            FormInputComponent\n                        \n                        \n                            FormSelectComponent\n                        \n                        \n                            NumberWithUnitFormInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { UnitFormatter } from '../utils/unit/unit-formatter';\nimport { FormCheckboxComponent } from './form-checkbox/form-checkbox.component';\nimport { FormInputComponent } from './form-input/form-input.component';\nimport { FormSelectComponent } from './form-select/form-select.component';\nimport { NumberWithUnitFormInputComponent } from './number-with-unit-input/number-with-unit-form-input.component';\n\nconst declarations = [FormInputComponent, FormSelectComponent, FormCheckboxComponent, NumberWithUnitFormInputComponent];\n\n@NgModule({\n    imports: [ClarityModule, FormsModule, ReactiveFormsModule, CommonModule, I18nModule],\n    declarations,\n    providers: [UnitFormatter],\n    exports: [...declarations],\n})\nexport class VcdFormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VcdFormlyFieldConfig.html":{"url":"interfaces/VcdFormlyFieldConfig.html","title":"interface - VcdFormlyFieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VcdFormlyFieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration of FormlyForm.fields that is specific to Vcd.\n\n            \n\n            \n                Extends\n            \n            \n                    FormlyFieldConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fieldGroup\n                                \n                                \n                                            Optional\n                                        templateOptions\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fieldGroup\n                                    \n                                \n                                \n                                    \n                                        fieldGroup:         VcdFormlyFieldConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyFieldConfig[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    FormlyForm.fields\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateOptions\n                                    \n                                \n                                \n                                    \n                                        templateOptions:         VcdFormlyTemplateOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyTemplateOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    VcdFormlyTemplateOptions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         VcdFormlyInputTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VcdFormlyInputTypes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    VcdFormlyInputTypes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ConfigOption, FormlyFieldConfig, FormlyTemplateOptions } from '@ngx-formly/core';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { Unit } from '../../utils/unit/unit';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\n\n/**\n * Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n */\nexport interface VcdFormlyTemplateOptions extends FormlyTemplateOptions {\n    options?: SelectOption[] | Observable;\n    inputValueUnit?: Unit;\n    unlimitedValue?: number;\n    showUnlimitedOption?: boolean;\n    unitOptions?: Unit[];\n    isReadOnly?: boolean;\n    hint?: string;\n    hintPosition?: string;\n    errorLabels?: string[];\n    onEnterClicked?: (field: FormlyFieldConfig) => any;\n    onEscapeClicked?: (field: FormlyFieldConfig) => any;\n}\n\n/**\n * Configuration of {@link FormlyForm.fields} that is specific to Vcd.\n */\nexport interface VcdFormlyFieldConfig extends FormlyFieldConfig {\n    /**\n     * {@link VcdFormlyInputTypes}\n     */\n    type?: VcdFormlyInputTypes;\n    /**\n     * {@link VcdFormlyTemplateOptions}\n     */\n    templateOptions?: VcdFormlyTemplateOptions;\n    /**\n     * {@link FormlyForm.fields}\n     */\n    fieldGroup?: VcdFormlyFieldConfig[];\n}\n\n/**\n * Different of Vcd form inputs that are configurable through Formly\n */\nexport enum VcdFormlyInputTypes {\n    /**\n     * Used for identifying {@link FormlyInputComponent} type\n     */\n    input = 'input',\n    /**\n     * Used for identifying {@link FormlySelectComponent} type\n     */\n    select = 'select',\n    /**\n     * Used for identifying {@link FormlyNumberWithUnitInputComponent} type\n     */\n    number_with_unit_input = 'number_with_unit_input',\n}\n\nexport const VCD_FORMLY_CONFIG: ConfigOption = {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdFormlyModule.html":{"url":"modules/VcdFormlyModule.html","title":"module - VcdFormlyModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdFormlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdFormlyModule\n\n\n\ncluster_VcdFormlyModule_declarations\n\n\n\ncluster_VcdFormlyModule_imports\n\n\n\n\nFormlyInputComponent\n\nFormlyInputComponent\n\n\n\nVcdFormlyModule\n\nVcdFormlyModule\n\nVcdFormlyModule -->\n\nFormlyInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlyNumberWithUnitInputComponent\n\nFormlyNumberWithUnitInputComponent\n\nVcdFormlyModule -->\n\nFormlyNumberWithUnitInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlySelectComponent\n\nFormlySelectComponent\n\nVcdFormlyModule -->\n\nFormlySelectComponent->VcdFormlyModule\n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nVcdFormlyModule -->\n\nVcdFormModule->VcdFormlyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormlyInputComponent\n                        \n                        \n                            FormlyNumberWithUnitInputComponent\n                        \n                        \n                            FormlySelectComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            VcdFormModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configOption: ConfigOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/formly/vcd/vcd-formly.module.ts:37\n                \n            \n\n\n            \n                \n                    Used for passing configuration in addition to default VCD_FORMLY_CONFIG\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    configOption\n                                    \n                                            ConfigOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Additional Formly configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ConfigOption, FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { I18nModule } from '@vcd/i18n';\nimport { VcdFormModule } from '../../form/form.module';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\nimport { VCD_FORMLY_CONFIG } from './vcd-formly.config';\n\nconst VCD_FORMLY_INPUT_COMPONENTS = [FormlyInputComponent, FormlySelectComponent, FormlyNumberWithUnitInputComponent];\n\n@NgModule({\n    declarations: [...VCD_FORMLY_INPUT_COMPONENTS],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormlyModule.forChild(VCD_FORMLY_CONFIG),\n        VcdFormModule,\n        FormlySelectModule,\n        I18nModule,\n    ],\n    exports: [],\n})\nexport class VcdFormlyModule {\n    /**\n     * Used for passing configuration in addition to default {@link VCD_FORMLY_CONFIG}\n     * @param configOption Additional Formly configuration\n     */\n    static forRoot(configOption: ConfigOption): ModuleWithProviders {\n        return {\n            ngModule: VcdFormlyModule,\n            providers: [{ provide: FORMLY_CONFIG, useValue: configOption, multi: true }],\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VcdFormlyTemplateOptions.html":{"url":"interfaces/VcdFormlyTemplateOptions.html","title":"interface - VcdFormlyTemplateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  VcdFormlyTemplateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/formly/vcd/vcd-formly.config.ts\n        \n\n            \n                Description\n            \n            \n                Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n\n            \n\n            \n                Extends\n            \n            \n                    FormlyTemplateOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        errorLabels\n                                \n                                \n                                            Optional\n                                        hint\n                                \n                                \n                                            Optional\n                                        hintPosition\n                                \n                                \n                                            Optional\n                                        inputValueUnit\n                                \n                                \n                                            Optional\n                                        isReadOnly\n                                \n                                \n                                            Optional\n                                        onEnterClicked\n                                \n                                \n                                            Optional\n                                        onEscapeClicked\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                            Optional\n                                        showUnlimitedOption\n                                \n                                \n                                            Optional\n                                        unitOptions\n                                \n                                \n                                            Optional\n                                        unlimitedValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorLabels\n                                    \n                                \n                                \n                                    \n                                        errorLabels:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hint\n                                    \n                                \n                                \n                                    \n                                        hint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hintPosition\n                                    \n                                \n                                \n                                    \n                                        hintPosition:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputValueUnit\n                                    \n                                \n                                \n                                    \n                                        inputValueUnit:         Unit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isReadOnly\n                                    \n                                \n                                \n                                    \n                                        isReadOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEnterClicked\n                                    \n                                \n                                \n                                    \n                                        onEnterClicked:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEscapeClicked\n                                    \n                                \n                                \n                                    \n                                        onEscapeClicked:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         SelectOption[] | Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOption[] | Observable\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showUnlimitedOption\n                                    \n                                \n                                \n                                    \n                                        showUnlimitedOption:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitOptions\n                                    \n                                \n                                \n                                    \n                                        unitOptions:         Unit[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Unit[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlimitedValue\n                                    \n                                \n                                \n                                    \n                                        unlimitedValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConfigOption, FormlyFieldConfig, FormlyTemplateOptions } from '@ngx-formly/core';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../../common/interfaces/select-option';\nimport { Unit } from '../../utils/unit/unit';\nimport { FormlyInputComponent } from './inputs/input/formly-input.component';\nimport { FormlyNumberWithUnitInputComponent } from './inputs/number-with-unit-input/formly-number-with-unit-input.component';\nimport { FormlySelectComponent } from './inputs/select/formly-select.component';\n\n/**\n * Options that are specific to Vcd form components. These are passed as inputs or outputs in the HTML templates.\n */\nexport interface VcdFormlyTemplateOptions extends FormlyTemplateOptions {\n    options?: SelectOption[] | Observable;\n    inputValueUnit?: Unit;\n    unlimitedValue?: number;\n    showUnlimitedOption?: boolean;\n    unitOptions?: Unit[];\n    isReadOnly?: boolean;\n    hint?: string;\n    hintPosition?: string;\n    errorLabels?: string[];\n    onEnterClicked?: (field: FormlyFieldConfig) => any;\n    onEscapeClicked?: (field: FormlyFieldConfig) => any;\n}\n\n/**\n * Configuration of {@link FormlyForm.fields} that is specific to Vcd.\n */\nexport interface VcdFormlyFieldConfig extends FormlyFieldConfig {\n    /**\n     * {@link VcdFormlyInputTypes}\n     */\n    type?: VcdFormlyInputTypes;\n    /**\n     * {@link VcdFormlyTemplateOptions}\n     */\n    templateOptions?: VcdFormlyTemplateOptions;\n    /**\n     * {@link FormlyForm.fields}\n     */\n    fieldGroup?: VcdFormlyFieldConfig[];\n}\n\n/**\n * Different of Vcd form inputs that are configurable through Formly\n */\nexport enum VcdFormlyInputTypes {\n    /**\n     * Used for identifying {@link FormlyInputComponent} type\n     */\n    input = 'input',\n    /**\n     * Used for identifying {@link FormlySelectComponent} type\n     */\n    select = 'select',\n    /**\n     * Used for identifying {@link FormlyNumberWithUnitInputComponent} type\n     */\n    number_with_unit_input = 'number_with_unit_input',\n}\n\nexport const VCD_FORMLY_CONFIG: ConfigOption = {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcdLoadingIndicatorModule.html":{"url":"modules/VcdLoadingIndicatorModule.html","title":"module - VcdLoadingIndicatorModule","body":"\n                   \n\n\n\n\n    Modules\n    VcdLoadingIndicatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcdLoadingIndicatorModule\n\n\n\ncluster_VcdLoadingIndicatorModule_declarations\n\n\n\ncluster_VcdLoadingIndicatorModule_exports\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule -->\n\nLoadingIndicatorComponent->VcdLoadingIndicatorModule\n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nVcdLoadingIndicatorModule->LoadingIndicatorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/components/src/common/loading/loading-indicator.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoadingIndicatorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*!\n * Copyright 2020 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityModule } from '@clr/angular';\nimport { I18nModule } from '@vcd/i18n';\nimport { LoadingIndicatorComponent } from './loading-indicator.component';\n\n@NgModule({\n    declarations: [LoadingIndicatorComponent],\n    imports: [CommonModule, ClarityModule, I18nModule],\n    exports: [LoadingIndicatorComponent],\n    entryComponents: [LoadingIndicatorComponent],\n})\nexport class VcdLoadingIndicatorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WidgetFinder.html":{"url":"classes/WidgetFinder.html","title":"class - WidgetFinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WidgetFinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fixture\n                            \n                            \n                                    Public\n                                hostComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detectChanges\n                            \n                            \n                                    Public\n                                find\n                            \n                            \n                                    Public\n                                findWidgets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentConstructor: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object.ts:192\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        componentConstructor\n                                                  \n                                                        \n                                                                    Type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The host component to be created as the root of the tests's fixture\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fixture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFixture\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:187\n                            \n                        \n\n                \n                    \n                        We don't care or could possibly know the type of fixture\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hostComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     H\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:192\n                            \n                        \n\n                \n                    \n                        If you need direct access to manipulate the host\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(params: FindParams | T)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:231\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                        T\n                    \n                \n            \n\n            \n                \n                    Finds a single widget object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindParams | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     InstanceType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findWidgets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findWidgets(params: FindParams | T, parent?: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:206\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                        T\n                    \n                \n            \n\n            \n                \n                    Finds widgets within a fixture\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FindParams | T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     InstanceType[]\n\n                    \n                    \n                        A Potentially empty list of widgets matching the given specs\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WidgetObject.html":{"url":"classes/WidgetObject.html","title":"class - WidgetObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WidgetObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/components/src/utils/test/widget-object.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\nThe main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\nqueries the internals of a component from a test.\nSubclass Rules\n\nMethods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\ncallers to query it from the outside creating potential duplicate querying code and abstraction leaks.\nSubclasses also should not have testing assertions. They should only provide the state and the calling test can\nassert code on its own.\n\n\n\nT is the type of the JS/TS object being wrapped\nIt is recommended that files for implementations be named with a .wo.ts extension\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                click\n                            \n                            \n                                detectChanges\n                            \n                            \n                                    Protected\n                                findElement\n                            \n                            \n                                    Protected\n                                findElements\n                            \n                            \n                                    Protected\n                                getNodeText\n                            \n                            \n                                    Protected\n                                getText\n                            \n                            \n                                    Protected\n                                getTexts\n                            \n                            \n                                    Protected\n                                sendKeyboardEvent\n                            \n                            \n                                    Protected\n                                setInputValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fixture: ComponentFixture, root: DebugElement, component: T)\n                    \n                \n                        \n                            \n                                Defined in projects/components/src/utils/test/widget-object.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\nneed to find a widget within the tree, you should use find.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fixture\n                                                  \n                                                        \n                                                                    ComponentFixture\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The test fixture, so we can call {\n\n                                                        \n                                                \n                                                \n                                                        root\n                                                  \n                                                        \n                                                                        DebugElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The root element (host) for the component instance. We typically prefer to interact with the\ncomponent but there are times when we must check the DOM.\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The component instance being managed. Whenever possible, we should access the component's API.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            component\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Default value : fixture.componentInstance\n                        \n                    \n                        \n                            \n                                    Defined in projects/components/src/utils/test/widget-object.ts:42\n                            \n                        \n\n                \n                    \n                        The component instance being managed. Whenever possible, we should access the component's API.\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    click(cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:73\n                \n            \n\n\n            \n                \n                    Clicks an element and detects changes so the DOM is immediately updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to click a specific element. If not passed in, the entire node will\nreceive the click event\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectChanges\n                        \n                        \n                    \n                \n            \n            \n                \ndetectChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElement(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:54\n                \n            \n\n\n            \n                \n                    Finds first element within this widget matching the given selector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        What to search for\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DebugElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            findElements\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findElements(selector: string | Type, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:62\n                \n            \n\n\n            \n                \n                    Same as findElement but returns all elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                            string | Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DebugElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNodeText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeText(el: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(cssSelector: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:128\n                \n            \n\n\n            \n                \n                    Returns text content of this widget\nIf the element cannot be found, gives empty string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want to retrieve text for a specific element within this widget.\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        Where to start the search; defaults to the root of this component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getTexts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTexts(cssSelector: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:136\n                \n            \n\n\n            \n                \n                    Same as getText but return the text for all matching nodes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            sendKeyboardEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendKeyboardEvent(eventType, eventProperties: literal type, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:90\n                \n            \n\n\n            \n                \n                    Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\nfound by the {@param cssSelector} within the provided {@param parent} or the current root element.\nSetting the event properties is done with Object.defineProperty on the created event. This allows setting\nproperties like which that is deprecated and cannot be set with the native approach of creating keyboard event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    eventType\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The keyboard event type like 'keyup', 'keydown', 'keypress'\n\n                                    \n                                \n                                \n                                    eventProperties\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        properties of the event like code, key etc.\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setInputValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setInputValue(value: string | number, cssSelector?: string, parent: DebugElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/components/src/utils/test/widget-object.ts:114\n                \n            \n\n\n            \n                \n                    Sets the value of an input element or textarea element\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        the value that the element should display\n\n                                    \n                                \n                                \n                                    cssSelector\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pass this in if you want trigger the event on a specific element.\nIf not passed in, the event will be triggered on the entire node\n\n                                    \n                                \n                                \n                                    parent\n                                    \n                                                DebugElement\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.root\n                                    \n\n                                    \n                                        the parent element for which to search for the {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\n/**\n * An implementation of the page object pattern, but applied to widgets, since they can be reused on multiple pages.\n *\n * The main purpose for the wrapper are providing access to the internals of a widget avoiding duplication of code that\n * queries the internals of a component from a test.\n *\n * ## Subclass Rules\n *\n * - Methods exposed by subclasses should not expose HTMLElements or DebugElements directly. That would encourage\n * callers to query it from the outside creating potential duplicate querying code and abstraction leaks.\n *  - Subclasses also should not have testing assertions. They should only provide the state and the calling test can\n * assert code on its own.\n *\n * `T` is the type of the JS/TS object being wrapped\n *\n * It is recommended that files for implementations be named with a `.wo.ts` extension\n */\nexport abstract class WidgetObject {\n    /**\n     *\n     * Constructor should only be called directly if you are directly instantiating the widget being wrapped (T). If you\n     * need to find a widget within the tree, you should use {@link find}.\n     *\n     * @param component The component instance being managed. Whenever possible, we should access the component's API.\n     * @param root The root element (host) for the component instance. We typically prefer to interact with the\n     * component but there are times when we must check the DOM.\n     * @param fixture The test fixture, so we can call {@link ComponentFixture#detectChanges} after something that\n     * requires re-rendering of the DOM.\n     */\n    constructor(\n        protected fixture: ComponentFixture,\n        protected root: DebugElement = fixture.debugElement,\n        public component: T = fixture.componentInstance\n    ) {}\n\n    detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n\n    /**\n     * Finds first element within this widget matching the given selector\n     * @param selector What to search for\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n    protected findElement(selector: string | Type, parent: DebugElement = this.root): DebugElement {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.query(query);\n    }\n\n    /**\n     * Same as {@link findElement} but returns all elements\n     */\n    protected findElements(selector: string | Type, parent: DebugElement = this.root): DebugElement[] {\n        const query = typeof selector === 'string' ? By.css(selector) : By.directive(selector);\n        return parent.queryAll(query);\n    }\n\n    /**\n     * Clicks an element and detects changes so the DOM is immediately updated\n     * @param cssSelector Pass this in if you want to click a specific element. If not passed in, the entire node will\n     * receive the click event\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected click(cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.click();\n        this.detectChanges();\n    }\n\n    /**\n     * Send a keyboard event of type {@param eventType} with properties {@param eventProperties} on an element\n     * found by the {@param cssSelector} within the provided {@param parent} or the current root element.\n     * Setting the event properties is done with `Object.defineProperty` on the created event. This allows setting\n     * properties like `which` that is deprecated and cannot be set with the native approach of creating keyboard event.\n     * @param eventType The keyboard event type like 'keyup', 'keydown', 'keypress'\n     * @param eventProperties properties of the event like `code`, `key` etc.\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected sendKeyboardEvent(\n        eventType,\n        eventProperties: { [name: string]: unknown },\n        cssSelector?: string,\n        parent: DebugElement = this.root\n    ): void {\n        const nativeElement: HTMLBaseElement = parent.query(By.css(cssSelector)).nativeElement;\n        // Create keyboard event that bubbles up the chain\n        const event = new KeyboardEvent(eventType, { bubbles: true });\n        // Use `Object.defineProperty` in order to be able to set even deprecated, readonly properties like `which`\n        Object.keys(eventProperties).forEach((key) => {\n            Object.defineProperty(event, key, { value: eventProperties[key] });\n        });\n        nativeElement.dispatchEvent(event);\n        this.detectChanges();\n    }\n\n    /**\n     * Sets the value of an input element or textarea element\n     * @param value the value that the element should display\n     * @param cssSelector Pass this in if you want trigger the event on a specific element.\n     *        If not passed in, the event will be triggered on the entire node\n     * @param parent the parent element for which to search for the {@param cssSelector} within. Defaults to root if not provided.\n     */\n    protected setInputValue(value: string | number, cssSelector?: string, parent: DebugElement = this.root): void {\n        const nativeElement: HTMLInputElement | HTMLTextAreaElement = parent.query(By.css(cssSelector)).nativeElement;\n        nativeElement.value = String(value);\n        nativeElement.dispatchEvent(new Event('input'));\n        this.detectChanges();\n    }\n\n    /**\n     * Returns text content of this widget\n     * If the element cannot be found, gives empty string.\n     * @param cssSelector Pass this in if you want to retrieve text for a specific element within this widget.\n     * @param parent Where to start the search; defaults to the root of this component\n     */\n\n    protected getText(cssSelector: string, parent: DebugElement = this.root): string {\n        const element = this.findElement(cssSelector, parent);\n        return element ? this.getNodeText(element) : '';\n    }\n\n    /**\n     * Same as {@link getText} but return the text for all matching nodes\n     */\n    protected getTexts(cssSelector: string): string[] {\n        return this.findElements(cssSelector).map((el) => this.getNodeText(el));\n    }\n\n    protected getNodeText(el: DebugElement): string {\n        // The || '' is because textContent could technically be null when passed in the document\n        // element object. We know that cannot be pased in here, so we ignore it for coverage\n        // but we still need the line there to make strictNullChecks work\n        return el.nativeElement.textContent.trim() || /* istanbul ignore next */ '';\n    }\n}\n\n/**\n * Subclasses should implement the FindableWidget interface so they can be found with {@link WidgetFinder}\n *\n * ## Note\n * This is done by creating a static property `tagName`on your subclass, not a regular instance, since this\n * interface represents a constructor for a {@link WidgetObject}, not an instance.\n */\nexport interface FindableWidget extends Type {\n    tagName: string;\n}\n\n/**\n * Arguments for {@link WidgetFinder#findWidgets} and {@link WidgetFinder#find}\n */\nexport interface FindParams {\n    /**\n     * The constructor of the widget to be found\n     */\n    woConstructor: T;\n    /**\n     * If provided, search starts from this container. It defaults to the fixture's root debugElement\n     */\n    ancestor?: DebugElement;\n    /**\n     * Optional CSS class name that can be used when there could be multiple instances of the object within the\n     * fixture tree\n     */\n    className?: string;\n}\n\n/**\n * @deprecated Finds instances that implement {@link FindableWidget}\n * H is the host component's type. This finder is only for old unit tests.\n * Please use AngularWidgetObjectFinder instead.\n */\nexport class WidgetFinder {\n    /**\n     * We don't care or could possibly know the type of fixture\n     */\n    private fixture: ComponentFixture;\n\n    /**\n     * If you need direct access to manipulate the host\n     */\n    public hostComponent: H;\n\n    /**\n     * @param componentConstructor The host component to be created as the root of the tests's fixture\n     */\n    constructor(componentConstructor: Type) {\n        this.fixture = TestBed.createComponent(componentConstructor);\n        this.hostComponent = this.fixture.componentInstance;\n    }\n\n    /**\n     * Finds widgets within a fixture\n     * @return A Potentially empty list of widgets matching the given specs\n     */\n    public findWidgets>(\n        params: FindParams | T,\n        parent?: DebugElement\n    ): InstanceType[] {\n        const defaults = { ancestor: this.fixture.debugElement, className: '' };\n        const { woConstructor, ancestor, className } = isFindParamsObject(params)\n            ? { ...defaults, ...params }\n            : { ...defaults, woConstructor: params };\n\n        let query = woConstructor.tagName;\n        if (className) {\n            query += `.${className}`;\n        }\n        const componentRoots = (parent ? parent : ancestor).queryAll(By.css(query));\n        const widgets = componentRoots.map(\n            // Typescript is not able to infer it correctly as the subclass but we know for sure\n            (root) => new woConstructor(this.fixture, root, root.componentInstance) as InstanceType\n        );\n        return widgets;\n    }\n\n    /**\n     * Finds a single widget object\n     * @throws An error if the widget is not found or if there are multiple instances\n     */\n    public find>(params: FindParams | T): InstanceType {\n        const widgets = this.findWidgets(params);\n        const tagName = isFindParamsObject(params) ? params.woConstructor.tagName : params.tagName;\n        if (widgets.length === 0) {\n            throw Error(`Did not find a `);\n        }\n        if (widgets.length > 1) {\n            throw Error(`Expected to find a single  but found ${widgets.length}`);\n        }\n        return widgets[0] as InstanceType;\n    }\n\n    public detectChanges(): void {\n        this.fixture.detectChanges();\n    }\n}\n\nexport function isFindParamsObject(params: FindParams | T): params is FindParams {\n    return !!(params as FindParams).woConstructor;\n}\n/**\n * Can be used in tests that use `this` to share a finder with before/AfterEach instead of leaky closures\n */\nexport interface HasFinder {\n    finder: WidgetFinder;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to vcd-ui-common\nThe vcd-ui-common project team welcomes contributions from the community. Before you start working with vcd-ui-common, please\nread our Developer Certificate of Origin. All contributions to this repository must be\nsigned as described on that page. Your signature certifies that you wrote the patch or have the right to pass it on\nas an open-source patch.\nContribution Flow\nThis is a rough outline of what a contributor's workflow looks like:\n\nCreate a topic branch from where you want to base your work\nMake commits of logical units\nMake sure your commit messages are in the proper format (see below)\nPush your changes to a topic branch in your fork of the repository\nSubmit a pull request\n\nContribution Requirements\n\nPublic/exported members must be documented using tsdoc\n\nEvery commit must contain unit tests, striving for full coverage. If full coverage cannot be achieved, the Pull\nRequest should explain why tests could not be written.\n\nDescriptive Pull Requests:\n\nInclude list of steps for manual testing\nExplain alternatives that were considered\nFor bug fixes, explain what was causing the issue, don't repeat the text from the issue\n\n\n\nMerge vs fast-forward\nPRs with single commits should use --fast-forward. Otherwise, pull requests should be merge commits.\nStaying In Sync With Upstream\nWhen your branch gets out of sync with the vmware/master branch, use the following to update:\ngit checkout my-new-feature\ngit fetch -a\ngit pull --rebase upstream master\ngit push --force-with-lease origin my-new-featureUpdating pull requests\nIf your PR fails to pass CI or needs changes based on code review, you'll most likely want to squash these changes into\nexisting commits.\nIf your pull request contains a single commit or your changes are related to the most recent commit, you can simply\namend the commit.\ngit add .\ngit commit --amend\ngit push --force-with-lease origin my-new-featureIf you need to squash changes into an earlier commit, you can use:\ngit add .\ngit commit --fixup \ngit rebase -i --autosquash master\ngit push --force-with-lease origin my-new-featureBe sure to add a comment to the PR indicating your new changes are ready to review, as GitHub does not generate a\nnotification when you git push.\nCode Style\nFormatting Commit Messages\nWe follow the conventions on How to Write a Git Commit Message.\nBe sure to include any related GitHub issue references in the commit message. See\nGFM syntax for referencing issues\nand commits.\nReporting Bugs and Creating Issues\nWhen opening a new issue, try to roughly follow the commit message format conventions above.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/components/src/action-menu/action-menu.component.ts\n            \n            component\n            ActionMenuComponent\n            \n                67 %\n                (33/49)\n            \n        \n        \n            \n                \n                projects/components/src/action-menu/action-menu.component.ts\n            \n            function\n            getDeepCopyOfActionItems\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/action-menu/action-menu.component.ts\n            \n            function\n            getDefaultActionDisplayConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/action-search-provider/action-search.provider.ts\n            \n            class\n            ActionSearchProvider\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                projects/components/src/action-search-provider/action-search.provider.ts\n            \n            variable\n            DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n            \n            class\n            ActivityPromiseResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n            \n            interface\n            ActivityResponse\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/activity-promise-resolver.ts\n            \n            interface\n            ObjectAndResponse\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/activity-reporter.ts\n            \n            class\n            ActivityReporter\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/banner-activity-reporter.component.ts\n            \n            component\n            BannerActivityReporterComponent\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                projects/components/src/common/activity-reporter/spinner-activity-reporter.component.ts\n            \n            component\n            SpinnerActivityReporterComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                projects/components/src/common/error/error-banner.component.ts\n            \n            component\n            ErrorBannerComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/components/src/common/error/error-banner.wo.ts\n            \n            class\n            ErrorBannerWidgetObject\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                projects/components/src/common/interfaces/action-item.interface.ts\n            \n            interface\n            ActionDisplayConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/common/interfaces/action-item.interface.ts\n            \n            interface\n            ActionItem\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                projects/components/src/common/interfaces/select-option.ts\n            \n            interface\n            SelectOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/common/loading/loading-indicator.component.ts\n            \n            component\n            LoadingIndicatorComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/nested-property.pipe.ts\n            \n            pipe\n            NestedPropertyPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/nested-property.pipe.ts\n            \n            function\n            isNullOrUndefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/nested-property.pipe.ts\n            \n            variable\n            DATE_OBJECT_CLASS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/nested-property.pipe.ts\n            \n            variable\n            OBJECT_PROPERTY_SEPARATOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/pipes/pipes.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/common/subscription/subscription-tracker.ts\n            \n            class\n            SubscriptionTracker\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                projects/components/src/common/subscription/subscription-tracker.ts\n            \n            interface\n            ISubscriptionTracker\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            injectable\n            CsvExporterService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            function\n            encodeValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            function\n            hasPotentialInjection\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            function\n            processRow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            function\n            sanitizeString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/csv-exporter.service.ts\n            \n            variable\n            LEADING_CONTROL_CHAR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/data-exporter.component.ts\n            \n            component\n            DataExporterComponent\n            \n                53 %\n                (23/43)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/data-exporter.component.ts\n            \n            interface\n            DataExportRequestEvent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/data-exporter.component.ts\n            \n            interface\n            ExportColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/data-exporter/data-exporter.wo.ts\n            \n            class\n            DataExporterWidgetObject\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            component\n            DatagridComponent\n            \n                66 %\n                (52/78)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            ColumnConfigInternal\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            DetailPane\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            DetailPaneConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            DetailRowConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            GridDataFetchResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            GridState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            PaginationCallback\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            PaginationConfiguration\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            PagionationInformation\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            interface\n            SortedColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            DEFAULT_PAGINATION_TRANSLATION_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            DEFAULT_SIZE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            DEFAULT_SIZE_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            MAX_HEADER_HEIGHT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.component.ts\n            \n            variable\n            ROW_HEIGHT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.module.ts\n            \n            variable\n            directives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.module.ts\n            \n            variable\n            filters\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.module.ts\n            \n            variable\n            pipes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/datagrid.module.ts\n            \n            variable\n            renderers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/directives/component-renderer-outlet.directive.ts\n            \n            directive\n            ComponentRendererOutletDirective\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            class\n            DatagridFilter\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            interface\n            FilterConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            interface\n            FilterRendererSpec\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            function\n            FilterComponentRendererSpec\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-filter.ts\n            \n            variable\n            DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            component\n            DatagridMultiSelectFilterComponent\n            \n                50 %\n                (12/24)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            interface\n            DatagridMultiSelectFilterConfig\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            interface\n            MultiSelectOption\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            interface\n            MultiSelectOptionInternal\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            function\n            DatagridMultiSelectFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n            \n            component\n            DatagridNumericFilterComponent\n            \n                36 %\n                (11/30)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n            \n            interface\n            DatagridNumericFilterConfig\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n            \n            function\n            DatagridNumericFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n            \n            component\n            DatagridSelectFilterComponent\n            \n                47 %\n                (11/23)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n            \n            interface\n            DatagridSelectFilterConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-select-filter.component.ts\n            \n            function\n            DatagridSelectFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n            \n            component\n            DatagridStringFilterComponent\n            \n                45 %\n                (10/22)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n            \n            interface\n            DatagridStringFilterConfig\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n            \n            function\n            DatagridStringFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n            \n            interface\n            ComponentRenderer\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n            \n            interface\n            ComponentRendererSpec\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n            \n            interface\n            ColumnRendererSpec\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n            \n            interface\n            FunctionRenderer\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n            \n            interface\n            GridColumn\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n            \n            function\n            ColumnComponentRendererSpec\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/mock-data.ts\n            \n            interface\n            MockRecord\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/mock-data.ts\n            \n            variable\n            mockData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/pipes/function-renderer.pipe.ts\n            \n            pipe\n            FunctionRendererPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n            \n            component\n            BoldTextRendererComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n            \n            interface\n            BoldTextRendererConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/renderers/bold-text-renderer.component.ts\n            \n            function\n            BoldTextRenderer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/datagrid/renderers/bold-text-renderer.wo.ts\n            \n            class\n            BoldTextRendererWidgetObject\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n            \n            directive\n            DropdownFocusHandlerDirective\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n            \n            interface\n            MenuItem\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n            \n            variable\n            NESTED_DROPDOWN_TRIGGER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown-focus-handler.service.ts\n            \n            injectable\n            DropdownFocusHandlerService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                69 %\n                (27/39)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            function\n            dropdownFocusHandlerServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            variable\n            DROPDOWN_FOCUS_HANDLER_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            variable\n            DROPDOWN_ITEM_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            variable\n            NESTED_DROPDOWN_TRIGGER_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dropdown.component.ts\n            \n            variable\n            NESTED_MENU_HIDE_DELAY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n            \n            directive\n            DynamicDropdownPositionDirective\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n            \n            variable\n            CONTENT_AREA_SELECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n            \n            variable\n            MENU_BUFFER_SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n            \n            variable\n            NO_SCROLLING_CLASSNAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/base-form-control.ts\n            \n            class\n            BaseFormControl\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/components/src/form/base-form-control.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-checkbox/form-checkbox.component.ts\n            \n            component\n            FormCheckboxComponent\n            \n                76 %\n                (16/21)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-input/form-input.component.ts\n            \n            component\n            FormInputComponent\n            \n                77 %\n                (24/31)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-input/form-input.component.ts\n            \n            function\n            getFormattedDateValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-input/form-input.component.ts\n            \n            function\n            pad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/form-select/form-select.component.ts\n            \n            component\n            FormSelectComponent\n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                projects/components/src/form/form.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/interfaces/can-be-read-only.interface.ts\n            \n            interface\n            CanBeReadOnly\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n            \n            component\n            NumberWithUnitFormInputComponent\n            \n                52 %\n                (29/55)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n            \n            class\n            NoUnit\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n            \n            injectable\n            NumberWithUnitsFormValidatorsFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n            \n            variable\n            UNLIMITED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/form/number-with-unit-input/number-with-unit-form-input.widget-object.ts\n            \n            class\n            NumberWithUnitFormInputWidgetObject\n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                projects/components/src/form/validators.ts\n            \n            class\n            FormValidators\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/inputs/input/formly-input.component.ts\n            \n            component\n            FormlyInputComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/inputs/number-with-unit-input/formly-number-with-unit-input.component.ts\n            \n            component\n            FormlyNumberWithUnitInputComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/inputs/select/formly-select.component.ts\n            \n            component\n            FormlySelectComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/vcd-formly.config.ts\n            \n            interface\n            VcdFormlyFieldConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/vcd-formly.config.ts\n            \n            interface\n            VcdFormlyTemplateOptions\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/vcd-formly.config.ts\n            \n            variable\n            VCD_FORMLY_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/formly/vcd/vcd-formly.module.ts\n            \n            variable\n            VCD_FORMLY_INPUT_COMPONENTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n            \n            component\n            ShowClippedTextDirectiveTestHostComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.test-helper.ts\n            \n            class\n            ShowClippedTextDirectiveTestHelper\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            directive\n            ShowClippedTextDirective\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            interface\n            CliptextConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            function\n            setStyle\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            function\n            unwatchEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            function\n            watchEvents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            variable\n            fireTipTransitionEndForTests\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/lib/directives/show-clipped-text.directive.ts\n            \n            variable\n            tip\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search-registrar.service.ts\n            \n            injectable\n            QuickSearchRegistrarService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search-result.ts\n            \n            interface\n            QuickSearchResultItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search-result.ts\n            \n            interface\n            QuickSearchResults\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.component.ts\n            \n            component\n            QuickSearchComponent\n            \n                37 %\n                (9/24)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.component.ts\n            \n            interface\n            PartialResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.component.ts\n            \n            interface\n            ResultActivatedEvent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.component.ts\n            \n            interface\n            SearchSection\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.provider.ts\n            \n            class\n            QuickSearchProviderDefaults\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.provider.ts\n            \n            interface\n            QuickSearchProvider\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.provider.ts\n            \n            variable\n            PROVIDER_SEARCH_DEBOUNCE_TIME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/quick-search/quick-search.service.ts\n            \n            injectable\n            QuickSearchService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/components/src/utils/common-util.ts\n            \n            class\n            CommonUtil\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/components/src/utils/dom-util.ts\n            \n            class\n            DomUtil\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/filter-builder.ts\n            \n            class\n            FilterBuilder\n            \n                70 %\n                (17/24)\n            \n        \n        \n            \n                \n                projects/components/src/utils/filter-builder.ts\n            \n            variable\n            Operators\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/id-generator/id-generator.ts\n            \n            class\n            IdGenerator\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/activity-reporter/banner-activity-reporter.wo.ts\n            \n            class\n            BannerActivityReporterWidgetObject\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/activity-reporter/spinner-activity-reporter.wo.ts\n            \n            class\n            SpinnerActivityReporterWidgetObject\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/datagrid.wo.ts\n            \n            class\n            ClrDatagridWidgetObject\n            \n                93 %\n                (30/32)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/datagrid.wo.ts\n            \n            variable\n            Css\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            component\n            FilterTestHostComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            function\n            configureTestingModule\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            function\n            createDatagridFilterTestHelper\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            function\n            createDatagridFilterTestHelperWithFinder\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/filter-utils.ts\n            \n            function\n            getFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/datagrid/vcd-datagrid.wo.ts\n            \n            class\n            VcdDatagridWidgetObject\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            class\n            WidgetFinder\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            class\n            WidgetObject\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            interface\n            FindableWidget\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            interface\n            FindParams\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            interface\n            HasFinder\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object.ts\n            \n            function\n            isFindParamsObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/angular-widget-finder.ts\n            \n            class\n            AngularWidgetObjectFinder\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/angular-widget-object.ts\n            \n            class\n            AngularLocatorDriver\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/angular-widget-object.ts\n            \n            class\n            TestElement\n            \n                86 %\n                (20/23)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n            \n            class\n            CypressWidgetObjectFinder\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n            \n            variable\n            cy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n            \n            variable\n            idGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n            \n            class\n            CypressLocatorDriver\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n            \n            variable\n            cy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/find-cypress-widget.ts\n            \n            function\n            findCypressWidget\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/widget-object.ts\n            \n            class\n            BaseWidgetObject\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/widget-object.ts\n            \n            interface\n            FindableWidget\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/components/src/utils/test/widget-object/widget-object.ts\n            \n            interface\n            LocatorDriver\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit-formatter.ts\n            \n            injectable\n            UnitFormatter\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            Bytes\n            \n                43 %\n                (24/55)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            Hertz\n            \n                43 %\n                (24/55)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            NumberUnit\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            Percent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            PowerTwoUnit\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            ThousandsUnit\n            \n                56 %\n                (13/23)\n            \n        \n        \n            \n                \n                projects/components/src/utils/unit/unit.ts\n            \n            class\n            Unit\n            \n                54 %\n                (6/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 9.1.9\n        \n            @angular/common : 9.1.9\n        \n            @angular/compiler : 9.1.9\n        \n            @angular/core : 9.1.9\n        \n            @angular/forms : 9.1.9\n        \n            @angular/platform-browser : 9.1.9\n        \n            @angular/platform-browser-dynamic : 9.1.9\n        \n            @angular/router : 9.1.9\n        \n            @clr/angular : 3.1.3\n        \n            @clr/core : 3.1.3\n        \n            @clr/icons : 3.1.3\n        \n            @clr/ui : 3.1.3\n        \n            @ngx-formly/core : 5.6.1\n        \n            @stackblitz/sdk : 1.3.0\n        \n            @vmw/ng-live-docs : 0.0.8\n        \n            @vmw/plain-js-live-docs : 0.0.2\n        \n            @webcomponents/webcomponentsjs : 2.0.0\n        \n            @wessberg/ts-evaluator : 0.0.25\n        \n            angular-cli-ghpages : 0.6.2\n        \n            classlist.js : 1.1.20150312\n        \n            codecov.io : 0.1.6\n        \n            karma-coverage : 2.0.2\n        \n            lit-html : 1.1.2\n        \n            messageformat : 1.0.2\n        \n            mousetrap : 1.6.5\n        \n            prismjs : 1.21.0\n        \n            properties : 1.2.1\n        \n            rbradford-compodoc : 1.1.11\n        \n            rxjs : 6.5.5\n        \n            tsickle : 0.38.1\n        \n            tslib : 1.10.0\n        \n            zone.js : 0.10.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : 9.*\n        \n            @angular/common : 9.*\n        \n            @angular/compiler : 9.*\n        \n            @angular/core : 9.*\n        \n            @angular/forms : 9.*\n        \n            @angular/platform-browser : 9.*\n        \n            @angular/platform-browser-dynamic : 9.*\n        \n            @angular/router : 9.*\n        \n            @clr/angular : 3.*\n        \n            @clr/ui : 3.*\n        \n            @clr/icons : 3.*\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionStyling   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ActionType   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ActivatableMenuItemType   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            ActivityIndicatorType   (projects/.../datagrid.component.ts)\n                        \n                        \n                            CheckBoxStyling   (projects/.../form-checkbox.component.ts)\n                        \n                        \n                            ContextualActionPosition   (projects/.../datagrid.component.ts)\n                        \n                        \n                            Direction   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            FormFields   (projects/.../datagrid-numeric-filter.component.ts)\n                        \n                        \n                            GridColumnHideable   (projects/.../datagrid-column.interface.ts)\n                        \n                        \n                            GridSelectionType   (projects/.../datagrid.component.ts)\n                        \n                        \n                            SIZES   (projects/.../loading-indicator.component.ts)\n                        \n                        \n                            TextIcon   (projects/.../action-item.interface.ts)\n                        \n                        \n                            TooltipPosition   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            TooltipSize   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            UserOptions   (projects/.../data-exporter.component.ts)\n                        \n                        \n                            VcdFormlyInputTypes   (projects/.../vcd-formly.config.ts)\n                        \n                        \n                            WildCardPosition   (projects/.../datagrid-string-filter.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/common/interfaces/action-item.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionStyling\n                    \n                \n                    \n                        \n                            Display options for action menu\n\n                        \n                    \n                        \n                            \n                                 INLINE\n                            \n                        \n                        \n                            \n                                Value : INLINE\n                            \n                        \n                        \n                            \n                                 DROPDOWN\n                            \n                        \n                        \n                            \n                                Value : DROPDOWN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                    \n                        \n                            List of different type of action buckets\n\n                        \n                    \n                        \n                            \n                                 STATIC_FEATURED\n                            \n                        \n                        \n                            \n                                Value : STATIC_FEATURED\n                            \n                        \n                        \n                            \n                                 CONTEXTUAL_FEATURED\n                            \n                        \n                        \n                            \n                                Value : CONTEXTUAL_FEATURED\n                            \n                        \n                        \n                            \n                                 CONTEXTUAL\n                            \n                        \n                        \n                            \n                                Value : CONTEXTUAL\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n                        \n                            \n                                Value : STATIC\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TextIcon\n                    \n                \n                    \n                        \n                            An enum that describes the possible ways to display the button title.\n\n                        \n                    \n                        \n                            \n                                 ICON\n                            \n                        \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 ICON_AND_TEXT\n                            \n                        \n            \n        \n\n    projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivatableMenuItemType\n                    \n                \n                    \n                        \n                            To filter out the non-activatable separator item type when creating linked menu list #linkMenuItems. Because, we don't\nwant the focus to go to separator item type when navigating using the arrow keys\n\n                        \n                    \n                        \n                            \n                                 BUTTON\n                            \n                        \n                        \n                            \n                                Value : button\n                            \n                        \n                        \n                            \n                                 NESTED_VCD_DROPDOWN\n                            \n                        \n                        \n                            \n                                Value : vcd-dropdown\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Direction\n                    \n                \n                    \n                        \n                            Arrow keys directions\n\n                        \n                    \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                Value : up\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                Value : down\n                            \n                        \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/datagrid.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivityIndicatorType\n                    \n                \n                    \n                        \n                            The types of activity indicators that can be displayed on top of the grid.\n\n                        \n                    \n                        \n                            \n                                 SPINNER\n                            \n                        \n                        \n                            \n                                 BANNER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ContextualActionPosition\n                    \n                \n                    \n                        \n                            An enum that describes where the contextual buttons should display.\n\n                        \n                    \n                        \n                            \n                                 TOP\n                            \n                        \n                        \n                            \n                                Value : TOP\n                            \n                        \n                        \n                            \n                                 ROW\n                            \n                        \n                        \n                            \n                                Value : ROW\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GridSelectionType\n                    \n                \n                    \n                        \n                            Different types of row selection on the grid\n\n                        \n                    \n                        \n                            \n                                 Multi\n                            \n                        \n                        \n                            \n                                Value : MULTI\n                            \n                        \n                        \n                            \n                                 Single\n                            \n                        \n                        \n                            \n                                Value : SINGLE\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n\n    projects/components/src/form/form-checkbox/form-checkbox.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CheckBoxStyling\n                    \n                \n                        \n                            \n                                 CHECKBOX\n                            \n                        \n                        \n                            \n                                Value : checkbox\n                            \n                        \n                        \n                            \n                                 TOGGLESWITCH\n                            \n                        \n                        \n                            \n                                Value : toggle-switch\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FormFields\n                    \n                \n                        \n                            \n                                 from\n                            \n                        \n                        \n                            \n                                Value : from\n                            \n                        \n                        \n                            \n                                 to\n                            \n                        \n                        \n                            \n                                Value : to\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/interfaces/datagrid-column.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        GridColumnHideable\n                    \n                \n                        \n                            \n                                 Never\n                            \n                        \n                        \n                            \n                                Value : NEVER\n                            \n                        \n                        \n                            \n                                 Shown\n                            \n                        \n                        \n                            \n                                Value : SHOWN\n                            \n                        \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : HIDDEN\n                            \n                        \n            \n        \n\n    projects/components/src/common/loading/loading-indicator.component.ts\n    \n        \n            \n                \n                    \n                        \n                        SIZES\n                    \n                \n                        \n                            \n                                 sm\n                            \n                        \n                        \n                            \n                                Value : sm\n                            \n                        \n                        \n                            \n                                 md\n                            \n                        \n                        \n                            \n                                Value : md\n                            \n                        \n                        \n                            \n                                 lg\n                            \n                        \n                        \n                            \n                                Value : lg\n                            \n                        \n            \n        \n\n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        TooltipPosition\n                    \n                \n                        \n                            \n                                 tl\n                            \n                        \n                        \n                            \n                                Value : tooltip-top-left\n                            \n                        \n                        \n                            \n                                 tr\n                            \n                        \n                        \n                            \n                                Value : tooltip-top-right\n                            \n                        \n                        \n                            \n                                 br\n                            \n                        \n                        \n                            \n                                Value : tooltip-bottom-right\n                            \n                        \n                        \n                            \n                                 bl\n                            \n                        \n                        \n                            \n                                Value : tooltip-bottom-left\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TooltipSize\n                    \n                \n                        \n                            \n                                 sm\n                            \n                        \n                        \n                            \n                                Value : 100px\n                            \n                        \n                        \n                            \n                                 md\n                            \n                        \n                        \n                            \n                                Value : 200px\n                            \n                        \n                        \n                            \n                                 lg\n                            \n                        \n                        \n                            \n                                Value : 400px\n                            \n                        \n            \n        \n\n    projects/components/src/data-exporter/data-exporter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        UserOptions\n                    \n                \n                        \n                            \n                                 selectAll\n                            \n                        \n                        \n                            \n                                Value : selectAll\n                            \n                        \n                        \n                            \n                                 friendlyNames\n                            \n                        \n                        \n                            \n                                Value : friendlyNames\n                            \n                        \n                        \n                            \n                                 sanitize\n                            \n                        \n                        \n                            \n                                Value : sanitize\n                            \n                        \n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.config.ts\n    \n        \n            \n                \n                    \n                        \n                        VcdFormlyInputTypes\n                    \n                \n                    \n                        \n                            Different of Vcd form inputs that are configurable through Formly\n\n                        \n                    \n                        \n                            \n                                 input\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 number_with_unit_input\n                            \n                        \n                        \n                            \n                                Value : number_with_unit_input\n                            \n                        \n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-string-filter.component.ts\n    \n        \n            \n                \n                    \n                        \n                        WildCardPosition\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 END\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 WRAP\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nVMware Cloud Director UI Common Components\nRepo Structure\nThis monorepo contains four separate but related projects:\nComponent Library (./projects/components) @vcd/ui-components\nReusable components for vcd-ui and its plugin developers. See its README\nfor further details\nInternalization Library (./projects/i18n) @vcd/i18n\nTranslation code for vcd-ui and its plugin developers. See its README\nfor further details\nExamples App (./projects/examples)\nThe application that showcases @vcd/ui-components using @vmw/ng-live-docs. \nRun npm install first. Then run npm run build:i18n followed by npm run build:components to build.\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if\nyou change any of the source files. This is where you'll see changes made in components.\nOnline Examples\nVisit our live examples site for live examples, with source code, that you run on stackblitz. Powered by Live Docs\nRoute Analyzer (./projects/route-analyzer) @vcd/route-analyzer\nRoute Analyzer statically analyzes angular source code and generates a json file with all the available routes,\nincluding the ones from lazy loaded modules. See its README\nfor further details\nPeer Dependencies\nThe component library depends on Clarity and Angular\nwhich must must be installed from your application's package.json. See package.json for version\ninformation.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use\nng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun npm run build:i18n and npm run build:components. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun npm run test:components, or npm run test:i18n to execute the unit tests via Karma.\nRunning end-to-end tests (Examples App)\nRun ng e2e to execute the end-to-end tests via Protractor.\nCloning the repo\nWe typically use git clone https://github.com/vmware/vmware-cloud-director-ui-components ./vcd-ui-common to avoid\nthe extremely long folder name.\nPublishing\nPublishing happens through the CI/CD pipeline. See package.json\nVersioning\nFor all official releases, versioning should be semantic as per NPM's documentation.\nFor all development, nightly builds, the version should be created using npm version prerelease --preid=dev.\nSteps for publishing an @next release:\n\nUpdate version number in projects//package.json\nPush the changes to a remote topic branch and create a pull request into vmware/vmware-cloud-director-ui-components/master\nUpon approval of the PR, merge that PR into master\n\nFollowing the above steps makes the CI-CD pipeline to execute publishing job to npm with @next tag(npm publish --tag next)\nSteps for publishing an @latest release:\n\nUpdate version number in projects//package.json\nPush the changes to a remote topic branch and create a pull request into vmware/vmware-cloud-director-ui-components/master\nUpon approval of the PR, Push the changes to remote repo using Git tag using following commands:\nAdd a Git tag to the HEAD commit that has to be published as latest: git tag -fa -v[0-999].[0-999].[0-999]\nPush to the remote repo(vmware/vmware-cloud-director-ui-components): git push git@github.com:vmware/vmware-cloud-director-ui-components.git refs/tags/-v[0-999].[0-999].[0-999]\n\n\n\nFollowing the above steps makes the CI-CD pipeline to execute publishing job to npm with @latest tag(npm publish)\nAngular CLI\nThis project was generated with Angular CLI version 8.3.20. We attempt to\nkeep the project following CLI guidelines so we can benefit from ng update.\nFurther help\nTo get further help, please file issues on github.\nTo get more help on the Angular CLI use ng help or go check out the\nAngular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuickSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShowClippedTextDirectiveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdActionMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdActivityReporterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdDataExporterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdDatagridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdErrorBannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdFormlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcdLoadingIndicatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_DropdownComponent_providers\n\n\n\ncluster_DropdownModule_imports\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_QuickSearchModule\n\n\n\ncluster_QuickSearchModule_declarations\n\n\n\ncluster_QuickSearchModule_exports\n\n\n\ncluster_ShowClippedTextDirectiveModule\n\n\n\ncluster_ShowClippedTextDirectiveModule_declarations\n\n\n\ncluster_ShowClippedTextDirectiveModule_exports\n\n\n\ncluster_VcdActionMenuModule\n\n\n\ncluster_VcdActionMenuModule_declarations\n\n\n\ncluster_VcdActionMenuModule_exports\n\n\n\ncluster_VcdActivityReporterModule\n\n\n\ncluster_VcdActivityReporterModule_declarations\n\n\n\ncluster_VcdActivityReporterModule_imports\n\n\n\ncluster_VcdActivityReporterModule_exports\n\n\n\ncluster_VcdComponentsModule\n\n\n\ncluster_VcdComponentsModule_exports\n\n\n\ncluster_VcdDataExporterModule\n\n\n\ncluster_VcdDataExporterModule_declarations\n\n\n\ncluster_VcdDataExporterModule_exports\n\n\n\ncluster_VcdDatagridModule\n\n\n\ncluster_VcdDatagridModule_declarations\n\n\n\ncluster_VcdDatagridModule_imports\n\n\n\ncluster_VcdDatagridModule_exports\n\n\n\ncluster_VcdErrorBannerModule\n\n\n\ncluster_VcdErrorBannerModule_declarations\n\n\n\ncluster_VcdErrorBannerModule_exports\n\n\n\ncluster_VcdFormlyModule\n\n\n\ncluster_VcdFormlyModule_declarations\n\n\n\ncluster_VcdFormModule\n\n\n\ncluster_VcdFormModule_declarations\n\n\n\ncluster_VcdFormModule_providers\n\n\n\ncluster_VcdLoadingIndicatorModule\n\n\n\ncluster_VcdLoadingIndicatorModule_declarations\n\n\n\ncluster_VcdLoadingIndicatorModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownFocusHandlerDirective\n\nDropdownFocusHandlerDirective\n\nDropdownModule -->\n\nDropdownFocusHandlerDirective->DropdownModule\n\n\n\n\n\nDynamicDropdownPositionDirective\n\nDynamicDropdownPositionDirective\n\nDropdownModule -->\n\nDynamicDropdownPositionDirective->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective \n\nDropdownFocusHandlerDirective  -->\n\nDropdownModule->DropdownFocusHandlerDirective \n\n\n\n\n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective \n\nDynamicDropdownPositionDirective  -->\n\nDropdownModule->DynamicDropdownPositionDirective \n\n\n\n\n\nVcdActionMenuModule\n\nVcdActionMenuModule\n\nVcdActionMenuModule -->\n\nDropdownModule->VcdActionMenuModule\n\n\n\n\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER\n\nDropdownComponent -->\n\nDROPDOWN_FOCUS_HANDLER_PROVIDER->DropdownComponent\n\n\n\n\n\nShowClippedTextDirectiveModule\n\nShowClippedTextDirectiveModule\n\nDropdownModule -->\n\nShowClippedTextDirectiveModule->DropdownModule\n\n\n\n\n\nShowClippedTextDirective \n\nShowClippedTextDirective \n\nShowClippedTextDirective  -->\n\nShowClippedTextDirectiveModule->ShowClippedTextDirective \n\n\n\nVcdActionMenuModule -->\n\nShowClippedTextDirectiveModule->VcdActionMenuModule\n\n\n\n\n\nVcdDatagridModule\n\nVcdDatagridModule\n\nVcdDatagridModule -->\n\nShowClippedTextDirectiveModule->VcdDatagridModule\n\n\n\n\n\nNestedPropertyPipe\n\nNestedPropertyPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nNestedPropertyPipe->PipesModule\n\n\n\n\n\nFormCheckboxComponent \n\nFormCheckboxComponent \n\nFormCheckboxComponent  -->\n\nPipesModule->FormCheckboxComponent \n\n\n\n\n\nFormInputComponent \n\nFormInputComponent \n\nFormInputComponent  -->\n\nPipesModule->FormInputComponent \n\n\n\n\n\nFormSelectComponent \n\nFormSelectComponent \n\nFormSelectComponent  -->\n\nPipesModule->FormSelectComponent \n\n\n\n\n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent \n\nNumberWithUnitFormInputComponent  -->\n\nPipesModule->NumberWithUnitFormInputComponent \n\n\n\n\n\nQuickSearchComponent\n\nQuickSearchComponent\n\n\n\nQuickSearchModule\n\nQuickSearchModule\n\nQuickSearchModule -->\n\nQuickSearchComponent->QuickSearchModule\n\n\n\n\n\nQuickSearchComponent \n\nQuickSearchComponent \n\nQuickSearchComponent  -->\n\nQuickSearchModule->QuickSearchComponent \n\n\n\n\n\nShowClippedTextDirective\n\nShowClippedTextDirective\n\nShowClippedTextDirectiveModule -->\n\nShowClippedTextDirective->ShowClippedTextDirectiveModule\n\n\n\n\n\nActionMenuComponent\n\nActionMenuComponent\n\nVcdActionMenuModule -->\n\nActionMenuComponent->VcdActionMenuModule\n\n\n\n\n\nActionMenuComponent \n\nActionMenuComponent \n\nActionMenuComponent  -->\n\nVcdActionMenuModule->ActionMenuComponent \n\n\n\nVcdDatagridModule -->\n\nVcdActionMenuModule->VcdDatagridModule\n\n\n\n\n\nBannerActivityReporterComponent\n\nBannerActivityReporterComponent\n\n\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule\n\nVcdActivityReporterModule -->\n\nBannerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nSpinnerActivityReporterComponent\n\nSpinnerActivityReporterComponent\n\nVcdActivityReporterModule -->\n\nSpinnerActivityReporterComponent->VcdActivityReporterModule\n\n\n\n\n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent \n\nBannerActivityReporterComponent  -->\n\nVcdActivityReporterModule->BannerActivityReporterComponent \n\n\n\n\n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent \n\nSpinnerActivityReporterComponent  -->\n\nVcdActivityReporterModule->SpinnerActivityReporterComponent \n\n\n\nVcdDatagridModule -->\n\nVcdActivityReporterModule->VcdDatagridModule\n\n\n\n\n\nVcdErrorBannerModule\n\nVcdErrorBannerModule\n\nVcdActivityReporterModule -->\n\nVcdErrorBannerModule->VcdActivityReporterModule\n\n\n\n\n\nErrorBannerComponent \n\nErrorBannerComponent \n\nErrorBannerComponent  -->\n\nVcdErrorBannerModule->ErrorBannerComponent \n\n\n\n\n\nVcdLoadingIndicatorModule\n\nVcdLoadingIndicatorModule\n\nVcdActivityReporterModule -->\n\nVcdLoadingIndicatorModule->VcdActivityReporterModule\n\n\n\n\n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent \n\nLoadingIndicatorComponent  -->\n\nVcdLoadingIndicatorModule->LoadingIndicatorComponent \n\n\n\n\n\nDropdownModule \n\nDropdownModule \n\n\n\nQuickSearchModule \n\nQuickSearchModule \n\n\n\nShowClippedTextDirectiveModule \n\nShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule \n\nVcdActionMenuModule \n\n\n\nVcdActivityReporterModule \n\nVcdActivityReporterModule \n\n\n\nVcdDataExporterModule \n\nVcdDataExporterModule \n\n\n\nVcdDatagridModule \n\nVcdDatagridModule \n\n\n\nVcdErrorBannerModule \n\nVcdErrorBannerModule \n\n\n\nVcdFormModule \n\nVcdFormModule \n\n\n\nVcdLoadingIndicatorModule \n\nVcdLoadingIndicatorModule \n\n\n\nVcdComponentsModule\n\nVcdComponentsModule\n\nDropdownModule  -->\n\nVcdComponentsModule->DropdownModule \n\n\n\nQuickSearchModule  -->\n\nVcdComponentsModule->QuickSearchModule \n\n\n\nShowClippedTextDirectiveModule  -->\n\nVcdComponentsModule->ShowClippedTextDirectiveModule \n\n\n\nVcdActionMenuModule  -->\n\nVcdComponentsModule->VcdActionMenuModule \n\n\n\nVcdActivityReporterModule  -->\n\nVcdComponentsModule->VcdActivityReporterModule \n\n\n\nVcdDataExporterModule  -->\n\nVcdComponentsModule->VcdDataExporterModule \n\n\n\nVcdDatagridModule  -->\n\nVcdComponentsModule->VcdDatagridModule \n\n\n\nVcdErrorBannerModule  -->\n\nVcdComponentsModule->VcdErrorBannerModule \n\n\n\nVcdFormModule  -->\n\nVcdComponentsModule->VcdFormModule \n\n\n\nVcdLoadingIndicatorModule  -->\n\nVcdComponentsModule->VcdLoadingIndicatorModule \n\n\n\n\n\nDataExporterComponent\n\nDataExporterComponent\n\n\n\nVcdDataExporterModule\n\nVcdDataExporterModule\n\nVcdDataExporterModule -->\n\nDataExporterComponent->VcdDataExporterModule\n\n\n\n\n\nDataExporterComponent \n\nDataExporterComponent \n\nDataExporterComponent  -->\n\nVcdDataExporterModule->DataExporterComponent \n\n\n\n\n\nBoldTextRendererComponent\n\nBoldTextRendererComponent\n\nVcdDatagridModule -->\n\nBoldTextRendererComponent->VcdDatagridModule\n\n\n\n\n\nComponentRendererOutletDirective\n\nComponentRendererOutletDirective\n\nVcdDatagridModule -->\n\nComponentRendererOutletDirective->VcdDatagridModule\n\n\n\n\n\nDatagridComponent\n\nDatagridComponent\n\nVcdDatagridModule -->\n\nDatagridComponent->VcdDatagridModule\n\n\n\n\n\nDatagridMultiSelectFilterComponent\n\nDatagridMultiSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridMultiSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridNumericFilterComponent\n\nDatagridNumericFilterComponent\n\nVcdDatagridModule -->\n\nDatagridNumericFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridSelectFilterComponent\n\nDatagridSelectFilterComponent\n\nVcdDatagridModule -->\n\nDatagridSelectFilterComponent->VcdDatagridModule\n\n\n\n\n\nDatagridStringFilterComponent\n\nDatagridStringFilterComponent\n\nVcdDatagridModule -->\n\nDatagridStringFilterComponent->VcdDatagridModule\n\n\n\n\n\nFunctionRendererPipe\n\nFunctionRendererPipe\n\nVcdDatagridModule -->\n\nFunctionRendererPipe->VcdDatagridModule\n\n\n\n\n\nBoldTextRendererComponent \n\nBoldTextRendererComponent \n\nBoldTextRendererComponent  -->\n\nVcdDatagridModule->BoldTextRendererComponent \n\n\n\n\n\nDatagridComponent \n\nDatagridComponent \n\nDatagridComponent  -->\n\nVcdDatagridModule->DatagridComponent \n\n\n\n\n\nVcdFormModule\n\nVcdFormModule\n\nFormCheckboxComponent  -->\n\nVcdFormModule->FormCheckboxComponent \n\n\n\nFormInputComponent  -->\n\nVcdFormModule->FormInputComponent \n\n\n\nFormSelectComponent  -->\n\nVcdFormModule->FormSelectComponent \n\n\n\nNumberWithUnitFormInputComponent  -->\n\nVcdFormModule->NumberWithUnitFormInputComponent \n\n\n\nVcdDatagridModule -->\n\nVcdFormModule->VcdDatagridModule\n\n\n\n\n\nVcdFormlyModule\n\nVcdFormlyModule\n\nVcdFormlyModule -->\n\nVcdFormModule->VcdFormlyModule\n\n\n\n\n\nErrorBannerComponent\n\nErrorBannerComponent\n\nVcdErrorBannerModule -->\n\nErrorBannerComponent->VcdErrorBannerModule\n\n\n\n\n\nFormlyInputComponent\n\nFormlyInputComponent\n\nVcdFormlyModule -->\n\nFormlyInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlyNumberWithUnitInputComponent\n\nFormlyNumberWithUnitInputComponent\n\nVcdFormlyModule -->\n\nFormlyNumberWithUnitInputComponent->VcdFormlyModule\n\n\n\n\n\nFormlySelectComponent\n\nFormlySelectComponent\n\nVcdFormlyModule -->\n\nFormlySelectComponent->VcdFormlyModule\n\n\n\n\n\nFormCheckboxComponent\n\nFormCheckboxComponent\n\nVcdFormModule -->\n\nFormCheckboxComponent->VcdFormModule\n\n\n\n\n\nFormInputComponent\n\nFormInputComponent\n\nVcdFormModule -->\n\nFormInputComponent->VcdFormModule\n\n\n\n\n\nFormSelectComponent\n\nFormSelectComponent\n\nVcdFormModule -->\n\nFormSelectComponent->VcdFormModule\n\n\n\n\n\nNumberWithUnitFormInputComponent\n\nNumberWithUnitFormInputComponent\n\nVcdFormModule -->\n\nNumberWithUnitFormInputComponent->VcdFormModule\n\n\n\n\n\nUnitFormatter\n\nUnitFormatter\n\nVcdFormModule -->\n\nUnitFormatter->VcdFormModule\n\n\n\n\n\nLoadingIndicatorComponent\n\nLoadingIndicatorComponent\n\nVcdLoadingIndicatorModule -->\n\nLoadingIndicatorComponent->VcdLoadingIndicatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    37 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    49 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionHandlerType   (projects/.../action-item.interface.ts)\n                        \n                        \n                            ComponentRendererConstructor   (projects/.../component-renderer.interface.ts)\n                        \n                        \n                            ConvertGenericOnly   (projects/.../widget-object.ts)\n                        \n                        \n                            CorrectReturnTypes   (projects/.../widget-object.ts)\n                        \n                        \n                            DatagridNumericFilterValue   (projects/.../datagrid-numeric-filter.component.ts)\n                        \n                        \n                            ElementLocator   (projects/.../widget-object.ts)\n                        \n                        \n                            EventHandler   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            LazyString   (projects/.../types.ts)\n                        \n                        \n                            Primitives   (projects/.../filter-builder.ts)\n                        \n                        \n                            QuickSearchResultsType   (projects/.../quick-search-result.ts)\n                        \n                        \n                            SpinnerSize   (projects/.../loading-indicator.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/common/interfaces/action-item.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ActionHandlerType\n                \n            \n            \n                \n                    Type of ActionItem.handler function\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/datagrid/interfaces/component-renderer.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ComponentRendererConstructor\n                \n            \n            \n                \n                    Used for the type safety of ColumnRendererSpec\n\n                \n            \n            \n                \n                            Type>\n\n                \n            \n        \n    \n    projects/components/src/utils/test/widget-object/widget-object.ts\n    \n    \n        \n            \n                \n                    \n                    ConvertGenericOnly\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CorrectReturnTypes\n                \n            \n            \n                \n                    Changes the class so that all functions/getters return R.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ElementLocator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/datagrid/filters/datagrid-numeric-filter.component.ts\n    \n    \n        \n            \n                \n                    \n                    DatagridNumericFilterValue\n                \n            \n            \n                \n                    The type of value that goes in the DatagridNumericFilterConfig.\n\n                \n            \n            \n                \n                        [number, number]\n\n                \n            \n        \n    \n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n    \n        \n            \n                \n                    \n                    EventHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/components/src/utils/types.ts\n    \n    \n        \n            \n                \n                    \n                    LazyString\n                \n            \n            \n                \n                    The result of a call to either TranslationService.translate or TranslationService.translateAsync.\nA duplicate of the @vcd/i18n LazyString.\n\n                \n            \n            \n                \n                        string | Observable | Promise\n\n                \n            \n        \n    \n    projects/components/src/utils/filter-builder.ts\n    \n    \n        \n            \n                \n                    \n                    Primitives\n                \n            \n            \n                \n                        boolean | string | number\n\n                \n            \n        \n    \n    projects/components/src/quick-search/quick-search-result.ts\n    \n    \n        \n            \n                \n                    \n                    QuickSearchResultsType\n                \n            \n            \n                \n                    The type of the quick search result which can be a promise\n\n                \n            \n            \n                \n                            QuickSearchResults | Promise\n\n                \n            \n        \n    \n    projects/components/src/common/loading/loading-indicator.component.ts\n    \n    \n        \n            \n                \n                    \n                    SpinnerSize\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONTENT_AREA_SELECTOR   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            Css   (projects/.../datagrid.wo.ts)\n                        \n                        \n                            cy   (projects/.../cypress-widget-finder.ts)\n                        \n                        \n                            cy   (projects/.../cypress-widget-object.ts)\n                        \n                        \n                            DATE_OBJECT_CLASS   (projects/.../nested-property.pipe.ts)\n                        \n                        \n                            DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES   (projects/.../datagrid-filter.ts)\n                        \n                        \n                            declarations   (projects/.../form.module.ts)\n                        \n                        \n                            declarations   (projects/.../pipes.module.ts)\n                        \n                        \n                            DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX   (projects/.../action-search.provider.ts)\n                        \n                        \n                            DEFAULT_PAGINATION_TRANSLATION_KEY   (projects/.../datagrid.component.ts)\n                        \n                        \n                            DEFAULT_SIZE   (projects/.../datagrid.component.ts)\n                        \n                        \n                            DEFAULT_SIZE_OPTIONS   (projects/.../datagrid.component.ts)\n                        \n                        \n                            directives   (projects/.../datagrid.module.ts)\n                        \n                        \n                            DROPDOWN_FOCUS_HANDLER_PROVIDER   (projects/.../dropdown.component.ts)\n                        \n                        \n                            DROPDOWN_ITEM_SELECTOR   (projects/.../dropdown.component.ts)\n                        \n                        \n                            filters   (projects/.../datagrid.module.ts)\n                        \n                        \n                            fireTipTransitionEndForTests   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            idGenerator   (projects/.../base-form-control.ts)\n                        \n                        \n                            idGenerator   (projects/.../datagrid-multiselect-filter.component.ts)\n                        \n                        \n                            idGenerator   (projects/.../cypress-widget-finder.ts)\n                        \n                        \n                            LEADING_CONTROL_CHAR   (projects/.../csv-exporter.service.ts)\n                        \n                        \n                            MAX_HEADER_HEIGHT   (projects/.../datagrid.component.ts)\n                        \n                        \n                            MENU_BUFFER_SPACE   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            mockData   (projects/.../mock-data.ts)\n                        \n                        \n                            NESTED_DROPDOWN_TRIGGER   (projects/.../dropdown-focus-handler.directive.ts)\n                        \n                        \n                            NESTED_DROPDOWN_TRIGGER_SELECTOR   (projects/.../dropdown.component.ts)\n                        \n                        \n                            NESTED_MENU_HIDE_DELAY   (projects/.../dropdown.component.ts)\n                        \n                        \n                            NO_SCROLLING_CLASSNAME   (projects/.../dynamic-dropdown-position.directive.ts)\n                        \n                        \n                            OBJECT_PROPERTY_SEPARATOR   (projects/.../nested-property.pipe.ts)\n                        \n                        \n                            Operators   (projects/.../filter-builder.ts)\n                        \n                        \n                            pipes   (projects/.../datagrid.module.ts)\n                        \n                        \n                            PROVIDER_SEARCH_DEBOUNCE_TIME   (projects/.../quick-search.provider.ts)\n                        \n                        \n                            renderers   (projects/.../datagrid.module.ts)\n                        \n                        \n                            ROW_HEIGHT   (projects/.../datagrid.component.ts)\n                        \n                        \n                            tip   (projects/.../show-clipped-text.directive.ts)\n                        \n                        \n                            UNLIMITED   (projects/.../number-with-unit-form-input.component.ts)\n                        \n                        \n                            VCD_FORMLY_CONFIG   (projects/.../vcd-formly.config.ts)\n                        \n                        \n                            VCD_FORMLY_INPUT_COMPONENTS   (projects/.../vcd-formly.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/components/src/dropdown/dynamic-dropdown-position.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTENT_AREA_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '.content-area'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MENU_BUFFER_SPACE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 150\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NO_SCROLLING_CLASSNAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'no-scrolling'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/test/datagrid/datagrid.wo.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Css\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ROW: 'clr-dg-row',\n    COLUMN: 'clr-dg-column',\n    CELL: 'clr-dg-cell',\n    PLACEHOLDER: 'clr-dg-placeholder',\n    COLUMN_TITLE: '.datagrid-column-title',\n    HIDDEN_COLUMN: 'clr-dg-column.datagrid-hidden-column',\n    DETAIL_ROW: 'clr-dg-row-detail',\n    DETAIL_PANE: '.datagrid-detail-pane-content',\n    DETAIL_PANE_HEADER: '.datagrid-detail-header-title',\n    DETAIL_ROW_BUTTON: '.datagrid-expandable-caret-button',\n    DETAIL_PANE_BUTTON: '.datagrid-detail-caret-button',\n    PAGINATION_DESCRIPTION: '.pagination-description',\n    PAGE_SIZE: 'clr-dg-page-size',\n    PAGINATION_NEXT: '.pagination-next',\n    TOP_POSITIONED_BUTTON: 'clr-dg-action-bar button',\n    ROW_ACTION_CONTAINER: '.datagrid-select label',\n    CHECKBOX_WRAPPER: 'clr-checkbox-wrapper',\n    RADIO_WRAPPER: 'clr-radio-wrapper',\n    FILTER: 'clr-dg-filter',\n    FILTER_TOGGLE: '.datagrid-filter-toggle',\n    SPINNER: 'clr-spinner',\n}\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/test/widget-object/cypress-widget-finder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cy\n                            \n                        \n                    \n                \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('cy-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/test/widget-object/cypress-widget-object.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cy\n                            \n                        \n                    \n                \n\n\n            \n        \n\n    projects/components/src/common/pipes/nested-property.pipe.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATE_OBJECT_CLASS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[object Date]'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OBJECT_PROPERTY_SEPARATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '.'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEBOUNCE_TIME_FOR_GRID_FILTER_CHANGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n\n                \n                    \n                        Number of milliseconds delayed before emitting the filter has changed observable\n\n                    \n                \n\n            \n        \n\n    projects/components/src/form/form.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormInputComponent, FormSelectComponent, FormCheckboxComponent, NumberWithUnitFormInputComponent]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/common/pipes/pipes.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [NestedPropertyPipe]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/action-search-provider/action-search.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ACTION_SEARCH_SECTION_HEADER_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.action.provider.section.title'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/datagrid.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PAGINATION_TRANSLATION_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'vcd.cc.grid.default.pagination'\n                        \n                    \n\n                \n                    \n                        Key used for translation of pagination when a translation key is not given as input from the caller\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_SIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 15\n                        \n                    \n\n                \n                    \n                        The default number of items on a single page.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_SIZE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [DEFAULT_SIZE, 20, 50, 100]\n                        \n                    \n\n                \n                    \n                        The default items to show in the page size dropdown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_HEADER_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 40\n                        \n                    \n\n                \n                    \n                        The maximum allowed .datagrid-header element clientHeight in pixels.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROW_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : 37\n                        \n                    \n\n                \n                    \n                        The default clr-dr-row element clientHeight in pixels.\n\n                    \n                \n\n            \n        \n\n    projects/components/src/datagrid/datagrid.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            directives\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ComponentRendererOutletDirective]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    DatagridNumericFilterComponent,\n    DatagridStringFilterComponent,\n    DatagridSelectFilterComponent,\n    DatagridMultiSelectFilterComponent,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pipes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FunctionRendererPipe]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [BoldTextRendererComponent]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/dropdown/dropdown.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_FOCUS_HANDLER_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: DropdownFocusHandlerService,\n    useFactory: dropdownFocusHandlerServiceFactory,\n    deps: [Renderer2, [new Optional(), new SkipSelf(), DropdownFocusHandlerService]],\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DROPDOWN_ITEM_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown-menu > button'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_DROPDOWN_TRIGGER_SELECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown clr-dropdown > button'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_MENU_HIDE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 400\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/lib/directives/show-clipped-text.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fireTipTransitionEndForTests\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (event: Event) => {\n    // Since we're at it, please remove the param from onTransitionEnd since we don't use it\n    tip.onTransitionEnd(event);\n}\n                        \n                    \n\n                \n                    \n                        Used to call tip.onTransitionEnd from outside this file.\nWe need to expose tip.onTransitionEnd because when the window is not focused\n(as in a headless chrome environment), the transitionend event is not fired.\nAs such, from the tests, you need to manually call this method.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /** A single DOM node structure for the popup is created and shared with all instances (the .tooltip)  */\n    container: null as HTMLElement,\n\n    /** The inner node (the .tooltip-content) */\n    content: null as HTMLElement,\n\n    /** Timer for setTimeout used when hiding */\n    hideTimeout: null as number,\n\n    /** The directive that last caused the tooltip to be displayed */\n    currentDirective: null as ShowClippedTextDirective,\n\n    /** Whether the mouse is currently over a host or the tooltip */\n    isMouseOver: false,\n\n    /**\n     * The host element that last caused the tooltip to be displayed\n     */\n    get currentHost(): HTMLElement {\n        return tip.currentDirective.hostElement;\n    },\n\n    /**\n     * The tooltip size requested for the last directive that caused the tooltip to be displayed\n     */\n    get tooltipSize(): TooltipSize {\n        return tip.currentDirective.tooltipSize;\n    },\n\n    /**\n     * How long to wait before hiding the tooltip after a mouseout. This gives the user a chance to hover over the\n     * tooltip so they can copy/paste its contents\n     */\n    get mouseoutDelay(): number {\n        return tip.currentDirective.mouseoutDelay;\n    },\n\n    create(): void {\n        if (tip.container) {\n            return;\n        }\n        tip.container = document.createElement('div');\n        tip.container.classList.add('tooltip', 'vcd-show-clipped-text');\n        tip.content = document.createElement('div');\n        tip.content.classList.add('tooltip-content');\n        setStyle(tip.container, {\n            position: 'absolute',\n            zIndex: '1000',\n            opacity: '0',\n        });\n        tip.container.appendChild(tip.content);\n        document.body.appendChild(tip.container);\n        watchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.addEventListener('transitionend', tip.onTransitionEnd);\n    },\n\n    destroy(): void {\n        document.body.removeChild(tip.container);\n        unwatchEvents(tip.container, tip.onMouseEnter, tip.onMouseLeave);\n        tip.content.removeEventListener('transitionend', this.onTransitionEnd);\n        tip.container = null;\n        tip.content = null;\n    },\n\n    onMouseEnter(): void {\n        tip.clearHideTimeout();\n    },\n\n    onMouseLeave(): void {\n        if (tip.currentDirective) {\n            tip.hideTooltip(tip.mouseoutDelay);\n        }\n    },\n\n    hideTooltip(delay: number): void {\n        tip.clearHideTimeout();\n        tip.hideTimeout = window.setTimeout(() => {\n            tip.isMouseOver = false;\n            tip.container.style.opacity = '0';\n            tip.content.style.opacity = '0';\n            tip.hideTimeout = null;\n            tip.currentDirective = null;\n        }, delay);\n    },\n\n    clearHideTimeout(): void {\n        if (tip.hideTimeout) {\n            clearTimeout(tip.hideTimeout);\n            tip.hideTimeout = null;\n        }\n    },\n\n    onTransitionEnd(e: Event): void {\n        if (tip.container.style.opacity === '0') {\n            tip.container.style.visibility = 'hidden';\n            tip.content.style.visibility = 'hidden';\n        }\n    },\n\n    /**\n     * Update the tooltip based on the content/dimensions of {@link tip.currentDirective}\n     */\n    update(): void {\n        const el = tip.currentHost;\n        const rect = el.getBoundingClientRect();\n        setStyle(tip.container, {\n            top: rect.top + 'px',\n            left: rect.left + 'px',\n            width: rect.width + 'px',\n            height: rect.height + 'px',\n            opacity: '1',\n            wordBreak: 'break-all',\n        });\n        setStyle(tip.content, {\n            visibility: 'visible',\n            opacity: '1',\n            width: this.tooltipSize,\n        });\n        const { tl, tr, bl, br } = TooltipPosition;\n        tip.content.classList.remove(tl, tr, bl, br);\n        tip.content.classList.add(tip.calculatePosition(rect));\n        tip.content.innerHTML = el.innerHTML;\n    },\n\n    /**\n     *  Tooltip direction should be the opposite quadrant of where the center of the clipped element is\n     *     TL -> BR        TR -> BL\n     *     BL -> TR        BR -> TL\n     * @param rect THe dimensions of the clipped element\n     */\n    calculatePosition(rect: ClientRect): TooltipPosition {\n        const { innerWidth, innerHeight } = window;\n        const rectCenter = { x: rect.left + rect.width / 2, y: rect.top + rect.height / 2 };\n\n        // It's on the right\n        if (rectCenter.x > innerWidth / 2) {\n            if (rectCenter.y > innerHeight / 2) {\n                // Bottom right quad\n                return TooltipPosition.tl;\n            } else {\n                // Top right quad\n                return TooltipPosition.bl;\n            }\n        }\n\n        // It's on the left\n        if (rectCenter.y > innerHeight / 2) {\n            // Bottom left quad\n            return TooltipPosition.tr;\n        } else {\n            // Top left quad\n            return TooltipPosition.br;\n        }\n    },\n}\n                        \n                    \n\n                \n                    \n                        Singleton tooltip created by directive\n\n                    \n                \n\n            \n        \n\n    projects/components/src/form/base-form-control.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('base-form-control-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/filters/datagrid-multiselect-filter.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            idGenerator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new IdGenerator('vcd-multiselect-filter-id')\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/data-exporter/csv-exporter.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LEADING_CONTROL_CHAR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /^[-+=@]/\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/datagrid/mock-data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mockData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockRecord[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        name: 'Person 1',\n        city: 'Palo Alto',\n        state: 'CA',\n        details: {\n            gender: 'Male',\n        },\n        age: 30,\n    },\n    {\n        name: 'Person 2',\n        city: 'Boston',\n        state: 'MA',\n        details: {\n            gender: 'Female',\n        },\n        age: 60,\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/dropdown/dropdown-focus-handler.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NESTED_DROPDOWN_TRIGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'clr-dropdown > button'\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/utils/filter-builder.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Operators\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    OR: ',',\n    AND: ';',\n    GT: '=gt=',\n    GE: '=ge=',\n    LT: '=lt=',\n    LE: '=le=',\n    EQ: '==',\n    NEQ: '!=',\n}\n                        \n                    \n\n                \n                    \n                        TODO: Remove FilterBuilder from VCD-UI https://jira.eng.vmware.com/browse/VDUCC-115\n\n                    \n                \n\n            \n        \n\n    projects/components/src/quick-search/quick-search.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PROVIDER_SEARCH_DEBOUNCE_TIME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/form/number-with-unit-input/number-with-unit-form-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UNLIMITED\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n\n                \n                    \n                        -1 is the number to specify a value of unlimited.\n\n                    \n                \n\n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VCD_FORMLY_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    types: [\n        {\n            name: VcdFormlyInputTypes.input,\n            component: FormlyInputComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.select,\n            component: FormlySelectComponent,\n        },\n        {\n            name: VcdFormlyInputTypes.number_with_unit_input,\n            component: FormlyNumberWithUnitInputComponent,\n        },\n    ],\n}\n                        \n                    \n\n\n            \n        \n\n    projects/components/src/formly/vcd/vcd-formly.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            VCD_FORMLY_INPUT_COMPONENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [FormlyInputComponent, FormlySelectComponent, FormlyNumberWithUnitInputComponent]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
